{"version":3,"mappings":";4BAAA,SAAS,EAAa,EAAQ,CAC5B,OAAO,ECAT,MAAe,EAAa,CAC1B,MAAO,CACL,MAAM,MAAM,EAAO,CACjB,MAAM,EAAM,mBACV,OAAO,+DACP,OAAO,+DACP,OAAO,2DACR,EAEH,aAAc,MAAO,EAAO,EAAO,EAAQ,IAAY,CACrD,GAAI,OAAO,EAAQ,MAAS,UAAY,CAAC,EAAQ,MAAM,MAAM,eAAe,CAC1E,MAAO,EAAE,CAuBJ,CACL,GAAM,CAAE,gDAAF,CAAE,2BAA4B,MAAM,OAAO,wBAAzC,gDACR,MAAO,CACL,CACE,KAAM,oBACN,WAAW,EAAM,CACf,OAAO,EAAwB,EAAK,EAExC,CACD,GAGP,CACD,CAAC","names":[],"ignoreList":[0,1],"sources":["../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/config.mjs","../../node_modules/.cache/.pnpm/nuxt-content-twoslash@0.1.2_cd74b84644acd40e51464bdad5945c9c/node_modules/nuxt-content-twoslash/dist/runtime/mdc.config.js"],"sourcesContent":["function defineConfig(config) {\n  return config;\n}\n\nexport { defineConfig };\n","import { defineConfig } from \"@nuxtjs/mdc/config\";\nexport default defineConfig({\n  shiki: {\n    async setup(shiki) {\n      await shiki.loadLanguage(\n        import(\"shiki/langs/javascript.mjs\"),\n        import(\"shiki/langs/typescript.mjs\"),\n        import(\"shiki/langs/vue.mjs\")\n      );\n    },\n    transformers: async (_code, _lang, _theme, options) => {\n      if (typeof options.meta !== \"string\" || !options.meta?.match(/\\btwoslash\\b/))\n        return [];\n      if (import.meta.server && (import.meta.prerender || import.meta.dev)) {\n        const {\n          typeDecorations,\n          moduleOptions,\n          compilerOptions\n        } = await import(\"#twoslash-meta\");\n        if (import.meta.dev && !moduleOptions.enableInDev) {\n          const { removeTwoslashNotations } = await import(\"twoslash/fallback\");\n          return [\n            {\n              name: \"twoslash:fallback\",\n              preprocess(code) {\n                return removeTwoslashNotations(code);\n              }\n            }\n          ];\n        }\n        return [\n          await import(\"./transformer.js\").then(\n            ({ createTransformer }) => createTransformer(moduleOptions, typeDecorations, compilerOptions)\n          )\n        ];\n      } else {\n        const { removeTwoslashNotations } = await import(\"twoslash/fallback\");\n        return [\n          {\n            name: \"twoslash:fallback\",\n            preprocess(code) {\n              return removeTwoslashNotations(code);\n            }\n          }\n        ];\n      }\n    }\n  }\n});\n"],"file":"_nuxt/BobyQ04c.js"}