{"version":3,"file":"SqiwlTyX.js","names":[],"sources":["../../node_modules/app/components/content/HighlightInlineType.vue","../../node_modules/app/components/content/HighlightInlineType.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { hash } from 'ohash'\r\n\r\nconst props = defineProps<{\r\n  type: string\r\n}>()\r\n\r\nconst type = computed(() => {\r\n  let type = props.type\r\n  if (type.includes(', \"as\" | \"asChild\" | \"forceMount\">')) {\r\n    type = type.replace(`, \"as\" | \"asChild\" | \"forceMount\">`, ``).replace('Omit<', '')\r\n  }\r\n  if (type.includes(', \"as\" | \"asChild\">')) {\r\n    type = type.replace(', \"as\" | \"asChild\">', '').replace('Omit<', '')\r\n  }\r\n  if (type.startsWith('undefined |')) {\r\n    type = type.replace('undefined |', '')\r\n  }\r\n  if (type.endsWith('| undefined')) {\r\n    type = type.replace('| undefined', '')\r\n  }\r\n\r\n  return type\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`hightlight-inline-code-${hash(type.value).slice(0, 10)}`, () => parseMarkdown(`\\`${type.value}\\`{lang=\"ts-type\"}`))\r\n</script>\r\n\r\n<template>\r\n  <MDCRenderer v-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" />\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { hash } from 'ohash'\r\n\r\nconst props = defineProps<{\r\n  type: string\r\n}>()\r\n\r\nconst type = computed(() => {\r\n  let type = props.type\r\n  if (type.includes(', \"as\" | \"asChild\" | \"forceMount\">')) {\r\n    type = type.replace(`, \"as\" | \"asChild\" | \"forceMount\">`, ``).replace('Omit<', '')\r\n  }\r\n  if (type.includes(', \"as\" | \"asChild\">')) {\r\n    type = type.replace(', \"as\" | \"asChild\">', '').replace('Omit<', '')\r\n  }\r\n  if (type.startsWith('undefined |')) {\r\n    type = type.replace('undefined |', '')\r\n  }\r\n  if (type.endsWith('| undefined')) {\r\n    type = type.replace('| undefined', '')\r\n  }\r\n\r\n  return type\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`hightlight-inline-code-${hash(type.value).slice(0, 10)}`, () => parseMarkdown(`\\`${type.value}\\`{lang=\"ts-type\"}`))\r\n</script>\r\n\r\n<template>\r\n  <MDCRenderer v-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" />\r\n</template>\r\n"],"mappings":"6OAGM,EAAQ,EAIR,EAAO,MAAe,CAC1B,IAAI,EAAO,EAAM,KAcjB,OAbI,EAAK,SAAS,qCAAqC,GACrD,EAAO,EAAK,QAAQ,qCAAsC,GAAG,CAAC,QAAQ,QAAS,GAAG,EAEhF,EAAK,SAAS,sBAAsB,GACtC,EAAO,EAAK,QAAQ,sBAAuB,GAAG,CAAC,QAAQ,QAAS,GAAG,EAEjE,EAAK,WAAW,cAAc,GAChC,EAAO,EAAK,QAAQ,cAAe,GAAG,EAEpC,EAAK,SAAS,cAAc,GAC9B,EAAO,EAAK,QAAQ,cAAe,GAAG,EAGjC,GACP,CAEI,CAAE,KAAM,IAAQ,CAAA,EAAA,GAAA,MAAM,EAAa,0BAA0B,EAAK,EAAK,MAAM,CAAC,MAAM,EAAG,GAAG,OAAU,EAAc,KAAK,EAAK,MAAM,oBAAoB,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,GAAA,CAAA,gCAIvI,EAAA,EAAG,EAAA,GAAA,CAAtB,EAA4D,EAAA,OAAnC,KAAM,EAAA,EAAG,CAAC,KAAO,KAAM,EAAA,EAAG,CAAC"}