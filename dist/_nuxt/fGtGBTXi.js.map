{"version":3,"file":"fGtGBTXi.js","names":["withNativeBlob","withNativeArrayBuffer","isView","lookup","decode","withNativeArrayBuffer","decode","isBinary","protocol","on","globalThis","_a","globalThis","globalThis","value","Socket","DEFAULT_TRANSPORTS","_a","protocol","Socket","RESERVED_EVENTS","value","self","parser","Engine","self"],"sources":["../../node_modules/.cache/.pnpm/engine.io-parser@5.2.3/node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/.cache/.pnpm/engine.io-parser@5.2.3/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/.cache/.pnpm/engine.io-parser@5.2.3/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/.cache/.pnpm/engine.io-parser@5.2.3/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/.cache/.pnpm/engine.io-parser@5.2.3/node_modules/engine.io-parser/build/esm/index.js","../../node_modules/.cache/.pnpm/@socket.io+component-emitter@3.1.2/node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/globals.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/util.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transport.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/socket.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/transports/polling-fetch.js","../../node_modules/.cache/.pnpm/engine.io-client@6.6.3/node_modules/engine.io-client/build/esm/index.js","../../node_modules/.cache/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/url.js","../../node_modules/.cache/.pnpm/socket.io-parser@4.2.4/node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/.cache/.pnpm/socket.io-parser@4.2.4/node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/.cache/.pnpm/socket.io-parser@4.2.4/node_modules/socket.io-parser/build/esm/index.js","../../node_modules/.cache/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/on.js","../../node_modules/.cache/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/socket.js","../../node_modules/.cache/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/.cache/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/manager.js","../../node_modules/.cache/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"mappings":"4BAAA,IAAM,EAAe,OAAO,OAAO,KAAK,CACxC,EAAa,KAAU,IACvB,EAAa,MAAW,IACxB,EAAa,KAAU,IACvB,EAAa,KAAU,IACvB,EAAa,QAAa,IAC1B,EAAa,QAAa,IAC1B,EAAa,KAAU,IACvB,IAAM,EAAuB,OAAO,OAAO,KAAK,CAChD,OAAO,KAAK,EAAa,CAAC,QAAS,GAAQ,CACvC,EAAqB,EAAa,IAAQ,GAC5C,CACF,IAAM,EAAe,CAAE,KAAM,QAAS,KAAM,eAAgB,CCXtDA,EAAiB,OAAO,MAAS,YAClC,OAAO,KAAS,KACb,OAAO,UAAU,SAAS,KAAK,KAAK,GAAK,2BAC3CK,EAAwB,OAAO,aAAgB,WAE/CH,EAAU,GACL,OAAO,YAAY,QAAW,WAC/B,YAAY,OAAO,EAAI,CACvB,GAAO,EAAI,kBAAkB,YAEjC,GAAgB,CAAE,OAAM,QAAQ,EAAgB,IAC9CF,GAAkB,aAAgB,KAC9B,EACO,EAAS,EAAK,CAGd,EAAmB,EAAM,EAAS,CAGxCK,IACJ,aAAgB,aAAeH,EAAO,EAAK,EACxC,EACO,EAAS,EAAK,CAGd,EAAmB,IAAI,KAAK,CAAC,EAAK,CAAC,CAAE,EAAS,CAItD,EAAS,EAAa,IAAS,GAAQ,IAAI,CAEhD,GAAsB,EAAM,IAAa,CAC3C,IAAM,EAAa,IAAI,WAKvB,MAJA,GAAW,OAAS,UAAY,CAC5B,IAAM,EAAU,EAAW,OAAO,MAAM,IAAI,CAAC,GAC7C,EAAS,KAAO,GAAW,IAAI,EAE5B,EAAW,cAAc,EAAK,EAEzC,SAAS,EAAQ,EAAM,CAQf,OAPA,aAAgB,WACT,EAEF,aAAgB,YACd,IAAI,WAAW,EAAK,CAGpB,IAAI,WAAW,EAAK,OAAQ,EAAK,WAAY,EAAK,WAAW,CAG5E,IAAI,EACJ,SAAgB,GAAqB,EAAQ,EAAU,CACnD,GAAIF,GAAkB,EAAO,gBAAgB,KACzC,OAAO,EAAO,KAAK,aAAa,CAAC,KAAK,EAAQ,CAAC,KAAK,EAAS,IAExDK,IACJ,EAAO,gBAAgB,aAAeH,EAAO,EAAO,KAAK,EAC1D,OAAO,EAAS,EAAQ,EAAO,KAAK,CAAC,CAEzC,EAAa,EAAQ,GAAQ,GAAY,CACrC,AACI,IAAe,IAAI,YAEvB,EAAS,EAAa,OAAO,EAAQ,CAAC,EACxC,CChEN,IAAM,GAAQ,mEAERC,EAAS,OAAO,WAAe,IAAc,EAAE,CAAG,IAAI,WAAW,IAAI,CAC3E,IAAK,IAAI,EAAI,EAAG,EAAI,GAAc,IAC9B,EAAO,GAAM,WAAW,EAAE,EAAI,EAkBlC,MAAaG,GAAU,GAAW,CAC9B,IAAI,EAAe,EAAO,OAAS,IAAM,EAAM,EAAO,OAAQ,EAAG,EAAI,EAAG,EAAU,EAAU,EAAU,EAClG,EAAO,EAAO,OAAS,KAAO,MAC9B,IACI,EAAO,EAAO,OAAS,KAAO,KAC9B,KAGR,IAAM,EAAc,IAAI,YAAY,EAAa,CAAE,EAAQ,IAAI,WAAW,EAAY,CACtF,IAAK,EAAI,EAAG,EAAI,EAAK,GAAK,EACtB,EAAWH,EAAO,EAAO,WAAW,EAAE,EACtC,EAAWA,EAAO,EAAO,WAAW,EAAI,EAAE,EAC1C,EAAWA,EAAO,EAAO,WAAW,EAAI,EAAE,EAC1C,EAAWA,EAAO,EAAO,WAAW,EAAI,EAAE,EAC1C,EAAM,KAAQ,GAAY,EAAM,GAAY,EAC5C,EAAM,MAAS,EAAW,KAAO,EAAM,GAAY,EACnD,EAAM,MAAS,EAAW,IAAM,EAAM,EAAW,GAErD,OAAO,GCvCX,IAAME,GAAwB,OAAO,aAAgB,WACrD,MAAa,GAAgB,EAAe,IAAe,CACvD,GAAI,OAAO,GAAkB,SACzB,MAAO,CACH,KAAM,UACN,KAAM,EAAU,EAAe,EAAA,CAClC,CAEL,IAAM,EAAO,EAAc,OAAO,EAAE,CAWpC,OAVI,IAAS,IACF,CACH,KAAM,UACN,KAAM,GAAmB,EAAc,UAAU,EAAE,CAAE,EAAA,CACxD,CAEc,EAAqB,GAIjC,EAAc,OAAS,EACxB,CACE,KAAM,EAAqB,GAC3B,KAAM,EAAc,UAAU,EAAA,CACjC,CACC,CACE,KAAM,EAAqB,GAC9B,CATM,GAWf,IAAM,IAAsB,EAAM,IAAe,CAC7C,GAAIA,GAAuB,CACvB,IAAM,EAAUC,GAAO,EAAK,CAC5B,OAAO,EAAU,EAAS,EAAW,MAGrC,MAAO,CAAE,OAAQ,GAAM,OAAM,EAG/B,GAAa,EAAM,IAAe,CACpC,OAAQ,EAAR,CACI,IAAK,OAOG,OANA,aAAgB,KAET,EAIA,IAAI,KAAK,CAAC,EAAK,CAAC,CAE/B,IAAK,cACL,QAOQ,OANA,aAAgB,YAET,EAIA,EAAK,SCtDtB,IAAiB,EAAS,IAAa,CAEzC,IAAM,EAAS,EAAQ,OACjB,EAAqB,MAAM,EAAO,CACpC,EAAQ,EACZ,EAAQ,SAAS,EAAQ,IAAM,CAE3B,EAAa,EAAQ,GAAQ,GAAkB,CAC3C,EAAe,GAAK,EAChB,EAAE,IAAU,GACZ,EAAS,EAAe,KAAA,IAAe,CAAC,EAE9C,EACJ,EAEA,GAAiB,EAAgB,IAAe,CAClD,IAAM,EAAiB,EAAe,MAAA,IAAgB,CAChD,EAAU,EAAE,CAClB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAe,OAAQ,IAAK,CAC5C,IAAM,EAAgB,EAAa,EAAe,GAAI,EAAW,CAEjE,GADA,EAAQ,KAAK,EAAc,CACvB,EAAc,OAAS,QACvB,MAGR,OAAO,GAEX,SAAgB,IAA4B,CACxC,OAAO,IAAI,gBAAgB,CACvB,UAAU,EAAQ,EAAY,CAC1B,GAAqB,EAAS,GAAkB,CAC5C,IAAM,EAAgB,EAAc,OAChC,EAEJ,GAAI,EAAgB,IAChB,EAAS,IAAI,WAAW,EAAE,CAC1B,IAAI,SAAS,EAAO,OAAO,CAAC,SAAS,EAAG,EAAc,SAEjD,EAAgB,MAAO,CAC5B,EAAS,IAAI,WAAW,EAAE,CAC1B,IAAM,EAAO,IAAI,SAAS,EAAO,OAAO,CACxC,EAAK,SAAS,EAAG,IAAI,CACrB,EAAK,UAAU,EAAG,EAAc,KAE/B,CACD,EAAS,IAAI,WAAW,EAAE,CAC1B,IAAM,EAAO,IAAI,SAAS,EAAO,OAAO,CACxC,EAAK,SAAS,EAAG,IAAI,CACrB,EAAK,aAAa,EAAG,OAAO,EAAc,CAAC,CAG3C,EAAO,MAAQ,OAAO,EAAO,MAAS,WACtC,EAAO,IAAM,KAEjB,EAAW,QAAQ,EAAO,CAC1B,EAAW,QAAQ,EAAc,EACnC,EAET,CAAC,CAEN,IAAI,EACJ,SAAS,EAAY,EAAQ,CACzB,OAAO,EAAO,QAAQ,EAAK,IAAU,EAAM,EAAM,OAAQ,EAAE,CAE/D,SAAS,EAAa,EAAQ,EAAM,CAChC,GAAI,EAAO,GAAG,SAAW,EACrB,OAAO,EAAO,OAAO,CAEzB,IAAM,EAAS,IAAI,WAAW,EAAK,CAC/B,EAAI,EACR,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,IACtB,EAAO,GAAK,EAAO,GAAG,KAClB,IAAM,EAAO,GAAG,SAChB,EAAO,OAAO,CACd,EAAI,GAMZ,OAHI,EAAO,QAAU,EAAI,EAAO,GAAG,SAC/B,EAAO,GAAK,EAAO,GAAG,MAAM,EAAE,EAE3B,EAEX,SAAgB,GAA0B,EAAY,EAAY,CAC9D,AACI,IAAe,IAAI,YAEvB,IAAM,EAAS,EAAE,CACb,EAAQ,EACR,EAAiB,GACjBC,EAAW,GACf,OAAO,IAAI,gBAAgB,CACvB,UAAU,EAAO,EAAY,CAEzB,IADA,EAAO,KAAK,EAAM,GACL,CACT,GAAI,IAAU,EAA2B,CACrC,GAAI,EAAY,EAAO,CAAG,EACtB,MAEJ,IAAM,EAAS,EAAa,EAAQ,EAAE,CACtC,GAAY,EAAO,GAAK,MAAU,IAClC,EAAiB,EAAO,GAAK,IAC7B,AAOI,EAPA,EAAiB,IACT,EAEH,IAAmB,IAChB,EAGA,UAGP,IAAU,EAAuC,CACtD,GAAI,EAAY,EAAO,CAAG,EACtB,MAEJ,IAAM,EAAc,EAAa,EAAQ,EAAE,CAC3C,EAAiB,IAAI,SAAS,EAAY,OAAQ,EAAY,WAAY,EAAY,OAAO,CAAC,UAAU,EAAE,CAC1G,EAAQ,UAEH,IAAU,EAAuC,CACtD,GAAI,EAAY,EAAO,CAAG,EACtB,MAEJ,IAAM,EAAc,EAAa,EAAQ,EAAE,CACrC,EAAO,IAAI,SAAS,EAAY,OAAQ,EAAY,WAAY,EAAY,OAAO,CACnF,EAAI,EAAK,UAAU,EAAE,CAC3B,GAAI,EAAa,GAAG,GAAW,EAAG,CAE9B,EAAW,QAAQ,EAAa,CAChC,MAEJ,EAAiB,EAAa,GAAG,GAAM,EAAK,UAAU,EAAE,CACxD,EAAQ,MAEP,CACD,GAAI,EAAY,EAAO,CAAG,EACtB,MAEJ,IAAM,EAAO,EAAa,EAAQ,EAAe,CACjD,EAAW,QAAQ,EAAaA,EAAW,EAAO,EAAa,OAAO,EAAK,CAAE,EAAW,CAAC,CACzF,EAAQ,EAEZ,GAAI,IAAmB,GAAK,EAAiB,EAAY,CACrD,EAAW,QAAQ,EAAa,CAChC,SAIf,CAAC,CClJN,SAAgB,EAAQ,EAAK,CAC3B,GAAI,EAAK,OAAO,GAAM,EAAI,CAW5B,SAAS,GAAM,EAAK,CAClB,IAAK,IAAI,KAAO,EAAQ,UACtB,EAAI,GAAO,EAAQ,UAAU,GAE/B,OAAO,EAYT,EAAQ,UAAU,GAClB,EAAQ,UAAU,iBAAmB,SAAS,EAAO,EAAG,CAItD,MAHA,MAAK,WAAa,KAAK,YAAc,EAAE,EACtC,KAAK,WAAW,IAAM,GAAS,KAAK,WAAW,IAAM,IAAU,EAAE,EAC/D,KAAK,EAAG,CACJ,MAaT,EAAQ,UAAU,KAAO,SAAS,EAAO,EAAG,CAC1C,SAASE,GAAK,CACZ,KAAK,IAAI,EAAOA,EAAG,CACnB,EAAG,MAAM,KAAM,UAAU,CAK3B,MAFA,GAAG,GAAK,EACR,KAAK,GAAG,EAAOA,EAAG,CACX,MAaT,EAAQ,UAAU,IAClB,EAAQ,UAAU,eAClB,EAAQ,UAAU,mBAClB,EAAQ,UAAU,oBAAsB,SAAS,EAAO,EAAG,CAIzD,GAHA,KAAK,WAAa,KAAK,YAAc,EAAE,CAG9B,UAAU,QAAf,EAEF,MADA,MAAK,WAAa,EAAE,CACb,KAIT,IAAI,EAAY,KAAK,WAAW,IAAM,GACtC,GAAI,CAAC,EAAW,OAAO,KAGvB,GAAS,UAAU,QAAf,EAEF,OADA,OAAO,KAAK,WAAW,IAAM,GACtB,KAKT,IAAK,IADD,EACK,EAAI,EAAG,EAAI,EAAU,OAAQ,IAEpC,GADA,EAAK,EAAU,GACX,IAAO,GAAM,EAAG,KAAO,EAAI,CAC7B,EAAU,OAAO,EAAG,EAAE,CACtB,MAUJ,OAJI,EAAU,SAAW,GACvB,OAAO,KAAK,WAAW,IAAM,GAGxB,MAWT,EAAQ,UAAU,KAAO,SAAS,EAAM,CACtC,KAAK,WAAa,KAAK,YAAc,EAAE,CAKvC,IAAK,IAHD,EAAW,MAAM,UAAU,OAAS,EAAE,CACtC,EAAY,KAAK,WAAW,IAAM,GAE7B,EAAI,EAAG,EAAI,UAAU,OAAQ,IACpC,EAAK,EAAI,GAAK,UAAU,GAG1B,GAAI,EAAW,CACb,EAAY,EAAU,MAAM,EAAE,CAC9B,IAAK,IAAI,EAAI,EAAG,EAAM,EAAU,OAAQ,EAAI,EAAK,EAAE,EACjD,EAAU,GAAG,MAAM,KAAM,EAAK,CAIlC,OAAO,MAIT,EAAQ,UAAU,aAAe,EAAQ,UAAU,KAUnD,EAAQ,UAAU,UAAY,SAAS,EAAM,CAE3C,MADA,MAAK,WAAa,KAAK,YAAc,EAAE,CAChC,KAAK,WAAW,IAAM,IAAU,EAAE,EAW3C,EAAQ,UAAU,aAAe,SAAS,EAAM,CAC9C,MAAO,CAAC,CAAE,KAAK,UAAU,EAAM,CAAC,QCvKlC,MAAa,OACkB,OAAO,SAAY,YAAc,OAAO,QAAQ,SAAY,WAE3E,GAAO,QAAQ,SAAS,CAAC,KAAK,EAAG,EAGjC,EAAI,IAAiB,EAAa,EAAI,EAAE,GAEpD,CACS,OACL,OAAO,KAAS,IACT,KAEF,OAAO,OAAW,IAChB,OAGA,SAAS,cAAc,EAAE,GAEpC,CClBJ,SAAgB,EAAK,EAAK,GAAG,EAAM,CAC/B,OAAO,EAAK,QAAQ,EAAK,KACjB,EAAI,eAAe,EAAE,GACrB,EAAI,GAAK,EAAI,IAEV,GACR,EAAE,CAAC,CAGV,IAAM,GAAqBI,EAAW,WAChC,GAAuBA,EAAW,aACxC,SAAgB,EAAsB,EAAK,EAAM,CACzC,EAAK,iBACL,EAAI,aAAe,GAAmB,KAAKA,EAAW,CACtD,EAAI,eAAiB,GAAqB,KAAKA,EAAW,GAG1D,EAAI,aAAeA,EAAW,WAAW,KAAKA,EAAW,CACzD,EAAI,eAAiBA,EAAW,aAAa,KAAKA,EAAW,EAIrE,IAAM,GAAkB,KAExB,SAAgB,GAAW,EAAK,CAK5B,OAJI,OAAO,GAAQ,SACR,GAAW,EAAI,CAGnB,KAAK,MAAM,EAAI,YAAc,EAAI,MAAQ,GAAgB,CAEpE,SAAS,GAAW,EAAK,CACrB,IAAI,EAAI,EAAG,EAAS,EACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,OAAQ,EAAI,EAAG,IACnC,EAAI,EAAI,WAAW,EAAE,CACjB,EAAI,IACJ,GAAU,EAEL,EAAI,KACT,GAAU,EAEL,EAAI,OAAU,GAAK,MACxB,GAAU,GAGV,IACA,GAAU,GAGlB,OAAO,EAKX,SAAgB,GAAe,CAC3B,OAAQ,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC,UAAU,EAAE,CACxC,KAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,UAAU,EAAG,EAAE,CCjDlD,SAAgB,GAAO,EAAK,CACxB,IAAI,EAAM,GACV,IAAK,IAAI,KAAK,EACN,EAAI,eAAe,EAAE,GACjB,EAAI,SACJ,GAAO,KACX,GAAO,mBAAmB,EAAE,CAAG,IAAM,mBAAmB,EAAI,GAAG,EAGvE,OAAO,EAQX,SAAgB,GAAO,EAAI,CACvB,IAAI,EAAM,EAAE,CACR,EAAQ,EAAG,MAAM,IAAI,CACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAAK,CAC1C,IAAI,EAAO,EAAM,GAAG,MAAM,IAAI,CAC9B,EAAI,mBAAmB,EAAK,GAAG,EAAI,mBAAmB,EAAK,GAAG,CAElE,OAAO,EC5BX,IAAa,EAAb,cAAoC,KAAM,CACtC,YAAY,EAAQ,EAAa,EAAS,CACtC,MAAM,EAAO,CACb,KAAK,YAAc,EACnB,KAAK,QAAU,EACf,KAAK,KAAO,mBAGP,EAAb,cAA+B,CAAQ,CAOnC,YAAY,EAAM,CACd,OAAO,CACP,KAAK,SAAW,GAChB,EAAsB,KAAM,EAAK,CACjC,KAAK,KAAO,EACZ,KAAK,MAAQ,EAAK,MAClB,KAAK,OAAS,EAAK,OACnB,KAAK,eAAiB,CAAC,EAAK,YAWhC,QAAQ,EAAQ,EAAa,EAAS,CAElC,OADA,MAAM,aAAa,QAAS,IAAI,EAAe,EAAQ,EAAa,EAAQ,CAAC,CACtE,KAKX,MAAO,CAGH,MAFA,MAAK,WAAa,UAClB,KAAK,QAAQ,CACN,KAKX,OAAQ,CAKJ,OAJI,KAAK,aAAe,WAAa,KAAK,aAAe,UACrD,KAAK,SAAS,CACd,KAAK,SAAS,EAEX,KAOX,KAAK,EAAS,CACN,KAAK,aAAe,QACpB,KAAK,MAAM,EAAQ,CAW3B,QAAS,CACL,KAAK,WAAa,OAClB,KAAK,SAAW,GAChB,MAAM,aAAa,OAAO,CAQ9B,OAAO,EAAM,CACT,IAAM,EAAS,EAAa,EAAM,KAAK,OAAO,WAAW,CACzD,KAAK,SAAS,EAAO,CAOzB,SAAS,EAAQ,CACb,MAAM,aAAa,SAAU,EAAO,CAOxC,QAAQ,EAAS,CACb,KAAK,WAAa,SAClB,MAAM,aAAa,QAAS,EAAQ,CAOxC,MAAM,EAAS,EACf,UAAU,EAAQ,EAAQ,EAAE,CAAE,CAC1B,OAAQ,EACJ,MACA,KAAK,WAAW,CAChB,KAAK,OAAO,CACZ,KAAK,KAAK,KACV,KAAK,OAAO,EAAM,CAE1B,WAAY,CACR,IAAM,EAAW,KAAK,KAAK,SAC3B,OAAO,EAAS,QAAQ,IAAI,GAAK,GAAK,EAAW,IAAM,EAAW,IAEtE,OAAQ,CAOA,OANA,KAAK,KAAK,OACR,KAAK,KAAK,QAAU,OAAO,KAAK,KAAK,OAAS,IAAI,EAC/C,CAAC,KAAK,KAAK,QAAU,OAAO,KAAK,KAAK,KAAK,GAAK,IAC9C,IAAM,KAAK,KAAK,KAGhB,GAGf,OAAO,EAAO,CACV,IAAM,EAAe,GAAO,EAAM,CAClC,OAAO,EAAa,OAAS,IAAM,EAAe,KCxI7C,EAAb,cAA6B,CAAU,CACnC,aAAc,CACV,MAAM,GAAG,UAAU,CACnB,KAAK,SAAW,GAEpB,IAAI,MAAO,CACP,MAAO,UAQX,QAAS,CACL,KAAK,OAAO,CAQhB,MAAM,EAAS,CACX,KAAK,WAAa,UAClB,IAAM,MAAc,CAChB,KAAK,WAAa,SAClB,GAAS,EAEb,GAAI,KAAK,UAAY,CAAC,KAAK,SAAU,CACjC,IAAI,EAAQ,EACR,KAAK,WACL,IACA,KAAK,KAAK,eAAgB,UAAY,CAClC,EAAE,GAAS,GAAO,EACpB,EAED,KAAK,WACN,IACA,KAAK,KAAK,QAAS,UAAY,CAC3B,EAAE,GAAS,GAAO,EACpB,OAIN,GAAO,CAQf,OAAQ,CACJ,KAAK,SAAW,GAChB,KAAK,QAAQ,CACb,KAAK,aAAa,OAAO,CAO7B,OAAO,EAAM,CAeT,EAAc,EAAM,KAAK,OAAO,WAAW,CAAC,QAd1B,GAAW,CAMzB,GAJkB,KAAK,aAAnB,WAAiC,EAAO,OAAS,QACjD,KAAK,QAAQ,CAGD,EAAO,OAAnB,QAEA,OADA,KAAK,QAAQ,CAAE,YAAa,iCAAkC,CAAC,CACxD,GAGX,KAAK,SAAS,EAAO,EAGoC,CAE5C,KAAK,aAAlB,WAEA,KAAK,SAAW,GAChB,KAAK,aAAa,eAAe,CAClB,KAAK,aAAhB,QACA,KAAK,OAAO,EAWxB,SAAU,CACN,IAAM,MAAc,CAChB,KAAK,MAAM,CAAC,CAAE,KAAM,QAAS,CAAC,CAAC,EAEpB,KAAK,aAAhB,OACA,GAAO,CAKP,KAAK,KAAK,OAAQ,EAAM,CAShC,MAAM,EAAS,CACX,KAAK,SAAW,GAChB,GAAc,EAAU,GAAS,CAC7B,KAAK,QAAQ,MAAY,CACrB,KAAK,SAAW,GAChB,KAAK,aAAa,QAAQ,EAC5B,EACJ,CAON,KAAM,CACF,IAAM,EAAS,KAAK,KAAK,OAAS,QAAU,OACtC,EAAQ,KAAK,OAAS,EAAE,CAQ9B,MANI,KAAU,KAAK,KAAK,oBACpB,EAAM,KAAK,KAAK,gBAAkB,GAAc,EAEhD,CAAC,KAAK,gBAAkB,CAAC,EAAM,MAC/B,EAAM,IAAM,GAET,KAAK,UAAU,EAAQ,EAAM,GC7IxC,EAAQ,GACZ,GAAI,CACA,EAAQ,OAAO,eAAmB,KAC9B,oBAAqB,IAAI,oBAErB,EAIZ,MAAa,GAAU,ECLvB,SAAS,IAAQ,EACjB,IAAa,GAAb,cAA6B,CAAQ,CAOjC,YAAY,EAAM,CAEd,GADA,MAAM,EAAK,CACP,OAAO,SAAa,IAAa,CACjC,IAAM,EAAqB,SAAS,WAAtB,SACV,EAAO,SAAS,KAEpB,AACI,IAAO,EAAQ,MAAQ,KAE3B,KAAK,GACA,OAAO,SAAa,KACjB,EAAK,WAAa,SAAS,UAC3B,IAAS,EAAK,MAU9B,QAAQ,EAAM,EAAI,CACd,IAAM,EAAM,KAAK,QAAQ,CACrB,OAAQ,OACF,OACT,CAAC,CACF,EAAI,GAAG,UAAW,EAAG,CACrB,EAAI,GAAG,SAAU,EAAW,IAAY,CACpC,KAAK,QAAQ,iBAAkB,EAAW,EAAQ,EACpD,CAON,QAAS,CACL,IAAM,EAAM,KAAK,SAAS,CAC1B,EAAI,GAAG,OAAQ,KAAK,OAAO,KAAK,KAAK,CAAC,CACtC,EAAI,GAAG,SAAU,EAAW,IAAY,CACpC,KAAK,QAAQ,iBAAkB,EAAW,EAAQ,EACpD,CACF,KAAK,QAAU,IAGV,EAAb,MAAa,UAAgB,CAAQ,CAOjC,YAAY,EAAe,EAAK,EAAM,CAClC,OAAO,CACP,KAAK,cAAgB,EACrB,EAAsB,KAAM,EAAK,CACjC,KAAK,MAAQ,EACb,KAAK,QAAU,EAAK,QAAU,MAC9B,KAAK,KAAO,EACZ,KAAK,MAAsB,EAAK,OAAnB,IAAA,GAAsC,KAAZ,EAAK,KAC5C,KAAK,SAAS,CAOlB,SAAU,CACN,IAAI,EACJ,IAAM,EAAO,EAAK,KAAK,MAAO,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,YAAY,CAC9H,EAAK,QAAU,CAAC,CAAC,KAAK,MAAM,GAC5B,IAAM,EAAO,KAAK,KAAO,KAAK,cAAc,EAAK,CACjD,GAAI,CACA,EAAI,KAAK,KAAK,QAAS,KAAK,KAAM,GAAK,CACvC,GAAI,CACA,GAAI,KAAK,MAAM,aAGX,IAAK,IAAI,KADT,EAAI,uBAAyB,EAAI,sBAAsB,GAAK,CAC9C,KAAK,MAAM,aACjB,KAAK,MAAM,aAAa,eAAe,EAAE,EACzC,EAAI,iBAAiB,EAAG,KAAK,MAAM,aAAa,GAAG,MAKzD,EACV,GAAe,KAAK,UAAhB,OACA,GAAI,CACA,EAAI,iBAAiB,eAAgB,2BAA2B,MAE1D,EAEd,GAAI,CACA,EAAI,iBAAiB,SAAU,MAAM,MAE/B,GACT,EAAK,KAAK,MAAM,YAAe,MAAiC,EAAG,WAAW,EAAI,CAE/E,oBAAqB,IACrB,EAAI,gBAAkB,KAAK,MAAM,iBAEjC,KAAK,MAAM,iBACX,EAAI,QAAU,KAAK,MAAM,gBAE7B,EAAI,uBAA2B,CAC3B,IAAII,EACA,EAAI,aAAe,KAClB,EAAK,KAAK,MAAM,YAAe,MAAiCA,EAAG,aAEpE,EAAI,kBAAkB,aAAa,CAAC,EAE9B,EAAI,aAAV,IAEQ,EAAI,SAAZ,KAA+B,EAAI,SAAb,KACtB,KAAK,SAAS,CAKd,KAAK,iBAAmB,CACpB,KAAK,SAAS,OAAO,EAAI,QAAW,SAAW,EAAI,OAAS,EAAE,EAC/D,EAAE,GAGb,EAAI,KAAK,KAAK,MAAM,OAEjB,EAAG,CAIN,KAAK,iBAAmB,CACpB,KAAK,SAAS,EAAE,EACjB,EAAE,CACL,OAEA,OAAO,SAAa,MACpB,KAAK,OAAS,EAAQ,gBACtB,EAAQ,SAAS,KAAK,QAAU,MAQxC,SAAS,EAAK,CACV,KAAK,aAAa,QAAS,EAAK,KAAK,KAAK,CAC1C,KAAK,SAAS,GAAK,CAOvB,SAAS,EAAW,CACZ,KAAuB,KAAK,OAA5B,QAA6C,KAAK,OAAd,MAIxC,IADA,KAAK,KAAK,mBAAqB,GAC3B,EACA,GAAI,CACA,KAAK,KAAK,OAAO,MAEX,EAEV,OAAO,SAAa,KACpB,OAAO,EAAQ,SAAS,KAAK,QAEjC,KAAK,KAAO,MAOhB,SAAU,CACN,IAAM,EAAO,KAAK,KAAK,aACnB,IAAS,OACT,KAAK,aAAa,OAAQ,EAAK,CAC/B,KAAK,aAAa,UAAU,CAC5B,KAAK,UAAU,EAQvB,OAAQ,CACJ,KAAK,UAAU,GAUvB,GAPA,EAAQ,cAAgB,EACxB,EAAQ,SAAW,EAAE,CAMjB,OAAO,SAAa,QAEhB,OAAO,aAAgB,WAEvB,YAAY,WAAY,EAAc,SAEjC,OAAO,kBAAqB,WAAY,CAC7C,IAAM,EAAmB,eAAgBJ,EAAa,WAAa,SACnE,iBAAiB,EAAkB,EAAe,GAAM,EAGhE,SAAS,GAAgB,CACrB,IAAK,IAAI,KAAK,EAAQ,SACd,EAAQ,SAAS,eAAe,EAAE,EAClC,EAAQ,SAAS,GAAG,OAAO,CAIvC,IAAM,IAAW,UAAY,CACzB,IAAM,EAAM,EAAW,CACnB,QAAS,GACZ,CAAC,CACF,OAAO,GAAO,EAAI,eAAiB,QACnC,CAQS,EAAb,cAAyB,EAAQ,CAC7B,YAAY,EAAM,CACd,MAAM,EAAK,CACX,IAAM,EAAc,GAAQ,EAAK,YACjC,KAAK,eAAiB,IAAW,CAAC,EAEtC,QAAQ,EAAO,EAAE,CAAE,CAEf,OADA,OAAO,OAAO,EAAM,CAAE,GAAI,KAAK,GAAI,CAAE,KAAK,KAAK,CACxC,IAAI,EAAQ,EAAY,KAAK,KAAK,CAAE,EAAK,GAGxD,SAAS,EAAW,EAAM,CACtB,IAAM,EAAU,EAAK,QAErB,GAAI,CACA,GAAoB,OAAO,eAAvB,MAA0C,CAAC,GAAW,IACtD,OAAO,IAAI,oBAGT,EACV,GAAI,CAAC,EACD,GAAI,CACA,OAAO,IAAIA,EAAW,CAAC,SAAiB,SAAR,CAAkB,KAAK,IAAI,EAAE,oBAAoB,MAE3E,GCvQlB,IAAM,EAAgB,OAAO,UAAc,KACvC,OAAO,UAAU,SAAY,UAC7B,UAAU,QAAQ,aAAa,GAAK,cAC3B,GAAb,cAA4B,CAAU,CAClC,IAAI,MAAO,CACP,MAAO,YAEX,QAAS,CACL,IAAM,EAAM,KAAK,KAAK,CAChB,EAAY,KAAK,KAAK,UAEtB,EAAO,EACP,EAAE,CACF,EAAK,KAAK,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,sBAAsB,CACtN,KAAK,KAAK,eACV,EAAK,QAAU,KAAK,KAAK,cAE7B,GAAI,CACA,KAAK,GAAK,KAAK,aAAa,EAAK,EAAW,EAAK,OAE9C,EAAK,CACR,OAAO,KAAK,aAAa,QAAS,EAAI,CAE1C,KAAK,GAAG,WAAa,KAAK,OAAO,WACjC,KAAK,mBAAmB,CAO5B,mBAAoB,CAChB,KAAK,GAAG,WAAe,CACf,KAAK,KAAK,WACV,KAAK,GAAG,QAAQ,OAAO,CAE3B,KAAK,QAAQ,EAEjB,KAAK,GAAG,QAAW,GAAe,KAAK,QAAQ,CAC3C,YAAa,8BACb,QAAS,EACZ,CAAC,CACF,KAAK,GAAG,UAAa,GAAO,KAAK,OAAO,EAAG,KAAK,CAChD,KAAK,GAAG,QAAW,GAAM,KAAK,QAAQ,kBAAmB,EAAE,CAE/D,MAAM,EAAS,CACX,KAAK,SAAW,GAGhB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,CACrC,IAAM,EAAS,EAAQ,GACjB,EAAa,IAAM,EAAQ,OAAS,EAC1C,EAAa,EAAQ,KAAK,eAAiB,GAAS,CAIhD,GAAI,CACA,KAAK,QAAQ,EAAQ,EAAK,MAEpB,EAEN,GAGA,MAAe,CACX,KAAK,SAAW,GAChB,KAAK,aAAa,QAAQ,EAC3B,KAAK,aAAa,EAE3B,EAGV,SAAU,CACK,KAAK,KAAO,SACnB,KAAK,GAAG,YAAgB,GACxB,KAAK,GAAG,OAAO,CACf,KAAK,GAAK,MAQlB,KAAM,CACF,IAAM,EAAS,KAAK,KAAK,OAAS,MAAQ,KACpC,EAAQ,KAAK,OAAS,EAAE,CAS9B,OAPI,KAAK,KAAK,oBACV,EAAM,KAAK,KAAK,gBAAkB,GAAc,EAG/C,KAAK,iBACN,EAAM,IAAM,GAET,KAAK,UAAU,EAAQ,EAAM,GAGtC,EAAgBA,EAAW,WAAaA,EAAW,aAU5C,EAAb,cAAwB,EAAO,CAC3B,aAAa,EAAK,EAAW,EAAM,CAC/B,OAAQ,EAIF,IAAI,EAAc,EAAK,EAAW,EAAK,CAHvC,EACI,IAAI,EAAc,EAAK,EAAU,CACjC,IAAI,EAAc,EAAI,CAGpC,QAAQ,EAAS,EAAM,CACnB,KAAK,GAAG,KAAK,EAAK,GC/Gb,EAAb,cAAwB,CAAU,CAC9B,IAAI,MAAO,CACP,MAAO,eAEX,QAAS,CACL,GAAI,CAEA,KAAK,WAAa,IAAI,aAAa,KAAK,UAAU,QAAQ,CAAE,KAAK,KAAK,iBAAiB,KAAK,MAAM,OAE/F,EAAK,CACR,OAAO,KAAK,aAAa,QAAS,EAAI,CAE1C,KAAK,WAAW,OACX,SAAW,CACZ,KAAK,SAAS,EAChB,CACG,MAAO,GAAQ,CAChB,KAAK,QAAQ,qBAAsB,EAAI,EACzC,CAEF,KAAK,WAAW,MAAM,SAAW,CAC7B,KAAK,WAAW,2BAA2B,CAAC,KAAM,GAAW,CACzD,IAAM,EAAgB,WAAmD,KAAK,OAAO,WAAW,CAC1F,EAAS,EAAO,SAAS,YAAY,EAAc,CAAC,WAAW,CAC/D,EAAgB,IAA2B,CACjD,EAAc,SAAS,OAAO,EAAO,SAAS,CAC9C,KAAK,QAAU,EAAc,SAAS,WAAW,CACjD,IAAM,MAAa,CACf,EACK,MAAM,CACN,MAAM,CAAE,OAAM,MAAA,KAAY,CACvB,IAGJ,KAAK,SAASQ,EAAM,CACpB,GAAM,GACR,CACG,MAAO,GAAQ,GAClB,EAEN,GAAM,CACN,IAAM,EAAS,CAAE,KAAM,OAAQ,CAC3B,KAAK,MAAM,MACX,EAAO,KAAO,WAAW,KAAK,MAAM,IAAI,KAE5C,KAAK,QAAQ,MAAM,EAAO,CAAC,SAAW,KAAK,QAAQ,CAAC,EACtD,EACJ,CAEN,MAAM,EAAS,CACX,KAAK,SAAW,GAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,CACrC,IAAM,EAAS,EAAQ,GACjB,EAAa,IAAM,EAAQ,OAAS,EAC1C,KAAK,QAAQ,MAAM,EAAO,CAAC,SAAW,CAC9B,GACA,MAAe,CACX,KAAK,SAAW,GAChB,KAAK,aAAa,QAAQ,EAC3B,KAAK,aAAa,EAE3B,EAGV,SAAU,CACN,IAAI,GACH,EAAK,KAAK,aAAgB,MAAiC,EAAG,OAAO,GC1E9E,MAAa,GAAa,CACtB,UAAW,EACX,aAAc,EACd,QAAS,EACZ,CCYD,IAAM,GAAK,sPACL,GAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,SACxI,CACD,SAAgB,EAAM,EAAK,CACvB,GAAI,EAAI,OAAS,IACb,KAAM,eAEV,IAAM,EAAM,EAAK,EAAI,EAAI,QAAQ,IAAI,CAAE,EAAI,EAAI,QAAQ,IAAI,CACvD,GAAK,IAAM,GAAK,KAChB,EAAM,EAAI,UAAU,EAAG,EAAE,CAAG,EAAI,UAAU,EAAG,EAAE,CAAC,QAAQ,KAAM,IAAI,CAAG,EAAI,UAAU,EAAG,EAAI,OAAO,EAErG,IAAI,EAAI,GAAG,KAAK,GAAO,GAAG,CAAE,EAAM,EAAE,CAAE,EAAI,GAC1C,KAAO,KACH,EAAI,GAAM,IAAM,EAAE,IAAM,GAU5B,OARI,GAAK,IAAM,GAAK,KAChB,EAAI,OAAS,EACb,EAAI,KAAO,EAAI,KAAK,UAAU,EAAG,EAAI,KAAK,OAAS,EAAE,CAAC,QAAQ,KAAM,IAAI,CACxE,EAAI,UAAY,EAAI,UAAU,QAAQ,IAAK,GAAG,CAAC,QAAQ,IAAK,GAAG,CAAC,QAAQ,KAAM,IAAI,CAClF,EAAI,QAAU,IAElB,EAAI,UAAY,GAAU,EAAK,EAAI,KAAQ,CAC3C,EAAI,SAAW,GAAS,EAAK,EAAI,MAAS,CACnC,EAEX,SAAS,GAAU,EAAK,EAAM,CAC1B,IAAM,EAAO,WAAY,EAAQ,EAAK,QAAQ,EAAM,IAAI,CAAC,MAAM,IAAI,CAOnE,OANI,EAAK,MAAM,EAAG,EAAE,EAAI,KAAO,EAAK,SAAW,IAC3C,EAAM,OAAO,EAAG,EAAE,CAElB,EAAK,MAAM,GAAG,EAAI,KAClB,EAAM,OAAO,EAAM,OAAS,EAAG,EAAE,CAE9B,EAEX,SAAS,GAAS,EAAK,EAAO,CAC1B,IAAM,EAAO,EAAE,CAMf,OALA,EAAM,QAAQ,4BAA6B,SAAU,EAAI,EAAI,EAAI,CACzD,IACA,EAAK,GAAM,IAEjB,CACK,ECvDX,IAAM,EAAqB,OAAO,kBAAqB,YACnD,OAAO,qBAAwB,WAC7B,EAA0B,EAAE,CAC9B,GAGA,iBAAiB,cAAiB,CAC9B,EAAwB,QAAS,GAAa,GAAU,CAAC,EAC1D,GAAM,CAyBb,IAAa,EAAb,MAAa,UAA6B,CAAQ,CAO9C,YAAY,EAAK,EAAM,CAiBnB,GAhBA,OAAO,CACP,KAAK,WAAa,cAClB,KAAK,YAAc,EAAE,CACrB,KAAK,eAAiB,EACtB,KAAK,cAAgB,GACrB,KAAK,aAAe,GACpB,KAAK,YAAc,GAKnB,KAAK,iBAAmB,IACpB,GAAoB,OAAO,GAApB,WACP,EAAO,EACP,EAAM,MAEN,EAAK,CACL,IAAM,EAAY,EAAM,EAAI,CAC5B,EAAK,SAAW,EAAU,KAC1B,EAAK,OACD,EAAU,WAAa,SAAW,EAAU,WAAa,MAC7D,EAAK,KAAO,EAAU,KAClB,EAAU,QACV,EAAK,MAAQ,EAAU,YAEtB,EAAK,OACV,EAAK,SAAW,EAAM,EAAK,KAAK,CAAC,MAErC,EAAsB,KAAM,EAAK,CACjC,KAAK,OACO,EAAK,QAAb,KAEM,OAAO,SAAa,KAA4B,SAAS,WAAtB,SADnC,EAAK,OAEX,EAAK,UAAY,CAAC,EAAK,OAEvB,EAAK,KAAO,KAAK,OAAS,MAAQ,MAEtC,KAAK,SACD,EAAK,WACA,OAAO,SAAa,IAAc,SAAS,SAAW,aAC/D,KAAK,KACD,EAAK,OACA,OAAO,SAAa,KAAe,SAAS,KACvC,SAAS,KACT,KAAK,OACD,MACA,MAClB,KAAK,WAAa,EAAE,CACpB,KAAK,kBAAoB,EAAE,CAC3B,EAAK,WAAW,QAAS,GAAM,CAC3B,IAAM,EAAgB,EAAE,UAAU,KAClC,KAAK,WAAW,KAAK,EAAc,CACnC,KAAK,kBAAkB,GAAiB,GAC1C,CACF,KAAK,KAAO,OAAO,OAAO,CACtB,KAAM,aACN,MAAO,GACP,gBAAiB,GACjB,QAAS,GACT,eAAgB,IAChB,gBAAiB,GACjB,iBAAkB,GAClB,mBAAoB,GACpB,kBAAmB,CACf,UAAW,KACd,CACD,iBAAkB,EAAE,CACpB,oBAAqB,GACxB,CAAE,EAAK,CACR,KAAK,KAAK,KACN,KAAK,KAAK,KAAK,QAAQ,MAAO,GAAG,EAC5B,KAAK,KAAK,iBAAmB,IAAM,IACxC,OAAO,KAAK,KAAK,OAAU,WAC3B,KAAK,KAAK,MAAQ,GAAO,KAAK,KAAK,MAAM,EAEzC,IACI,KAAK,KAAK,sBAIV,KAAK,+BAAmC,CAChC,KAAK,YAEL,KAAK,UAAU,oBAAoB,CACnC,KAAK,UAAU,OAAO,GAG9B,iBAAiB,eAAgB,KAAK,2BAA4B,GAAM,EAExE,KAAK,WAAa,cAClB,KAAK,0BAA8B,CAC/B,KAAK,SAAS,kBAAmB,CAC7B,YAAa,0BAChB,CAAC,EAEN,EAAwB,KAAK,KAAK,sBAAsB,GAG5D,KAAK,KAAK,kBACV,KAAK,WAAa,QAEtB,KAAK,OAAO,CAShB,gBAAgB,EAAM,CAClB,IAAM,EAAQ,OAAO,OAAO,EAAE,CAAE,KAAK,KAAK,MAAM,CAEhD,EAAM,IAAA,EAEN,EAAM,UAAY,EAEd,KAAK,KACL,EAAM,IAAM,KAAK,IACrB,IAAM,EAAO,OAAO,OAAO,EAAE,CAAE,KAAK,KAAM,CACtC,QACA,OAAQ,KACR,SAAU,KAAK,SACf,OAAQ,KAAK,OACb,KAAM,KAAK,KACd,CAAE,KAAK,KAAK,iBAAiB,GAAM,CACpC,OAAO,IAAI,KAAK,kBAAkB,GAAM,EAAK,CAOjD,OAAQ,CACJ,GAAI,KAAK,WAAW,SAAW,EAAG,CAE9B,KAAK,iBAAmB,CACpB,KAAK,aAAa,QAAS,0BAA0B,EACtD,EAAE,CACL,OAEJ,IAAM,EAAgB,KAAK,KAAK,iBAC5B,EAAqB,uBACrB,KAAK,WAAW,QAAQ,YAAY,GAAK,GACvC,YACA,KAAK,WAAW,GACtB,KAAK,WAAa,UAClB,IAAM,EAAY,KAAK,gBAAgB,EAAc,CACrD,EAAU,MAAM,CAChB,KAAK,aAAa,EAAU,CAOhC,aAAa,EAAW,CAChB,KAAK,WACL,KAAK,UAAU,oBAAoB,CAGvC,KAAK,UAAY,EAEjB,EACK,GAAG,QAAS,KAAK,SAAS,KAAK,KAAK,CAAC,CACrC,GAAG,SAAU,KAAK,UAAU,KAAK,KAAK,CAAC,CACvC,GAAG,QAAS,KAAK,SAAS,KAAK,KAAK,CAAC,CACrC,GAAG,QAAU,GAAW,KAAK,SAAS,kBAAmB,EAAO,CAAC,CAO1E,QAAS,CACL,KAAK,WAAa,OAClB,EAAqB,sBACD,KAAK,UAAU,OAA/B,YACJ,KAAK,aAAa,OAAO,CACzB,KAAK,OAAO,CAOhB,UAAU,EAAQ,CACd,GAAkB,KAAK,aAAnB,WACW,KAAK,aAAhB,QACc,KAAK,aAAnB,UAIA,OAHA,KAAK,aAAa,SAAU,EAAO,CAEnC,KAAK,aAAa,YAAY,CACtB,EAAO,KAAf,CACI,IAAK,OACD,KAAK,YAAY,KAAK,MAAM,EAAO,KAAK,CAAC,CACzC,MACJ,IAAK,OACD,KAAK,YAAY,OAAO,CACxB,KAAK,aAAa,OAAO,CACzB,KAAK,aAAa,OAAO,CACzB,KAAK,mBAAmB,CACxB,MACJ,IAAK,QACD,IAAM,EAAU,MAAM,eAAe,CAErC,EAAI,KAAO,EAAO,KAClB,KAAK,SAAS,EAAI,CAClB,MACJ,IAAK,UACD,KAAK,aAAa,OAAQ,EAAO,KAAK,CACtC,KAAK,aAAa,UAAW,EAAO,KAAK,CACzC,OAYhB,YAAY,EAAM,CACd,KAAK,aAAa,YAAa,EAAK,CACpC,KAAK,GAAK,EAAK,IACf,KAAK,UAAU,MAAM,IAAM,EAAK,IAChC,KAAK,cAAgB,EAAK,aAC1B,KAAK,aAAe,EAAK,YACzB,KAAK,YAAc,EAAK,WACxB,KAAK,QAAQ,CAEI,KAAK,aAAlB,UAEJ,KAAK,mBAAmB,CAO5B,mBAAoB,CAChB,KAAK,eAAe,KAAK,kBAAkB,CAC3C,IAAM,EAAQ,KAAK,cAAgB,KAAK,aACxC,KAAK,iBAAmB,KAAK,KAAK,CAAG,EACrC,KAAK,kBAAoB,KAAK,iBAAmB,CAC7C,KAAK,SAAS,eAAe,EAC9B,EAAM,CACL,KAAK,KAAK,WACV,KAAK,kBAAkB,OAAO,CAQtC,UAAW,CACP,KAAK,YAAY,OAAO,EAAG,KAAK,eAAe,CAI/C,KAAK,eAAiB,EACZ,KAAK,YAAY,SAAvB,EACA,KAAK,aAAa,QAAQ,CAG1B,KAAK,OAAO,CAQpB,OAAQ,CACJ,GAAiB,KAAK,aAAlB,UACA,KAAK,UAAU,UACf,CAAC,KAAK,WACN,KAAK,YAAY,OAAQ,CACzB,IAAM,EAAU,KAAK,qBAAqB,CAC1C,KAAK,UAAU,KAAK,EAAQ,CAG5B,KAAK,eAAiB,EAAQ,OAC9B,KAAK,aAAa,QAAQ,EASlC,qBAAsB,CAIlB,GAAI,EAH2B,KAAK,aAChC,KAAK,UAAU,OAAS,WACxB,KAAK,YAAY,OAAS,GAE1B,OAAO,KAAK,YAEhB,IAAI,EAAc,EAClB,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,YAAY,OAAQ,IAAK,CAC9C,IAAM,EAAO,KAAK,YAAY,GAAG,KAIjC,GAHI,IACA,GAAe,GAAW,EAAK,EAE/B,EAAI,GAAK,EAAc,KAAK,YAC5B,OAAO,KAAK,YAAY,MAAM,EAAG,EAAE,CAEvC,GAAe,EAEnB,OAAO,KAAK,YAWF,iBAAkB,CAC5B,GAAI,CAAC,KAAK,iBACN,MAAO,GACX,IAAM,EAAa,KAAK,KAAK,CAAG,KAAK,iBAOrC,OANI,IACA,KAAK,iBAAmB,EACxB,MAAe,CACX,KAAK,SAAS,eAAe,EAC9B,KAAK,aAAa,EAElB,EAUX,MAAM,EAAK,EAAS,EAAI,CAEpB,OADA,KAAK,YAAY,UAAW,EAAK,EAAS,EAAG,CACtC,KAUX,KAAK,EAAK,EAAS,EAAI,CAEnB,OADA,KAAK,YAAY,UAAW,EAAK,EAAS,EAAG,CACtC,KAWX,YAAY,EAAM,EAAM,EAAS,EAAI,CASjC,GARmB,OAAO,GAAtB,aACA,EAAK,EACL,EAAO,IAAA,IAEQ,OAAO,GAAtB,aACA,EAAK,EACL,EAAU,MAEI,KAAK,aAAnB,WAA8C,KAAK,aAAlB,SACjC,OAEJ,IAAqB,EAAE,CACvB,EAAQ,SAAW,KAAU,EAAQ,SACrC,IAAM,EAAS,CACL,OACA,OACG,UACZ,CACD,KAAK,aAAa,eAAgB,EAAO,CACzC,KAAK,YAAY,KAAK,EAAO,CACzB,GACA,KAAK,KAAK,QAAS,EAAG,CAC1B,KAAK,OAAO,CAKhB,OAAQ,CACJ,IAAM,MAAc,CAChB,KAAK,SAAS,eAAe,CAC7B,KAAK,UAAU,OAAO,EAEpB,MAAwB,CAC1B,KAAK,IAAI,UAAW,EAAgB,CACpC,KAAK,IAAI,eAAgB,EAAgB,CACzC,GAAO,EAEL,MAAuB,CAEzB,KAAK,KAAK,UAAW,EAAgB,CACrC,KAAK,KAAK,eAAgB,EAAgB,EAqB9C,OAnBkB,KAAK,aAAnB,WAA4C,KAAK,aAAhB,UACjC,KAAK,WAAa,UACd,KAAK,YAAY,OACjB,KAAK,KAAK,YAAe,CACjB,KAAK,UACL,GAAgB,CAGhB,GAAO,EAEb,CAEG,KAAK,UACV,GAAgB,CAGhB,GAAO,EAGR,KAOX,SAAS,EAAK,CAEV,GADA,EAAqB,sBAAwB,GACzC,KAAK,KAAK,kBACV,KAAK,WAAW,OAAS,GACzB,KAAK,aAAe,UAEpB,OADA,KAAK,WAAW,OAAO,CAChB,KAAK,OAAO,CAEvB,KAAK,aAAa,QAAS,EAAI,CAC/B,KAAK,SAAS,kBAAmB,EAAI,CAOzC,SAAS,EAAQ,EAAa,CAC1B,GAAkB,KAAK,aAAnB,WACW,KAAK,aAAhB,QACc,KAAK,aAAnB,UAA+B,CAS/B,GAPA,KAAK,eAAe,KAAK,kBAAkB,CAE3C,KAAK,UAAU,mBAAmB,QAAQ,CAE1C,KAAK,UAAU,OAAO,CAEtB,KAAK,UAAU,oBAAoB,CAC/B,IACI,KAAK,4BACL,oBAAoB,eAAgB,KAAK,2BAA4B,GAAM,CAE3E,KAAK,uBAAuB,CAC5B,IAAM,EAAI,EAAwB,QAAQ,KAAK,sBAAsB,CACjE,IAAM,IACN,EAAwB,OAAO,EAAG,EAAE,CAKhD,KAAK,WAAa,SAElB,KAAK,GAAK,KAEV,KAAK,aAAa,QAAS,EAAQ,EAAY,CAG/C,KAAK,YAAc,EAAE,CACrB,KAAK,eAAiB,KAIlC,EAAqB,SAAA,EAwBrB,IAAa,GAAb,cAAuC,CAAqB,CACxD,aAAc,CACV,MAAM,GAAG,UAAU,CACnB,KAAK,UAAY,EAAE,CAEvB,QAAS,CAEL,GADA,MAAM,QAAQ,CACC,KAAK,aAAhB,QAA8B,KAAK,KAAK,QACxC,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,IACvC,KAAK,OAAO,KAAK,UAAU,GAAG,CAU1C,OAAO,EAAM,CACT,IAAI,EAAY,KAAK,gBAAgB,EAAK,CACtC,EAAS,GACb,EAAqB,sBAAwB,GAC7C,IAAM,MAAwB,CACtB,IAEJ,EAAU,KAAK,CAAC,CAAE,KAAM,OAAQ,KAAM,QAAS,CAAC,CAAC,CACjD,EAAU,KAAK,SAAW,GAAQ,CAC1B,MAEJ,GAAe,EAAI,OAAf,QAAmC,EAAI,OAAhB,QAAsB,CAG7C,GAFA,KAAK,UAAY,GACjB,KAAK,aAAa,YAAa,EAAU,CACrC,CAAC,EACD,OACJ,EAAqB,sBACD,EAAU,OAA1B,YACJ,KAAK,UAAU,UAAY,CACnB,GAEa,KAAK,aAAlB,WAEJ,GAAS,CACT,KAAK,aAAa,EAAU,CAC5B,EAAU,KAAK,CAAC,CAAE,KAAM,UAAW,CAAC,CAAC,CACrC,KAAK,aAAa,UAAW,EAAU,CACvC,EAAY,KACZ,KAAK,UAAY,GACjB,KAAK,OAAO,GACd,KAED,CACD,IAAM,EAAU,MAAM,cAAc,CAEpC,EAAI,UAAY,EAAU,KAC1B,KAAK,aAAa,eAAgB,EAAI,GAE5C,GAEN,SAAS,GAAkB,CACnB,IAGJ,EAAS,GACT,GAAS,CACT,EAAU,OAAO,CACjB,EAAY,MAGhB,IAAM,EAAW,GAAQ,CACrB,IAAM,EAAY,MAAM,gBAAkB,EAAI,CAE9C,EAAM,UAAY,EAAU,KAC5B,GAAiB,CACjB,KAAK,aAAa,eAAgB,EAAM,EAE5C,SAAS,GAAmB,CACxB,EAAQ,mBAAmB,CAG/B,SAAS,GAAU,CACf,EAAQ,gBAAgB,CAG5B,SAAS,EAAU,EAAI,CACf,GAAa,EAAG,OAAS,EAAU,MACnC,GAAiB,CAIzB,IAAM,MAAgB,CAClB,EAAU,eAAe,OAAQ,EAAgB,CACjD,EAAU,eAAe,QAAS,EAAQ,CAC1C,EAAU,eAAe,QAAS,EAAiB,CACnD,KAAK,IAAI,QAAS,EAAQ,CAC1B,KAAK,IAAI,YAAa,EAAU,EAEpC,EAAU,KAAK,OAAQ,EAAgB,CACvC,EAAU,KAAK,QAAS,EAAQ,CAChC,EAAU,KAAK,QAAS,EAAiB,CACzC,KAAK,KAAK,QAAS,EAAQ,CAC3B,KAAK,KAAK,YAAa,EAAU,CAC7B,KAAK,UAAU,QAAQ,eAAe,GAAK,IAC3C,IAAS,eAET,KAAK,iBAAmB,CACf,GACD,EAAU,MAAM,EAErB,IAAI,CAGP,EAAU,MAAM,CAGxB,YAAY,EAAM,CACd,KAAK,UAAY,KAAK,gBAAgB,EAAK,SAAS,CACpD,MAAM,YAAY,EAAK,CAQ3B,gBAAgB,EAAU,CACtB,IAAM,EAAmB,EAAE,CAC3B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAC7B,CAAC,KAAK,WAAW,QAAQ,EAAS,GAAG,EACrC,EAAiB,KAAK,EAAS,GAAG,CAE1C,OAAO,IAsBFF,EAAb,cAA4B,EAAkB,CAC1C,YAAY,EAAK,EAAO,EAAE,CAAE,CACxB,IAAM,EAAI,OAAO,GAAQ,SAAW,EAAM,GACtC,CAAC,EAAE,YACF,EAAE,YAAc,OAAO,EAAE,WAAW,IAAO,YAC5C,EAAE,YAAc,EAAE,YAAc,CAAC,UAAW,YAAa,eAAe,EACnE,IAAK,GAAkBH,GAAmB,GAAe,CACzD,OAAQ,GAAM,CAAC,CAAC,EAAE,EAE3B,MAAM,EAAK,EAAE,GC1sBR,GAAb,cAA2B,CAAQ,CAC/B,QAAS,CACL,KAAK,QAAQ,CACR,KAAM,GAAQ,CACf,GAAI,CAAC,EAAI,GACL,OAAO,KAAK,QAAQ,mBAAoB,EAAI,OAAQ,EAAI,CAE5D,EAAI,MAAM,CAAC,KAAM,GAAS,KAAK,OAAO,EAAK,CAAC,EAC9C,CACG,MAAO,GAAQ,CAChB,KAAK,QAAQ,mBAAoB,EAAI,EACvC,CAEN,QAAQ,EAAM,EAAU,CACpB,KAAK,OAAO,EAAK,CACZ,KAAM,GAAQ,CACf,GAAI,CAAC,EAAI,GACL,OAAO,KAAK,QAAQ,oBAAqB,EAAI,OAAQ,EAAI,CAE7D,GAAU,EACZ,CACG,MAAO,GAAQ,CAChB,KAAK,QAAQ,oBAAqB,EAAI,EACxC,CAEN,OAAO,EAAM,CACT,IAAI,EACJ,IAAM,EAAS,IAAS,IAAA,GAClB,EAAU,IAAI,QAAQ,KAAK,KAAK,aAAa,CAKnD,OAJI,GACA,EAAQ,IAAI,eAAgB,2BAA2B,EAE1D,EAAK,KAAK,OAAO,aAAgB,MAAiC,EAAG,cAAc,EAAQ,CACrF,MAAM,KAAK,KAAK,CAAE,CACrB,OAAQ,EAAS,OAAS,MAC1B,KAAM,EAAS,EAAO,KACtB,UACA,YAAa,KAAK,KAAK,gBAAkB,UAAY,OACxD,CAAC,CAAC,KAAM,GAAQ,CACb,IAAIC,EAGJ,OADC,EAAK,KAAK,OAAO,aAAgB,MAAiCA,EAAG,aAAa,EAAI,QAAQ,cAAc,CAAC,CACvG,GACT,GClDcE,EAAO,SCO/B,SAAgB,GAAI,EAAK,EAAO,GAAI,EAAK,CACrC,IAAI,EAAM,EAEV,IAAc,OAAO,SAAa,KAAe,SACjD,AACI,IAAM,EAAI,SAAW,KAAO,EAAI,KAEhC,OAAO,GAAQ,WACH,EAAI,OAAO,EAAE,GAArB,MACA,AAII,EAJQ,EAAI,OAAO,EAAE,GAArB,IACM,EAAI,SAAW,EAGf,EAAI,KAAO,GAGpB,sBAAsB,KAAK,EAAI,GAChC,AACI,EADuB,IAAvB,OAIM,WAAa,EAHb,EAAI,SAAW,KAAO,GAOpC,EAAM,EAAM,EAAI,EAGf,EAAI,OACD,cAAc,KAAK,EAAI,SAAS,CAChC,EAAI,KAAO,KAEN,eAAe,KAAK,EAAI,SAAS,GACtC,EAAI,KAAO,QAGnB,EAAI,KAAO,EAAI,MAAQ,IAEvB,IAAM,EADO,EAAI,KAAK,QAAQ,IAAI,GAAK,GACI,EAAI,KAA3B,IAAM,EAAI,KAAO,IASrC,MAPA,GAAI,GAAK,EAAI,SAAW,MAAQ,EAAO,IAAM,EAAI,KAAO,EAExD,EAAI,KACA,EAAI,SACA,MACA,GACC,GAAO,EAAI,OAAS,EAAI,KAAO,GAAK,IAAM,EAAI,MAChD,ECzDX,IAAM,GAAwB,OAAO,aAAgB,WAC/C,GAAU,GACL,OAAO,YAAY,QAAW,WAC/B,YAAY,OAAO,EAAI,CACvB,EAAI,kBAAkB,YAE1B,EAAW,OAAO,UAAU,SAC5B,GAAiB,OAAO,MAAS,YAClC,OAAO,KAAS,KACb,EAAS,KAAK,KAAK,GAAK,2BAC1B,GAAiB,OAAO,MAAS,YAClC,OAAO,KAAS,KACb,EAAS,KAAK,KAAK,GAAK,2BAMhC,SAAgB,EAAS,EAAK,CAC1B,OAAS,KAA0B,aAAe,aAAe,GAAO,EAAI,GACvE,IAAkB,aAAe,MACjC,IAAkB,aAAe,KAE1C,SAAgB,EAAU,EAAK,EAAQ,CACnC,GAAI,CAAC,GAAO,OAAO,GAAQ,SACvB,MAAO,GAEX,GAAI,MAAM,QAAQ,EAAI,CAAE,CACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,OAAQ,EAAI,EAAG,IACnC,GAAI,EAAU,EAAI,GAAG,CACjB,MAAO,GAGf,MAAO,GAEX,GAAI,EAAS,EAAI,CACb,MAAO,GAEX,GAAI,EAAI,QACJ,OAAO,EAAI,QAAW,YACtB,UAAU,SAAW,EACrB,OAAO,EAAU,EAAI,QAAQ,CAAE,GAAK,CAExC,IAAK,IAAM,KAAO,EACd,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,EAAI,EAAI,EAAU,EAAI,GAAK,CACrE,MAAO,GAGf,MAAO,GCxCX,SAAgB,GAAkB,EAAQ,CACtC,IAAM,EAAU,EAAE,CACZ,EAAa,EAAO,KACpB,EAAO,EAGb,MAFA,GAAK,KAAO,EAAmB,EAAY,EAAQ,CACnD,EAAK,YAAc,EAAQ,OACpB,CAAE,OAAQ,EAAe,UAAS,CAE7C,SAAS,EAAmB,EAAM,EAAS,CACvC,GAAI,CAAC,EACD,OAAO,EACX,GAAI,EAAS,EAAK,CAAE,CAChB,IAAM,EAAc,CAAE,aAAc,GAAM,IAAK,EAAQ,OAAQ,CAE/D,OADA,EAAQ,KAAK,EAAK,CACX,UAEF,MAAM,QAAQ,EAAK,CAAE,CAC1B,IAAM,EAAc,MAAM,EAAK,OAAO,CACtC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,EAAQ,GAAK,EAAmB,EAAK,GAAI,EAAQ,CAErD,OAAO,UAEF,OAAO,GAAS,UAAY,EAAE,aAAgB,MAAO,CAC1D,IAAM,EAAU,EAAE,CAClB,IAAK,IAAM,KAAO,EACV,OAAO,UAAU,eAAe,KAAK,EAAM,EAAI,GAC/C,EAAQ,GAAO,EAAmB,EAAK,GAAM,EAAQ,EAG7D,OAAO,EAEX,OAAO,EAUX,SAAgB,GAAkB,EAAQ,EAAS,CAG/C,MAFA,GAAO,KAAO,EAAmB,EAAO,KAAM,EAAQ,CACtD,OAAO,EAAO,YACP,EAEX,SAAS,EAAmB,EAAM,EAAS,CACvC,GAAI,CAAC,EACD,OAAO,EACX,GAAI,GAAQ,EAAK,eAAiB,GAI9B,IAHqB,OAAO,EAAK,KAAQ,UACrC,EAAK,KAAO,GACZ,EAAK,IAAM,EAAQ,OAEnB,OAAO,EAAQ,EAAK,KAGpB,MAAU,MAAM,sBAAsB,SAGrC,MAAM,QAAQ,EAAK,CACxB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,EAAK,GAAK,EAAmB,EAAK,GAAI,EAAQ,SAG7C,OAAO,GAAS,aAChB,IAAM,KAAO,EACV,OAAO,UAAU,eAAe,KAAK,EAAM,EAAI,GAC/C,EAAK,GAAO,EAAmB,EAAK,GAAM,EAAQ,EAI9D,OAAO,4EC3ELC,GAAkB,CACpB,UACA,gBACA,aACA,gBACA,cACA,iBACH,CAMD,MAAa,GAAW,EACxB,IAAW,GACV,SAAU,EAAY,CACnB,EAAW,EAAW,QAAa,GAAK,UACxC,EAAW,EAAW,WAAgB,GAAK,aAC3C,EAAW,EAAW,MAAW,GAAK,QACtC,EAAW,EAAW,IAAS,GAAK,MACpC,EAAW,EAAW,cAAmB,GAAK,gBAC9C,EAAW,EAAW,aAAkB,GAAK,eAC7C,EAAW,EAAW,WAAgB,GAAK,eAC5C,AAAe,IAAa,EAAE,CAAE,CAInC,IAAa,GAAb,KAAqB,CAMjB,YAAY,EAAU,CAClB,KAAK,SAAW,EAQpB,OAAO,EAAK,CAaR,OAZI,EAAI,OAAS,EAAW,OAAS,EAAI,OAAS,EAAW,MACrD,EAAU,EAAI,CACP,KAAK,eAAe,CACvB,KAAM,EAAI,OAAS,EAAW,MACxB,EAAW,aACX,EAAW,WACjB,IAAK,EAAI,IACT,KAAM,EAAI,KACV,GAAI,EAAI,GACX,CAAC,CAGH,CAAC,KAAK,eAAe,EAAI,CAAC,CAKrC,eAAe,EAAK,CAEhB,IAAI,EAAM,GAAK,EAAI,KAmBnB,OAjBI,EAAI,OAAS,EAAW,cACxB,EAAI,OAAS,EAAW,cACxB,GAAO,EAAI,YAAc,KAIzB,EAAI,KAAe,EAAI,MAAZ,MACX,GAAO,EAAI,IAAM,KAGT,EAAI,IAAZ,OACA,GAAO,EAAI,IAGH,EAAI,MAAZ,OACA,GAAO,KAAK,UAAU,EAAI,KAAM,KAAK,SAAS,EAE3C,EAOX,eAAe,EAAK,CAChB,IAAM,EAAiB,GAAkB,EAAI,CACvC,EAAO,KAAK,eAAe,EAAe,OAAO,CACjD,EAAU,EAAe,QAE/B,OADA,EAAQ,QAAQ,EAAK,CACd,IAIf,SAAS,EAAS,EAAO,CACrB,OAAO,OAAO,UAAU,SAAS,KAAKC,EAAM,GAAK,kBAOrD,IAAa,GAAb,MAAa,UAAgB,CAAQ,CAMjC,YAAY,EAAS,CACjB,OAAO,CACP,KAAK,QAAU,EAOnB,IAAI,EAAK,CACL,IAAI,EACJ,GAAI,OAAO,GAAQ,SAAU,CACzB,GAAI,KAAK,cACL,MAAU,MAAM,kDAAkD,CAEtE,EAAS,KAAK,aAAa,EAAI,CAC/B,IAAM,EAAgB,EAAO,OAAS,EAAW,aAC7C,GAAiB,EAAO,OAAS,EAAW,YAC5C,EAAO,KAAO,EAAgB,EAAW,MAAQ,EAAW,IAE5D,KAAK,cAAgB,IAAI,GAAoB,EAAO,CAEhD,EAAO,cAAgB,GACvB,MAAM,aAAa,UAAW,EAAO,EAKzC,MAAM,aAAa,UAAW,EAAO,SAGpC,EAAS,EAAI,EAAI,EAAI,OAE1B,GAAK,KAAK,cAIN,EAAS,KAAK,cAAc,eAAe,EAAI,CAC3C,IAEA,KAAK,cAAgB,KACrB,MAAM,aAAa,UAAW,EAAO,OAPzC,MAAU,MAAM,mDAAmD,MAYvE,MAAU,MAAM,iBAAmB,EAAI,CAS/C,aAAa,EAAK,CACd,IAAI,EAAI,EAEF,EAAI,CACN,KAAM,OAAO,EAAI,OAAO,EAAE,CAAC,CAC9B,CACD,GAAI,EAAW,EAAE,QAAU,IAAA,GACvB,MAAU,MAAM,uBAAyB,EAAE,KAAK,CAGpD,GAAI,EAAE,OAAS,EAAW,cACtB,EAAE,OAAS,EAAW,WAAY,CAClC,IAAM,EAAQ,EAAI,EAClB,KAAO,EAAI,OAAO,EAAE,EAAE,GAAK,KAAO,GAAK,EAAI,SAC3C,IAAM,EAAM,EAAI,UAAU,EAAO,EAAE,CACnC,GAAI,GAAO,OAAO,EAAI,EAAI,EAAI,OAAO,EAAE,GAAK,IACxC,MAAU,MAAM,sBAAsB,CAE1C,EAAE,YAAc,OAAO,EAAI,CAG/B,GAAY,EAAI,OAAO,EAAI,EAAE,GAAzB,IAA2B,CAC3B,IAAM,EAAQ,EAAI,EAClB,KAAO,EAAE,GAID,EAHM,EAAI,OAAO,EAAE,GACnB,KAEA,IAAM,EAAI,UAGlB,EAAE,IAAM,EAAI,UAAU,EAAO,EAAE,MAG/B,EAAE,IAAM,IAGZ,IAAM,EAAO,EAAI,OAAO,EAAI,EAAE,CAC9B,GAAW,IAAP,IAAe,OAAO,EAAK,EAAI,EAAM,CACrC,IAAM,EAAQ,EAAI,EAClB,KAAO,EAAE,GAAG,CACR,IAAM,EAAI,EAAI,OAAO,EAAE,CACvB,GAAY,GAAR,MAAa,OAAO,EAAE,EAAI,EAAG,CAC7B,EAAE,EACF,MAEJ,GAAI,IAAM,EAAI,OACV,MAER,EAAE,GAAK,OAAO,EAAI,UAAU,EAAO,EAAI,EAAE,CAAC,CAG9C,GAAI,EAAI,OAAO,EAAE,EAAE,CAAE,CACjB,IAAM,EAAU,KAAK,SAAS,EAAI,OAAO,EAAE,CAAC,CAC5C,GAAI,EAAQ,eAAe,EAAE,KAAM,EAAQ,CACvC,EAAE,KAAO,OAGT,MAAU,MAAM,kBAAkB,CAG1C,OAAO,EAEX,SAAS,EAAK,CACV,GAAI,CACA,OAAO,KAAK,MAAM,EAAK,KAAK,QAAQ,MAE9B,CACN,MAAO,IAGf,OAAO,eAAe,EAAM,EAAS,CACjC,OAAQ,EAAR,CACI,KAAK,EAAW,QACZ,OAAO,EAAS,EAAQ,CAC5B,KAAK,EAAW,WACZ,OAAO,IAAY,IAAA,GACvB,KAAK,EAAW,cACZ,OAAO,OAAO,GAAY,UAAY,EAAS,EAAQ,CAC3D,KAAK,EAAW,MAChB,KAAK,EAAW,aACZ,OAAQ,MAAM,QAAQ,EAAQ,GACzB,OAAO,EAAQ,IAAO,UAClB,OAAO,EAAQ,IAAO,UACnBD,GAAgB,QAAQ,EAAQ,GAAG,GAAK,IACxD,KAAK,EAAW,IAChB,KAAK,EAAW,WACZ,OAAO,MAAM,QAAQ,EAAQ,EAMzC,SAAU,CACN,AAEI,KAAK,iBADL,KAAK,cAAc,wBAAwB,CACtB,QAY3B,GAAN,KAA0B,CACtB,YAAY,EAAQ,CAChB,KAAK,OAAS,EACd,KAAK,QAAU,EAAE,CACjB,KAAK,UAAY,EAUrB,eAAe,EAAS,CAEpB,GADA,KAAK,QAAQ,KAAK,EAAQ,CACtB,KAAK,QAAQ,SAAW,KAAK,UAAU,YAAa,CAEpD,IAAM,EAAS,GAAkB,KAAK,UAAW,KAAK,QAAQ,CAE9D,OADA,KAAK,wBAAwB,CACtB,EAEX,OAAO,KAKX,wBAAyB,CACrB,KAAK,UAAY,KACjB,KAAK,QAAU,EAAE,GCpTzB,SAAgB,EAAG,EAAK,EAAI,EAAI,CAE5B,OADA,EAAI,GAAG,EAAI,EAAG,CACP,UAAsB,CACzB,EAAI,IAAI,EAAI,EAAG,ECIvB,IAAM,GAAkB,OAAO,OAAO,CAClC,QAAS,EACT,cAAe,EACf,WAAY,EACZ,cAAe,EAEf,YAAa,EACb,eAAgB,EACnB,CAAC,CAyBW,EAAb,cAA4B,CAAQ,CAIhC,YAAY,EAAI,EAAK,EAAM,CACvB,OAAO,CAeP,KAAK,UAAY,GAKjB,KAAK,UAAY,GAIjB,KAAK,cAAgB,EAAE,CAIvB,KAAK,WAAa,EAAE,CAOpB,KAAK,OAAS,EAAE,CAKhB,KAAK,UAAY,EACjB,KAAK,IAAM,EAwBX,KAAK,KAAO,EAAE,CACd,KAAK,MAAQ,EAAE,CACf,KAAK,GAAK,EACV,KAAK,IAAM,EACP,GAAQ,EAAK,OACb,KAAK,KAAO,EAAK,MAErB,KAAK,MAAQ,OAAO,OAAO,EAAE,CAAE,EAAK,CAChC,KAAK,GAAG,cACR,KAAK,MAAM,CAgBnB,IAAI,cAAe,CACf,MAAO,CAAC,KAAK,UAOjB,WAAY,CACR,GAAI,KAAK,KACL,OACJ,IAAM,EAAK,KAAK,GAChB,KAAK,KAAO,CACR,EAAG,EAAI,OAAQ,KAAK,OAAO,KAAK,KAAK,CAAC,CACtC,EAAG,EAAI,SAAU,KAAK,SAAS,KAAK,KAAK,CAAC,CAC1C,EAAG,EAAI,QAAS,KAAK,QAAQ,KAAK,KAAK,CAAC,CACxC,EAAG,EAAI,QAAS,KAAK,QAAQ,KAAK,KAAK,CAAA,CAC1C,CAmBL,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAYlB,SAAU,CAQN,OAPI,KAAK,UACE,MACX,KAAK,WAAW,CACX,KAAK,GAAG,eACT,KAAK,GAAG,MAAM,CACH,KAAK,GAAG,cAAnB,QACA,KAAK,QAAQ,CACV,MAKX,MAAO,CACH,OAAO,KAAK,SAAS,CAiBzB,KAAK,GAAG,EAAM,CAGV,OAFA,EAAK,QAAQ,UAAU,CACvB,KAAK,KAAK,MAAM,KAAM,EAAK,CACpB,KAmBX,KAAK,EAAI,GAAG,EAAM,CAEd,GAAI,GAAgB,eAAe,EAAG,CAClC,MAAU,MAAM,IAAM,EAAG,UAAU,CAAG,6BAA6B,CAGvE,GADA,EAAK,QAAQ,EAAG,CACZ,KAAK,MAAM,SAAW,CAAC,KAAK,MAAM,WAAa,CAAC,KAAK,MAAM,SAE3D,OADA,KAAK,YAAY,EAAK,CACf,KAEX,IAAM,EAAS,CACX,KAAM,EAAW,MACjB,KAAM,EACT,CAID,GAHA,EAAO,QAAU,EAAE,CACnB,EAAO,QAAQ,SAAW,KAAK,MAAM,WAAa,GAE/B,OAAO,EAAK,EAAK,OAAS,IAAzC,WAA6C,CAC7C,IAAM,EAAK,KAAK,MACV,EAAM,EAAK,KAAK,CACtB,KAAK,qBAAqB,EAAI,EAAI,CAClC,EAAO,GAAK,EAEhB,IAAM,EAAkC,KAAK,GAAG,QAAgD,WAAmD,SAC7I,EAAc,KAAK,WAAa,CAAQ,KAAK,GAAG,QAAgD,iBAAiB,CAYvH,OAXsB,KAAK,MAAM,UAAY,CAAC,IAGrC,GACL,KAAK,wBAAwB,EAAO,CACpC,KAAK,OAAO,EAAO,EAGnB,KAAK,WAAW,KAAK,EAAO,EAEhC,KAAK,MAAQ,EAAE,CACR,KAKX,qBAAqB,EAAI,EAAK,CAE1B,IAAM,EAAgB,KAAK,MAAM,SAA0C,KAAK,MAAM,WACtF,GAAI,IAAY,IAAA,GAAW,CACvB,KAAK,KAAK,GAAM,EAChB,OAGJ,IAAM,EAAQ,KAAK,GAAG,iBAAmB,CACrC,OAAO,KAAK,KAAK,GACjB,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,WAAW,OAAQ,IACpC,KAAK,WAAW,GAAG,KAAO,GAC1B,KAAK,WAAW,OAAO,EAAG,EAAE,CAGpC,EAAI,KAAK,KAAU,MAAM,0BAA0B,CAAC,EACrD,EAAQ,CACL,GAAM,GAAG,IAAS,CAEpB,KAAK,GAAG,eAAe,EAAM,CAC7B,EAAI,MAAM,KAAM,EAAK,EAEzB,EAAG,UAAY,GACf,KAAK,KAAK,GAAM,EAkBpB,YAAY,EAAI,GAAG,EAAM,CACrB,OAAO,IAAI,SAAS,EAAS,IAAW,CACpC,IAAM,GAAM,EAAM,IACP,EAAO,EAAO,EAAK,CAAG,EAAQ,EAAK,CAE9C,EAAG,UAAY,GACf,EAAK,KAAK,EAAG,CACb,KAAK,KAAK,EAAI,GAAG,EAAK,EACxB,CAON,YAAY,EAAM,CACd,IAAI,EACA,OAAO,EAAK,EAAK,OAAS,IAAO,aACjC,EAAM,EAAK,KAAK,EAEpB,IAAM,EAAS,CACX,GAAI,KAAK,YACT,SAAU,EACV,QAAS,GACT,OACA,MAAO,OAAO,OAAO,CAAE,UAAW,GAAM,CAAE,KAAK,MAAA,CAClD,CACD,EAAK,MAAM,EAAK,GAAG,IAAiB,CAC5B,OAAW,KAAK,OAAO,GAoB3B,OAhBiB,IAAQ,MAUrB,KAAK,OAAO,OAAO,CACf,GACA,EAAI,KAAM,GAAG,EAAa,EAV1B,EAAO,SAAW,KAAK,MAAM,UAC7B,KAAK,OAAO,OAAO,CACf,GACA,EAAI,EAAI,EAUpB,EAAO,QAAU,GACV,KAAK,aAAa,EAC3B,CACF,KAAK,OAAO,KAAK,EAAO,CACxB,KAAK,aAAa,CAQtB,YAAY,EAAQ,GAAO,CACvB,GAAI,CAAC,KAAK,WAAa,KAAK,OAAO,SAAW,EAC1C,OAEJ,IAAM,EAAS,KAAK,OAAO,GACvB,EAAO,SAAW,CAAC,IAGvB,EAAO,QAAU,GACjB,EAAO,WACP,KAAK,MAAQ,EAAO,MACpB,KAAK,KAAK,MAAM,KAAM,EAAO,KAAK,EAQtC,OAAO,EAAQ,CACX,EAAO,IAAM,KAAK,IAClB,KAAK,GAAG,QAAQ,EAAO,CAO3B,QAAS,CACD,OAAO,KAAK,MAAQ,WACpB,KAAK,KAAM,GAAS,CAChB,KAAK,mBAAmB,EAAK,EAC/B,CAGF,KAAK,mBAAmB,KAAK,KAAK,CAS1C,mBAAmB,EAAM,CACrB,KAAK,OAAO,CACR,KAAM,EAAW,QACjB,KAAM,KAAK,KACL,OAAO,OAAO,CAAE,IAAK,KAAK,KAAM,OAAQ,KAAK,YAAa,CAAE,EAAK,CACjE,EACT,CAAC,CAQN,QAAQ,EAAK,CACJ,KAAK,WACN,KAAK,aAAa,gBAAiB,EAAI,CAU/C,QAAQ,EAAQ,EAAa,CACzB,KAAK,UAAY,GACjB,OAAO,KAAK,GACZ,KAAK,aAAa,aAAc,EAAQ,EAAY,CACpD,KAAK,YAAY,CAQrB,YAAa,CACT,OAAO,KAAK,KAAK,KAAK,CAAC,QAAS,GAAO,CAEnC,GAAI,CADe,KAAK,WAAW,KAAM,GAAW,OAAO,EAAO,GAAG,GAAK,EAAG,CAC5D,CAEb,IAAM,EAAM,KAAK,KAAK,GACtB,OAAO,KAAK,KAAK,GACb,EAAI,WACJ,EAAI,KAAK,KAAU,MAAM,+BAA+B,CAAC,GAGnE,CAQN,SAAS,EAAQ,CACS,KAAO,MAAQ,KAAK,IAG1C,OAAQ,EAAO,KAAf,CACI,KAAK,EAAW,QACR,EAAO,MAAQ,EAAO,KAAK,IAC3B,KAAK,UAAU,EAAO,KAAK,IAAK,EAAO,KAAK,IAAI,CAGhD,KAAK,aAAa,gBAAqB,MAAM,4LAA4L,CAAC,CAE9O,MACJ,KAAK,EAAW,MAChB,KAAK,EAAW,aACZ,KAAK,QAAQ,EAAO,CACpB,MACJ,KAAK,EAAW,IAChB,KAAK,EAAW,WACZ,KAAK,MAAM,EAAO,CAClB,MACJ,KAAK,EAAW,WACZ,KAAK,cAAc,CACnB,MACJ,KAAK,EAAW,cACZ,KAAK,SAAS,CACd,IAAM,EAAU,MAAM,EAAO,KAAK,QAAQ,CAE1C,EAAI,KAAO,EAAO,KAAK,KACvB,KAAK,aAAa,gBAAiB,EAAI,CACvC,OASZ,QAAQ,EAAQ,CACZ,IAAM,EAAO,EAAO,MAAQ,EAAE,CAClB,EAAO,IAAf,MACA,EAAK,KAAK,KAAK,IAAI,EAAO,GAAG,CAAC,CAE9B,KAAK,UACL,KAAK,UAAU,EAAK,CAGpB,KAAK,cAAc,KAAK,OAAO,OAAO,EAAK,CAAC,CAGpD,UAAU,EAAM,CACZ,GAAI,KAAK,eAAiB,KAAK,cAAc,OAAQ,CACjD,IAAM,EAAY,KAAK,cAAc,OAAO,CAC5C,IAAK,IAAM,KAAY,EACnB,EAAS,MAAM,KAAM,EAAK,CAGlC,MAAM,KAAK,MAAM,KAAM,EAAK,CACxB,KAAK,MAAQ,EAAK,QAAU,OAAO,EAAK,EAAK,OAAS,IAAO,WAC7D,KAAK,YAAc,EAAK,EAAK,OAAS,IAQ9C,IAAI,EAAI,CACJ,IAAMK,EAAO,KACT,EAAO,GACX,OAAO,SAAU,GAAG,EAAM,CAElB,IAEJ,EAAO,GACP,EAAK,OAAO,CACR,KAAM,EAAW,IACb,KACJ,KAAM,EACT,CAAC,GASV,MAAM,EAAQ,CACV,IAAM,EAAM,KAAK,KAAK,EAAO,IACzB,OAAO,GAAQ,aAGnB,OAAO,KAAK,KAAK,EAAO,IAEpB,EAAI,WACJ,EAAO,KAAK,QAAQ,KAAK,CAG7B,EAAI,MAAM,KAAM,EAAO,KAAK,EAOhC,UAAU,EAAI,EAAK,CACf,KAAK,GAAK,EACV,KAAK,UAAY,GAAO,KAAK,OAAS,EACtC,KAAK,KAAO,EACZ,KAAK,UAAY,GACjB,KAAK,cAAc,CACnB,KAAK,aAAa,UAAU,CAC5B,KAAK,YAAY,GAAK,CAO1B,cAAe,CACX,KAAK,cAAc,QAAS,GAAS,KAAK,UAAU,EAAK,CAAC,CAC1D,KAAK,cAAgB,EAAE,CACvB,KAAK,WAAW,QAAS,GAAW,CAChC,KAAK,wBAAwB,EAAO,CACpC,KAAK,OAAO,EAAO,EACrB,CACF,KAAK,WAAa,EAAE,CAOxB,cAAe,CACX,KAAK,SAAS,CACd,KAAK,QAAQ,uBAAuB,CASxC,SAAU,CACN,AAGI,KAAK,QADL,KAAK,KAAK,QAAS,GAAe,GAAY,CAAC,CACnC,IAAA,IAEhB,KAAK,GAAG,SAAY,KAAK,CAkB7B,YAAa,CAUT,OATI,KAAK,WACL,KAAK,OAAO,CAAE,KAAM,EAAW,WAAY,CAAC,CAGhD,KAAK,SAAS,CACV,KAAK,WAEL,KAAK,QAAQ,uBAAuB,CAEjC,KAOX,OAAQ,CACJ,OAAO,KAAK,YAAY,CAW5B,SAAS,EAAU,CAEf,MADA,MAAK,MAAM,SAAW,EACf,KAWX,IAAI,UAAW,CAEX,MADA,MAAK,MAAM,SAAW,GACf,KAeX,QAAQ,EAAS,CAEb,MADA,MAAK,MAAM,QAAU,EACd,KAaX,MAAM,EAAU,CAGZ,MAFA,MAAK,cAAgB,KAAK,eAAiB,EAAE,CAC7C,KAAK,cAAc,KAAK,EAAS,CAC1B,KAaX,WAAW,EAAU,CAGjB,MAFA,MAAK,cAAgB,KAAK,eAAiB,EAAE,CAC7C,KAAK,cAAc,QAAQ,EAAS,CAC7B,KAoBX,OAAO,EAAU,CACb,GAAI,CAAC,KAAK,cACN,OAAO,KAEX,GAAI,EAAU,CACV,IAAM,EAAY,KAAK,cACvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,GAAI,IAAa,EAAU,GAEvB,OADA,EAAU,OAAO,EAAG,EAAE,CACf,UAKf,KAAK,cAAgB,EAAE,CAE3B,OAAO,KAMX,cAAe,CACX,OAAO,KAAK,eAAiB,EAAE,CAenC,cAAc,EAAU,CAGpB,MAFA,MAAK,sBAAwB,KAAK,uBAAyB,EAAE,CAC7D,KAAK,sBAAsB,KAAK,EAAS,CAClC,KAeX,mBAAmB,EAAU,CAGzB,MAFA,MAAK,sBAAwB,KAAK,uBAAyB,EAAE,CAC7D,KAAK,sBAAsB,QAAQ,EAAS,CACrC,KAoBX,eAAe,EAAU,CACrB,GAAI,CAAC,KAAK,sBACN,OAAO,KAEX,GAAI,EAAU,CACV,IAAM,EAAY,KAAK,sBACvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IAClC,GAAI,IAAa,EAAU,GAEvB,OADA,EAAU,OAAO,EAAG,EAAE,CACf,UAKf,KAAK,sBAAwB,EAAE,CAEnC,OAAO,KAMX,sBAAuB,CACnB,OAAO,KAAK,uBAAyB,EAAE,CAS3C,wBAAwB,EAAQ,CAC5B,GAAI,KAAK,uBAAyB,KAAK,sBAAsB,OAAQ,CACjE,IAAM,EAAY,KAAK,sBAAsB,OAAO,CACpD,IAAK,IAAM,KAAY,EACnB,EAAS,MAAM,KAAM,EAAO,KAAK,ICl2BjD,SAAgB,EAAQ,EAAM,CAC1B,IAAe,EAAE,CACjB,KAAK,GAAK,EAAK,KAAO,IACtB,KAAK,IAAM,EAAK,KAAO,IACvB,KAAK,OAAS,EAAK,QAAU,EAC7B,KAAK,OAAS,EAAK,OAAS,GAAK,EAAK,QAAU,EAAI,EAAK,OAAS,EAClE,KAAK,SAAW,EAQpB,EAAQ,UAAU,SAAW,UAAY,CACrC,IAAI,EAAK,KAAK,GAAc,KAAK,UAAQ,KAAK,WAC9C,GAAI,KAAK,OAAQ,CACb,IAAI,EAAO,KAAK,QAAQ,CACpB,EAAY,KAAK,MAAM,EAAO,KAAK,OAAS,EAAG,CACnD,EAAM,KAAK,MAAM,EAAO,GAAG,CAAG,EAA2B,EAAK,EAAtB,EAAK,EAEjD,OAAO,KAAK,IAAI,EAAI,KAAK,IAAI,CAAG,GAOpC,EAAQ,UAAU,MAAQ,UAAY,CAClC,KAAK,SAAW,GAOpB,EAAQ,UAAU,OAAS,SAAU,EAAK,CACtC,KAAK,GAAK,GAOd,EAAQ,UAAU,OAAS,SAAU,EAAK,CACtC,KAAK,IAAM,GAOf,EAAQ,UAAU,UAAY,SAAU,EAAQ,CAC5C,KAAK,OAAS,GC1DlB,IAAa,EAAb,cAA6B,CAAQ,CACjC,YAAY,EAAK,EAAM,CAEnB,OAAO,CACP,KAAK,KAAO,EAAE,CACd,KAAK,KAAO,EAAE,CACV,GAAoB,OAAO,GAApB,WACP,EAAO,EACP,EAAM,IAAA,IAEV,IAAe,EAAE,CACjB,EAAK,KAAO,EAAK,MAAQ,aACzB,KAAK,KAAO,EACZ,EAAsB,KAAM,EAAK,CACjC,KAAK,aAAa,EAAK,eAAiB,GAAM,CAC9C,KAAK,qBAAqB,EAAK,sBAAwB,IAAS,CAChE,KAAK,kBAAkB,EAAK,mBAAqB,IAAK,CACtD,KAAK,qBAAqB,EAAK,sBAAwB,IAAK,CAC5D,KAAK,oBAA0B,EAAK,qBAAsD,GAAI,CAC9F,KAAK,QAAU,IAAI,EAAQ,CACvB,IAAK,KAAK,mBAAmB,CAC7B,IAAK,KAAK,sBAAsB,CAChC,OAAQ,KAAK,qBAAA,CAChB,CAAC,CACF,KAAK,QAAgB,EAAK,SAAb,KAAuB,IAAQ,EAAK,QAAQ,CACzD,KAAK,YAAc,SACnB,KAAK,IAAM,EACX,IAAM,EAAU,EAAK,QAAUF,GAC/B,KAAK,QAAU,IAAI,EAAQ,QAC3B,KAAK,QAAU,IAAI,EAAQ,QAC3B,KAAK,aAAe,EAAK,cAAgB,GACrC,KAAK,cACL,KAAK,MAAM,CAEnB,aAAa,EAAG,CAOZ,OANK,UAAU,QAEf,KAAK,cAAgB,CAAC,CAAC,EAClB,IACD,KAAK,cAAgB,IAElB,MALI,KAAK,cAOpB,qBAAqB,EAAG,CAIpB,OAHI,IAAM,IAAA,GACC,KAAK,uBAChB,KAAK,sBAAwB,EACtB,MAEX,kBAAkB,EAAG,CACjB,IAAI,EAKJ,OAJI,IAAM,IAAA,GACC,KAAK,oBAChB,KAAK,mBAAqB,GACzB,EAAK,KAAK,UAAa,MAAiC,EAAG,OAAO,EAAE,CAC9D,MAEX,oBAAoB,EAAG,CACnB,IAAI,EAKJ,OAJI,IAAM,IAAA,GACC,KAAK,sBAChB,KAAK,qBAAuB,GAC3B,EAAK,KAAK,UAAa,MAAiC,EAAG,UAAU,EAAE,CACjE,MAEX,qBAAqB,EAAG,CACpB,IAAI,EAKJ,OAJI,IAAM,IAAA,GACC,KAAK,uBAChB,KAAK,sBAAwB,GAC5B,EAAK,KAAK,UAAa,MAAiC,EAAG,OAAO,EAAE,CAC9D,MAEX,QAAQ,EAAG,CAIP,OAHK,UAAU,QAEf,KAAK,SAAW,EACT,MAFI,KAAK,SAUpB,sBAAuB,CAEf,CAAC,KAAK,eACN,KAAK,eACL,KAAK,QAAQ,WAAa,GAE1B,KAAK,WAAW,CAUxB,KAAK,EAAI,CACL,GAAI,CAAC,KAAK,YAAY,QAAQ,OAAO,CACjC,OAAO,KACX,KAAK,OAAS,IAAIC,EAAO,KAAK,IAAK,KAAK,KAAK,CAC7C,IAAM,EAAS,KAAK,OACdC,EAAO,KACb,KAAK,YAAc,UACnB,KAAK,cAAgB,GAErB,IAAM,EAAiB,EAAG,EAAQ,OAAQ,UAAY,CAClD,EAAK,QAAQ,CACb,GAAM,GAAI,EACZ,CACI,EAAW,GAAQ,CACrB,KAAK,SAAS,CACd,KAAK,YAAc,SACnB,KAAK,aAAa,QAAS,EAAI,CAC3B,EACA,EAAG,EAAI,CAIP,KAAK,sBAAsB,EAI7B,EAAW,EAAG,EAAQ,QAAS,EAAQ,CAC7C,GAAI,KAAU,KAAK,SAAU,CACzB,IAAM,EAAU,KAAK,SAEf,EAAQ,KAAK,iBAAmB,CAClC,GAAgB,CAChB,EAAY,MAAM,UAAU,CAAC,CAC7B,EAAO,OAAO,EACf,EAAQ,CACP,KAAK,KAAK,WACV,EAAM,OAAO,CAEjB,KAAK,KAAK,SAAW,CACjB,KAAK,eAAe,EAAM,EAC5B,CAIN,OAFA,KAAK,KAAK,KAAK,EAAe,CAC9B,KAAK,KAAK,KAAK,EAAS,CACjB,KAQX,QAAQ,EAAI,CACR,OAAO,KAAK,KAAK,EAAG,CAOxB,QAAS,CAEL,KAAK,SAAS,CAEd,KAAK,YAAc,OACnB,KAAK,aAAa,OAAO,CAEzB,IAAM,EAAS,KAAK,OACpB,KAAK,KAAK,KAAK,EAAG,EAAQ,OAAQ,KAAK,OAAO,KAAK,KAAK,CAAC,CAAE,EAAG,EAAQ,OAAQ,KAAK,OAAO,KAAK,KAAK,CAAC,CAAE,EAAG,EAAQ,QAAS,KAAK,QAAQ,KAAK,KAAK,CAAC,CAAE,EAAG,EAAQ,QAAS,KAAK,QAAQ,KAAK,KAAK,CAAC,CAEjM,EAAG,KAAK,QAAS,UAAW,KAAK,UAAU,KAAK,KAAK,CAAC,CAAC,CAO3D,QAAS,CACL,KAAK,aAAa,OAAO,CAO7B,OAAO,EAAM,CACT,GAAI,CACA,KAAK,QAAQ,IAAI,EAAK,OAEnB,EAAG,CACN,KAAK,QAAQ,cAAe,EAAE,EAQtC,UAAU,EAAQ,CAEd,MAAe,CACX,KAAK,aAAa,SAAU,EAAO,EACpC,KAAK,aAAa,CAOzB,QAAQ,EAAK,CACT,KAAK,aAAa,QAAS,EAAI,CAQnC,OAAO,EAAK,EAAM,CACd,IAAI,EAAS,KAAK,KAAK,GAQvB,OAPK,EAII,KAAK,cAAgB,CAAC,EAAO,QAClC,EAAO,SAAS,EAJhB,EAAS,IAAI,EAAO,KAAM,EAAK,EAAK,CACpC,KAAK,KAAK,GAAO,GAKd,EAQX,SAAS,EAAQ,CACb,IAAM,EAAO,OAAO,KAAK,KAAK,KAAK,CACnC,IAAK,IAAM,KAAO,EAEd,GADe,KAAK,KAAK,GACd,OACP,OAGR,KAAK,QAAQ,CAQjB,QAAQ,EAAQ,CACZ,IAAM,EAAiB,KAAK,QAAQ,OAAO,EAAO,CAClD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAe,OAAQ,IACvC,KAAK,OAAO,MAAM,EAAe,GAAI,EAAO,QAAQ,CAQ5D,SAAU,CACN,KAAK,KAAK,QAAS,GAAe,GAAY,CAAC,CAC/C,KAAK,KAAK,OAAS,EACnB,KAAK,QAAQ,SAAS,CAO1B,QAAS,CACL,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,QAAQ,eAAe,CAOhC,YAAa,CACT,OAAO,KAAK,QAAQ,CAWxB,QAAQ,EAAQ,EAAa,CACzB,IAAI,EACJ,KAAK,SAAS,EACb,EAAK,KAAK,SAAY,MAAiC,EAAG,OAAO,CAClE,KAAK,QAAQ,OAAO,CACpB,KAAK,YAAc,SACnB,KAAK,aAAa,QAAS,EAAQ,EAAY,CAC3C,KAAK,eAAiB,CAAC,KAAK,eAC5B,KAAK,WAAW,CAQxB,WAAY,CACR,GAAI,KAAK,eAAiB,KAAK,cAC3B,OAAO,KACX,IAAMA,EAAO,KACb,GAAI,KAAK,QAAQ,UAAY,KAAK,sBAC9B,KAAK,QAAQ,OAAO,CACpB,KAAK,aAAa,mBAAmB,CACrC,KAAK,cAAgB,OAEpB,CACD,IAAM,EAAQ,KAAK,QAAQ,UAAU,CACrC,KAAK,cAAgB,GACrB,IAAM,EAAQ,KAAK,iBAAmB,CAC9BA,EAAK,gBAET,KAAK,aAAa,oBAAqBA,EAAK,QAAQ,SAAS,CAEzDA,GAAK,eAET,EAAK,KAAM,GAAQ,CACX,GACA,EAAK,cAAgB,GACrB,EAAK,WAAW,CAChB,KAAK,aAAa,kBAAmB,EAAI,EAGzC,EAAK,aAAa,EAExB,GACH,EAAM,CACL,KAAK,KAAK,WACV,EAAM,OAAO,CAEjB,KAAK,KAAK,SAAW,CACjB,KAAK,eAAe,EAAM,EAC5B,EAQV,aAAc,CACV,IAAM,EAAU,KAAK,QAAQ,SAC7B,KAAK,cAAgB,GACrB,KAAK,QAAQ,OAAO,CACpB,KAAK,aAAa,YAAa,EAAQ,GCtWzC,EAAQ,EAAE,CAChB,SAAS,EAAO,EAAK,EAAM,CACnB,OAAO,GAAQ,WACf,EAAO,EACP,EAAM,IAAA,IAEV,IAAe,EAAE,CACjB,IAAM,EAAS,GAAI,EAAK,EAAK,MAAQ,aAAa,CAC5C,EAAS,EAAO,OAChB,EAAK,EAAO,GACZ,EAAO,EAAO,KACd,EAAgB,EAAM,IAAO,KAAQ,EAAM,GAAI,KAC/C,EAAgB,EAAK,UACvB,EAAK,yBACL,KAAU,EAAK,WACf,EACA,EAaJ,OAZI,EACA,EAAK,IAAI,EAAQ,EAAQ,EAAK,EAGzB,EAAM,KACP,EAAM,GAAM,IAAI,EAAQ,EAAQ,EAAK,EAEzC,EAAK,EAAM,IAEX,EAAO,OAAS,CAAC,EAAK,QACtB,EAAK,MAAQ,EAAO,UAEjB,EAAG,OAAO,EAAO,KAAM,EAAK,CAIvC,OAAO,OAAO,EAAQ,CAClB,UACA,SACA,GAAI,EACJ,QAAS,EACZ,CAAC"}