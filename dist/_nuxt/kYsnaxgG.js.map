{"version":3,"mappings":";wVAOA,SAAgB,EAAK,EAAO,CAC1B,GAAI,EACF,MAAM,0BCPV,IAAI,EAAS,OAAO,UAAU,eAC1B,EAAQ,OAAO,UAAU,SACzB,EAAiB,OAAO,eACxB,EAAO,OAAO,yBAEd,EAAU,SAAiB,EAAK,CAKnC,OAJI,OAAO,MAAM,SAAY,WACrB,MAAM,QAAQ,EAAI,CAGnB,EAAM,KAAK,EAAI,GAAK,kBAGxBA,EAAgB,SAAuB,EAAK,CAC/C,GAAI,CAAC,GAAO,EAAM,KAAK,EAAI,GAAK,kBAC/B,MAAO,GAGR,IAAI,EAAoB,EAAO,KAAK,EAAK,cAAc,CACnD,EAAmB,EAAI,aAAe,EAAI,YAAY,WAAa,EAAO,KAAK,EAAI,YAAY,UAAW,gBAAgB,CAE9H,GAAI,EAAI,aAAe,CAAC,GAAqB,CAAC,EAC7C,MAAO,GAMR,IADA,IAAI,KACQ,GAEZ,OAAc,IAAQ,QAAe,EAAO,KAAK,EAAK,EAAI,EAIvD,EAAc,SAAqB,EAAQ,EAAS,CACnD,GAAkB,EAAQ,OAAS,YACtC,EAAe,EAAQ,EAAQ,KAAM,CACpC,WAAY,GACZ,aAAc,GACd,MAAO,EAAQ,SACf,SAAU,GACV,CAAC,CAEF,EAAO,EAAQ,MAAQ,EAAQ,UAK7B,EAAc,SAAqB,EAAK,EAAM,CACjD,GAAI,IAAS,eACP,EAAO,KAAK,EAAK,EAAK,KAEhB,EAGV,OAAO,EAAK,EAAK,EAAK,CAAC,WAJvB,OAQF,OAAO,EAAI,IAGZ,EAAO,QAAU,SAASC,GAAS,CAClC,IAAI,EAAS,EAAM,EAAK,EAAM,EAAa,EACvC,EAAS,UAAU,GACnB,EAAI,EACJ,EAAS,UAAU,OACnB,EAAO,GAaX,IAVI,OAAO,GAAW,YACrB,EAAO,EACP,EAAS,UAAU,IAAM,EAAE,CAE3B,EAAI,IAED,GAAU,MAAS,OAAO,GAAW,UAAY,OAAO,GAAW,cACtE,EAAS,EAAE,EAGL,EAAI,EAAQ,EAAE,EAGpB,GAFA,EAAU,UAAU,GAEhB,GAAW,KAEd,IAAK,KAAQ,EACZ,EAAM,EAAY,EAAQ,EAAK,CAC/B,EAAO,EAAY,EAAS,EAAK,CAG7B,IAAW,IAEV,GAAQ,IAASD,EAAc,EAAK,GAAK,EAAc,EAAQ,EAAK,IACnE,GACH,EAAc,GACd,EAAQ,GAAO,EAAQ,EAAI,CAAG,EAAM,EAAE,EAEtC,EAAQ,GAAOA,EAAc,EAAI,CAAG,EAAM,EAAE,CAI7C,EAAY,EAAQ,CAAQ,OAAM,SAAUC,EAAO,EAAM,EAAO,GAAO,CAAC,EAGvD,IAAS,QAC1B,EAAY,EAAQ,CAAQ,OAAM,SAAU,EAAM,CAAC,EAQxD,OAAO,MCnHR,SAAwB,EAAc,EAAO,CAC5C,GAAI,OAAO,GAAU,WAAY,EAChC,MAAO,GAGR,IAAM,EAAY,OAAO,eAAe,EAAM,CAC9C,OAAQ,IAAc,MAAQ,IAAc,OAAO,WAAa,OAAO,eAAe,EAAU,GAAK,OAAS,EAAE,OAAO,eAAe,IAAU,EAAE,OAAO,YAAY,GCgCtK,SAAgB,IAAS,CAEvB,IAAM,EAAM,EAAE,CAER,EAAW,CAAC,MAAK,MAAI,CAE3B,OAAO,EAGP,SAAS,EAAI,GAAG,EAAQ,CACtB,IAAI,EAAkB,GAEhB,EAAW,EAAO,KAAK,CAE7B,GAAI,OAAO,GAAa,WACtB,MAAU,UAAU,2CAA6C,EAAS,CAG5E,EAAK,KAAM,GAAG,EAAO,CAQrB,SAASC,EAAK,EAAO,GAAG,EAAQ,CAC9B,IAAM,EAAK,EAAI,EAAE,GACbC,EAAQ,GAEZ,GAAI,EAAO,CACT,EAAS,EAAM,CACf,OAIF,KAAO,EAAEA,EAAQ,EAAO,SAClB,EAAOA,KAAW,MAAQ,EAAOA,KAAW,UAC9C,EAAOA,GAAS,EAAOA,IAK3B,EAAS,EAGL,EACF,GAAK,EAAID,EAAK,CAAC,GAAG,EAAO,CAEzB,EAAS,KAAM,GAAG,EAAO,EAM/B,SAAS,EAAI,EAAY,CACvB,GAAI,OAAO,GAAe,WACxB,MAAU,UACR,+CAAiD,EAClD,CAIH,OADA,EAAI,KAAK,EAAW,CACb,GAoCX,SAAgBE,GAAK,EAAY,EAAU,CAEzC,IAAI,EAEJ,OAAO,EAQP,SAAS,EAAQ,GAAG,EAAY,CAC9B,IAAM,EAAoB,EAAW,OAAS,EAAW,OAErD,EAEA,GACF,EAAW,KAAK,EAAK,CAGvB,GAAI,CACF,EAAS,EAAW,MAAM,KAAM,EAAW,OACpC,EAAO,CACd,IAAM,EAAkC,EAMxC,GAAI,GAAqB,EACvB,MAAM,EAGR,OAAO,EAAK,EAAU,CAGnB,IACC,GAAU,EAAO,MAAQ,OAAO,EAAO,MAAS,WAClD,EAAO,KAAK,EAAM,EAAK,CACd,aAAkB,MAC3B,EAAK,EAAO,CAEZ,EAAK,EAAO,EAUlB,SAAS,EAAK,EAAO,GAAG,EAAQ,CACzB,IACH,EAAS,GACT,EAAS,EAAO,GAAG,EAAO,EAS9B,SAAS,EAAK,EAAO,CACnB,EAAK,KAAM,EAAM,ECvKrB,SAAgB,GAAkB,EAAO,CAsBvC,MApBI,CAAC,GAAS,OAAO,GAAU,SACtB,GAIL,aAAc,GAAS,SAAU,EAC5BC,GAAS,EAAM,SAAS,CAI7B,UAAW,GAAS,QAAS,EACxBA,GAAS,EAAM,CAIpB,SAAU,GAAS,WAAY,EAC1BC,GAAM,EAAM,CAId,GAOT,SAASA,GAAM,EAAO,CACpB,OAAO,GAAMA,GAASA,EAAM,KAAK,CAAG,IAAM,GAAMA,GAASA,EAAM,OAAO,CAOxE,SAASD,GAAS,EAAK,CACrB,OAAOC,GAAM,GAAO,EAAI,MAAM,CAAG,IAAMA,GAAM,GAAO,EAAI,IAAI,CAO9D,SAAS,GAAM,EAAO,CACpB,OAAO,GAAS,OAAO,GAAU,SAAW,EAAQ,ECxDtD,IAAa,EAAb,cAAkC,KAAM,CAwDtC,YAAY,EAAe,EAAwB,EAAQ,CACzD,OAAO,CAEH,OAAO,GAA2B,WACpC,EAAS,EACT,EAAyB,QAI3B,IAAI,EAAS,GAET,EAAU,EAAE,CACZ,EAAc,GAwClB,GAtCI,IAEF,CAsBE,CArBA,SAAU,GACV,WAAY,GAMZ,UAAW,GACX,QAAS,EALC,CAAC,MAAO,EAAuB,CAUlC,SAAU,EACP,CACR,UAAW,CAAC,EAAuB,CACnC,MAAO,EAAuB,SAC/B,CAIS,CAAC,GAAG,EAAuB,EAIrC,OAAO,GAAkB,SAC3B,EAAS,EAGF,CAAC,EAAQ,OAAS,IACzB,EAAc,GACd,EAAS,EAAc,QACvB,EAAQ,MAAQ,GAGd,CAAC,EAAQ,QAAU,CAAC,EAAQ,QAAU,OAAO,GAAW,SAAU,CACpE,IAAMH,EAAQ,EAAO,QAAQ,IAAI,CAE7BA,IAAU,GACZ,EAAQ,OAAS,GAEjB,EAAQ,OAAS,EAAO,MAAM,EAAGA,EAAM,CACvC,EAAQ,OAAS,EAAO,MAAMA,EAAQ,EAAE,EAI5C,GAAI,CAAC,EAAQ,OAAS,EAAQ,WAAa,EAAQ,UAAW,CAC5D,IAAM,EAAS,EAAQ,UAAU,EAAQ,UAAU,OAAS,GAExD,IACF,EAAQ,MAAQ,EAAO,UAI3B,IAAM,EACJ,EAAQ,OAAS,UAAW,EAAQ,MAChC,EAAQ,MAAM,MACd,EAAQ,MAOd,KAAK,UAAY,EAAQ,WAAa,OAOtC,KAAK,MAAQ,EAAQ,OAAS,OAO9B,KAAK,OAAS,EAAQ,EAAM,OAAS,OAWrC,KAAK,MAAQ,OAOb,KAAK,KAAO,GAQZ,KAAK,QAAU,EAOf,KAAK,KAAO,EAAQ,EAAM,KAAO,OASjC,KAAK,KAAO,GAAkB,EAAQ,MAAM,EAAI,MAOhD,KAAK,MAAQ,EAAQ,OAAS,OAO9B,KAAK,OAAS,KAAK,QAOnB,KAAK,OAAS,EAAQ,QAAU,OAOhC,KAAK,OAAS,EAAQ,QAAU,OAWhC,KAAK,MACH,GAAe,EAAQ,OAAS,OAAO,EAAQ,MAAM,OAAU,SAC3D,EAAQ,MAAM,MACd,GAYN,KAAK,OAAS,OAOd,KAAK,SAAW,OAOhB,KAAK,KAAO,OAUZ,KAAK,IAAM,SAIf,EAAa,UAAU,KAAO,GAC9B,EAAa,UAAU,KAAO,GAC9B,EAAa,UAAU,OAAS,GAChC,EAAa,UAAU,QAAU,GACjC,EAAa,UAAU,MAAQ,GAC/B,EAAa,UAAU,OAAS,OAChC,EAAa,UAAU,KAAO,OAC9B,EAAa,UAAU,UAAY,OACnC,EAAa,UAAU,MAAQ,OAC/B,EAAa,UAAU,MAAQ,OAC/B,EAAa,UAAU,MAAQ,OAC/B,EAAa,UAAU,OAAS,OAChC,EAAa,UAAU,OAAS,OCtQhC,MAAa,EAAU,CAAC,YAAU,WAAS,WAAS,QAAM,IAAK,IAAI,CAcnE,SAAS,GAAS,EAAM,EAAS,CAC/B,GAAII,IAAY,QAAa,OAAOA,GAAY,SAC9C,MAAU,UAAU,kCAAkC,CAGxD,GAAWC,EAAK,CAChB,IAAI,EAAQ,EACR,EAAM,GACNL,EAAQK,EAAK,OAEb,EAEJ,GACED,IAAY,QACZA,EAAQ,SAAW,GACnBA,EAAQ,OAASC,EAAK,OACtB,CACA,KAAO,KACL,GAAIA,EAAK,YAAYL,EAAM,GAAK,OAG1B,EAAc,CAChB,EAAQA,EAAQ,EAChB,YAEO,EAAM,IAGf,EAAe,GACf,EAAMA,EAAQ,GAIlB,OAAO,EAAM,EAAI,GAAKK,EAAK,MAAM,EAAO,EAAI,CAG9C,GAAID,IAAYC,EACd,MAAO,GAGT,IAAI,EAAmB,GACnB,EAAeD,EAAQ,OAAS,EAEpC,KAAO,KACL,GAAIC,EAAK,YAAYL,EAAM,GAAK,OAG1B,EAAc,CAChB,EAAQA,EAAQ,EAChB,YAGE,EAAmB,IAGrB,EAAe,GACf,EAAmBA,EAAQ,GAGzB,EAAe,KAEbK,EAAK,YAAYL,EAAM,GAAKI,EAAQ,YAAY,IAAe,CAC7D,EAAe,IAGjB,EAAMJ,IAKR,EAAe,GACf,EAAM,IAYd,OANI,IAAU,EACZ,EAAM,EACG,EAAM,IACf,EAAMK,EAAK,QAGNA,EAAK,MAAM,EAAO,EAAI,CAW/B,SAAS,GAAQ,EAAM,CAGrB,GAFA,GAAWA,EAAK,CAEZA,EAAK,SAAW,EAClB,MAAO,IAGT,IAAI,EAAM,GACNL,EAAQK,EAAK,OAEb,EAGJ,KAAO,EAAEL,GACP,GAAIK,EAAK,YAAYL,EAAM,GAAK,OAC1B,EAAgB,CAClB,EAAMA,EACN,YAIF,IAAiB,GAIrB,OAAO,EAAM,EACTK,EAAK,YAAY,EAAE,GAAK,GACtB,IACA,IACF,IAAQ,GAAKA,EAAK,YAAY,EAAE,GAAK,GACnC,KACAA,EAAK,MAAM,EAAG,EAAI,CAW1B,SAAS,GAAQ,EAAM,CACrB,GAAWA,EAAK,CAEhB,IAAIL,EAAQK,EAAK,OAEb,EAAM,GACN,EAAY,EACZ,EAAW,GAGX,EAAc,EAEd,EAEJ,KAAO,KAAS,CACd,IAAMC,EAAOD,EAAK,YAAYL,EAAM,CAEpC,GAAIM,IAAS,GAAc,CAGzB,GAAI,EAAgB,CAClB,EAAYN,EAAQ,EACpB,MAGF,SAGE,EAAM,IAGR,EAAiB,GACjB,EAAMA,EAAQ,GAGZM,IAAS,GAEP,EAAW,EACb,EAAWN,EACF,IAAgB,IACzB,EAAc,GAEP,EAAW,KAGpB,EAAc,IAelB,OAVE,EAAW,GACX,EAAM,GAEN,IAAgB,GAEf,IAAgB,GAAK,IAAa,EAAM,GAAK,IAAa,EAAY,EAEhE,GAGFK,EAAK,MAAM,EAAU,EAAI,CAWlC,SAAS,GAAK,GAAG,EAAU,CACzB,IAAIL,EAAQ,GAER,EAEJ,KAAO,EAAEA,EAAQ,EAAS,QACxB,GAAW,EAASA,GAAO,CAEvB,EAASA,KACX,EACE,IAAW,OAAY,EAASA,GAAS,EAAS,IAAM,EAASA,IAIvE,OAAO,IAAW,OAAY,IAAMO,GAAU,EAAO,CAavD,SAASA,GAAU,EAAM,CACvB,GAAWF,EAAK,CAEhB,IAAM,EAAWA,EAAK,YAAY,EAAE,GAAK,GAGrC,EAAQ,GAAgBA,EAAM,CAAC,EAAS,CAU5C,OARI,EAAM,SAAW,GAAK,CAAC,IACzB,EAAQ,KAGN,EAAM,OAAS,GAAKA,EAAK,YAAYA,EAAK,OAAS,EAAE,GAAK,KAC5D,GAAS,KAGJ,EAAW,IAAM,EAAQ,EAalC,SAAS,GAAgB,EAAM,EAAgB,CAC7C,IAAI,EAAS,GACT,EAAoB,EACpB,EAAY,GACZ,EAAO,EACPL,EAAQ,GAERM,EAEA,EAEJ,KAAO,EAAEN,GAASK,EAAK,QAAQ,CAC7B,GAAIL,EAAQK,EAAK,OACf,EAAOA,EAAK,YAAYL,EAAM,SACrBM,IAAS,GAClB,WAEA,EAAO,GAGT,GAAIA,IAAS,GAAc,CACzB,GAAI,MAAcN,EAAQ,GAAK,IAAS,GAAG,GAEhC,IAAcA,EAAQ,GAAK,IAAS,EAAG,CAChD,GACE,EAAO,OAAS,GAChB,IAAsB,GACtB,EAAO,YAAY,EAAO,OAAS,EAAE,GAAK,IAC1C,EAAO,YAAY,EAAO,OAAS,EAAE,GAAK,OAEtC,EAAO,OAAS,EAGlB,IAFA,EAAiB,EAAO,YAAY,IAAI,CAEpC,IAAmB,EAAO,OAAS,EAAG,CACpC,EAAiB,GACnB,EAAS,GACT,EAAoB,IAEpB,EAAS,EAAO,MAAM,EAAG,EAAe,CACxC,EAAoB,EAAO,OAAS,EAAI,EAAO,YAAY,IAAI,EAGjE,EAAYA,EACZ,EAAO,EACP,kBAEO,EAAO,OAAS,EAAG,CAC5B,EAAS,GACT,EAAoB,EACpB,EAAYA,EACZ,EAAO,EACP,UAIA,IACF,EAAS,EAAO,OAAS,EAAI,EAAS,MAAQ,KAC9C,EAAoB,QAGlB,EAAO,OAAS,EAClB,GAAU,IAAMK,EAAK,MAAM,EAAY,EAAGL,EAAM,CAEhD,EAASK,EAAK,MAAM,EAAY,EAAGL,EAAM,CAG3C,EAAoBA,EAAQ,EAAY,EAG1C,EAAYA,EACZ,EAAO,OACEM,IAAS,IAAgB,EAAO,GACzC,IAEA,EAAO,GAIX,OAAO,EAWT,SAASE,GAAW,EAAM,CACxB,GAAI,OAAOH,GAAS,SAClB,MAAU,UACR,mCAAqC,KAAK,UAAUA,EAAK,CAC1D,CClaL,MAAa,GAAU,CAAC,OAAI,CAE5B,SAAS,IAAM,CACb,MAAO,ICaT,SAAgB,GAAM,EAAe,CACnC,MAAO,GAEH,OAAO,GAAkB,UAD3B,GAEE,SAAU,GACV,EAAc,MACd,aAAc,GACd,EAAc,UAEd,EAAc,OAAS,QChB7B,SAAgB,GAAU,EAAM,CAC9B,GAAI,OAAOA,GAAS,SAClB,EAAO,IAAI,IAAIA,EAAK,SACX,CAAC,GAAMA,EAAK,CAAE,CAEvB,IAAM,EAAY,UAChB,+EACEA,EACA,IACH,CAED,KADA,GAAM,KAAO,uBACP,EAGR,GAAIA,EAAK,WAAa,QAAS,CAE7B,IAAM,EAAY,UAAU,iCAAiC,CAE7D,KADA,GAAM,KAAO,yBACP,EAGR,OAAO,GAAoBA,EAAK,CAWlC,SAAS,GAAoB,EAAK,CAChC,GAAI,EAAI,WAAa,GAAI,CAEvB,IAAM,EAAY,UAChB,uDACD,CAED,KADA,GAAM,KAAO,4BACP,EAGR,IAAM,EAAW,EAAI,SACjBL,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAS,QACxB,GACE,EAAS,YAAYA,EAAM,GAAK,IAChC,EAAS,YAAYA,EAAQ,EAAE,GAAK,GACpC,CACA,IAAM,EAAQ,EAAS,YAAYA,EAAQ,EAAE,CAC7C,GAAI,IAAU,IAAgB,IAAU,IAAe,CAErD,IAAM,EAAY,UAChB,sDACD,CAED,KADA,GAAM,KAAO,4BACP,GAKZ,OAAO,mBAAmB,EAAS,CCtDrC,IAAM,GAA8B,CAClC,UACA,OACA,WACA,OACA,UACA,UACD,CAEY,GAAb,KAAmB,CAuBjB,YAAY,EAAO,CAEjB,IAAI,EAEJ,CACE,CADG,EAEM,GAAM,EAAM,CACX,CAAC,KAAM,EAAM,CACd,OAAO,GAAU,UAAYS,GAAa,EAAM,CAC/C,CAAC,QAAM,CAEP,EANA,EAAE,CAkBd,KAAK,IAAM,QAAS,EAAU,GAAK,GAAQ,KAAK,CAUhD,KAAK,KAAO,EAAE,CASd,KAAK,QAAU,EAAE,CAOjB,KAAK,SAAW,EAAE,CAOlB,KAAK,MAYL,KAAK,IAUL,KAAK,OASL,KAAK,OAIL,IAAIT,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,GAAM,QAAQ,CAC7B,IAAMU,EAAQ,GAAMV,GAKlBU,KAAS,GACT,EAAQA,KAAW,QACnB,EAAQA,KAAW,OAGnB,KAAKA,GAASA,IAAU,UAAY,CAAC,GAAG,EAAQA,GAAO,CAAG,EAAQA,IAKtE,IAAI,EAGJ,IAAK,KAAS,EAEP,GAAM,SAAS,EAAM,GAExB,KAAK,GAAS,EAAQ,IAW5B,IAAI,UAAW,CACb,OAAO,OAAO,KAAK,MAAS,SACxB,EAAQ,SAAS,KAAK,KAAK,CAC3B,OAeN,IAAI,SAAS,EAAU,CACrB,GAAeC,EAAU,WAAW,CACpC,GAAWA,EAAU,WAAW,CAChC,KAAK,KAAO,EAAQ,KAAK,KAAK,SAAW,GAAIA,EAAS,CASxD,IAAI,SAAU,CACZ,OAAO,OAAO,KAAK,MAAS,SACxB,EAAQ,QAAQ,KAAK,KAAK,CAC1B,OAaN,IAAI,QAAQ,EAAS,CACnB,GAAW,KAAK,SAAU,UAAU,CACpC,KAAK,KAAO,EAAQ,KAAKC,GAAW,GAAI,KAAK,SAAS,CASxD,IAAI,SAAU,CACZ,OAAO,OAAO,KAAK,MAAS,SACxB,EAAQ,QAAQ,KAAK,KAAK,CAC1B,OAeN,IAAI,QAAQ,EAAS,CAInB,GAHA,GAAWR,EAAS,UAAU,CAC9B,GAAW,KAAK,QAAS,UAAU,CAE/BA,EAAS,CACX,GAAIA,EAAQ,YAAY,EAAE,GAAK,GAC7B,MAAU,MAAM,gCAAgC,CAGlD,GAAIA,EAAQ,SAAS,IAAK,EAAE,CAC1B,MAAU,MAAM,yCAAyC,CAI7D,KAAK,KAAO,EAAQ,KAAK,KAAK,QAAS,KAAK,MAAQA,GAAW,IAAI,CASrE,IAAI,MAAO,CACT,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAS,GAe5C,IAAI,KAAK,EAAM,CACT,GAAMC,EAAK,GACb,EAAO,GAAUA,EAAK,EAGxB,GAAeA,EAAM,OAAO,CAExB,KAAK,OAASA,GAChB,KAAK,QAAQ,KAAKA,EAAK,CAU3B,IAAI,MAAO,CACT,OAAO,OAAO,KAAK,MAAS,SACxB,EAAQ,SAAS,KAAK,KAAM,KAAK,QAAQ,CACzC,OAeN,IAAI,KAAK,EAAM,CACb,GAAe,EAAM,OAAO,CAC5B,GAAW,EAAM,OAAO,CACxB,KAAK,KAAO,EAAQ,KAAK,KAAK,SAAW,GAAI,GAAQ,KAAK,SAAW,IAAI,CAgE3E,KAAK,EAAe,EAAwB,EAAQ,CAElD,IAAM,EAAU,KAAK,QAAQ,EAAe,EAAwB,EAAO,CAI3E,KAFA,GAAQ,MAAQ,GAEV,EA6DR,KAAK,EAAe,EAAwB,EAAQ,CAElD,IAAM,EAAU,KAAK,QAAQ,EAAe,EAAwB,EAAO,CAI3E,MAFA,GAAQ,MAAQ,OAET,EA6DT,QAAQ,EAAe,EAAwB,EAAQ,CACrD,IAAM,EAAU,IAAI,EAElB,EACA,EACA,EACD,CAWD,OATI,KAAK,OACP,EAAQ,KAAO,KAAK,KAAO,IAAM,EAAQ,KACzC,EAAQ,KAAO,KAAK,MAGtB,EAAQ,MAAQ,GAEhB,KAAK,SAAS,KAAK,EAAQ,CAEpB,EAgBT,SAAS,EAAU,CAUjB,OATI,KAAK,QAAU,OACV,GAGL,OAAO,KAAK,OAAU,SACjB,KAAK,MAGE,IAAI,YAAY,GAAY,OAAU,CACvC,OAAO,KAAK,MAAM,GAcrC,SAAS,GAAW,EAAM,EAAM,CAC9B,GAAI,GAAQ,EAAK,SAAS,EAAQ,IAAI,CACpC,MAAU,MACR,IAAM,EAAO,uCAAyC,EAAQ,IAAM,IACrE,CAcL,SAAS,GAAe,EAAM,EAAM,CAClC,GAAI,CAAC,EACH,MAAU,MAAM,IAAM,EAAO,oBAAoB,CAcrD,SAAS,GAAW,EAAM,EAAM,CAC9B,GAAI,CAACA,EACH,MAAU,MAAM,YAAc,EAAO,kCAAkC,CAY3E,SAASI,GAAa,EAAO,CAC3B,MAAO,GACL,GACE,OAAO,GAAU,UACjB,eAAgB,GAChB,eAAgB,GChoBtB,MAAa,IAYP,SAAU,EAAU,CAGlB,IAAMI,EAFO,KACO,YAIX,UAEH,EAAQA,EAAM,GAEd,EAAQ,UAAY,CACxB,OAAO,EAAM,MAAM,EAAO,UAAU,EAiBtC,OAdA,OAAO,eAAe,EAAOA,EAAM,CAc5B,mBCkUTC,GAAM,EAAE,CAAC,eAw0Bf,MAAa,GAAU,IAzzBvB,MAAa,UAAkB,EAAiB,CAI9C,aAAc,CAEZ,MAAM,OAAO,CAeb,KAAK,SAAW,OAYhB,KAAK,OAAS,OAad,KAAK,UAAY,EAAE,CAanB,KAAK,SAAW,OAShB,KAAK,YAAc,GASnB,KAAK,OAAS,OASd,KAAK,UAAY,EAAE,CAUnB,KAAK,OAAS,OASd,KAAK,aAAe,IAAQ,CAc9B,MAAO,CAEL,IAAM,EAEF,IAAI,EAEJd,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,KAAK,UAAU,QAAQ,CACtC,IAAM,EAAW,KAAK,UAAUA,GAChC,EAAY,IAAI,GAAG,EAAS,CAK9B,OAFA,EAAY,oBAAY,GAAM,EAAE,CAAE,KAAK,UAAU,CAAC,CAE3C,EA8DT,KAAK,EAAK,EAAO,CAqBf,OApBI,OAAO,GAAQ,SAEb,UAAU,SAAW,GACvB,GAAe,OAAQ,KAAK,OAAO,CACnC,KAAK,UAAU,GAAO,EACf,MAIDc,GAAI,KAAK,KAAK,UAAW,EAAI,EAAI,KAAK,UAAU,IAAS,OAI/D,GACF,GAAe,OAAQ,KAAK,OAAO,CACnC,KAAK,UAAY,EACV,MAIF,KAAK,UAoBd,QAAS,CACP,GAAI,KAAK,OACP,OAAO,KAMT,IAAMC,EAAyD,KAE/D,KAAO,EAAE,KAAK,YAAc,KAAK,UAAU,QAAQ,CACjD,GAAM,CAAC,EAAU,GAAG,GAAW,KAAK,UAAU,KAAK,aAEnD,GAAI,EAAQ,KAAO,GACjB,SAGE,EAAQ,KAAO,KACjB,EAAQ,GAAK,QAGf,IAAM,GAAc,EAAS,KAAKA,EAAM,GAAG,EAAQ,EAE/C,OAAO,GAAgB,YACzB,KAAK,aAAa,IAAI,EAAY,CAOtC,MAHA,MAAK,OAAS,GACd,KAAK,YAAc,IAEZ,KAiBT,MAAM,EAAM,CACV,KAAK,QAAQ,CACb,IAAM,GAAW,GAAM,EAAK,EACtB,EAAS,KAAK,QAAU,KAAK,OAEnC,OADA,GAAa,QAAS,EAAO,CACtB,EAAO,OAAO,EAAS,CAAE,EAAS,CA6C3C,QAAQ,EAAM,EAAM,CAClB,IAAMA,EAAO,KAMb,OAJA,KAAK,QAAQ,CACb,GAAa,UAAW,KAAK,QAAU,KAAK,OAAO,CACnD,GAAe,UAAW,KAAK,UAAY,KAAK,SAAS,CAElD,EAAO,EAAS,OAAW,EAAK,CAAG,IAAI,QAAQ,EAAS,CAQ/D,SAAS,EAAS,EAAS,EAAQ,CACjC,IAAM,GAAW,GAAM,EAAK,EAGtB,GAEsBA,EAAK,MAAM,EAAS,EAGhD,EAAK,IAAI,EAAW,EAAU,SAAU,EAAO,EAAM,EAAM,CACzD,GAAI,GAAS,CAAC,GAAQ,CAACC,EACrB,OAAO,EAAS,EAAM,CAKxB,IAAM,EAEsB,EAGtB,EAAgBD,EAAK,UAAU,EAAaC,EAAK,CAEnD,GAAgB,EAAc,CAChC,EAAK,MAAQ,EAEb,EAAK,OAAS,EAGhB,EAAS,EAAsDA,EAAM,EACrE,CAOF,SAAS,EAAS,EAAO,EAAM,CACzB,GAAS,CAACA,EACZ,EAAO,EAAM,CACJ,EACT,EAAQA,EAAK,CAGb,EAAK,OAAWA,EAAK,GAqC7B,YAAY,EAAM,CAEhB,IAAI,EAAW,GAEX,EAUJ,OARA,KAAK,QAAQ,CACb,GAAa,cAAe,KAAK,QAAU,KAAK,OAAO,CACvD,GAAe,cAAe,KAAK,UAAY,KAAK,SAAS,CAE7D,KAAK,QAAQ,EAAM,EAAS,CAC5B,GAAW,cAAe,UAAW,EAAS,CAGvC,EAKP,SAAS,EAAS,EAAO,EAAM,CAC7B,EAAW,GACX,EAAK,EAAM,CACX,EAASA,GA0Cb,IAAI,EAAM,EAAM,EAAM,CACpB,GAAW,EAAK,CAChB,KAAK,QAAQ,CAEb,IAAM,EAAe,KAAK,aAO1B,MALI,CAAC,GAAQ,OAAO,GAAS,aAC3B,EAAO,EACP,EAAO,QAGF,EAAO,EAAS,OAAW,EAAK,CAAG,IAAI,QAAQ,EAAS,CAW/D,SAAS,EAAS,EAAS,EAAQ,CAKjC,IAAM,GAAW,GAAM,EAAK,EAC5B,EAAa,IAAI,EAAM,EAAU,EAAS,CAQ1C,SAAS,EAAS,EAAO,EAAY,EAAM,CACzC,IAAM,EAEF,GAAc,EAGd,EACF,EAAO,EAAM,CACJ,EACT,EAAQ,EAAc,CAGtB,EAAK,OAAW,EAAeA,EAAK,GAuB5C,QAAQ,EAAM,EAAM,CAElB,IAAI,EAAW,GAEX,EAMJ,OAJA,KAAK,IAAI,EAAM,EAAM,EAAS,CAE9B,GAAW,UAAW,MAAO,EAAS,CAE/B,EAKP,SAAS,EAAS,EAAO,EAAM,CAC7B,EAAK,EAAM,CACX,EAASC,EACT,EAAW,IAiCf,UAAU,EAAM,EAAM,CACpB,KAAK,QAAQ,CACb,IAAM,GAAW,GAAM,EAAK,EACtBC,EAAW,KAAK,UAAY,KAAK,SAIvC,OAHA,GAAe,YAAaA,EAAS,CACrC,GAAW,EAAK,CAETA,EAAS,EAAM,EAAS,CA4DjC,IAAI,EAAO,GAAG,EAAY,CACxB,IAAM,EAAY,KAAK,UACjB,EAAY,KAAK,UAIvB,GAFA,GAAe,MAAO,KAAK,OAAO,CAE9B,GAAU,KAA6B,GAEhC,OAAO,GAAU,WAC1B,EAAU,EAAO,EAAW,SACnB,OAAO,GAAU,SACtB,MAAM,QAAQ,EAAM,CACtB,EAAQ,EAAM,CAEd,EAAU,EAAM,MAGlB,MAAU,UAAU,+BAAiC,EAAQ,IAAI,CAGnE,OAAO,KAMP,SAAS,EAAI,EAAO,CAClB,GAAI,OAAOC,GAAU,WACnB,EAAUA,EAAO,EAAE,CAAC,SACX,OAAOA,GAAU,SAC1B,GAAI,MAAM,QAAQA,EAAM,CAAE,CACxB,GAAM,CAAC,EAAQ,GAAGC,GAC4BD,EAC9C,EAAU,EAAQC,EAAW,MAE7B,EAAUD,EAAM,MAGlB,MAAU,UAAU,+BAAiCA,EAAQ,IAAI,CAQrE,SAAS,EAAU,EAAQ,CACzB,GAAI,EAAE,YAAa,IAAW,EAAE,aAAc,GAC5C,MAAU,MACR,6KACD,CAGH,EAAQ,EAAO,QAAQ,CAEnB,EAAO,WACT,EAAU,wBAAkB,GAAM,EAAU,SAAU,EAAO,SAAS,EAQ1E,SAAS,EAAQ,EAAS,CACxB,IAAInB,EAAQ,GAEZ,GAAI,GAAY,KAA+B,GAEpC,MAAM,QAAQ,EAAQ,CAC/B,KAAO,EAAEA,EAAQ,EAAQ,QAAQ,CAC/B,IAAM,EAAQ,EAAQA,GACtB,EAAI,EAAM,MAGZ,MAAU,UAAU,oCAAsC,EAAU,IAAI,CAS5E,SAAS,EAAU,EAAQ,EAAY,CACrC,IAAIA,EAAQ,GACR,EAAa,GAEjB,KAAO,EAAEA,EAAQ,EAAU,QACzB,GAAI,EAAUA,GAAO,KAAO,EAAQ,CAClC,EAAaA,EACb,MAIJ,GAAI,IAAe,GACjB,EAAU,KAAK,CAAC,EAAQ,GAAGoB,EAAW,CAAC,SAIhCA,EAAW,OAAS,EAAG,CAC9B,GAAI,CAAC,EAAS,GAAG,GAAQA,EACnB,EAAiB,EAAU,GAAY,GACzCC,EAAW,EAAe,EAAIA,EAAW,EAAQ,GACnD,iBAAiB,GAAM,EAAgB,EAAQ,EAGjD,EAAU,GAAc,CAAC,EAAQ,EAAS,GAAG,EAAK,MAkCpB,CAAC,QAAQ,CAS/C,SAAS,GAAa,EAAM,EAAO,CACjC,GAAI,OAAO,GAAU,WACnB,MAAU,UAAU,WAAa,EAAO,qBAAqB,CAWjE,SAAS,GAAe,EAAM,EAAO,CACnC,GAAI,OAAO,GAAU,WACnB,MAAU,UAAU,WAAa,EAAO,uBAAuB,CAWnE,SAAS,GAAe,EAAM,EAAQ,CACpC,GAAI,EACF,MAAU,MACR,gBACE,EACA,mHACH,CAUL,SAAS,GAAW,EAAM,CAGxB,GAAI,CAACA,EAAWC,EAAK,EAAI,OAAOA,EAAK,MAAS,SAC5C,MAAU,UAAU,uBAAyBA,EAAO,IAAI,CAa5D,SAAS,GAAW,EAAM,EAAW,EAAU,CAC7C,GAAI,CAAC,EACH,MAAU,MACR,IAAM,EAAO,0BAA4B,EAAY,YACtD,CAQL,SAAS,GAAM,EAAO,CACpB,OAAO,GAAgB,EAAM,CAAG,EAAQ,IAAI,GAAM,EAAM,CAO1D,SAAS,GAAgB,EAAO,CAC9B,MAAO,GACL,GACE,OAAO,GAAU,UACjB,YAAa,GACb,aAAc,GAQpB,SAAS,GAAgB,EAAO,CAC9B,OAAO,OAAO,GAAU,UAAY,GAAa,EAAM,CAWzD,SAAS,GAAa,EAAO,CAC3B,MAAO,GACL,GACE,OAAO,GAAU,UACjB,eAAgB,GAChB,eAAgB,GC5xCtB,IAAMC,GAAe,EAAE,CAevB,SAAgBC,GAAS,EAAO,EAAS,CACvC,IAAM,EAAW,GAAWD,GACtB,EACJ,OAAO,EAAS,iBAAoB,UAChC,EAAS,gBACT,GACA,EACJ,OAAO,EAAS,aAAgB,UAAY,EAAS,YAAc,GAErE,OAAOE,GAAI,EAAO,EAAiB,EAAY,CAejD,SAASA,GAAI,EAAO,EAAiB,EAAa,CAChD,GAAI,GAAK,EAAM,CAAE,CACf,GAAI,UAAW,EACb,OAAO,EAAM,OAAS,QAAU,CAAC,EAAc,GAAK,EAAM,MAG5D,GAAI,GAAmB,QAAS,GAAS,EAAM,IAC7C,OAAO,EAAM,IAGf,GAAI,aAAc,EAChB,OAAOC,GAAI,EAAM,SAAU,EAAiB,EAAY,CAQ5D,OAJI,MAAM,QAAQ,EAAM,CACfA,GAAI,EAAO,EAAiB,EAAY,CAG1C,GAeT,SAASA,GAAI,EAAQ,EAAiB,EAAa,CAEjD,IAAM,EAAS,EAAE,CACb1B,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAO,QACtB,EAAOA,GAASyB,GAAI,EAAOzB,GAAQ,EAAiB,EAAY,CAGlE,OAAO,EAAO,KAAK,GAAG,CAWxB,SAAS,GAAK,EAAO,CACnB,MAAO,GAAQ,GAAS,OAAO,GAAU,UCtG3C,IAAM2B,GAAU,SAAS,cAAc,IAAI,CAM3C,SAAgB,GAA8B,EAAO,CACnD,IAAMC,EAAqB,IAAM,EAAQ,IACzC,GAAQ,UAAYA,EACpB,IAAM,EAAYD,GAAQ,YAqB1B,OAVE,EAAU,WAAW,EAAU,OAAS,EAAE,GAAK,IAC/C,IAAU,QASL,IAAcC,EAPZ,GAOyC,ECZpD,SAAgB,GAAO,EAAM,EAAO,EAAQ,EAAO,CACjD,IAAM,EAAMC,EAAK,OACb,EAAa,EAEb,EAWJ,GARA,CAGE,CAHE,EAAQ,EACF,CAAC,EAAQ,EAAM,EAAI,EAAM,EAEzB,EAAQ,EAAM,EAAM,EAE9B,EAAS,EAAS,EAAI,EAAS,EAG3B,EAAM,OAAS,IACjB,EAAa,MAAM,KAAK,EAAM,CAC9B,EAAW,QAAQ,EAAO,EAAO,CAEjC,EAAK,OAAO,GAAG,EAAW,MAM1B,IAHI,GAAQ,EAAK,OAAO,EAAO,EAAO,CAG/B,EAAa,EAAM,QACxB,EAAa,EAAM,MAAM,EAAY,EAAa,IAAM,CACxD,EAAW,QAAQ,EAAO,EAAE,CAE5B,EAAK,OAAO,GAAG,EAAW,CAC1B,GAAc,IACd,GAAS,IAqBf,SAAgB,GAAK,EAAM,EAAO,CAKhC,OAJIA,EAAK,OAAS,GAChB,GAAOA,EAAMA,EAAK,OAAQ,EAAG,EAAM,CAC5BA,GAEF,ECpET,IAAM,GAAiB,EAAE,CAAC,eAU1B,SAAgB,GAAkB,EAAY,CAE5C,IAAMH,EAAM,EAAE,CACV1B,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAW,QAC1B,GAAgB0B,EAAK,EAAW1B,GAAO,CAGzC,OAAO0B,EAaT,SAAS,GAAgB,EAAK,EAAW,CAEvC,IAAI,EAEJ,IAAK,KAAQI,EAAW,CAGtB,IAAM,GAFQ,GAAe,KAAKJ,EAAK,EAAK,CAAGA,EAAI,GAAQ,UAEpC,EAAI,GAAQ,EAAE,EAE/B,EAAQI,EAAU,GAEpBxB,EAEJ,GAAI,EACF,IAAKA,KAAQ,EAAO,CACb,GAAe,KAAK,EAAMA,EAAK,GAAE,EAAKA,GAAQ,EAAE,EACrD,IAAM,EAAQ,EAAMA,GACpB,GAEE,EAAKA,GACL,MAAM,QAAQ,EAAM,CAAG,EAAQ,EAAQ,CAAC,EAAM,CAAG,EAAE,CACpD,GAiBT,SAAS,GAAW,EAAU,EAAM,CAClC,IAAIN,EAAQ,GAEN,EAAS,EAAE,CAEjB,KAAO,EAAEA,EAAQ6B,EAAK,SAElBA,EAAK7B,GAAO,MAAQ,QAAU,EAAW,GAAQ,KAAK6B,EAAK7B,GAAO,CAGtE,GAAO,EAAU,EAAG,EAAG,EAAO,CC7EhC,SAAgB,GAAgC,EAAO,EAAM,CAC3D,IAAMM,EAAO,OAAO,SAAS,EAAO,EAAK,CAezC,OAZAA,EAAO,GAAKA,IAAS,IAAMA,EAAO,IAAMA,EAAO,IAE/CA,EAAO,KAAOA,EAAO,KAErBA,EAAO,OAAUA,EAAO,OAExBA,EAAO,OAAUA,EAAO,QACvBA,EAAO,QAAY,QAAWA,EAAO,QAAY,OAElDA,EAAO,QACE,IAEF,OAAO,cAAcA,EAAK,CCXnC,SAAgB,GAAoB,EAAO,CACzC,OAAO,EAEN,QAAQ,cAAe,IAAI,CAE3B,QAAQ,SAAU,GAAG,CAOrB,aAAa,CAAC,aAAa,CCV9B,MAAa,GAAa,GAAW,WAAW,CAcnC,EAAoB,GAAW,aAAa,CAuB5C,GAAa,GAAW,sBAAsB,CAa3D,SAAgB,GAAa,EAAM,CACjC,OAGEA,IAAS,OAASA,EAAO,IAAMA,IAAS,KAe5C,MAAa,GAAa,GAAW,KAAK,CAoB7B,GAAgB,GAAW,aAAa,CAexC,GAAmB,GAAW,iBAAiB,CAiB5D,SAAgB,EAAmB,EAAM,CACvC,OAAOA,IAAS,MAAQA,EAAO,GAYjC,SAAgB,EAA0B,EAAM,CAC9C,OAAOA,IAAS,OAASA,EAAO,GAAKA,IAAS,IAkBhD,SAAgB,EAAc,EAAM,CAClC,OAAOA,IAAS,IAAMA,IAAS,IAAMA,IAAS,GAwBhD,MAAa,GAAqB,GAAW,eAAe,CAsB/C,GAAoB,GAAW,KAAK,CAUjD,SAAS,GAAW,EAAO,CACzB,OAAO,EAUP,SAAS,EAAM,EAAM,CACnB,OAAOA,IAAS,MAAQA,EAAO,IAAMyB,EAAM,KAAK,OAAO,aAAazB,EAAK,CAAC,EC3L9E,SAAgB,GAAa,EAAO,CAElC,IAAM,EAAS,EAAE,CACbN,EAAQ,GACR,EAAQ,EACR,EAAO,EACX,KAAO,EAAEA,EAAQ,EAAM,QAAQ,CAC7B,IAAMM,EAAO,EAAM,WAAWN,EAAM,CAEhCgC,EAAU,GAGd,GAAI1B,IAAS,IAAM,EAAkB,EAAM,WAAWN,EAAQ,EAAE,CAAC,EAAI,EAAkB,EAAM,WAAWA,EAAQ,EAAE,CAAC,CACjH,EAAO,UAGAM,EAAO,IACT,oBAAoB,KAAK,OAAO,aAAaA,EAAK,CAAC,GACtD,EAAU,OAAO,aAAaA,EAAK,UAI9BA,EAAO,OAAUA,EAAO,MAAQ,CACvC,IAAMP,EAAO,EAAM,WAAWC,EAAQ,EAAE,CAGpCM,EAAO,OAAUP,EAAO,OAAUA,EAAO,OAC3C,EAAU,OAAO,aAAaO,EAAMP,EAAK,CACzC,EAAO,GAIP,EAAU,SAKZ,EAAU,OAAO,aAAaO,EAAK,CAErC,CAGE,IAFA,EAAO,KAAK,EAAM,MAAM,EAAON,EAAM,CAAE,mBAAmBgC,EAAQ,CAAC,CACnE,EAAQhC,EAAQ,EAAO,EACb,IAEZ,CAEE,IADA,GAAS,EACF,GAGX,OAAO,EAAO,KAAK,GAAG,CAAG,EAAM,MAAM,EAAM,CCjE7C,SAAgB,EAAa,EAAS,EAAI,EAAM,EAAK,CACnD,IAAM,EAAQ,EAAM,EAAM,EAAI,IAC1B,EAAO,EACX,OAAO,EAGP,SAAS,EAAM,EAAM,CAKnB,OAJI,EAAcM,EAAK,EACrB,EAAQ,MAAM,EAAK,CACZ,EAAOA,EAAK,EAEd2B,EAAG3B,EAAK,CAIjB,SAAS,EAAO,EAAM,CAMpB,OALI,EAAcA,EAAK,EAAI,IAAS,GAClC,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,EAAK,CACX2B,EAAG3B,EAAK,GChDnB,MAAa,GAAU,CACrB,SAAU,GACX,CAQD,SAAS,GAAkB,EAAS,CAClC,IAAM,EAAe,EAAQ,QAAQ,KAAK,OAAO,WAAW,eAAgB,EAA4B,EAAiB,CAErH4B,EACJ,OAAO,EAGP,SAAS,EAA2B,EAAM,CACxC,GAAI5B,IAAS,KAAM,CACjB,EAAQ,QAAQA,EAAK,CACrB,OAKF,OAHA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,EAAa,EAAS,EAAc,aAAa,CAI1D,SAAS,EAAiB,EAAM,CAE9B,OADA,EAAQ,MAAM,YAAY,CACnB,EAAUA,EAAK,CAIxB,SAAS,EAAU,EAAM,CACvB,IAAM,EAAQ,EAAQ,MAAM,YAAa,CACvC,YAAa,OACb,WACD,CAAC,CAKF,OAJI4B,IACF,EAAS,KAAO,GAElB,EAAW,EACJ,EAAK5B,EAAK,CAInB,SAAS,EAAK,EAAM,CAClB,GAAIA,IAAS,KAAM,CACjB,EAAQ,KAAK,YAAY,CACzB,EAAQ,KAAK,YAAY,CACzB,EAAQ,QAAQA,EAAK,CACrB,OAUF,OARI,EAAmBA,EAAK,EAC1B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,YAAY,CAClB,IAIT,EAAQ,QAAQA,EAAK,CACd,ICrDX,MAAa6B,GAAW,CACtB,SAAU,GACX,CAGD,IAAM,GAAqB,CACzB,SAAUC,GACX,CAQD,SAAS,GAAmB,EAAS,CACnC,IAAMrB,EAAO,KAEP,EAAQ,EAAE,CACZ,EAAY,EAEZ,EAEA,EAEA,EACJ,OAAO,EAGP,SAAS,EAAM,EAAM,CAWnB,GAAI,EAAY,EAAM,OAAQ,CAC5B,IAAM,EAAO,EAAM,GAEnB,MADA,GAAK,eAAiB,EAAK,GACpB,EAAQ,QAAQ,EAAK,GAAG,aAAc,EAAkB,EAAmB,CAACT,EAAK,CAI1F,OAAO,EAAmBA,EAAK,CAIjC,SAAS,EAAiB,EAAM,CAM9B,GALA,IAKIS,EAAK,eAAe,WAAY,CAClC,EAAK,eAAe,WAAa,OAC7B,GACF,GAAW,CAKb,IAAM,EAAmBA,EAAK,OAAO,OACjC,EAAkB,EAElBZ,EAGJ,KAAO,KACL,GAAIY,EAAK,OAAO,GAAiB,KAAO,QAAUA,EAAK,OAAO,GAAiB,GAAG,OAAS,YAAa,CACtG,EAAQA,EAAK,OAAO,GAAiB,GAAG,IACxC,MAGJ,EAAe,EAAU,CAGzB,IAAIf,EAAQ,EACZ,KAAOA,EAAQe,EAAK,OAAO,QACzB,EAAK,OAAOf,GAAO,GAAG,IAAM,CAC1B,GAAGG,EACJ,CACD,IAQF,OAJA,GAAOY,EAAK,OAAQ,EAAkB,EAAG,EAAGA,EAAK,OAAO,MAAM,EAAiB,CAAC,CAGhF,EAAK,OAAO,OAASf,EACd,EAAmBM,EAAK,CAEjC,OAAO,EAAMA,EAAK,CAIpB,SAAS,EAAmB,EAAM,CAMhC,GAAI,IAAc,EAAM,OAAQ,CAI9B,GAAI,CAAC,EACH,OAAO,EAAkBA,EAAK,CAMhC,GAAI,EAAU,kBAAoB,EAAU,iBAAiB,SAC3D,OAAO,EAAUA,EAAK,CAQxB,EAAK,UAAY,GAAQ,EAAU,kBAAoB,CAAC,EAAU,+BAKpE,MADA,GAAK,eAAiB,EAAE,CACjB,EAAQ,MAAM,GAAoB,EAAsB,EAAsB,CAACA,EAAK,CAI7F,SAAS,EAAqB,EAAM,CAGlC,OAFI,GAAW,GAAW,CAC1B,EAAe,EAAU,CAClB,EAAkBA,EAAK,CAIhC,SAAS,EAAsB,EAAM,CAGnC,MAFA,GAAK,OAAO,KAAKS,EAAK,KAAK,CAAC,MAAQ,IAAc,EAAM,OACxD,EAAkBA,EAAK,KAAK,CAAC,OACtB,EAAUT,EAAK,CAIxB,SAAS,EAAkB,EAAM,CAG/B,MADA,GAAK,eAAiB,EAAE,CACjB,EAAQ,QAAQ,GAAoB,EAAmB,EAAU,CAACA,EAAK,CAIhF,SAAS,EAAkB,EAAM,CAI/B,MAHA,KACA,EAAM,KAAK,CAACS,EAAK,iBAAkBA,EAAK,eAAe,CAAC,CAEjD,EAAkBT,EAAK,CAIhC,SAAS,EAAU,EAAM,CACvB,GAAIA,IAAS,KAAM,CACb,GAAW,GAAW,CAC1B,EAAe,EAAE,CACjB,EAAQ,QAAQA,EAAK,CACrB,OAQF,MANA,KAAyBS,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,CACrD,EAAQ,MAAM,YAAa,CACzB,WAAY,EACZ,YAAa,OACb,SAAU,EACX,CAAC,CACK,EAAaT,EAAK,CAI3B,SAAS,EAAa,EAAM,CAC1B,GAAIA,IAAS,KAAM,CACjB,EAAa,EAAQ,KAAK,YAAY,CAAE,GAAK,CAC7C,EAAe,EAAE,CACjB,EAAQ,QAAQA,EAAK,CACrB,OAWF,OATI,EAAmBA,EAAK,EAC1B,EAAQ,QAAQA,EAAK,CACrB,EAAa,EAAQ,KAAK,YAAY,CAAC,CAEvC,EAAY,EACZ,EAAK,UAAY,OACV,IAET,EAAQ,QAAQA,EAAK,CACd,GAWT,SAAS,EAAa,EAAO,EAAW,CACtC,IAAM,EAASS,EAAK,YAAY,EAAM,CAyCtC,GAxCI,GAAW,EAAO,KAAK,KAAK,CAChC,EAAM,SAAW,EACb,IAAY,EAAW,KAAO,GAClC,EAAa,EACb,EAAU,WAAW,EAAM,MAAM,CACjC,EAAU,MAAM,EAAO,CAmCnBA,EAAK,OAAO,KAAK,EAAM,MAAM,MAAO,CACtC,IAAIf,EAAQ,EAAU,OAAO,OAC7B,KAAO,KACL,GAEA,EAAU,OAAOA,GAAO,GAAG,MAAM,OAAS,IAE1C,CAAC,EAAU,OAAOA,GAAO,GAAG,KAE5B,EAAU,OAAOA,GAAO,GAAG,IAAI,OAAS,GAGtC,OAMJ,IAAM,EAAmBe,EAAK,OAAO,OACjC,EAAkB,EAElB,EAEAZ,EAGJ,KAAO,KACL,GAAIY,EAAK,OAAO,GAAiB,KAAO,QAAUA,EAAK,OAAO,GAAiB,GAAG,OAAS,YAAa,CACtG,GAAI,EAAM,CACR,EAAQA,EAAK,OAAO,GAAiB,GAAG,IACxC,MAEF,EAAO,GAOX,IAJA,EAAe,EAAU,CAGzB,EAAQ,EACDf,EAAQe,EAAK,OAAO,QACzB,EAAK,OAAOf,GAAO,GAAG,IAAM,CAC1B,GAAGG,EACJ,CACD,IAIF,GAAOY,EAAK,OAAQ,EAAkB,EAAG,EAAGA,EAAK,OAAO,MAAM,EAAiB,CAAC,CAGhF,EAAK,OAAO,OAASf,GAUzB,SAAS,EAAe,EAAM,CAC5B,IAAIA,EAAQ,EAAM,OAGlB,KAAO,KAAU,GAAM,CACrB,IAAM,EAAQ,EAAMA,GACpB,EAAK,eAAiB,EAAM,GAC5B,EAAM,GAAG,KAAK,KAAKe,EAAM,EAAQ,CAEnC,EAAM,OAAS,EAEjB,SAAS,GAAY,CACnB,EAAU,MAAM,CAAC,KAAK,CAAC,CACvB,EAAa,OACb,EAAY,OACZ,EAAK,eAAe,WAAa,QAUrC,SAASqB,GAAkB,EAAS,EAAI,EAAK,CAG3C,OAAO,EAAa,EAAS,EAAQ,QAAQ,KAAK,OAAO,WAAW,SAAUH,EAAI,EAAI,CAAE,aAAc,KAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAE,CCrVrL,SAAgB,GAAkB,EAAM,CACtC,GAAI3B,IAAS,MAAQ,EAA0BA,EAAK,EAAI,GAAkBA,EAAK,CAC7E,MAAO,GAET,GAAI,GAAmBA,EAAK,CAC1B,MAAO,GCRX,SAAgB,GAAW,EAAY,EAAQ,EAAS,CAEtD,IAAM,EAAS,EAAE,CACbN,EAAQ,GAEZ,KAAO,EAAEA,EAAQqC,EAAW,QAAQ,CAClC,IAAM,EAAUA,EAAWrC,GAAO,WAE9B,GAAW,CAAC,EAAO,SAAS,EAAQ,GACtC,EAAS,EAAQ,EAAQ,EAAQ,CACjC,EAAO,KAAK,EAAQ,EAIxB,OAAO,ECZT,MAAa,GAAY,CACvB,KAAM,YACN,WAAY,GACZ,SAAU,GACX,CAQD,SAAS,GAAoB,EAAQ,EAAS,CAC5C,IAAIA,EAAQ,GAER,EAEA,EAEAsC,EAEA,EAEA,EAEA,EAEA,EAEA,EAMJ,KAAO,EAAEtC,EAAQ,EAAO,QAEtB,GAAI,EAAOA,GAAO,KAAO,SAAW,EAAOA,GAAO,GAAG,OAAS,qBAAuB,EAAOA,GAAO,GAAG,OAIpG,KAHA,EAAOA,EAGA,KAEL,GAAI,EAAO,GAAM,KAAO,QAAU,EAAO,GAAM,GAAG,OAAS,qBAAuB,EAAO,GAAM,GAAG,OAElG,EAAQ,eAAe,EAAO,GAAM,GAAG,CAAC,WAAW,EAAE,GAAK,EAAQ,eAAe,EAAOA,GAAO,GAAG,CAAC,WAAW,EAAE,CAAE,CAKhH,IAAK,EAAO,GAAM,GAAG,QAAU,EAAOA,GAAO,GAAG,SAAW,EAAOA,GAAO,GAAG,IAAI,OAAS,EAAOA,GAAO,GAAG,MAAM,QAAU,GAAK,GAAG,EAAO,GAAM,GAAG,IAAI,OAAS,EAAO,GAAM,GAAG,MAAM,OAAS,EAAOA,GAAO,GAAG,IAAI,OAAS,EAAOA,GAAO,GAAG,MAAM,QAAU,GAC3P,SAIF,EAAM,EAAO,GAAM,GAAG,IAAI,OAAS,EAAO,GAAM,GAAG,MAAM,OAAS,GAAK,EAAOA,GAAO,GAAG,IAAI,OAAS,EAAOA,GAAO,GAAG,MAAM,OAAS,EAAI,EAAI,EAC7I,IAAM,EAAQ,CACZ,GAAG,EAAO,GAAM,GAAG,IACpB,CACK,EAAM,CACV,GAAG,EAAOA,GAAO,GAAG,MACrB,CACD,GAAU,EAAO,CAAC,EAAI,CACtB,GAAU,EAAK,EAAI,CACnB,EAAkB,CAChB,KAAM,EAAM,EAAI,iBAAmB,mBACnC,QACA,IAAK,CACH,GAAG,EAAO,GAAM,GAAG,KAEtB,CACD,EAAkB,CAChB,KAAM,EAAM,EAAI,iBAAmB,mBACnC,MAAO,CACL,GAAG,EAAOA,GAAO,GAAG,MACrB,CACD,MACD,CACD,EAAO,CACL,KAAM,EAAM,EAAI,aAAe,eAC/B,MAAO,CACL,GAAG,EAAO,GAAM,GAAG,IACpB,CACD,IAAK,CACH,GAAG,EAAOA,GAAO,GAAG,OAEvB,CACD,EAAQ,CACN,KAAM,EAAM,EAAI,SAAW,WAC3B,MAAO,CACL,GAAG,EAAgB,MACpB,CACD,IAAK,CACH,GAAG,EAAgB,KAEtB,CACD,EAAO,GAAM,GAAG,IAAM,CACpB,GAAG,EAAgB,MACpB,CACD,EAAOA,GAAO,GAAG,MAAQ,CACvB,GAAG,EAAgB,IACpB,CACD,EAAa,EAAE,CAGX,EAAO,GAAM,GAAG,IAAI,OAAS,EAAO,GAAM,GAAG,MAAM,SACrD,EAAa,GAAK,EAAY,CAAC,CAAC,QAAS,EAAO,GAAM,GAAI,EAAQ,CAAE,CAAC,OAAQ,EAAO,GAAM,GAAI,EAAQ,CAAC,CAAC,EAI1G,EAAa,GAAK,EAAY,CAAC,CAAC,QAAS,EAAO,EAAQ,CAAE,CAAC,QAAS,EAAiB,EAAQ,CAAE,CAAC,OAAQ,EAAiB,EAAQ,CAAE,CAAC,QAASsC,EAAM,GAAS,CAAC,CAK7J,EAAa,GAAK,EAAY,GAAW,EAAQ,OAAO,WAAW,WAAW,KAAM,EAAO,MAAM,EAAO,EAAGtC,EAAM,CAAE,EAAQ,CAAC,CAG5H,EAAa,GAAK,EAAY,CAAC,CAAC,OAAQsC,EAAM,EAAQ,CAAE,CAAC,QAAS,EAAiB,EAAQ,CAAE,CAAC,OAAQ,EAAiB,EAAQ,CAAE,CAAC,OAAQ,EAAO,GAAS,CAAC,CAGvJ,EAAOtC,GAAO,GAAG,IAAI,OAAS,EAAOA,GAAO,GAAG,MAAM,QACvD,EAAS,EACT,EAAa,GAAK,EAAY,CAAC,CAAC,QAAS,EAAOA,GAAO,GAAI,EAAQ,CAAE,CAAC,OAAQ,EAAOA,GAAO,GAAI,EAAQ,CAAC,CAAC,EAE1G,EAAS,EAEX,GAAO,EAAQ,EAAO,EAAGA,EAAQ,EAAO,EAAG,EAAW,CACtD,EAAQ,EAAO,EAAW,OAAS,EAAS,EAC5C,OAQR,IADA,EAAQ,GACD,EAAEA,EAAQ,EAAO,QAClB,EAAOA,GAAO,GAAG,OAAS,sBAC5B,EAAOA,GAAO,GAAG,KAAO,QAG5B,OAAO,EAQT,SAAS,GAAkB,EAAS,EAAI,CACtC,IAAMuC,EAAmB,KAAK,OAAO,WAAW,iBAAiB,KAC3DL,EAAW,KAAK,SAChB,EAAS,GAAkBA,EAAS,CAGtC,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAGnB,MAFA,GAAS5B,EACT,EAAQ,MAAM,oBAAoB,CAC3B,EAAOA,EAAK,CAarB,SAAS,EAAO,EAAM,CACpB,GAAIA,IAAS,EAEX,OADA,EAAQ,QAAQA,EAAK,CACd,EAET,IAAM,EAAQ,EAAQ,KAAK,oBAAoB,CAGzC,EAAQ,GAAkBA,EAAK,CAI/B,EAAO,CAAC,GAAS,IAAU,GAAK,GAAUiC,EAAiB,SAASjC,EAAK,CACzE,EAAQ,CAAC,GAAU,IAAW,GAAK,GAASiC,EAAiB,SAASL,EAAS,CAGrF,MAFA,GAAM,MAAQ,GAAQ,IAAW,GAAK,EAAO,IAAS,GAAU,CAAC,IACjE,EAAM,OAAS,GAAQ,IAAW,GAAK,EAAQ,IAAU,GAAS,CAAC,IAC5DD,EAAG3B,EAAK,EAiBnB,SAAS,GAAU,EAAO,EAAQ,CAChC,EAAM,QAAU,EAChB,EAAM,QAAU,EAChB,EAAM,cAAgB,ECpOxB,MAAa,GAAW,CACtB,KAAM,WACN,SAAU,GACX,CAOD,SAAS,GAAiB,EAAS,EAAI,EAAK,CAC1C,IAAI,EAAO,EACX,OAAO,EAcP,SAAS,EAAM,EAAM,CAMnB,OALA,EAAQ,MAAM,WAAW,CACzB,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,iBAAiB,CAC9B,EAAQ,MAAM,mBAAmB,CAC1B,EAeT,SAAS,EAAK,EAAM,CAQlB,OAPI,GAAWA,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,GACJ,EAAIA,EAAK,CAEX,EAAWA,EAAK,CAezB,SAAS,EAAmB,EAAM,CAOhC,OALIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAM,EAAkBA,EAAK,EAEtE,EAAO,EACA,EAAyBA,EAAK,EAEhC,EAAWA,EAAK,CAezB,SAAS,EAAyB,EAAM,CAatC,OAZIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAO,EACA,IAIJA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAM,EAAkBA,EAAK,GAAK,IAAS,IACrF,EAAQ,QAAQA,EAAK,CACd,IAET,EAAO,EACA,EAAWA,EAAK,EAazB,SAAS,EAAU,EAAM,CAevB,OAdIA,IAAS,IACX,EAAQ,KAAK,mBAAmB,CAChC,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,iBAAiB,CAC9B,EAAQ,KAAK,WAAW,CACjB2B,GAIL3B,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,GAAaA,EAAK,CAC5D,EAAIA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAW,EAAM,CASxB,OARIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEL,GAAWA,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAiB,EAAM,CAC9B,OAAO,EAAkBA,EAAK,CAAG,EAAWA,EAAK,CAAG,EAAIA,EAAK,CAa/D,SAAS,EAAW,EAAM,CAexB,OAdIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAO,EACA,GAELA,IAAS,IAEX,EAAQ,KAAK,mBAAmB,CAAC,KAAO,gBACxC,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,iBAAiB,CAC9B,EAAQ,KAAK,WAAW,CACjB2B,GAEF,EAAW3B,EAAK,CAezB,SAAS,EAAW,EAAM,CAExB,IAAKA,IAAS,IAAM,EAAkBA,EAAK,GAAK,IAAS,GAAI,CAC3D,IAAMP,EAAOO,IAAS,GAAK,EAAa,EAExC,OADA,EAAQ,QAAQA,EAAK,CACdP,EAET,OAAO,EAAIO,EAAK,EC1NpB,MAAa,GAAY,CACvB,QAAS,GACT,SAAU,GACX,CAOD,SAAS,GAAkB,EAAS,EAAI,EAAK,CAC3C,OAAO,EAgBP,SAAS,EAAM,EAAM,CACnB,OAAO,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAO,aAAa,CAACA,EAAK,CAAG,EAAMA,EAAK,CAiB7F,SAAS,EAAM,EAAM,CACnB,OAAOA,IAAS,MAAQ,EAAmBA,EAAK,CAAG2B,EAAG3B,EAAK,CAAG,EAAIA,EAAK,EC7C3E,MAAa,GAAa,CACxB,aAAc,CACZ,SAAU,GACX,CACD,QACA,KAAM,aACN,SAAU,GACX,CAOD,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,IAAMS,EAAO,KACb,OAAO,EAYP,SAAS,EAAM,EAAM,CACnB,GAAIT,IAAS,GAAI,CACf,IAAM,EAAQS,EAAK,eAWnB,MAVA,CAIE,EAAM,QAHN,EAAQ,MAAM,aAAc,CAC1B,WAAY,GACb,CAAC,CACW,IAEf,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CACzB,EAET,OAAO,EAAIA,EAAK,CAalB,SAAS,EAAM,EAAM,CASnB,OARI,EAAcA,EAAK,EACrB,EAAQ,MAAM,6BAA6B,CAC3C,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,6BAA6B,CAC1C,EAAQ,KAAK,mBAAmB,CACzB2B,IAET,EAAQ,KAAK,mBAAmB,CACzBA,EAAG3B,EAAK,GAiBnB,SAAS,GAA+B,EAAS,EAAI,EAAK,CACxD,IAAMS,EAAO,KACb,OAAO,EAeP,SAAS,EAAU,EAAM,CAMvB,OALI,EAAcT,EAAK,CAGd,EAAa,EAAS,EAAY,aAAcS,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAE,CAACT,EAAK,CAErI,EAAWA,EAAK,CAgBzB,SAAS,EAAW,EAAM,CACxB,OAAO,EAAQ,QAAQ,GAAY2B,EAAI,EAAI,CAAC3B,EAAK,EAKrD,SAASkC,GAAK,EAAS,CACrB,EAAQ,KAAK,aAAa,CClI5B,MAAa,GAAkB,CAC7B,KAAM,kBACN,SAAU,GACX,CAOD,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,OAAO,EAYP,SAAS,EAAM,EAAM,CAKnB,OAJA,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,MAAM,eAAe,CAC7B,EAAQ,QAAQlC,EAAK,CACrB,EAAQ,KAAK,eAAe,CACrB,EAaT,SAAS,EAAO,EAAM,CASpB,OAPI,GAAiBA,EAAK,EACxB,EAAQ,MAAM,uBAAuB,CACrC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,uBAAuB,CACpC,EAAQ,KAAK,kBAAkB,CACxB2B,GAEF,EAAI3B,EAAK,EChDpB,MAAa,GAAqB,CAChC,KAAM,qBACN,SAAU,GACX,CAOD,SAAS,GAA2B,EAAS,EAAI,EAAK,CACpD,IAAMS,EAAO,KACT,EAAO,EAEP,EAEA,EACJ,OAAO,EAgBP,SAAS,EAAM,EAAM,CAKnB,OAJA,EAAQ,MAAM,qBAAqB,CACnC,EAAQ,MAAM,2BAA2B,CACzC,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,2BAA2B,CACjC,EAkBT,SAAS,EAAK,EAAM,CAUlB,OATIA,IAAS,IACX,EAAQ,MAAM,kCAAkC,CAChD,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,kCAAkC,CACxC,IAET,EAAQ,MAAM,0BAA0B,CACxC,EAAM,GACN,EAAO,EACA,EAAMA,EAAK,EAepB,SAAS,EAAQ,EAAM,CAarB,OAZIA,IAAS,IAAMA,IAAS,KAC1B,EAAQ,MAAM,sCAAsC,CACpD,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,sCAAsC,CACnD,EAAQ,MAAM,0BAA0B,CACxC,EAAM,EACN,EAAO,GACA,IAET,EAAQ,MAAM,0BAA0B,CACxC,EAAM,EACN,EAAO,GACA,EAAMA,EAAK,EAoBpB,SAAS,EAAM,EAAM,CACnB,GAAIA,IAAS,IAAM,EAAM,CACvB,IAAM,EAAQ,EAAQ,KAAK,0BAA0B,CAWrD,OAVI,IAAS,GAAqB,CAAC,GAA8BS,EAAK,eAAe,EAAM,CAAC,CACnF,EAAIT,EAAK,EAKlB,EAAQ,MAAM,2BAA2B,CACzC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,2BAA2B,CACxC,EAAQ,KAAK,qBAAqB,CAC3B2B,GAMT,OAJI,EAAK3B,EAAK,EAAI,IAAS,GACzB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,ECrIpB,IAAM,GAAsB,CAC1B,QAAS,GACT,SAAU,GACX,CAGD,MAAa,GAAa,CACxB,SAAU,GACV,KAAM,aACN,SAAU,GACX,CAOD,SAAS,GAAmB,EAAS,EAAI,EAAK,CAC5C,IAAMS,EAAO,KAEP,EAAa,CACjB,QAAS,GACT,SAAU,EACX,CACG,EAAgB,EAChB,EAAW,EAEX,EACJ,OAAO,EAcP,SAAS,EAAM,EAAM,CAEnB,OAAO,EAAmBT,EAAK,CAejC,SAAS,EAAmB,EAAM,CAChC,IAAM,EAAOS,EAAK,OAAOA,EAAK,OAAO,OAAS,GAM9C,MALA,GAAgB,GAAQ,EAAK,GAAG,OAAS,aAAe,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,OAAS,EACvG,EAAST,EACT,EAAQ,MAAM,aAAa,CAC3B,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,MAAM,0BAA0B,CACjC,EAAaA,EAAK,CAe3B,SAAS,EAAa,EAAM,CAU1B,OATIA,IAAS,GACX,IACA,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAW,EACN,EAAIA,EAAK,EAElB,EAAQ,KAAK,0BAA0B,CAChC,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAY,aAAa,CAACA,EAAK,CAAG,EAAWA,EAAK,EAevG,SAAS,EAAW,EAAM,CASxB,OARIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,kBAAkB,CACxBS,EAAK,UAAYkB,EAAG3B,EAAK,CAAG,EAAQ,MAAM,GAAqB,EAAgB,EAAM,CAACA,EAAK,GAEpG,EAAQ,MAAM,sBAAsB,CACpC,EAAQ,MAAM,cAAe,CAC3B,YAAa,SACd,CAAC,CACK,EAAKA,EAAK,EAenB,SAAS,EAAK,EAAM,CAelB,OAdIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,sBAAsB,CAC5B,EAAWA,EAAK,EAErB,EAAcA,EAAK,EACrB,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,sBAAsB,CAC5B,EAAa,EAAS,EAAY,aAAa,CAACA,EAAK,EAE1DA,IAAS,IAAMA,IAAS,EACnB,EAAIA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACd,GAeT,SAAS,EAAW,EAAM,CAQxB,OAPIA,IAAS,MAAQ,EAAmBA,EAAK,CACpC,EAAWA,EAAK,EAEzB,EAAQ,MAAM,sBAAsB,CACpC,EAAQ,MAAM,cAAe,CAC3B,YAAa,SACd,CAAC,CACK,EAAKA,EAAK,EAenB,SAAS,EAAK,EAAM,CAUlB,OATIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,sBAAsB,CAC5B,EAAWA,EAAK,EAErBA,IAAS,IAAMA,IAAS,EACnB,EAAIA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACd,GAgBT,SAAS,EAAe,EAAM,CAC5B,OAAO,EAAQ,QAAQ,EAAY,EAAO,EAAc,CAACA,EAAK,CAehE,SAAS,EAAc,EAAM,CAI3B,OAHA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,EAeT,SAAS,EAAa,EAAM,CAC1B,OAAO,EAAgB,GAAK,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAoB,aAAc,EAAgB,EAAE,CAACA,EAAK,CAAG,EAAmBA,EAAK,CAe/J,SAAS,EAAmB,EAAM,CAKhC,OAJIA,IAAS,MAAQ,EAAmBA,EAAK,CACpC,EAAQ,MAAM,GAAqB,EAAgB,EAAM,CAACA,EAAK,EAExE,EAAQ,MAAM,gBAAgB,CACvB,EAAaA,EAAK,EAe3B,SAAS,EAAa,EAAM,CAM1B,OALIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,gBAAgB,CACtB,EAAmBA,EAAK,GAEjC,EAAQ,QAAQA,EAAK,CACd,GAeT,SAAS,EAAM,EAAM,CAEnB,OADA,EAAQ,KAAK,aAAa,CACnB2B,EAAG3B,EAAK,CAQjB,SAAS,EAAmB,EAAS,EAAI,EAAK,CAC5C,IAAI,EAAO,EACX,OAAO,EAOP,SAAS,EAAY,EAAM,CAIzB,OAHA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnBmC,EAeT,SAASA,EAAM,EAAM,CAKnB,OADA,EAAQ,MAAM,kBAAkB,CACzB,EAAcnC,EAAK,CAAG,EAAaoC,EAAS,EAAqB,aAAc3B,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAE,CAACT,EAAK,CAAG,EAAoBA,EAAK,CAevM,SAAS,EAAoB,EAAM,CAKjC,OAJIA,IAAS,GACX,EAAQ,MAAM,0BAA0B,CACjC,EAAcA,EAAK,EAErBqC,EAAIrC,EAAK,CAelB,SAAS,EAAc,EAAM,CAU3B,OATIA,IAAS,GACX,IACA,EAAQ,QAAQA,EAAK,CACd,GAEL,GAAQ,GACV,EAAQ,KAAK,0BAA0B,CAChC,EAAcA,EAAK,CAAG,EAAaoC,EAAS,EAAoB,aAAa,CAACpC,EAAK,CAAG,EAAmBA,EAAK,EAEhHqC,EAAIrC,EAAK,CAelB,SAAS,EAAmB,EAAM,CAKhC,OAJIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,kBAAkB,CACxB2B,EAAG3B,EAAK,EAEVqC,EAAIrC,EAAK,GAUtB,SAAS,GAA4B,EAAS,EAAI,EAAK,CACrD,IAAMS,EAAO,KACb,OAAO,EAOP,SAAS,EAAM,EAAM,CAOnB,OANIT,IAAS,KACJ,EAAIA,EAAK,EAElB,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,GAQT,SAAS,EAAU,EAAM,CACvB,OAAOS,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,MAAQ,EAAIT,EAAK,CAAG2B,EAAG3B,EAAK,EC7bnE,MAAa,GAAe,CAC1B,KAAM,eACN,SAAU,GACX,CAGD,IAAM,GAAe,CACnB,QAAS,GACT,SAAU,GACX,CAOD,SAAS,GAAqB,EAAS,EAAI,EAAK,CAC9C,IAAMS,EAAO,KACb,OAAO,EAgBP,SAAS,EAAM,EAAM,CAMnB,OAHA,EAAQ,MAAM,eAAe,CAGtB,EAAa,EAAS,EAAa,aAAc,EAAM,CAACT,EAAK,CAatE,SAAS,EAAY,EAAM,CACzB,IAAM,EAAOS,EAAK,OAAOA,EAAK,OAAO,OAAS,GAC9C,OAAO,GAAQ,EAAK,GAAG,OAAS,cAAgB,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,QAAU,EAAI,EAAQT,EAAK,CAAG,EAAIA,EAAK,CAa/H,SAAS,EAAQ,EAAM,CAQrB,OAPIA,IAAS,KACJ,EAAMA,EAAK,CAEhB,EAAmBA,EAAK,CACnB,EAAQ,QAAQ,GAAc,EAAS,EAAM,CAACA,EAAK,EAE5D,EAAQ,MAAM,gBAAgB,CACvB,EAAOA,EAAK,EAarB,SAAS,EAAO,EAAM,CAMpB,OALIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,gBAAgB,CACtB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACd,GAIT,SAAS,EAAM,EAAM,CAKnB,OAJA,EAAQ,KAAK,eAAe,CAIrB2B,EAAG3B,EAAK,EASnB,SAAS,GAAqB,EAAS,EAAI,EAAK,CAC9C,IAAMS,EAAO,KACb,OAAO6B,EAaP,SAASA,EAAa,EAAM,CAmB1B,OAhBI7B,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,MACvB,EAAIT,EAAK,CAEd,EAAmBA,EAAK,EAC1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnBsC,GASF,EAAa,EAAS,EAAa,aAAc,EAAM,CAACtC,EAAK,CAatE,SAAS,EAAY,EAAM,CACzB,IAAM,EAAOS,EAAK,OAAOA,EAAK,OAAO,OAAS,GAC9C,OAAO,GAAQ,EAAK,GAAG,OAAS,cAAgB,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,QAAU,EAAIkB,EAAG3B,EAAK,CAAG,EAAmBA,EAAK,CAAGsC,EAAatC,EAAK,CAAG,EAAIA,EAAK,EChK5K,MAAa,GAAW,CACtB,KAAM,WACN,YACA,QAAS,GACT,SAAU,GACX,CAID,SAAS,GAAgB,EAAQ,CAC/B,IAAI,EAAgB,EAAO,OAAS,EAChC,EAAiB,EAEjBN,EAEA,EAGJ,IAAK,EAAO,GAAgB,GAAG,OAAS,cAAgB,EAAO,GAAgB,GAAG,OAAS,WAAa,EAAO,GAAe,GAAG,OAAS,cAAgB,EAAO,GAAe,GAAG,OAAS,SAI1L,KAHA,EAAQ,EAGD,EAAEA,EAAQ,GACf,GAAI,EAAOA,GAAO,GAAG,OAAS,eAAgB,CAE5C,EAAO,GAAgB,GAAG,KAAO,kBACjC,EAAO,GAAe,GAAG,KAAO,kBAChC,GAAkB,EAClB,GAAiB,EACjB,OAQN,IAFA,EAAQ,EAAiB,EACzB,IACO,EAAEA,GAAS,GACZ,IAAU,OACRA,IAAU,GAAiB,EAAOA,GAAO,GAAG,OAAS,eACvD,EAAQA,IAEDA,IAAU,GAAiB,EAAOA,GAAO,GAAG,OAAS,gBAC9D,EAAO,GAAO,GAAG,KAAO,eACpBA,IAAU,EAAQ,IACpB,EAAO,GAAO,GAAG,IAAM,EAAOA,EAAQ,GAAG,GAAG,IAC5C,EAAO,OAAO,EAAQ,EAAGA,EAAQ,EAAQ,EAAE,CAC3C,GAAiBA,EAAQ,EAAQ,EACjC,EAAQ,EAAQ,GAElB,EAAQ,QAGZ,OAAO,EAQT,SAASkC,GAAS,EAAM,CAEtB,OAAO5B,IAAS,IAAM,KAAK,OAAO,KAAK,OAAO,OAAS,GAAG,GAAG,OAAS,kBAQxE,SAAS,GAAiB,EAAS,EAAI,EAAK,CAE1C,IAAI,EAAW,EAEX,EAEA,EACJ,OAAO,EAcP,SAAS,EAAM,EAAM,CAGnB,OAFA,EAAQ,MAAM,WAAW,CACzB,EAAQ,MAAM,mBAAmB,CAC1B,EAAaA,EAAK,CAa3B,SAAS,EAAa,EAAM,CAO1B,OANIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,IACO,IAET,EAAQ,KAAK,mBAAmB,CACzB,EAAQA,EAAK,EAatB,SAAS,EAAQ,EAAM,CA+BrB,OA7BIA,IAAS,KACJ,EAAIA,EAAK,CAMdA,IAAS,IACX,EAAQ,MAAM,QAAQ,CACtB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,QAAQ,CACd,GAILA,IAAS,IACX,EAAQ,EAAQ,MAAM,mBAAmB,CACzC,EAAO,EACA,EAAcA,EAAK,EAExB,EAAmBA,EAAK,EAC1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,IAIT,EAAQ,MAAM,eAAe,CACtB,EAAKA,EAAK,EAanB,SAAS,EAAK,EAAM,CAMlB,OALIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,EAAmBA,EAAK,EACzE,EAAQ,KAAK,eAAe,CACrB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAc,EAAM,CAiB3B,OAfIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,IACO,GAIL,IAAS,GACX,EAAQ,KAAK,mBAAmB,CAChC,EAAQ,KAAK,WAAW,CACjB2B,EAAG3B,EAAK,GAIjB,EAAM,KAAO,eACN,EAAKA,EAAK,GCjMrB,IAAa,GAAb,KAA0B,CAOxB,YAAY,EAAS,CAEnB,KAAK,KAAO,EAAU,CAAC,GAAG,EAAQ,CAAG,EAAE,CAEvC,KAAK,MAAQ,EAAE,CAYjB,IAAI,EAAO,CACT,GAAIN,EAAQ,GAAKA,GAAS,KAAK,KAAK,OAAS,KAAK,MAAM,OACtD,MAAU,WAAW,wBAA0BA,EAAQ,kCAAoC,KAAK,KAAK,OAAS,KAAK,MAAM,QAAU,IAAI,CAGzI,OADIA,EAAQ,KAAK,KAAK,OAAe,KAAK,KAAKA,GACxC,KAAK,MAAM,KAAK,MAAM,OAASA,EAAQ,KAAK,KAAK,OAAS,GAOnE,IAAI,QAAS,CACX,OAAO,KAAK,KAAK,OAAS,KAAK,MAAM,OAUvC,OAAQ,CAEN,OADA,KAAK,UAAU,EAAE,CACV,KAAK,MAAM,KAAK,CAczB,MAAM,EAAO,EAAK,CAEhB,IAAM,EAAO,GAAoC,IAOjD,OANI,EAAO,KAAK,KAAK,OACZ,KAAK,KAAK,MAAM,EAAO,EAAK,CAEjC,EAAQ,KAAK,KAAK,OACb,KAAK,MAAM,MAAM,KAAK,MAAM,OAAS,EAAO,KAAK,KAAK,OAAQ,KAAK,MAAM,OAAS,EAAQ,KAAK,KAAK,OAAO,CAAC,SAAS,CAEvH,KAAK,KAAK,MAAM,EAAM,CAAC,OAAO,KAAK,MAAM,MAAM,KAAK,MAAM,OAAS,EAAO,KAAK,KAAK,OAAO,CAAC,SAAS,CAAC,CAuB/G,OAAO,EAAO,EAAa,EAAO,CAEhC,IAAM,EAAQ,GAAe,EAC7B,KAAK,UAAU,KAAK,MAAM,EAAM,CAAC,CACjC,IAAM,EAAU,KAAK,MAAM,OAAO,KAAK,MAAM,OAAS,EAAO,IAAyB,CAEtF,OADI,GAAO,GAAY,KAAK,KAAM,EAAM,CACjC,EAAQ,SAAS,CAW1B,KAAM,CAEJ,OADA,KAAK,UAAU,IAAyB,CACjC,KAAK,KAAK,KAAK,CAYxB,KAAK,EAAM,CACT,KAAK,UAAU,IAAyB,CACxC,KAAK,KAAK,KAAK,EAAK,CAYtB,SAAS,EAAO,CACd,KAAK,UAAU,IAAyB,CACxC,GAAY,KAAK,KAAM,EAAM,CAY/B,QAAQ,EAAM,CACZ,KAAK,UAAU,EAAE,CACjB,KAAK,MAAM,KAAK,EAAK,CAYvB,YAAY,EAAO,CACjB,KAAK,UAAU,EAAE,CACjB,GAAY,KAAK,MAAO,EAAM,SAAS,CAAC,CAe1C,UAAU,EAAG,CACP,SAAM,KAAK,KAAK,QAAU,EAAI,KAAK,KAAK,QAAU,KAAK,MAAM,SAAW,GAAK,EAAI,GAAK,KAAK,KAAK,SAAW,GAC/G,GAAI,EAAI,KAAK,KAAK,OAAQ,CAExB,IAAM,EAAU,KAAK,KAAK,OAAO,EAAG,IAAyB,CAC7D,GAAY,KAAK,MAAO,EAAQ,SAAS,CAAC,KACrC,CAEL,IAAM,EAAU,KAAK,MAAM,OAAO,KAAK,KAAK,OAAS,KAAK,MAAM,OAAS,EAAG,IAAyB,CACrG,GAAY,KAAK,KAAM,EAAQ,SAAS,CAAC,IAiB/C,SAAS,GAAY,EAAM,EAAO,CAEhC,IAAI,EAAa,EACjB,GAAI,EAAM,OAAS,IACjB,EAAK,KAAK,GAAG,EAAM,MAEnB,KAAO,EAAa,EAAM,QACxB,EAAK,KAAK,GAAG,EAAM,MAAM,EAAY,EAAa,IAAM,CAAC,CACzD,GAAc,ICpOpB,SAAgB,GAAY,EAAa,CAEvC,IAAM,EAAQ,EAAE,CACZA,EAAQ,GAER,EAEA,EAEA,EAEA,EAEA,EAEA,EAEA,EACE,EAAS,IAAI,GAAa,EAAY,CAC5C,KAAO,EAAEA,EAAQ,EAAO,QAAQ,CAC9B,KAAOA,KAAS,GACd,EAAQ,EAAMA,GAMhB,GAJA,EAAQ,EAAO,IAAIA,EAAM,CAIrBA,GAAS,EAAM,GAAG,OAAS,aAAe,EAAO,IAAIA,EAAQ,EAAE,CAAC,GAAG,OAAS,mBAC9E,EAAY,EAAM,GAAG,WAAW,OAChC,EAAa,EACT,EAAa,EAAU,QAAU,EAAU,GAAY,GAAG,OAAS,oBACrE,GAAc,GAEZ,EAAa,EAAU,QAAU,EAAU,GAAY,GAAG,OAAS,WACrE,KAAO,EAAE,EAAa,EAAU,QAC1B,EAAU,GAAY,GAAG,OAAS,WAGlC,EAAU,GAAY,GAAG,OAAS,cACpC,EAAU,GAAY,GAAG,4BAA8B,GACvD,KAOR,GAAI,EAAM,KAAO,QACX,EAAM,GAAG,cACX,OAAO,OAAO,EAAO,GAAW,EAAQA,EAAM,CAAC,CAC/C,EAAQ,EAAMA,GACd,EAAO,YAIF,EAAM,GAAG,WAAY,CAG5B,IAFA,EAAaA,EACb,EAAY,OACL,KAEL,GADA,EAAa,EAAO,IAAI,EAAW,CAC/B,EAAW,GAAG,OAAS,cAAgB,EAAW,GAAG,OAAS,kBAC5D,EAAW,KAAO,UAChB,IACF,EAAO,IAAI,EAAU,CAAC,GAAG,KAAO,mBAElC,EAAW,GAAG,KAAO,aACrB,EAAY,WAEL,IAAW,GAAG,OAAS,cAAgB,EAAW,GAAG,OAAS,kBAGvE,MAGA,IAEF,EAAM,GAAG,IAAM,CACb,GAAG,EAAO,IAAI,EAAU,CAAC,GAAG,MAC7B,CAGD,EAAa,EAAO,MAAM,EAAWA,EAAM,CAC3C,EAAW,QAAQ,EAAM,CACzB,EAAO,OAAO,EAAWA,EAAQ,EAAY,EAAG,EAAW,GAOjE,OADA,GAAO,EAAa,EAAG,IAA0B,EAAO,MAAM,EAAE,CAAC,CAC1D,CAAC,EAaV,SAAS,GAAW,EAAQ,EAAY,CACtC,IAAM,EAAQ,EAAO,IAAI,EAAW,CAAC,GAC/B,EAAU,EAAO,IAAI,EAAW,CAAC,GACnC,EAAgB,EAAa,EAE3B,EAAiB,EAAE,CACrB,EAAY,EAAM,WACjB,IACH,EAAY,EAAQ,OAAO,EAAM,aAAa,EAAM,MAAM,CACtD,EAAM,2BACR,EAAU,yBAA2B,KAGzC,IAAM,EAAc,EAAU,OAExB,EAAQ,EAAE,CAEV,EAAO,EAAE,CAEX,EAEAkC,EACAlC,EAAQ,GAER,EAAU,EACV,EAAS,EACT,EAAQ,EACN,EAAS,CAAC,EAAM,CAItB,KAAO,GAAS,CAEd,KAAO,EAAO,IAAI,EAAE,EAAc,CAAC,KAAO,IAG1C,EAAe,KAAK,EAAc,CAC7B,EAAQ,aACX,EAAS,EAAQ,YAAY,EAAQ,CAChC,EAAQ,MACX,EAAO,KAAK,KAAK,CAEfkC,GACF,EAAU,WAAW,EAAQ,MAAM,CAEjC,EAAQ,8BACV,EAAU,mCAAqC,IAEjD,EAAU,MAAM,EAAO,CACnB,EAAQ,8BACV,EAAU,mCAAqC,SAKnD,EAAW,EACX,EAAU,EAAQ,KAMpB,IADA,EAAU,EACH,EAAElC,EAAQ,EAAY,QAG3B,EAAYA,GAAO,KAAO,QAAU,EAAYA,EAAQ,GAAG,KAAO,SAAW,EAAYA,GAAO,GAAG,OAAS,EAAYA,EAAQ,GAAG,GAAG,MAAQ,EAAYA,GAAO,GAAG,MAAM,OAAS,EAAYA,GAAO,GAAG,IAAI,OAC3M,EAAQA,EAAQ,EAChB,EAAO,KAAK,EAAM,CAElB,EAAQ,WAAa,OACrB,EAAQ,SAAW,OACnB,EAAU,EAAQ,MAqBtB,IAhBA,EAAU,OAAS,EAAE,CAKjB,GAEF,EAAQ,WAAa,OACrB,EAAQ,SAAW,QAEnB,EAAO,KAAK,CAKd,EAAQ,EAAO,OACR,KAAS,CACd,IAAM,EAAQ,EAAY,MAAM,EAAOA,GAAQ,EAAOA,EAAQ,GAAG,CAC3DyC,EAAQ,EAAe,KAAK,CAClC,EAAM,KAAK,CAACA,EAAOA,EAAQ,EAAM,OAAS,EAAE,CAAC,CAC7C,EAAO,OAAOA,EAAO,EAAG,EAAM,CAIhC,IAFA,EAAM,SAAS,CACf,EAAQ,GACD,EAAEzC,EAAQ,EAAM,QACrB,EAAK,EAAS,EAAMA,GAAO,IAAM,EAAS,EAAMA,GAAO,GACvD,GAAU,EAAMA,GAAO,GAAK,EAAMA,GAAO,GAAK,EAEhD,OAAO,EChNT,MAAa6C,GAAU,CACrB,QAAS,GACT,SAAU,GACX,CAGD,IAAM,GAAwB,CAC5B,QAAS,GACT,SAAU,GACX,CAQD,SAAS,GAAe,EAAQ,CAE9B,OADA,GAAY,EAAO,CACZ,EAQT,SAAS,GAAgB,EAAS,EAAI,CAEpC,IAAIX,EACJ,OAAO,EAYP,SAAS,EAAW,EAAM,CAKxB,OAJA,EAAQ,MAAM,UAAU,CACxB,EAAW,EAAQ,MAAM,eAAgB,CACvC,YAAa,UACd,CAAC,CACK,EAAY5B,EAAK,CAa1B,SAAS,EAAY,EAAM,CAazB,OAZIA,IAAS,KACJ,EAAWA,EAAK,CAKrB,EAAmBA,EAAK,CACnB,EAAQ,MAAM,GAAuB,EAAiB,EAAW,CAACA,EAAK,EAIhF,EAAQ,QAAQA,EAAK,CACd,GAQT,SAAS,EAAW,EAAM,CAGxB,OAFA,EAAQ,KAAK,eAAe,CAC5B,EAAQ,KAAK,UAAU,CAChB2B,EAAG3B,EAAK,CAQjB,SAAS,EAAgB,EAAM,CAQ7B,OAPA,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,eAAe,CAC5B,EAAS,KAAO,EAAQ,MAAM,eAAgB,CAC5C,YAAa,UACb,WACD,CAAC,CACF,EAAW4B,EAAS,KACb,GASX,SAAS,GAAqB,EAAS,EAAI,EAAK,CAC9C,IAAMnB,EAAO,KACb,OAAO,EAOP,SAAS,EAAe,EAAM,CAK5B,OAJA,EAAQ,KAAK,eAAe,CAC5B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,EAAa,EAAS,EAAU,aAAa,CAQtD,SAAS,EAAS,EAAM,CACtB,GAAIA,IAAS,MAAQ,EAAmBA,EAAK,CAC3C,OAAO,EAAIA,EAAK,CAKlB,IAAM,EAAOS,EAAK,OAAOA,EAAK,OAAO,OAAS,GAI9C,MAHI,CAACA,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,EAAI,GAAQ,EAAK,GAAG,OAAS,cAAgB,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,QAAU,EACrJkB,EAAG3B,EAAK,CAEV,EAAQ,UAAUS,EAAK,OAAO,WAAW,KAAM,EAAKkB,EAAG,CAAC3B,EAAK,ECtHxE,SAAgB,GAAmB,EAAS,EAAI,EAAK,EAAM,EAAa,EAAmB,EAAS,EAAY,EAAK,CACnH,IAAM,EAAQ,GAAO,IACjB,EAAU,EACd,OAAO,EAcP,SAAS,EAAM,EAAM,CAoBnB,OAnBIA,IAAS,IACX,EAAQ,MAAM,EAAK,CACnB,EAAQ,MAAM,EAAY,CAC1B,EAAQ,MAAM,EAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAkB,CACxB,GAILA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,GAAaA,EAAK,CAC5D,EAAIA,EAAK,EAElB,EAAQ,MAAM,EAAK,CACnB,EAAQ,MAAM,EAAQ,CACtB,EAAQ,MAAM,EAAW,CACzB,EAAQ,MAAM,cAAe,CAC3B,YAAa,SACd,CAAC,CACKwC,EAAIxC,EAAK,EAalB,SAAS,EAAe,EAAM,CAa5B,OAZIA,IAAS,IACX,EAAQ,MAAM,EAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAkB,CAC/B,EAAQ,KAAK,EAAY,CACzB,EAAQ,KAAK,EAAK,CACX2B,IAET,EAAQ,MAAM,EAAW,CACzB,EAAQ,MAAM,cAAe,CAC3B,YAAa,SACd,CAAC,CACK,EAAS3B,EAAK,EAavB,SAAS,EAAS,EAAM,CAUtB,OATIA,IAAS,IACX,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,EAAW,CACjB,EAAeA,EAAK,EAEzBA,IAAS,MAAQA,IAAS,IAAM,EAAmBA,EAAK,CACnD,EAAIA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAiB,GAaxC,SAAS,EAAe,EAAM,CAK5B,OAJIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACzC,EAAQ,QAAQA,EAAK,CACd,GAEF,EAASA,EAAK,CAavB,SAASwC,EAAI,EAAM,CA0BjB,MAzBI,CAAC,IAAYxC,IAAS,MAAQA,IAAS,IAAM,EAA0BA,EAAK,GAC9E,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,EAAW,CACxB,EAAQ,KAAK,EAAQ,CACrB,EAAQ,KAAK,EAAK,CACX2B,EAAG3B,EAAK,EAEb,EAAU,GAASA,IAAS,IAC9B,EAAQ,QAAQA,EAAK,CACrB,IACOwC,GAELxC,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,IACOwC,GAMLxC,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,GAAaA,EAAK,CAC5D,EAAIA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAYwC,GAanC,SAAS,EAAU,EAAM,CAKvB,OAJIxC,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACzC,EAAQ,QAAQA,EAAK,CACdwC,GAEFA,EAAIxC,EAAK,EClKpB,SAAgB,GAAa,EAAS,EAAI,EAAK,EAAM,EAAY,EAAY,CAC3E,IAAMS,EAAO,KACT,EAAO,EAEP,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAMnB,OALA,EAAQ,MAAM,EAAK,CACnB,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,EAAW,CACxB,EAAQ,MAAM,EAAW,CAClB,EAaT,SAAS,EAAQ,EAAM,CA6BrB,OA5BI,EAAO,KAAOA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,CAAC,GAMlEA,IAAS,IAAM,CAAC,GAAQ,2BAA4BS,EAAK,OAAO,WACvD,EAAIT,EAAK,CAEdA,IAAS,IACX,EAAQ,KAAK,EAAW,CACxB,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAW,CACxB,EAAQ,KAAK,EAAK,CACX2B,GAIL,EAAmB3B,EAAK,EAC1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,IAET,EAAQ,MAAM,cAAe,CAC3B,YAAa,SACd,CAAC,CACK,EAAYA,EAAK,EAa1B,SAAS,EAAY,EAAM,CAOzB,OANIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,EAAmBA,EAAK,EAAI,IAAS,KACtF,EAAQ,KAAK,cAAc,CACpB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACrB,CAAW,GAAO,CAAC,EAAcA,EAAK,CAC/BA,IAAS,GAAK,EAAc,GAarC,SAAS,EAAY,EAAM,CAMzB,OALIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACzC,EAAQ,QAAQA,EAAK,CACrB,IACO,GAEF,EAAYA,EAAK,ECvG5B,SAAgB,GAAa,EAAS,EAAI,EAAK,EAAM,EAAY,EAAY,CAE3E,IAAI,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CASnB,OARIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACzC,EAAQ,MAAM,EAAK,CACnB,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAW,CACxB,EAASA,IAAS,GAAK,GAAKA,EACrB,GAEF,EAAIA,EAAK,CAelB,SAAS,EAAM,EAAM,CASnB,OARIA,IAAS,GACX,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAW,CACxB,EAAQ,KAAK,EAAK,CACX2B,IAET,EAAQ,MAAM,EAAW,CAClB,EAAQ3B,EAAK,EAatB,SAAS,EAAQ,EAAM,CAoBrB,OAnBIA,IAAS,GACX,EAAQ,KAAK,EAAW,CACjB,EAAM,EAAO,EAElBA,IAAS,KACJ,EAAIA,EAAK,CAId,EAAmBA,EAAK,EAE1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,EAAa,EAAS,EAAS,aAAa,GAErD,EAAQ,MAAM,cAAe,CAC3B,YAAa,SACd,CAAC,CACK,EAAOA,EAAK,EAQrB,SAAS,EAAO,EAAM,CAMpB,OALIA,IAAS,GAAUA,IAAS,MAAQ,EAAmBA,EAAK,EAC9D,EAAQ,KAAK,cAAc,CACpB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAS,GAahC,SAAS,EAAO,EAAM,CAKpB,OAJIA,IAAS,GAAUA,IAAS,IAC9B,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAOA,EAAK,ECnIvB,SAAgB,GAAkB,EAAS,EAAI,CAE7C,IAAI,EACJ,OAAO,EAGP,SAAS,EAAM,EAAM,CAWnB,OAVI,EAAmBA,EAAK,EAC1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CAC1B,EAAO,GACA,GAEL,EAAcA,EAAK,CACd,EAAa,EAAS,EAAO,EAAO,aAAe,aAAa,CAACA,EAAK,CAExE2B,EAAG3B,EAAK,ECxBnB,MAAayC,GAAa,CACxB,KAAM,aACN,SAAU,GACX,CAGD,IAAM,GAAc,CAClB,QAAS,GACT,SAAU,GACX,CAOD,SAAS,GAAmB,EAAS,EAAI,EAAK,CAC5C,IAAMhC,EAAO,KAET,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAKnB,OADA,EAAQ,MAAM,aAAa,CACpB,EAAOT,EAAK,CAarB,SAAS,EAAO,EAAM,CAGpB,OAAO,GAAa,KAAKS,EAAM,EAAS,EAExC,EAAK,kBAAmB,wBAAyB,wBAAwB,CAACT,EAAK,CAajF,SAAS,EAAW,EAAM,CAQxB,MAPA,GAAa,GAAoBS,EAAK,eAAeA,EAAK,OAAOA,EAAK,OAAO,OAAS,GAAG,GAAG,CAAC,MAAM,EAAG,GAAG,CAAC,CACtGT,IAAS,IACX,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CACzB,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAY,EAAM,CAEzB,OAAO,EAA0BA,EAAK,CAAG,GAAkB,EAAS,EAAkB,CAACA,EAAK,CAAG,EAAkBA,EAAK,CAaxH,SAAS,EAAkB,EAAM,CAC/B,OAAO,GAAmB,EAAS,EAEnC,EAAK,wBAAyB,+BAAgC,qCAAsC,2BAA4B,8BAA8B,CAACA,EAAK,CAatK,SAAS,EAAiB,EAAM,CAC9B,OAAO,EAAQ,QAAQ,GAAa,EAAO,EAAM,CAACA,EAAK,CAezD,SAAS,EAAM,EAAM,CACnB,OAAO,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAiB,aAAa,CAACA,EAAK,CAAG,EAAgBA,EAAK,CAejH,SAAS,EAAgB,EAAM,CAc7B,OAbIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,aAAa,CAK1B,EAAK,OAAO,QAAQ,KAAK,EAAW,CAK7B2B,EAAG3B,EAAK,EAEV,EAAIA,EAAK,EASpB,SAAS,GAAoB,EAAS,EAAI,EAAK,CAC7C,OAAO0C,EAcP,SAASA,EAAY,EAAM,CACzB,OAAO,EAA0B1C,EAAK,CAAG,GAAkB,EAAS,EAAa,CAACA,EAAK,CAAG,EAAIA,EAAK,CAcrG,SAAS,EAAa,EAAM,CAC1B,OAAO,GAAa,EAAS,EAAY,EAAK,kBAAmB,wBAAyB,wBAAwB,CAACA,EAAK,CAa1H,SAAS,EAAW,EAAM,CACxB,OAAO,EAAcA,EAAK,CAAG,EAAa,EAAS,EAA8B,aAAa,CAACA,EAAK,CAAG,EAA6BA,EAAK,CAa3I,SAAS,EAA6B,EAAM,CAC1C,OAAOA,IAAS,MAAQ,EAAmBA,EAAK,CAAG2B,EAAG3B,EAAK,CAAG,EAAIA,EAAK,EChP3E,MAAa,GAAkB,CAC7B,KAAM,kBACN,SAAU,GACX,CAOD,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,OAAO,EAaP,SAAS,EAAM,EAAM,CAGnB,OAFA,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,QAAQA,EAAK,CACd,EAcT,SAAS,EAAM,EAAM,CAKnB,OAJI,EAAmBA,EAAK,EAC1B,EAAQ,KAAK,kBAAkB,CACxB2B,EAAG3B,EAAK,EAEV,EAAIA,EAAK,EC1CpB,MAAa,GAAa,CACxB,KAAM,aACN,QAAS,GACT,SAAU,GACX,CAGD,SAAS,GAAkB,EAAQ,EAAS,CAC1C,IAAI,EAAa,EAAO,OAAS,EAC7B,EAAe,EAEfuC,EAEAP,EA4BJ,OAzBI,EAAO,GAAc,GAAG,OAAS,eACnC,GAAgB,GAId,EAAa,EAAI,GAAgB,EAAO,GAAY,GAAG,OAAS,eAClE,GAAc,GAEZ,EAAO,GAAY,GAAG,OAAS,uBAAyB,IAAiB,EAAa,GAAK,EAAa,EAAI,GAAgB,EAAO,EAAa,GAAG,GAAG,OAAS,gBACjK,GAAc,EAAe,IAAM,EAAa,EAAI,GAElD,EAAa,IACf,EAAU,CACR,KAAM,iBACN,MAAO,EAAO,GAAc,GAAG,MAC/B,IAAK,EAAO,GAAY,GAAG,IAC5B,CACD,EAAO,CACL,KAAM,YACN,MAAO,EAAO,GAAc,GAAG,MAC/B,IAAK,EAAO,GAAY,GAAG,IAC3B,YAAa,OACd,CACD,GAAO,EAAQ,EAAc,EAAa,EAAe,EAAG,CAAC,CAAC,QAASO,EAAS,EAAQ,CAAE,CAAC,QAASP,EAAM,EAAQ,CAAE,CAAC,OAAQA,EAAM,EAAQ,CAAE,CAAC,OAAQO,EAAS,GAAS,CAAC,EAEpK,EAQT,SAAS,GAAmB,EAAS,EAAI,EAAK,CAC5C,IAAI,EAAO,EACX,OAAO,EAYP,SAAS,EAAM,EAAM,CAGnB,OADA,EAAQ,MAAM,aAAa,CACpB,EAAOvC,EAAK,CAarB,SAAS,EAAO,EAAM,CAEpB,OADA,EAAQ,MAAM,qBAAqB,CAC5B,EAAaA,EAAK,CAa3B,SAAS,EAAa,EAAM,CAW1B,OAVIA,IAAS,IAAM,IAAS,GAC1B,EAAQ,QAAQA,EAAK,CACd,GAILA,IAAS,MAAQ,EAA0BA,EAAK,EAClD,EAAQ,KAAK,qBAAqB,CAC3B,EAAQA,EAAK,EAEf,EAAIA,EAAK,CAalB,SAAS,EAAQ,EAAM,CAmBrB,OAlBIA,IAAS,IACX,EAAQ,MAAM,qBAAqB,CAC5B,EAAgBA,EAAK,EAE1BA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,aAAa,CAInB2B,EAAG3B,EAAK,EAEb,EAAcA,EAAK,CACd,EAAa,EAAS,EAAS,aAAa,CAACA,EAAK,EAK3D,EAAQ,MAAM,iBAAiB,CACxB,EAAKA,EAAK,EAenB,SAAS,EAAgB,EAAM,CAM7B,OALIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,qBAAqB,CAC3B,EAAQA,EAAK,EAatB,SAAS,EAAK,EAAM,CAMlB,OALIA,IAAS,MAAQA,IAAS,IAAM,EAA0BA,EAAK,EACjE,EAAQ,KAAK,iBAAiB,CACvB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACd,ICjLX,MAAa,GAAiB,gXA+D7B,CAcY,GAAe,CAAC,MAAO,SAAU,QAAS,WAAW,CC5ErD,GAAW,CACtB,SAAU,GACV,KAAM,WACN,UAAW,GACX,SAAU,GACX,CAGD,IAAM,GAAkB,CACtB,QAAS,GACT,SAAU,GACX,CACK,GAA2B,CAC/B,QAAS,GACT,SAAU,GACX,CAGD,SAAS,GAAkB,EAAQ,CACjC,IAAIN,EAAQ,EAAO,OACnB,KAAO,KACD,IAAOA,GAAO,KAAO,SAAW,EAAOA,GAAO,GAAG,OAAS,cAYhE,OARIA,EAAQ,GAAK,EAAOA,EAAQ,GAAG,GAAG,OAAS,eAE7C,EAAOA,GAAO,GAAG,MAAQ,EAAOA,EAAQ,GAAG,GAAG,MAE9C,EAAOA,EAAQ,GAAG,GAAG,MAAQ,EAAOA,EAAQ,GAAG,GAAG,MAElD,EAAO,OAAOA,EAAQ,EAAG,EAAE,EAEtB,EAQT,SAAS,GAAiB,EAAS,EAAI,EAAK,CAC1C,IAAMe,EAAO,KAET,EAEA,EAEA,EAEAf,EAEA,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAEnB,OAAO,EAAOM,EAAK,CAarB,SAAS,EAAO,EAAM,CAIpB,OAHA,EAAQ,MAAM,WAAW,CACzB,EAAQ,MAAM,eAAe,CAC7B,EAAQ,QAAQA,EAAK,CACd,EAiBT,SAAS,EAAK,EAAM,CA4BlB,OA3BIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAa,GACN,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAS,EAMFS,EAAK,UAAYkB,EAAK,GAI3B,GAAW3B,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACrB,EAAS,OAAO,aAAaA,EAAK,CAC3B,GAEF,EAAIA,EAAK,CAiBlB,SAAS,EAAgB,EAAM,CAqB7B,OApBIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAS,EACF,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAS,EACT,EAAQ,EACD,GAIL,GAAWA,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACrB,EAAS,EAGFS,EAAK,UAAYkB,EAAK,GAExB,EAAI3B,EAAK,CAalB,SAAS,EAAkB,EAAM,CAO/B,OANIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CAGdS,EAAK,UAAYkB,EAAK,GAExB,EAAI3B,EAAK,CAalB,SAAS,EAAgB,EAAM,CAW7B,OATIA,IADU,SACK,WAAW,IAAQ,EACpC,EAAQ,QAAQA,EAAK,CACjBN,IAAU,EAGLe,EAAK,UAAYkB,EAAK,EAExB,GAEF,EAAI3B,EAAK,CAalB,SAAS,EAAc,EAAM,CAO3B,OANI,GAAWA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACrB,EAAS,OAAO,aAAaA,EAAK,CAC3B,GAEF,EAAIA,EAAK,CAelB,SAAS,EAAQ,EAAM,CACrB,GAAIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,EAA0BA,EAAK,CAAE,CAClF,IAAM,EAAQA,IAAS,GACjB,EAAO,EAAO,aAAa,CAoBjC,MAnBI,CAAC,GAAS,CAAC,GAAc,GAAa,SAAS,EAAK,EACtD,EAAS,EAGFS,EAAK,UAAYkB,EAAG3B,EAAK,CAAG,EAAaA,EAAK,EAEnD,GAAe,SAAS,EAAO,aAAa,CAAC,EAC/C,EAAS,EACL,GACF,EAAQ,QAAQA,EAAK,CACd,GAKFS,EAAK,UAAYkB,EAAG3B,EAAK,CAAG,EAAaA,EAAK,GAEvD,EAAS,EAEFS,EAAK,WAAa,CAACA,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,MAAQ,EAAIT,EAAK,CAAG,EAAa,EAAwBA,EAAK,CAAG,EAA4BA,EAAK,EAS1J,OALIA,IAAS,IAAM,EAAkBA,EAAK,EACxC,EAAQ,QAAQA,EAAK,CACrB,GAAU,OAAO,aAAaA,EAAK,CAC5B,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAiB,EAAM,CAO9B,OANIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CAGdS,EAAK,UAAYkB,EAAK,GAExB,EAAI3B,EAAK,CAalB,SAAS,EAAwB,EAAM,CAKrC,OAJI,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAYA,EAAK,CA0B1B,SAAS,EAA4B,EAAM,CAezC,OAdIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAILA,IAAS,IAAMA,IAAS,IAAM,GAAWA,EAAK,EAChD,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAYA,EAAK,CAiB1B,SAAS,EAAsB,EAAM,CAMnC,OAJIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAM,EAAkBA,EAAK,EACrF,EAAQ,QAAQA,EAAK,CACd,GAEF,EAA2BA,EAAK,CAgBzC,SAAS,EAA2B,EAAM,CASxC,OARIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAA4BA,EAAK,CAgB1C,SAAS,EAA6B,EAAM,CAa1C,OAZIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,GAClE,EAAIA,EAAK,CAEdA,IAAS,IAAMA,IAAS,IAC1B,EAAQ,QAAQA,EAAK,CACrB,EAAUA,EACH,GAEL,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,GAEF,GAA+BA,EAAK,CAe7C,SAAS,EAA6B,EAAM,CAU1C,OATIA,IAAS,GACX,EAAQ,QAAQA,EAAK,CACrB,EAAU,KACH,GAELA,IAAS,MAAQ,EAAmBA,EAAK,CACpC,EAAIA,EAAK,EAElB,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,GAA+B,EAAM,CAK5C,OAJIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAM,EAA0BA,EAAK,CACpJ,EAA2BA,EAAK,EAEzC,EAAQ,QAAQA,EAAK,CACd,IAcT,SAAS,EAAkC,EAAM,CAI/C,OAHIA,IAAS,IAAMA,IAAS,IAAM,EAAcA,EAAK,CAC5C,EAA4BA,EAAK,CAEnC,EAAIA,EAAK,CAalB,SAAS,EAAY,EAAM,CAKzB,OAJIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,IAEF,EAAIA,EAAK,CAalB,SAAS,GAAc,EAAM,CAU3B,OATIA,IAAS,MAAQ,EAAmBA,EAAK,CAGpC,EAAaA,EAAK,CAEvB,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,IAEF,EAAIA,EAAK,CAalB,SAAS,EAAa,EAAM,CA8B1B,OA7BIA,IAAS,IAAM,IAAW,GAC5B,EAAQ,QAAQA,EAAK,CACd,IAELA,IAAS,IAAM,IAAW,GAC5B,EAAQ,QAAQA,EAAK,CACd,IAELA,IAAS,IAAM,IAAW,GAC5B,EAAQ,QAAQA,EAAK,CACd,IAELA,IAAS,IAAM,IAAW,GAC5B,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IAAM,IAAW,GAC5B,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAmBA,EAAK,GAAK,IAAW,GAAK,IAAW,IAC1D,EAAQ,KAAK,eAAe,CACrB,EAAQ,MAAM,GAAiB,GAAmB,GAAkB,CAACA,EAAK,EAE/EA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,eAAe,CACrB,GAAkBA,EAAK,GAEhC,EAAQ,QAAQA,EAAK,CACd,GAcT,SAAS,GAAkB,EAAM,CAC/B,OAAO,EAAQ,MAAM,GAA0B,GAA0B,GAAkB,CAACA,EAAK,CAcnG,SAAS,GAAyB,EAAM,CAItC,OAHA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,GAcT,SAAS,GAAmB,EAAM,CAKhC,OAJIA,IAAS,MAAQ,EAAmBA,EAAK,CACpC,GAAkBA,EAAK,EAEhC,EAAQ,MAAM,eAAe,CACtB,EAAaA,EAAK,EAa3B,SAAS,GAA0B,EAAM,CAKvC,OAJIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAaA,EAAK,CAa3B,SAAS,GAAuB,EAAM,CAMpC,OALIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAS,GACF,IAEF,EAAaA,EAAK,CAa3B,SAAS,GAAsB,EAAM,CACnC,GAAIA,IAAS,GAAI,CACf,IAAM,EAAO,EAAO,aAAa,CAKjC,OAJI,GAAa,SAAS,EAAK,EAC7B,EAAQ,QAAQA,EAAK,CACd,IAEF,EAAaA,EAAK,CAQ3B,OANI,GAAWA,EAAK,EAAI,EAAO,OAAS,GAEtC,EAAQ,QAAQA,EAAK,CACrB,GAAU,OAAO,aAAaA,EAAK,CAC5B,IAEF,EAAaA,EAAK,CAa3B,SAAS,EAAwB,EAAM,CAKrC,OAJIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAaA,EAAK,CAqB3B,SAAS,EAA8B,EAAM,CAW3C,OAVIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,IAILA,IAAS,IAAM,IAAW,GAC5B,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAaA,EAAK,CAa3B,SAAS,GAAkB,EAAM,CAM/B,OALIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,eAAe,CACrB,GAAkBA,EAAK,GAEhC,EAAQ,QAAQA,EAAK,CACd,IAaT,SAAS,GAAkB,EAAM,CAM/B,OALA,EAAQ,KAAK,WAAW,CAKjB2B,EAAG3B,EAAK,EASnB,SAAS,GAAiC,EAAS,EAAI,EAAK,CAC1D,IAAMS,EAAO,KACb,OAAO,EAaP,SAAS,EAAM,EAAM,CAOnB,OANI,EAAmBT,EAAK,EAC1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,GAEF,EAAIA,EAAK,CAclB,SAAS,EAAM,EAAM,CACnB,OAAOS,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,MAAQ,EAAIT,EAAK,CAAG2B,EAAG3B,EAAK,EASnE,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,OAAO,EAaP,SAAS,EAAM,EAAM,CAInB,OAHA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,EAAQ,QAAQ,GAAW2B,EAAI,EAAI,EC51B9C,MAAa,GAAW,CACtB,KAAM,WACN,SAAU,GACX,CAOD,SAAS,GAAiB,EAAS,EAAI,EAAK,CAC1C,IAAMlB,EAAO,KAET,EAEAf,EAEA,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAInB,OAHA,EAAQ,MAAM,WAAW,CACzB,EAAQ,MAAM,eAAe,CAC7B,EAAQ,QAAQM,EAAK,CACd,EAiBT,SAAS,EAAK,EAAM,CAmBlB,OAlBIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAIL,GAAWA,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACd,IAEF,EAAIA,EAAK,CAiBlB,SAAS,EAAgB,EAAM,CAc7B,OAbIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAQ,EACD,GAEL,GAAWA,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAkB,EAAM,CAK/B,OAJIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAalB,SAAS2C,EAAQ,EAAM,CAarB,OAZI3C,IAAS,KACJ,EAAIA,EAAK,CAEdA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAmBA,EAAK,EAC1B,EAAc2C,EACP,GAAiB3C,EAAK,GAE/B,EAAQ,QAAQA,EAAK,CACd2C,GAaT,SAAS,EAAa,EAAM,CAK1B,OAJI3C,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF2C,EAAQ3C,EAAK,CAatB,SAAS,EAAW,EAAM,CACxB,OAAOA,IAAS,GAAK,GAAIA,EAAK,CAAGA,IAAS,GAAK,EAAaA,EAAK,CAAG2C,EAAQ3C,EAAK,CAanF,SAAS,EAAgB,EAAM,CAM7B,OAJIA,IADU,SACK,WAAW,IAAQ,EACpC,EAAQ,QAAQA,EAAK,CACdN,IAAU,EAAe,EAAQ,GAEnC,EAAIM,EAAK,CAalB,SAAS,EAAM,EAAM,CAanB,OAZIA,IAAS,KACJ,EAAIA,EAAK,CAEdA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAmBA,EAAK,EAC1B,EAAc,EACP,GAAiBA,EAAK,GAE/B,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAW,EAAM,CAKxB,OAJIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAMA,EAAK,CAapB,SAAS,EAAS,EAAM,CAQtB,OAPIA,IAAS,GACJ,GAAIA,EAAK,CAEdA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAMA,EAAK,CAapB,SAAS,EAAY,EAAM,CASzB,OARIA,IAAS,MAAQA,IAAS,GACrB,GAAIA,EAAK,CAEd,EAAmBA,EAAK,EAC1B,EAAc,EACP,GAAiBA,EAAK,GAE/B,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAY,EAAM,CAazB,OAZIA,IAAS,KACJ,EAAIA,EAAK,CAEdA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAmBA,EAAK,EAC1B,EAAc,EACP,GAAiBA,EAAK,GAE/B,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAiB,EAAM,CAC9B,OAAOA,IAAS,GAAK,GAAIA,EAAK,CAAG,EAAYA,EAAK,CAapD,SAAS,EAAc,EAAM,CAM3B,OAJI,GAAWA,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAS,EAAM,CAMtB,OAJIA,IAAS,IAAM,EAAkBA,EAAK,EACxC,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAgBA,EAAK,CAa9B,SAAS,EAAgB,EAAM,CAS7B,OARI,EAAmBA,EAAK,EAC1B,EAAc,EACP,GAAiBA,EAAK,EAE3B,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,GAEF,GAAIA,EAAK,CAalB,SAAS,GAAQ,EAAM,CASrB,OAPIA,IAAS,IAAM,EAAkBA,EAAK,EACxC,EAAQ,QAAQA,EAAK,CACd,IAELA,IAAS,IAAMA,IAAS,IAAM,EAA0BA,EAAK,CACxD,EAAeA,EAAK,CAEtB,EAAIA,EAAK,CAalB,SAAS,EAAe,EAAM,CAmB5B,OAlBIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,IAILA,IAAS,IAAMA,IAAS,IAAM,GAAWA,EAAK,EAChD,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAmBA,EAAK,EAC1B,EAAc,EACP,GAAiBA,EAAK,EAE3B,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,GAEF,GAAIA,EAAK,CAalB,SAAS,EAAqB,EAAM,CAMlC,OAJIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAM,EAAkBA,EAAK,EACrF,EAAQ,QAAQA,EAAK,CACd,GAEF,GAA0BA,EAAK,CAcxC,SAAS,GAA0B,EAAM,CAavC,OAZIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEL,EAAmBA,EAAK,EAC1B,EAAc,GACP,GAAiBA,EAAK,EAE3B,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,IAEF,EAAeA,EAAK,CAc7B,SAAS,EAA4B,EAAM,CAkBzC,OAjBIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,GAClE,EAAIA,EAAK,CAEdA,IAAS,IAAMA,IAAS,IAC1B,EAAQ,QAAQA,EAAK,CACrB,EAASA,EACF,IAEL,EAAmBA,EAAK,EAC1B,EAAc,EACP,GAAiBA,EAAK,EAE3B,EAAcA,EAAK,EACrB,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,QAAQA,EAAK,CACd,IAaT,SAAS,GAA4B,EAAM,CAczC,OAbIA,IAAS,GACX,EAAQ,QAAQA,EAAK,CACrB,EAAS,OACF,IAELA,IAAS,KACJ,EAAIA,EAAK,CAEd,EAAmBA,EAAK,EAC1B,EAAc,GACP,GAAiBA,EAAK,GAE/B,EAAQ,QAAQA,EAAK,CACd,IAaT,SAAS,GAA8B,EAAM,CAQ3C,OAPIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,GACjF,EAAIA,EAAK,CAEdA,IAAS,IAAMA,IAAS,IAAM,EAA0BA,EAAK,CACxD,EAAeA,EAAK,EAE7B,EAAQ,QAAQA,EAAK,CACd,IAcT,SAAS,GAAiC,EAAM,CAI9C,OAHIA,IAAS,IAAMA,IAAS,IAAM,EAA0BA,EAAK,CACxD,EAAeA,EAAK,CAEtB,EAAIA,EAAK,CAalB,SAAS,GAAI,EAAM,CAOjB,OANIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,eAAe,CAC5B,EAAQ,KAAK,WAAW,CACjB2B,GAEF,EAAI3B,EAAK,CAiBlB,SAAS,GAAiB,EAAM,CAK9B,OAJA,EAAQ,KAAK,eAAe,CAC5B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,GAiBT,SAAS,GAAgB,EAAM,CAG7B,OAAO,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAuB,aAAcS,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAE,CAACT,EAAK,CAAG,EAAsBA,EAAK,CAiB3M,SAAS,EAAsB,EAAM,CAEnC,OADA,EAAQ,MAAM,eAAe,CACtB,EAAYA,EAAK,EC9oB5B,MAAa,GAAW,CACtB,KAAM,WACN,WAAY,GACZ,UAAW,GACX,SAAU,GACX,CAGD,IAAM,GAAoB,CACxB,SAAU,GACX,CAEK,GAAyB,CAC7B,SAAU,GACX,CAEK,GAA8B,CAClC,SAAU,GACX,CAGD,SAAS,GAAmB,EAAQ,CAClC,IAAIN,EAAQ,GAEN,EAAY,EAAE,CACpB,KAAO,EAAEA,EAAQ,EAAO,QAAQ,CAC9B,IAAM,EAAQ,EAAOA,GAAO,GAE5B,GADA,EAAU,KAAK,EAAOA,GAAO,CACzB,EAAM,OAAS,cAAgB,EAAM,OAAS,aAAe,EAAM,OAAS,WAAY,CAE1F,IAAM,EAAS,EAAM,OAAS,aAAe,EAAI,EACjD,EAAM,KAAO,OACb,GAAS,GAQb,OAHI,EAAO,SAAW,EAAU,QAC9B,GAAO,EAAQ,EAAG,EAAO,OAAQ,EAAU,CAEtC,EAIT,SAAS,GAAkB,EAAQ,EAAS,CAC1C,IAAIA,EAAQ,EAAO,OACf,EAAS,EAET,EAEA,EAEA,EAEA,EAGJ,KAAO,KAEL,GADA,EAAQ,EAAOA,GAAO,GAClB,EAAM,CAER,GAAI,EAAM,OAAS,QAAU,EAAM,OAAS,aAAe,EAAM,UAC/D,MAKE,EAAOA,GAAO,KAAO,SAAW,EAAM,OAAS,cACjD,EAAM,UAAY,YAEX,MACL,EAAOA,GAAO,KAAO,UAAY,EAAM,OAAS,cAAgB,EAAM,OAAS,cAAgB,CAAC,EAAM,YACxG,EAAOA,EACH,EAAM,OAAS,aAAa,CAC9B,EAAS,EACT,YAGK,EAAM,OAAS,aACxB,EAAQA,GAGZ,IAAM,EAAQ,CACZ,KAAM,EAAO,GAAM,GAAG,OAAS,YAAc,OAAS,QACtD,MAAO,CACL,GAAG,EAAO,GAAM,GAAG,MACpB,CACD,IAAK,CACH,GAAG,EAAO,EAAO,OAAS,GAAG,GAAG,KAEnC,CACKkD,EAAQ,CACZ,KAAM,QACN,MAAO,CACL,GAAG,EAAO,GAAM,GAAG,MACpB,CACD,IAAK,CACH,GAAG,EAAO,GAAO,GAAG,KAEvB,CACKZ,EAAO,CACX,KAAM,YACN,MAAO,CACL,GAAG,EAAO,EAAO,EAAS,GAAG,GAAG,IACjC,CACD,IAAK,CACH,GAAG,EAAO,EAAQ,GAAG,GAAG,OAE3B,CAuBD,MAtBA,GAAQ,CAAC,CAAC,QAAS,EAAO,EAAQ,CAAE,CAAC,QAASY,EAAO,EAAQ,CAAC,CAG9D,EAAQ,GAAK,EAAO,EAAO,MAAM,EAAO,EAAG,EAAO,EAAS,EAAE,CAAC,CAG9D,EAAQ,GAAK,EAAO,CAAC,CAAC,QAASZ,EAAM,EAAQ,CAAC,CAAC,CAK/C,EAAQ,GAAK,EAAO,GAAW,EAAQ,OAAO,WAAW,WAAW,KAAM,EAAO,MAAM,EAAO,EAAS,EAAG,EAAQ,EAAE,CAAE,EAAQ,CAAC,CAG/H,EAAQ,GAAK,EAAO,CAAC,CAAC,OAAQA,EAAM,EAAQ,CAAE,EAAO,EAAQ,GAAI,EAAO,EAAQ,GAAI,CAAC,OAAQY,EAAO,GAAS,CAAC,CAG9G,EAAQ,GAAK,EAAO,EAAO,MAAM,EAAQ,EAAE,CAAC,CAG5C,EAAQ,GAAK,EAAO,CAAC,CAAC,OAAQ,EAAO,EAAQ,CAAC,CAAC,CAC/C,GAAO,EAAQ,EAAM,EAAO,OAAQ,EAAM,CACnC,EAQT,SAAS,GAAiB,EAAS,EAAI,EAAK,CAC1C,IAAMnC,EAAO,KACTf,EAAQe,EAAK,OAAO,OAEpB,EAEA,EAGJ,KAAO,KACL,IAAKA,EAAK,OAAOf,GAAO,GAAG,OAAS,cAAgBe,EAAK,OAAOf,GAAO,GAAG,OAAS,cAAgB,CAACe,EAAK,OAAOf,GAAO,GAAG,UAAW,CACnI,EAAae,EAAK,OAAOf,GAAO,GAChC,MAGJ,OAAO,EAiBP,SAAS,EAAM,EAAM,CA2BnB,OAzBK,EAaD,EAAW,UACN,EAAYM,EAAK,EAE1B,EAAUS,EAAK,OAAO,QAAQ,SAAS,GAAoBA,EAAK,eAAe,CAC7E,MAAO,EAAW,IAClB,IAAKA,EAAK,MACX,CAAC,CAAC,CAAC,CACJ,EAAQ,MAAM,WAAW,CACzB,EAAQ,MAAM,cAAc,CAC5B,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,WAAW,CACjB,GAxBE,EAAIA,EAAK,CA2CpB,SAAS,EAAM,EAAM,CAenB,OAVIA,IAAS,GACJ,EAAQ,QAAQ,GAAmB,EAAY,EAAU,EAAa,EAAY,CAACA,EAAK,CAI7FA,IAAS,GACJ,EAAQ,QAAQ,GAAwB,EAAY,EAAU,EAAmB,EAAY,CAACA,EAAK,CAIrG,EAAU,EAAWA,EAAK,CAAG,EAAYA,EAAK,CAiBvD,SAAS,EAAiB,EAAM,CAC9B,OAAO,EAAQ,QAAQ,GAA6B,EAAY,EAAY,CAACA,EAAK,CAmBpF,SAAS,EAAW,EAAM,CAExB,OAAO2B,EAAG3B,EAAK,CAmBjB,SAAS,EAAY,EAAM,CAEzB,MADA,GAAW,UAAY,GAChB,EAAIA,EAAK,EASpB,SAAS,GAAiB,EAAS,EAAI,EAAK,CAC1C,OAAO,EAYP,SAAS,EAAc,EAAM,CAK3B,OAJA,EAAQ,MAAM,WAAW,CACzB,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,iBAAiB,CACvB,EAaT,SAAS,EAAe,EAAM,CAC5B,OAAO,EAA0BA,EAAK,CAAG,GAAkB,EAAS,EAAa,CAACA,EAAK,CAAG,EAAaA,EAAK,CAa9G,SAAS,EAAa,EAAM,CAI1B,OAHIA,IAAS,GACJ,EAAYA,EAAK,CAEnB,GAAmB,EAAS,EAA0B,EAA4B,sBAAuB,6BAA8B,mCAAoC,yBAA0B,4BAA6B,GAAG,CAACA,EAAK,CAapP,SAAS,EAAyB,EAAM,CACtC,OAAO,EAA0BA,EAAK,CAAG,GAAkB,EAAS,EAAgB,CAACA,EAAK,CAAG,EAAYA,EAAK,CAahH,SAAS,EAA2B,EAAM,CACxC,OAAO,EAAIA,EAAK,CAalB,SAAS,EAAgB,EAAM,CAI7B,OAHIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,GAClC,GAAa,EAAS,EAAoB,EAAK,gBAAiB,sBAAuB,sBAAsB,CAACA,EAAK,CAErH,EAAYA,EAAK,CAa1B,SAAS,EAAmB,EAAM,CAChC,OAAO,EAA0BA,EAAK,CAAG,GAAkB,EAAS,EAAY,CAACA,EAAK,CAAG,EAAYA,EAAK,CAa5G,SAAS,EAAY,EAAM,CAQzB,OAPIA,IAAS,IACX,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,iBAAiB,CAC9B,EAAQ,KAAK,WAAW,CACjB2B,GAEF,EAAI3B,EAAK,EASpB,SAAS,GAAsB,EAAS,EAAI,EAAK,CAC/C,IAAMS,EAAO,KACb,OAAO,EAYP,SAAS,EAAc,EAAM,CAC3B,OAAO,GAAa,KAAKA,EAAM,EAAS,EAAoB,EAAsB,YAAa,kBAAmB,kBAAkB,CAACT,EAAK,CAa5I,SAAS,EAAmB,EAAM,CAChC,OAAOS,EAAK,OAAO,QAAQ,SAAS,GAAoBA,EAAK,eAAeA,EAAK,OAAOA,EAAK,OAAO,OAAS,GAAG,GAAG,CAAC,MAAM,EAAG,GAAG,CAAC,CAAC,CAAGkB,EAAG3B,EAAK,CAAG,EAAIA,EAAK,CAa3J,SAAS,EAAqB,EAAM,CAClC,OAAO,EAAIA,EAAK,EASpB,SAAS,GAA2B,EAAS,EAAI,EAAK,CACpD,OAAO,EAcP,SAAS,EAAwB,EAAM,CAOrC,OAJA,EAAQ,MAAM,YAAY,CAC1B,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,kBAAkB,CACxB,EAeT,SAAS,EAAuB,EAAM,CAQpC,OAPIA,IAAS,IACX,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,kBAAkB,CAC/B,EAAQ,KAAK,YAAY,CAClB2B,GAEF,EAAI3B,EAAK,ECjiBpB,MAAa,GAAkB,CAC7B,KAAM,kBACN,WAAY,GAAS,WACrB,SAAU,GACX,CAOD,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,IAAMS,EAAO,KACb,OAAO,EAYP,SAAS,EAAM,EAAM,CAKnB,OAJA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CACzB,EAaT,SAAS,EAAK,EAAM,CAQlB,OAPIA,IAAS,IACX,EAAQ,MAAM,cAAc,CAC5B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,aAAa,CACnB,GAEF,EAAIA,EAAK,CA8BlB,SAAS,EAAM,EAAM,CAMnB,OAAOA,IAAS,IAAM,2BAA4BS,EAAK,OAAO,WAAa,EAAIT,EAAK,CAAG2B,EAAG3B,EAAK,ECvFnG,MAAa,GAAiB,CAC5B,KAAM,iBACN,WAAY,GAAS,WACrB,SAAU,GACX,CAOD,SAAS,GAAuB,EAAS,EAAI,EAAK,CAChD,IAAMS,EAAO,KACb,OAAO,EAYP,SAAS,EAAM,EAAM,CAMnB,OALA,EAAQ,MAAM,YAAY,CAC1B,EAAQ,MAAM,cAAc,CAC5B,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,cAAc,CAC3B,EAAQ,KAAK,YAAY,CAClB,EAIT,SAAS,EAAM,EAAM,CAKnB,OAAOA,IAAS,IAAM,2BAA4BS,EAAK,OAAO,WAAa,EAAIT,EAAK,CAAG2B,EAAG3B,EAAK,ECxCnG,MAAa,GAAa,CACxB,KAAM,aACN,SAAU,GACX,CAOD,SAAS,GAAmB,EAAS,EAAI,CACvC,OAAO,EAGP,SAAS,EAAM,EAAM,CAInB,OAHA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,EAAa,EAAS2B,EAAI,aAAa,ECjBlD,MAAakB,GAAgB,CAC3B,KAAM,gBACN,SAAU,GACX,CAOD,SAAS,GAAsB,EAAS,EAAI,EAAK,CAC/C,IAAI,EAAO,EAEP,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAGnB,OAFA,EAAQ,MAAM,gBAAgB,CAEvB,EAAO7C,EAAK,CAarB,SAAS,EAAO,EAAM,CAEpB,MADA,GAASA,EACF,EAAQA,EAAK,CAatB,SAAS,EAAQ,EAAM,CASrB,OARIA,IAAS,GACX,EAAQ,MAAM,wBAAwB,CAC/B,EAASA,EAAK,EAEnB,GAAQ,IAAMA,IAAS,MAAQ,EAAmBA,EAAK,GACzD,EAAQ,KAAK,gBAAgB,CACtB2B,EAAG3B,EAAK,EAEV,EAAIA,EAAK,CAalB,SAAS,EAAS,EAAM,CAOtB,OANIA,IAAS,GACX,EAAQ,QAAQA,EAAK,CACrB,IACO,IAET,EAAQ,KAAK,wBAAwB,CAC9B,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAS,aAAa,CAACA,EAAK,CAAG,EAAQA,EAAK,GClFnG,MAAauB,GAAO,CAClB,aAAc,CACZ,SAAU,GACX,CACD,KAAM,GACN,KAAM,OACN,SAAU,GACX,CAGD,IAAM,GAAoC,CACxC,QAAS,GACT,SAAU,GACX,CAGK,GAAkB,CACtB,QAAS,GACT,SAAUuB,GACX,CAUD,SAAS,GAAkB,EAAS,EAAI,EAAK,CAC3C,IAAMrC,EAAO,KACP,EAAOA,EAAK,OAAOA,EAAK,OAAO,OAAS,GAC1C,EAAc,GAAQ,EAAK,GAAG,OAAS,aAAe,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,OAAS,EACrG,EAAO,EACX,OAAO,EAGP,SAAS,EAAM,EAAM,CACnB,IAAM,EAAOA,EAAK,eAAe,OAAST,IAAS,IAAMA,IAAS,IAAMA,IAAS,GAAK,gBAAkB,eACxG,GAAI,IAAS,gBAAkB,CAACS,EAAK,eAAe,QAAUT,IAASS,EAAK,eAAe,OAAS,GAAWT,EAAK,CAAE,CAOpH,GANKS,EAAK,eAAe,OACvB,EAAK,eAAe,KAAO,EAC3B,EAAQ,MAAM,EAAM,CAClB,WAAY,GACb,CAAC,EAEA,IAAS,gBAEX,OADA,EAAQ,MAAM,iBAAiB,CACxBT,IAAS,IAAMA,IAAS,GAAK,EAAQ,MAAM6C,GAAe,EAAK,EAAS,CAAC7C,EAAK,CAAG,EAASA,EAAK,CAExG,GAAI,CAACS,EAAK,WAAaT,IAAS,GAG9B,OAFA,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,MAAM,gBAAgB,CACvB,EAAOA,EAAK,CAGvB,OAAO,EAAIA,EAAK,CAIlB,SAAS,EAAO,EAAM,CASpB,OARI,GAAWA,EAAK,EAAI,EAAE,EAAO,IAC/B,EAAQ,QAAQA,EAAK,CACd,IAEJ,CAACS,EAAK,WAAa,EAAO,KAAOA,EAAK,eAAe,OAAST,IAASS,EAAK,eAAe,OAAST,IAAS,IAAMA,IAAS,KAC/H,EAAQ,KAAK,gBAAgB,CACtB,EAASA,EAAK,EAEhB,EAAIA,EAAK,CAMlB,SAAS,EAAS,EAAM,CAKtB,OAJA,EAAQ,MAAM,iBAAiB,CAC/B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,iBAAiB,CAC9B,EAAK,eAAe,OAASS,EAAK,eAAe,QAAUT,EACpD,EAAQ,MAAM,GAErBS,EAAK,UAAY,EAAM,EAAS,EAAQ,QAAQ,GAAmC,EAAa,EAAY,CAAC,CAI/G,SAAS,EAAQ,EAAM,CAGrB,MAFA,GAAK,eAAe,iBAAmB,GACvC,IACO,EAAYT,EAAK,CAI1B,SAAS,EAAY,EAAM,CAOzB,OANI,EAAcA,EAAK,EACrB,EAAQ,MAAM,2BAA2B,CACzC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,2BAA2B,CACjC,GAEF,EAAIA,EAAK,CAIlB,SAAS,EAAY,EAAM,CAEzB,MADA,GAAK,eAAe,KAAO,EAAcS,EAAK,eAAe,EAAQ,KAAK,iBAAiB,CAAE,GAAK,CAAC,OAC5FkB,EAAG3B,EAAK,EASnB,SAAS,GAAyB,EAAS,EAAI,EAAK,CAClD,IAAMS,EAAO,KAEb,MADA,GAAK,eAAe,WAAa,OAC1B,EAAQ,MAAM,GAAW,EAAS,EAAS,CAGlD,SAAS,EAAQ,EAAM,CAKrB,MAJA,GAAK,eAAe,kBAAoBA,EAAK,eAAe,mBAAqBA,EAAK,eAAe,iBAI9F,EAAa,EAASkB,EAAI,iBAAkBlB,EAAK,eAAe,KAAO,EAAE,CAACT,EAAK,CAIxF,SAAS,EAAS,EAAM,CAQtB,OAPIS,EAAK,eAAe,mBAAqB,CAAC,EAAcT,EAAK,EAC/D,EAAK,eAAe,kBAAoB,OACxC,EAAK,eAAe,iBAAmB,OAChC,EAAiBA,EAAK,GAE/B,EAAK,eAAe,kBAAoB,OACxC,EAAK,eAAe,iBAAmB,OAChC,EAAQ,QAAQ,GAAiB2B,EAAI,EAAiB,CAAC3B,EAAK,EAIrE,SAAS,EAAiB,EAAM,CAO9B,MALA,GAAK,eAAe,WAAa,GAEjC,EAAK,UAAY,OAGV,EAAa,EAAS,EAAQ,QAAQuB,GAAMI,EAAI,EAAI,CAAE,aAAclB,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAE,CAACT,EAAK,EASlK,SAAS8C,GAAe,EAAS,EAAI,EAAK,CACxC,IAAMrC,EAAO,KACb,OAAO,EAAa,EAAS,EAAa,iBAAkBA,EAAK,eAAe,KAAO,EAAE,CAGzF,SAAS,EAAY,EAAM,CACzB,IAAM,EAAOA,EAAK,OAAOA,EAAK,OAAO,OAAS,GAC9C,OAAO,GAAQ,EAAK,GAAG,OAAS,kBAAoB,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,SAAWA,EAAK,eAAe,KAAOkB,EAAG3B,EAAK,CAAG,EAAIA,EAAK,EASxJ,SAAS,GAAgB,EAAS,CAChC,EAAQ,KAAK,KAAK,eAAe,KAAK,CAQxC,SAAS,GAAiC,EAAS,EAAI,EAAK,CAC1D,IAAMS,EAAO,KAIb,OAAO,EAAa,EAAS,EAAa,2BAA4BA,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAM,CAGvJ,SAAS,EAAY,EAAM,CACzB,IAAM,EAAOA,EAAK,OAAOA,EAAK,OAAO,OAAS,GAC9C,MAAO,CAAC,EAAcT,EAAK,EAAI,GAAQ,EAAK,GAAG,OAAS,2BAA6B2B,EAAG3B,EAAK,CAAG,EAAIA,EAAK,ECpM7G,MAAa,GAAkB,CAC7B,KAAM,kBACN,UAAW,GACX,SAAU,GACX,CAGD,SAAS,GAAyB,EAAQ,EAAS,CAEjD,IAAIN,EAAQ,EAAO,OAEf6C,EAEAP,EAEAS,EAIJ,KAAO,KACL,GAAI,EAAO/C,GAAO,KAAO,QAAS,CAChC,GAAI,EAAOA,GAAO,GAAG,OAAS,UAAW,CACvC,EAAUA,EACV,MAEE,EAAOA,GAAO,GAAG,OAAS,cAC5B,EAAOA,QAKL,EAAOA,GAAO,GAAG,OAAS,WAE5B,EAAO,OAAOA,EAAO,EAAE,CAErB,CAAC+C,GAAc,EAAO/C,GAAO,GAAG,OAAS,eAC3C,EAAaA,GAInB,IAAMqD,EAAU,CACd,KAAM,gBACN,MAAO,CACL,GAAG,EAAOR,GAAS,GAAG,MACvB,CACD,IAAK,CACH,GAAG,EAAO,EAAO,OAAS,GAAG,GAAG,KAEnC,CAmBD,MAhBA,GAAOP,GAAM,GAAG,KAAO,oBAInBS,GACF,EAAO,OAAOT,EAAM,EAAG,CAAC,QAASe,EAAS,EAAQ,CAAC,CACnD,EAAO,OAAON,EAAa,EAAG,EAAG,CAAC,OAAQ,EAAOF,GAAS,GAAI,EAAQ,CAAC,CACvE,EAAOA,GAAS,GAAG,IAAM,CACvB,GAAG,EAAOE,GAAY,GAAG,IAC1B,EAED,EAAOF,GAAS,GAAKQ,EAIvB,EAAO,KAAK,CAAC,OAAQA,EAAS,EAAQ,CAAC,CAChC,EAQT,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,IAAMtC,EAAO,KAET,EACJ,OAAO,EAaP,SAAS,EAAM,EAAM,CACnB,IAAIf,EAAQe,EAAK,OAAO,OAEpBuC,EAEJ,KAAO,KAGL,GAAIvC,EAAK,OAAOf,GAAO,GAAG,OAAS,cAAgBe,EAAK,OAAOf,GAAO,GAAG,OAAS,cAAgBe,EAAK,OAAOf,GAAO,GAAG,OAAS,UAAW,CAC1I,EAAYe,EAAK,OAAOf,GAAO,GAAG,OAAS,YAC3C,MAWJ,MALI,CAACe,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,QAAUA,EAAK,WAAauC,IAC3D,EAAQ,MAAM,oBAAoB,CAClC,EAAShD,EACF,EAAOA,EAAK,EAEd,EAAIA,EAAK,CAclB,SAAS,EAAO,EAAM,CAEpB,OADA,EAAQ,MAAM,4BAA4B,CACnC,EAAOA,EAAK,CAcrB,SAAS,EAAO,EAAM,CAMpB,OALIA,IAAS,GACX,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,4BAA4B,CAClC,EAAcA,EAAK,CAAG,EAAa,EAAS,EAAO,aAAa,CAACA,EAAK,CAAG,EAAMA,EAAK,EAc7F,SAAS,EAAM,EAAM,CAKnB,OAJIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,oBAAoB,CAC1B2B,EAAG3B,EAAK,EAEV,EAAIA,EAAK,ECzKpB,MAAa,GAAO,CAClB,SAAU,GACX,CAQD,SAAS,GAAe,EAAS,CAC/B,IAAMS,EAAO,KACP,EAAU,EAAQ,QAExB,GAAW,EAEX,EAAQ,QAAQ,KAAK,OAAO,WAAW,YAAa,EAAgB,EAAa,EAAS,EAAQ,QAAQ,KAAK,OAAO,WAAW,KAAM,EAAgB,EAAQ,QAAQ8B,GAAS,EAAe,CAAC,CAAE,aAAa,CAAC,CAAC,CACjN,OAAO,EAGP,SAAS,EAAc,EAAM,CAC3B,GAAIvC,IAAS,KAAM,CACjB,EAAQ,QAAQA,EAAK,CACrB,OAMF,OAJA,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,kBAAkB,CAC/B,EAAK,iBAAmB,OACjB,EAIT,SAAS,EAAe,EAAM,CAC5B,GAAIA,IAAS,KAAM,CACjB,EAAQ,QAAQA,EAAK,CACrB,OAMF,OAJA,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CAC1B,EAAK,iBAAmB,OACjB,GC5CX,MAAa,GAAW,CACtB,WAAY,IAAgB,CAC7B,CACYiD,GAAS,GAAkB,SAAS,CACpCjB,GAAO,GAAkB,OAAO,CAQ7C,SAAS,GAAkB,EAAO,CAChC,MAAO,CACL,WAAY,GAAe,IAAU,OAAS,GAAyB,OAAU,CACjF,SAAU,EACX,CAOD,SAAS,EAAe,EAAS,CAC/B,IAAMvB,EAAO,KACPsB,EAAa,KAAK,OAAO,WAAW,GACpCC,EAAO,EAAQ,QAAQD,EAAY,EAAO,EAAQ,CACxD,OAAO,EAGP,SAAS,EAAM,EAAM,CACnB,OAAO,EAAQ/B,EAAK,CAAGgC,EAAKhC,EAAK,CAAG,EAAQA,EAAK,CAInD,SAAS,EAAQ,EAAM,CACrB,GAAIA,IAAS,KAAM,CACjB,EAAQ,QAAQA,EAAK,CACrB,OAIF,OAFA,EAAQ,MAAM,OAAO,CACrB,EAAQ,QAAQA,EAAK,CACd,EAIT,SAAS,EAAK,EAAM,CAQlB,OAPI,EAAQA,EAAK,EACf,EAAQ,KAAK,OAAO,CACbgC,EAAKhC,EAAK,GAInB,EAAQ,QAAQA,EAAK,CACd,GAST,SAAS,EAAQ,EAAM,CACrB,GAAIA,IAAS,KACX,MAAO,GAET,IAAMuB,EAAOQ,EAAW/B,GACpBN,EAAQ,GACZ,GAAI6B,EAGF,KAAO,EAAE7B,EAAQ6B,EAAK,QAAQ,CAC5B,IAAM,EAAOA,EAAK7B,GAClB,GAAI,CAAC,EAAK,UAAY,EAAK,SAAS,KAAKe,EAAMA,EAAK,SAAS,CAC3D,MAAO,GAIb,MAAO,KAWb,SAAS,GAAe,EAAe,CACrC,OAAO,EAGP,SAAS,EAAe,EAAQ,EAAS,CACvC,IAAIf,EAAQ,GAER,EAIJ,KAAO,EAAEA,GAAS,EAAO,QACnB,IAAU,OACR,EAAOA,IAAU,EAAOA,GAAO,GAAG,OAAS,SAC7C,EAAQA,EACR,MAEO,CAAC,EAAOA,IAAU,EAAOA,GAAO,GAAG,OAAS,UAEjDA,IAAU,EAAQ,IACpB,EAAO,GAAO,GAAG,IAAM,EAAOA,EAAQ,GAAG,GAAG,IAC5C,EAAO,OAAO,EAAQ,EAAGA,EAAQ,EAAQ,EAAE,CAC3C,EAAQ,EAAQ,GAElB,EAAQ,QAGZ,OAAO,EAAgB,EAAc,EAAQ,EAAQ,CAAG,GAe5D,SAAS,GAAuB,EAAQ,EAAS,CAC/C,IAAI,EAAa,EAEjB,KAAO,EAAE,GAAc,EAAO,QAC5B,IAAK,IAAe,EAAO,QAAU,EAAO,GAAY,GAAG,OAAS,eAAiB,EAAO,EAAa,GAAG,GAAG,OAAS,OAAQ,CAC9H,IAAM,EAAO,EAAO,EAAa,GAAG,GAC9B,EAAS,EAAQ,YAAY,EAAK,CACpCA,EAAQ,EAAO,OACf,EAAc,GACd,EAAO,EAEP,EACJ,KAAO,KAAS,CACd,IAAM,EAAQ,EAAOA,GACrB,GAAI,OAAO,GAAU,SAAU,CAE7B,IADA,EAAc,EAAM,OACb,EAAM,WAAW,EAAc,EAAE,GAAK,IAC3C,IACA,IAEF,GAAI,EAAa,MACjB,EAAc,WAGP,IAAU,GACjB,EAAO,GACP,YACS,IAAU,GAEd,CAEL,IACA,OAQJ,GAHI,EAAQ,0BAA4B,IAAe,EAAO,SAC5D,EAAO,GAEL,EAAM,CACR,IAAM,EAAQ,CACZ,KAAM,IAAe,EAAO,QAAU,GAAQ,EAAO,EAAI,aAAe,oBACxE,MAAO,CACL,aAAcA,EAAQ,EAAc,EAAK,MAAM,aAAe,EAC9D,OAAQ,EAAK,MAAM,OAASA,EAC5B,KAAM,EAAK,IAAI,KACf,OAAQ,EAAK,IAAI,OAAS,EAC1B,OAAQ,EAAK,IAAI,OAAS,EAC3B,CACD,IAAK,CACH,GAAG,EAAK,KAEX,CACD,EAAK,IAAM,CACT,GAAG,EAAM,MACV,CACG,EAAK,MAAM,SAAW,EAAK,IAAI,OACjC,OAAO,OAAO,EAAM,EAAM,EAE1B,EAAO,OAAO,EAAY,EAAG,CAAC,QAAS,EAAO,EAAQ,CAAE,CAAC,OAAQ,EAAO,EAAQ,CAAC,CACjF,GAAc,GAGlB,IAGJ,OAAO,sKC1MT,MAAamC,GAAW,CACrB,GAAKN,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAKA,GACL,GAAK,GACP,CAGY,GAAiB,CAC3B,GAAKkB,GACP,CAGY,GAAc,EACxB,IAAK,IACL,IAAK,GACL,GAAK,GACP,CAGYS,GAAO,CACjB,GAAK,GACL,GAAKL,GACL,GAAK,CAAC,GAAiBA,GAAc,CACrC,GAAK,GACL,GAAK,GACL,GAAKA,GACL,GAAK,GACL,IAAM,GACR,CAGYI,GAAS,CACnB,GAAK,GACL,GAAK,GACP,CAGYjB,GAAO,EACjB,IAAK,IACL,IAAK,IACL,IAAK,GACL,GAAK,GACL,GAAK,GACL,GAAK,GACL,GAAK,CAAC,GAAU,GAAS,CACzB,GAAK,GACL,GAAK,CAAC,GAAiB,GAAgB,CACvC,GAAK,GACL,GAAK,GACL,GAAK,GACP,CAGY,GAAa,CACxB,KAAM,CAAC,GAAWmB,GAAY,CAC/B,CAGY,GAAmB,CAC9B,KAAM,CAAC,GAAI,GAAG,CACf,CAGY,GAAU,CACrB,KAAM,EAAE,CACT,CCxBD,SAAgB,GAAgB,EAAQ,EAAY,EAAM,CAExD,IAAItD,EAAQ,CACV,aAAc,GACd,OAAQ,EACR,KAAM,GAAQ,EAAK,MAAQ,EAC3B,OAAQ,GAAQ,EAAK,QAAU,EAC/B,OAAQ,GAAQ,EAAK,QAAU,EAChC,CAEK,EAAc,EAAE,CAEhB,EAAuB,EAAE,CAE3B,EAAS,EAAE,CAEX,EAAQ,EAAE,CASR,EAAU,CACd,QAAS,EAAiB,EAAsB,CAChD,MAAO,EAAiB,EAAkB,CAC1C,UACA,QACA,OACA,UAAW,EAAiB,EAAmB,CAC7C,UAAW,GACZ,EACF,CAOK,EAAU,CACd,KAAM,KACN,eAAgB,EAAE,CAClB,aACA,OAAQ,EAAE,CACV,MACA,SACA,SAAU,KACV,iBACA,cACA,QACD,CAOG,EAAQ,EAAW,SAAS,KAAK,EAAS,EAAQ,CAWtD,OAHI,EAAW,YACb,EAAqB,KAAK,EAAW,CAEhC,EAGP,SAAS,EAAM,EAAO,CAYpB,MAXA,GAAS,GAAK,EAAQ,EAAM,CAC5B,GAAM,CAGF,EAAO,EAAO,OAAS,KAAO,MAGlC,GAAU,EAAY,EAAE,CAGxB,EAAQ,OAAS,GAAW,EAAsB,EAAQ,OAAQ,EAAQ,CACnE,EAAQ,QANN,EAAE,CAcb,SAAS,EAAe,EAAO,EAAY,CACzC,OAAO,GAAgB,EAAY,EAAM,CAAE,EAAW,CAIxD,SAAS,EAAY,EAAO,CAC1B,OAAO,GAAY,EAAQ,EAAM,CAInC,SAAS,GAAM,CAEb,GAAM,CACJ,eACA,SACA,OACA,SACA,UACEA,EACJ,MAAO,CACL,eACA,SACA,OACA,SACA,SACD,CAIH,SAAS,EAAW,EAAO,CACzB,EAAY,EAAM,MAAQ,EAAM,OAChC,GAAyB,CAkB3B,SAAS,GAAO,CAEd,IAAI,EACJ,KAAOA,EAAM,OAAS,EAAO,QAAQ,CACnC,IAAM,EAAQ,EAAOA,EAAM,QAG3B,GAAI,OAAO,GAAU,SAKnB,IAJA,EAAaA,EAAM,OACfA,EAAM,aAAe,IACvB,EAAM,aAAe,GAEhBA,EAAM,SAAW,GAAcA,EAAM,aAAe,EAAM,QAC/D,EAAG,EAAM,WAAWA,EAAM,aAAa,CAAC,MAG1C,EAAG,EAAM,EAaf,SAAS,EAAG,EAAM,CAGhB,EAAQ,EAAMG,EAAK,CAIrB,SAAS,EAAQ,EAAM,CACjB,EAAmBA,EAAK,EAC1B,EAAM,OACN,EAAM,OAAS,EACf,EAAM,QAAUA,IAAS,GAAK,EAAI,EAClC,GAAyB,EAChBA,IAAS,KAClB,EAAM,SACN,EAAM,UAIJH,EAAM,aAAe,EACvB,EAAM,UAEN,EAAM,eAGFA,EAAM,eAIV,EAAOA,EAAM,QAAQ,SACnB,EAAM,aAAe,GACrB,EAAM,WAKV,EAAQ,SAAWG,EAOrB,SAAS,EAAM,EAAM,EAAQ,CAG3B,IAAM,EAAQ,GAAU,EAAE,CAK1B,MAJA,GAAM,KAAO,EACb,EAAM,MAAQ,GAAK,CACnB,EAAQ,OAAO,KAAK,CAAC,QAAS,EAAO,EAAQ,CAAC,CAC9C,EAAM,KAAK,EAAM,CACV,EAIT,SAASkC,EAAK,EAAM,CAClB,IAAM,EAAQ,EAAM,KAAK,CAGzB,MAFA,GAAM,IAAM,GAAK,CACjB,EAAQ,OAAO,KAAK,CAAC,OAAQ,EAAO,EAAQ,CAAC,CACtC,EAQT,SAAS,EAAsB,EAAW,EAAM,CAC9C,GAAU,EAAW,EAAK,KAAK,CAQjC,SAAS,EAAkB,EAAG,EAAM,CAClC,EAAK,SAAS,CAWhB,SAAS,EAAiB,EAAU,EAAQ,CAC1C,OAAO,EAeP,SAAS,EAAK,EAAY,EAAa,EAAY,CAEjD,IAAI,EAEA,EAEA,EAEA,EACJ,OAAO,MAAM,QAAQH,EAAW,CAChC,EAAuBA,EAAW,CAAG,aAAcA,EAEnD,EAAuB,CAA0BA,EAAY,CAAC,CAAG,EAAsBA,EAAW,CAUlG,SAAS,EAAsB,EAAK,CAClC,OAAO,EAGP,SAAS,EAAM,EAAM,CACnB,IAAM,EAAO/B,IAAS,MAAQoD,EAAIpD,GAC5BoB,EAAMpB,IAAS,MAAQoD,EAAI,KAC3B7B,EAAO,CAGb,GAAI,MAAM,QAAQ,EAAK,CAAG,EAAO,EAAO,CAAC,EAAK,CAAG,EAAE,CAAG,GAAI,MAAM,QAAQH,EAAI,CAAGA,EAAMA,EAAM,CAACA,EAAI,CAAG,EAAE,CAAE,CACvG,OAAO,EAAuBG,EAAK,CAACvB,EAAK,EAY7C,SAAS,EAAuB,EAAM,CAMpC,MALA,GAAmBuB,EACnB,EAAiB,EACbA,EAAK,SAAW,EACX,EAEF,EAAgBA,EAAK,GAAgB,CAW9C,SAAS,EAAgB,EAAW,CAClC,OAAO,EAGP,SAAS,EAAM,EAAM,CAgBnB,MAXA,GAAO,GAAO,CACd,EAAmB,EACd,EAAU,UACb,EAAQ,iBAAmB,GAKzB,EAAU,MAAQ,EAAQ,OAAO,WAAW,QAAQ,KAAK,SAAS,EAAU,KAAK,CAC5E,EAAIvB,EAAK,CAEX,EAAU,SAAS,KAI1B,EAAS,OAAO,OAAO,OAAO,OAAO,EAAQ,CAAE,EAAO,CAAG,EAAS,EAAS2B,EAAI,EAAI,CAAC3B,EAAK,EAK7F,SAAS2B,EAAG,EAAM,CAGhB,OADA,EAAS,EAAkB,EAAK,CACzB,EAIT,SAAS,EAAI,EAAM,CAMjB,OAJA,EAAK,SAAS,CACV,EAAE,EAAiB,EAAiB,OAC/B,EAAgB,EAAiB,GAAgB,CAEnD,IAab,SAAS,GAAU,EAAW,EAAM,CAC9B,EAAU,YAAc,CAAC,EAAqB,SAAS,EAAU,EACnE,EAAqB,KAAK,EAAU,CAElC,EAAU,SACZ,GAAO,EAAQ,OAAQ0B,EAAM,EAAQ,OAAO,OAASA,EAAM,EAAU,QAAQ,EAAQ,OAAO,MAAMA,EAAK,CAAE,EAAQ,CAAC,CAEhH,EAAU,YACZ,EAAQ,OAAS,EAAU,UAAU,EAAQ,OAAQ,EAAQ,EAUjE,SAAS,GAAQ,CACf,IAAM,EAAa,GAAK,CAClB,EAAgB,EAAQ,SACxB,EAAwB,EAAQ,iBAChC,EAAmB,EAAQ,OAAO,OAClC,EAAa,MAAM,KAAK,EAAM,CACpC,MAAO,CACL,KAAM,EACN,UACD,CAQD,SAAS,GAAU,CACjB,EAAQ,EACR,EAAQ,SAAW,EACnB,EAAQ,iBAAmB,EAC3B,EAAQ,OAAO,OAAS,EACxB,EAAQ,EACR,GAAyB,EAW7B,SAAS,GAA0B,CAC7BxD,EAAM,QAAQ,GAAeA,EAAM,OAAS,IAC9C,EAAM,OAAS,EAAYA,EAAM,MACjC,EAAM,QAAU,EAAYA,EAAM,MAAQ,IAehD,SAAS,GAAY,EAAQ,EAAO,CAClC,IAAM,EAAa,EAAM,MAAM,OACzB,EAAmB,EAAM,MAAM,aAC/B,EAAW,EAAM,IAAI,OACrB,EAAiB,EAAM,IAAI,aAE7B,EACJ,GAAI,IAAe,EAEjB,EAAO,CAAC,EAAO,GAAY,MAAM,EAAkB,EAAe,CAAC,KAC9D,CAEL,GADA,EAAO,EAAO,MAAM,EAAY,EAAS,CACrC,EAAmB,GAAI,CACzB,IAAM,EAAO,EAAK,GACd,OAAO,GAAS,SAClB,EAAK,GAAK,EAAK,MAAM,EAAiB,CAGtC,EAAK,OAAO,CAGZ,EAAiB,GAEnB,EAAK,KAAK,EAAO,GAAU,MAAM,EAAG,EAAe,CAAC,CAGxD,OAAO,EAaT,SAAS,GAAgB,EAAQ,EAAY,CAC3C,IAAIH,EAAQ,GAEN,EAAS,EAAE,CAEb,EACJ,KAAO,EAAEA,EAAQ,EAAO,QAAQ,CAC9B,IAAM,EAAQ,EAAOA,GAEjB,EACJ,GAAI,OAAO,GAAU,SACnB,EAAQ,OACH,OAAQ,EAAR,CACL,IAAK,GAED,EAAQ,KACR,MAEJ,IAAK,GAED,EAAQ;EACR,MAEJ,IAAK,GAED,EAAQ;EACR,MAEJ,IAAK,GAED,EAAQ,EAAa,IAAM,IAC3B,MAEJ,IAAK,GAED,GAAI,CAAC,GAAc,EAAO,SAC1B,EAAQ,IACR,MAEJ,QAGI,EAAQ,OAAO,aAAa,EAAM,CAGxC,EAAQ,IAAU,GAClB,EAAO,KAAK,EAAM,CAEpB,OAAO,EAAO,KAAK,GAAG,CCzkBxB,SAAgB4D,GAAM,EAAS,CAM7B,IAAM,EAAS,CACb,WAJF,GAAkB,CAACC,GAAmB,IAFrB,GAAW,EAAE,EAEqB,YAAc,EAAE,CAAE,CAAC,CAKpE,QAASC,EAAO,GAAQ,CACxB,QAAS,EAAE,CACX,SAAUA,EAAO3B,GAAS,CAC1B,KAAM2B,EAAO,GAAK,CAClB,KAAM,EAAE,CACR,OAAQA,EAAOP,GAAO,CACtB,KAAMO,EAAOxB,IACd,CACD,OAAO,EAQP,SAASwB,EAAO,EAAS,CACvB,OAAO,EAEP,SAAS,EAAQ,EAAM,CACrB,OAAO,GAAgB,EAAQ,EAAS,EAAK,GCxCnD,SAAgB,GAAY,EAAQ,CAClC,KAAO,CAAC,GAAY,EAAO,GAG3B,OAAO,ECCT,IAAMC,GAAS,cAMf,SAAgB,IAAa,CAC3B,IAAI,EAAS,EACT,EAAS,GAET,EAAQ,GAER,EACJ,OAAO,EAIP,SAAS,EAAa,EAAO,EAAU,EAAK,CAE1C,IAAM,EAAS,EAAE,CAEb,EAEAhE,EAEA,EAEA,EAEAO,EAWJ,IAVA,EAAQ,GAAU,OAAO,GAAU,SAAW,EAAM,UAAU,CAAG,IAAI,YAAY,GAAY,OAAU,CAAC,OAAO,EAAM,EACrH,EAAgB,EAChB,EAAS,GACT,CAKE,IAHI,EAAM,WAAW,EAAE,GAAK,OAC1B,IAEM,QAEH,EAAgB,EAAM,QAAQ,CAKnC,GAJA,GAAO,UAAY,EACnB,EAAQyD,GAAO,KAAK,EAAM,CAC1B,EAAc,GAAS,EAAM,QAAU,OAAY,EAAM,MAAQ,EAAM,OACvE,EAAO,EAAM,WAAW,EAAY,CAChC,CAAC,EAAO,CACV,EAAS,EAAM,MAAM,EAAc,CACnC,MAEF,GAAIzD,IAAS,IAAM,IAAkB,GAAe,EAClD,EAAO,KAAK,GAAG,CACf,EAAmB,YAUnB,OARA,CAEE,IADA,EAAO,KAAK,GAAG,CACI,QAEjB,EAAgB,IAClB,EAAO,KAAK,EAAM,MAAM,EAAe,EAAY,CAAC,CACpD,GAAU,EAAc,GAElBA,EAAR,CACE,IAAK,GAED,EAAO,KAAK,MAAM,CAClB,IACA,MAEJ,IAAK,GAID,IAFA,EAAO,KAAK,KAAK,EAAS,EAAE,CAAG,EAC/B,EAAO,KAAK,GAAG,CACR,IAAWP,GAAM,EAAO,KAAK,GAAG,CACvC,MAEJ,IAAK,IAED,EAAO,KAAK,GAAG,CACf,EAAS,EACT,MAEJ,QAEI,EAAmB,GACnB,EAAS,EAIjB,EAAgB,EAAc,EAOhC,OALI,IACE,GAAkB,EAAO,KAAK,GAAG,CACjC,GAAQ,EAAO,KAAK,EAAO,CAC/B,EAAO,KAAK,KAAK,EAEZ,GC9GX,IAAM,GAA6B,oEAcnC,SAAgB,GAAa,EAAO,CAClC,OAAO,EAAM,QAAQ,GAA4B,GAAO,CAa1D,SAAS,GAAO,EAAI,EAAI,EAAI,CAC1B,GAAI,EAEF,OAAO,EAKT,GADa,EAAG,WAAW,EAAE,GAChB,GAAI,CACf,IAAM,EAAO,EAAG,WAAW,EAAE,CACvB,EAAM,IAAS,KAAO,IAAS,GACrC,OAAO,GAAgC,EAAG,MAAM,EAAM,EAAI,EAAE,CAAE,EAAM,GAAK,GAAG,CAE9E,OAAO,GAA8B,EAAG,EAAI,ECK9C,IAAMe,GAAM,EAAE,CAAC,eAyBf,SAAgBkD,GAAa,EAAO,EAAU,EAAS,CAKrD,OAJI,OAAO,GAAa,WACtB,EAAU,EACV,EAAW,QAEN,GAAS,EAAQ,CAAC,GAAYJ,GAAM,EAAQ,CAAC,UAAU,CAAC,MAAM,IAAY,CAAC,EAAO,EAAU,GAAK,CAAC,CAAC,CAAC,CAQ7G,SAAS,GAAS,EAAS,CAEzB,IAAM,EAAS,CACb,WAAY,EAAE,CACd,eAAgB,CAAC,WAAY,WAAY,UAAW,YAAa,SAAS,CAC1E,MAAO,CACL,SAAU,EAAOK,GAAK,CACtB,iBAAkB,EAClB,cAAe,EACf,WAAY,EAAOZ,GAAQ,CAC3B,WAAY,EAAOa,GAAW,CAC9B,gBAAiB,EACjB,mBAAoB,EACpB,WAAY,EAAO,GAAS,CAC5B,oBAAqB,EACrB,oBAAqB,EACrB,aAAc,EAAO,GAAU,EAAO,CACtC,SAAU,EAAOC,GAAU,EAAO,CAClC,aAAc,EACd,KAAM,EACN,cAAe,EACf,WAAY,EAAOpB,GAAW,CAC9B,4BAA6B,EAC7B,sBAAuB,EACvB,sBAAuB,EACvB,SAAU,EAAOqB,GAAS,CAC1B,gBAAiB,EAAOC,GAAU,CAClC,kBAAmB,EAAOA,GAAU,CACpC,SAAU,EAAOC,GAAM,EAAO,CAC9B,aAAc,EACd,SAAU,EAAOA,GAAM,EAAO,CAC9B,aAAc,EACd,MAAO,EAAOC,GAAM,CACpB,MAAO,EACP,KAAM,EAAON,GAAK,CAClB,SAAU,EAAOO,GAAS,CAC1B,cAAe,EACf,YAAa,EAAO3C,GAAM,EAAmB,CAC7C,cAAe,EAAOA,GAAK,CAC3B,UAAW,EAAOyB,GAAU,CAC5B,UAAW,GACX,gBAAiB,EACjB,0BAA2B,EAC3B,oBAAqB,EACrB,cAAe,EAAOD,GAAQ,CAC9B,OAAQ,EAAOoB,GAAO,CACtB,cAAe,EAAOtB,IACvB,CACD,KAAM,CACJ,WAAY,GAAQ,CACpB,mBAAoB,EACpB,SAAU,GAAQ,CAClB,cAAe,GACf,iBAAkB,GAClB,WAAY,GAAQ,CACpB,qBAAsB,EACtB,oCAAqC,GACrC,gCAAiC,GACjC,wBAAyB,GACzB,mBAAoB,GACpB,WAAY,EAAO,EAAiB,CACpC,gBAAiB,EACjB,oBAAqB,EACrB,oBAAqB,EACrB,cAAe,EACf,aAAc,EAAO,EAAmB,CACxC,SAAU,EAAO,GAAe,CAChC,aAAc,EACd,KAAM,EACN,WAAY,GAAQ,CACpB,4BAA6B,EAC7B,sBAAuB,EACvB,sBAAuB,EACvB,SAAU,GAAQ,CAClB,gBAAiB,EAAO,EAAgB,CACxC,kBAAmB,EAAO,EAAgB,CAC1C,SAAU,EAAO,GAAe,CAChC,aAAc,EACd,SAAU,EAAO,GAAe,CAChC,aAAc,EACd,MAAO,EAAO,GAAY,CAC1B,MAAO,EACP,UAAW,EACX,WAAY,GACZ,KAAM,EAAO,GAAW,CACxB,SAAU,GAAQ,CAClB,YAAa,GAAQ,CACrB,cAAe,GAAQ,CACvB,UAAW,GAAQ,CACnB,gBAAiB,GACjB,0BAA2B,GAC3B,oBAAqB,GACrB,SAAU,GACV,cAAe,EAAO,GAAoB,CAC1C,0BAA2B,EAC3B,kBAAmB,EACnB,OAAQ,GAAQ,CAChB,cAAe,KAElB,CACD,GAAU,GAAS,GAAW,EAAE,EAAE,iBAAmB,EAAE,CAAC,CAGxD,IAAM,EAAO,EAAE,CACf,OAAO,EAUP,SAAS,EAAQ,EAAQ,CAEvB,IAAI,EAAO,CACT,KAAM,OACN,SAAU,GACX,CAEK,EAAU,CACd,MAAO,CAAC,EAAK,CACb,WAAY,EAAE,CACd,SACA,QACA,OACA,SACA,SACA,OACD,CAEK,EAAY,EAAE,CAChBnD,EAAQ,GACZ,KAAO,EAAEA,EAAQ,EAAO,QAGtB,GAAI,EAAOA,GAAO,GAAG,OAAS,eAAiB,EAAOA,GAAO,GAAG,OAAS,gBACvE,GAAI,EAAOA,GAAO,KAAO,QACvB,EAAU,KAAKA,EAAM,KAChB,CACL,IAAM,EAAO,EAAU,KAAK,CAC5B,EAAQ,EAAY,EAAQ,EAAMA,EAAM,CAK9C,IADA,EAAQ,GACD,EAAEA,EAAQ,EAAO,QAAQ,CAC9B,IAAM,EAAU,EAAO,EAAOA,GAAO,IACjCc,GAAI,KAAK,EAAS,EAAOd,GAAO,GAAG,KAAK,EAC1C,EAAQ,EAAOA,GAAO,GAAG,MAAM,KAAK,OAAO,OAAO,CAChD,eAAgB,EAAOA,GAAO,GAAG,eAClC,CAAE,EAAQ,CAAE,EAAOA,GAAO,GAAG,CAKlC,GAAI,EAAQ,WAAW,OAAS,EAAG,CACjC,IAAM,EAAO,EAAQ,WAAW,EAAQ,WAAW,OAAS,IAC5C,EAAK,IAAM,IACnB,KAAK,EAAS,OAAW,EAAK,GAAG,CAmB3C,IAfA,EAAK,SAAW,CACd,MAAOG,GAAM,EAAO,OAAS,EAAI,EAAO,GAAG,GAAG,MAAQ,CACpD,KAAM,EACN,OAAQ,EACR,OAAQ,EACT,CAAC,CACF,IAAKA,GAAM,EAAO,OAAS,EAAI,EAAO,EAAO,OAAS,GAAG,GAAG,IAAM,CAChE,KAAM,EACN,OAAQ,EACR,OAAQ,EACT,EACF,CAGD,EAAQ,GACD,EAAEH,EAAQ,EAAO,WAAW,QACjC,EAAO,EAAO,WAAWA,GAAO,EAAK,EAAI,EAE3C,OAAO,EAST,SAAS,EAAY,EAAQ,EAAO,EAAQ,CAC1C,IAAIA,EAAQ,EAAQ,EAChB,EAAmB,GACnB,EAAa,GAEbwE,EAEA,EAEA,EAEA,EACJ,KAAO,EAAExE,GAAS,GAAQ,CACxB,IAAM,EAAQ,EAAOA,GACrB,OAAQ,EAAM,GAAG,KAAjB,CACE,IAAK,gBACL,IAAK,cACL,IAAK,aAEG,EAAM,KAAO,QACf,IAEA,IAEF,EAAW,OACX,MAEJ,IAAK,kBAEG,EAAM,KAAO,UACXwE,GAAY,CAAC,GAAY,CAAC,GAAoB,CAAC,IACjD,EAAsBxE,GAExB,EAAW,QAEb,MAEJ,IAAK,aACL,IAAK,gBACL,IAAK,iBACL,IAAK,iBACL,IAAK,2BAID,MAEJ,QAEI,EAAW,OAGjB,GAAI,CAAC,GAAoB,EAAM,KAAO,SAAW,EAAM,GAAG,OAAS,kBAAoB,IAAqB,IAAM,EAAM,KAAO,SAAW,EAAM,GAAG,OAAS,iBAAmB,EAAM,GAAG,OAAS,eAAgB,CAC/M,GAAIwE,EAAU,CACZ,IAAI,EAAYxE,EAEhB,IADA,EAAY,OACL,KAAa,CAClB,IAAM,EAAY,EAAO,GACzB,GAAI,EAAU,GAAG,OAAS,cAAgB,EAAU,GAAG,OAAS,kBAAmB,CACjF,GAAI,EAAU,KAAO,OAAQ,SACzB,IACF,EAAO,GAAW,GAAG,KAAO,kBAC5B,EAAa,IAEf,EAAU,GAAG,KAAO,aACpB,EAAY,UACH,IAAU,GAAG,OAAS,cAAgB,EAAU,GAAG,OAAS,oBAAsB,EAAU,GAAG,OAAS,8BAAgC,EAAU,GAAG,OAAS,oBAAsB,EAAU,GAAG,OAAS,kBAGnN,MAGA,IAAwB,CAAC,GAAa,EAAsB,KAC9D,EAAS,QAAU,IAIrB,EAAS,IAAM,OAAO,OAAO,EAAE,CAAE,EAAY,EAAO,GAAW,GAAG,MAAQ,EAAM,GAAG,IAAI,CACvF,EAAO,OAAO,GAAaA,EAAO,EAAG,CAAC,OAAQwE,EAAU,EAAM,GAAG,CAAC,CAClE,IACA,IAIF,GAAI,EAAM,GAAG,OAAS,iBAAkB,CAEtC,IAAM,EAAO,CACX,KAAM,WACN,QAAS,GACT,MAAO,OAAO,OAAO,EAAE,CAAE,EAAM,GAAG,MAAM,CAExC,IAAK,OACN,CACD,EAAW,EACX,EAAO,OAAOxE,EAAO,EAAG,CAAC,QAAS,EAAM,EAAM,GAAG,CAAC,CAClD,IACA,IACA,EAAsB,OACtB,EAAW,KAKjB,MADA,GAAO,GAAO,GAAG,QAAU,EACpB,EAaT,SAAS,EAAO,EAAQ,EAAK,CAC3B,OAAO,EAOP,SAAS,EAAK,EAAO,CACnB,EAAM,KAAK,KAAM8D,EAAO,EAAM,CAAE,EAAM,CAClC,GAAK,EAAI,KAAK,KAAM,EAAM,EAOlC,SAAS,GAAS,CAChB,KAAK,MAAM,KAAK,CACd,KAAM,WACN,SAAU,GACX,CAAC,CAMJ,SAAS,EAAM,EAAM,EAAO,EAAc,CACzB,KAAK,MAAM,KAAK,MAAM,OAAS,GAEtB,SACf,KAAKxC,EAAK,CACnB,KAAK,MAAM,KAAKA,EAAK,CACrB,KAAK,WAAW,KAAK,CAAC,EAAO,GAAgB,OAAU,CAAC,CACxD,EAAK,SAAW,CACd,MAAOnB,GAAM,EAAM,MAAM,CAEzB,IAAK,OACN,CAWH,SAAS,EAAO,EAAK,CACnB,OAAO,EAOP,SAAS,EAAM,EAAO,CAChB,GAAK,EAAI,KAAK,KAAM,EAAM,CAC9B,EAAK,KAAK,KAAM,EAAM,EAO1B,SAASqC,EAAK,EAAO,EAAa,CAChC,IAAMlB,EAAO,KAAK,MAAM,KAAK,CACvB,EAAO,KAAK,WAAW,KAAK,CAClC,GAAK,EAKM,EAAK,GAAG,OAAS,EAAM,OAC5B,EACF,EAAY,KAAK,KAAM,EAAO,EAAK,GAAG,EAEtB,EAAK,IAAM,IACnB,KAAK,KAAM,EAAO,EAAK,GAAG,OATpC,MAAU,MAAM,iBAAmB,EAAM,KAAO,MAAQ,GAAkB,CACxE,MAAO,EAAM,MACb,IAAK,EAAM,IACZ,CAAC,CAAG,mBAAmB,CAS1B,EAAK,SAAS,IAAMnB,GAAM,EAAM,IAAI,CAMtC,SAAS,GAAS,CAChB,OAAOqB,GAAS,KAAK,MAAM,KAAK,CAAC,CAWnC,SAAS,GAAqB,CAC5B,KAAK,KAAK,4BAA8B,GAO1C,SAAS,EAAqB,EAAO,CACnC,GAAI,KAAK,KAAK,4BAA6B,CACzC,IAAM,EAAW,KAAK,MAAM,KAAK,MAAM,OAAS,GAChD,EAAS,MAAQ,OAAO,SAAS,KAAK,eAAe,EAAM,CAAE,GAAG,CAChE,KAAK,KAAK,4BAA8B,QAQ5C,SAAS,GAA4B,CACnC,IAAMkD,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,KAAOoD,EAOd,SAAS,GAA4B,CACnC,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,KAAOoD,EAOd,SAAS,GAAwB,CAE3B,KAAK,KAAK,iBACd,KAAK,QAAQ,CACb,KAAK,KAAK,eAAiB,IAO7B,SAAS,GAAmB,CAC1B,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAAK,QAAQ,2BAA4B,GAAG,CACzD,KAAK,KAAK,eAAiB,OAO7B,SAAS,GAAqB,CAC5B,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAAK,QAAQ,eAAgB,GAAG,CAO/C,SAAS,EAA4B,EAAO,CAC1C,IAAMxB,EAAQ,KAAK,QAAQ,CACrB5B,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQ4B,EACb,EAAK,WAAa,GAAoB,KAAK,eAAe,EAAM,CAAC,CAAC,aAAa,CAOjF,SAAS,GAA8B,CACrC,IAAMwB,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAOf,SAAS,GAAoC,CAC3C,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,IAAMoD,EAOb,SAAS,EAAyB,EAAO,CACvC,IAAMpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,CAEE,CAAK,QADS,KAAK,eAAe,EAAM,CAAC,OAS7C,SAAS,GAA0B,CACjC,KAAK,KAAK,6BAA+B,GAO3C,SAAS,EAAgC,EAAO,CAC9C,IAAMA,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQ,KAAK,eAAe,EAAM,CAAC,YAAY,EAAE,GAAK,GAAK,EAAI,EAOtE,SAAS,IAAsB,CAC7B,KAAK,KAAK,6BAA+B,OAQ3C,SAAS,EAAY,EAAO,CAG1B,IAAM,EAFO,KAAK,MAAM,KAAK,MAAM,OAAS,GAEtB,SAClB,EAAO,EAAS,EAAS,OAAS,IAClC,CAAC,GAAQ,EAAK,OAAS,UAEzB,EAAOgB,IAAM,CACb,EAAK,SAAW,CACd,MAAOnC,GAAM,EAAM,MAAM,CAEzB,IAAK,OACN,CACD,EAAS,KAAK,EAAK,EAErB,KAAK,MAAM,KAAK,EAAK,CAQvB,SAAS,EAAW,EAAO,CACzB,IAAM,EAAO,KAAK,MAAM,KAAK,CAC7B,EAAK,OAAS,KAAK,eAAe,EAAM,CACxC,EAAK,SAAS,IAAMA,GAAM,EAAM,IAAI,CAQtC,SAAS,GAAiB,EAAO,CAC/B,IAAM,EAAU,KAAK,MAAM,KAAK,MAAM,OAAS,GAE/C,GAAI,KAAK,KAAK,YAAa,CACzB,IAAM,EAAO,EAAQ,SAAS,EAAQ,SAAS,OAAS,GACxD,EAAK,SAAS,IAAMA,GAAM,EAAM,IAAI,CACpC,KAAK,KAAK,YAAc,OACxB,OAEE,CAAC,KAAK,KAAK,8BAAgC,EAAO,eAAe,SAAS,EAAQ,KAAK,GACzF,EAAY,KAAK,KAAM,EAAM,CAC7B,EAAW,KAAK,KAAM,EAAM,EAShC,SAAS,GAAkB,CACzB,KAAK,KAAK,YAAc,GAQ1B,SAAS,IAAiB,CACxB,IAAMuE,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAQf,SAAS,IAAiB,CACxB,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAQf,SAAS,IAAiB,CACxB,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAQf,SAAS,IAAa,CACpB,IAAMpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAK5C,GAAI,KAAK,KAAK,YAAa,CAEzB,IAAM,EAAgB,KAAK,KAAK,eAAiB,WACjD,EAAK,MAAQ,YAEb,EAAK,cAAgB,EAErB,OAAOA,EAAK,IACZ,OAAOA,EAAK,WAGZ,OAAOA,EAAK,WAEZ,OAAOA,EAAK,MAEd,KAAK,KAAK,cAAgB,OAQ5B,SAAS,IAAc,CACrB,IAAMA,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAK5C,GAAI,KAAK,KAAK,YAAa,CAEzB,IAAM,EAAgB,KAAK,KAAK,eAAiB,WACjD,EAAK,MAAQ,YAEb,EAAK,cAAgB,EAErB,OAAOA,EAAK,IACZ,OAAOA,EAAK,WAGZ,OAAOA,EAAK,WAEZ,OAAOA,EAAK,MAEd,KAAK,KAAK,cAAgB,OAQ5B,SAAS,EAAgB,EAAO,CAC9B,IAAMiC,EAAS,KAAK,eAAe,EAAM,CACnC,EAAW,KAAK,MAAM,KAAK,MAAM,OAAS,GAGhD,EAAS,MAAQ,GAAaA,EAAO,CAErC,EAAS,WAAa,GAAoBA,EAAO,CAAC,aAAa,CAQjE,SAAS,GAAc,CACrB,IAAMoB,EAAW,KAAK,MAAM,KAAK,MAAM,OAAS,GAC1C,EAAQ,KAAK,QAAQ,CACrBrD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAE5C,KAAK,KAAK,YAAc,GACpBA,EAAK,OAAS,OAGhB,EAAK,SADYqD,EAAS,SAG1B,EAAK,IAAM,EASf,SAAS,IAAkC,CACzC,IAAMD,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,IAAMoD,EAQb,SAAS,IAA4B,CACnC,IAAMA,EAAO,KAAK,QAAQ,CACpBpD,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,MAAQoD,EAQf,SAAS,IAAiB,CACxB,KAAK,KAAK,YAAc,OAQ1B,SAAS,IAAmB,CAC1B,KAAK,KAAK,cAAgB,YAQ5B,SAAS,GAAsB,EAAO,CACpC,IAAMxB,EAAQ,KAAK,QAAQ,CACrB5B,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAG5C,EAAK,MAAQ4B,EAEb,EAAK,WAAa,GAAoB,KAAK,eAAe,EAAM,CAAC,CAAC,aAAa,CAC/E,KAAK,KAAK,cAAgB,OAQ5B,SAAS,GAA+B,EAAO,CAC7C,KAAK,KAAK,uBAAyB,EAAM,KAO3C,SAAS,GAA8B,EAAO,CAC5C,IAAMwB,EAAO,KAAK,eAAe,EAAM,CACjC,EAAO,KAAK,KAAK,uBAEnB,EACA,GACF,EAAQ,GAAgCA,EAAM,IAAS,kCAAoC,GAAK,GAAG,CACnG,KAAK,KAAK,uBAAyB,QAGnC,EADe,GAA8BA,EAAK,CAGpD,IAAM,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,OAAS,EAOhB,SAAS,GAAyB,EAAO,CACvC,IAAM,EAAO,KAAK,MAAM,KAAK,CAC7B,EAAK,SAAS,IAAMvE,GAAM,EAAM,IAAI,CAOtC,SAAS,GAAuB,EAAO,CACrC,EAAW,KAAK,KAAM,EAAM,CAC5B,IAAMmB,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,IAAM,KAAK,eAAe,EAAM,CAOvC,SAAS,GAAoB,EAAO,CAClC,EAAW,KAAK,KAAM,EAAM,CAC5B,IAAMA,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAC5C,EAAK,IAAM,UAAY,KAAK,eAAe,EAAM,CAQnD,SAAS4C,IAAa,CACpB,MAAO,CACL,KAAM,aACN,SAAU,GACX,CAIH,SAAS,IAAW,CAClB,MAAO,CACL,KAAM,OACN,KAAM,KACN,KAAM,KACN,MAAO,GACR,CAIH,SAASC,IAAW,CAClB,MAAO,CACL,KAAM,aACN,MAAO,GACR,CAIH,SAASpB,IAAa,CACpB,MAAO,CACL,KAAM,aACN,WAAY,GACZ,MAAO,KACP,MAAO,KACP,IAAK,GACN,CAIH,SAASqB,IAAW,CAClB,MAAO,CACL,KAAM,WACN,SAAU,GACX,CAIH,SAASf,IAAU,CACjB,MAAO,CACL,KAAM,UAEN,MAAO,EACP,SAAU,GACX,CAIH,SAASgB,IAAY,CACnB,MAAO,CACL,KAAM,QACP,CAIH,SAASC,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,GACR,CAIH,SAASC,IAAQ,CACf,MAAO,CACL,KAAM,QACN,MAAO,KACP,IAAK,GACL,IAAK,KACN,CAIH,SAASN,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,KACP,IAAK,GACL,SAAU,GACX,CAOH,SAASpC,GAAK,EAAO,CACnB,MAAO,CACL,KAAM,OACN,QAAS,EAAM,OAAS,cACxB,MAAO,KACP,OAAQ,EAAM,QACd,SAAU,GACX,CAOH,SAAS2C,GAAS,EAAO,CACvB,MAAO,CACL,KAAM,WACN,OAAQ,EAAM,QACd,QAAS,KACT,SAAU,GACX,CAIH,SAASlB,IAAY,CACnB,MAAO,CACL,KAAM,YACN,SAAU,GACX,CAIH,SAASmB,IAAS,CAChB,MAAO,CACL,KAAM,SACN,SAAU,GACX,CAIH,SAASnC,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,GACR,CAIH,SAASa,IAAgB,CACvB,MAAO,CACL,KAAM,gBACP,EAYL,SAAShD,GAAM,EAAG,CAChB,MAAO,CACL,KAAM,EAAE,KACR,OAAQ,EAAE,OACV,OAAQ,EAAE,OACX,CAQH,SAAS,GAAU,EAAU,EAAY,CACvC,IAAIH,EAAQ,GACZ,KAAO,EAAEA,EAAQ,EAAW,QAAQ,CAClC,IAAM,EAAQ,EAAWA,GACrB,MAAM,QAAQ,EAAM,CACtB,GAAU,EAAU,EAAM,CAE1B,GAAU,EAAU,EAAM,EAUhC,SAAS,GAAU,EAAU,EAAW,CAEtC,IAAI,EACJ,IAAK,KAAO8B,EACV,GAAIhB,GAAI,KAAKgB,EAAW,EAAI,CAC1B,OAAQ,EAAR,CACE,IAAK,iBACH,CACE,IAAM,EAAQA,EAAU,GACpB,GACF,EAAS,GAAK,KAAK,GAAG,EAAM,CAE9B,MAEJ,IAAK,aACH,CACE,IAAM,EAAQA,EAAU,GACpB,GACF,EAAS,GAAK,KAAK,GAAG,EAAM,CAE9B,MAEJ,IAAK,QACL,IAAK,OACH,CACE,IAAM,EAAQA,EAAU,GACpB,GACF,OAAO,OAAO,EAAS,GAAM,EAAM,CAErC,QASZ,SAAS,GAAe,EAAM,EAAO,CAUjC,MATE,EACQ,MAAM,iBAAmB,EAAK,KAAO,MAAQ,GAAkB,CACvE,MAAO,EAAK,MACZ,IAAK,EAAK,IACX,CAAC,CAAG,0BAA4B,EAAM,KAAO,MAAQ,GAAkB,CACtE,MAAO,EAAM,MACb,IAAK,EAAM,IACZ,CAAC,CAAG,YAAY,CAEP,MAAM,oCAAsC,EAAM,KAAO,MAAQ,GAAkB,CAC3F,MAAO,EAAM,MACb,IAAK,EAAM,IACZ,CAAC,CAAG,kBAAkB,CCjoC3B,SAAwB,GAAY,EAAS,CAG3C,IAAMf,EAAO,KAEb,EAAK,OAAS,EAKd,SAAS,EAAO,EAAK,CACnB,OAAOiD,GAAa,EAAK,CACvB,GAAGjD,EAAK,KAAK,WAAW,CACxB,GAAG,EAIH,WAAYA,EAAK,KAAK,sBAAsB,EAAI,EAAE,CAClD,gBAAiBA,EAAK,KAAK,yBAAyB,EAAI,GACzD,CAAC,ECrBN,SAAgB6D,GAAW,EAAO,EAAM,CAEtC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,aACT,WAAY,EAAE,CACd,SAAU,EAAM,KAAK,EAAM,IAAItD,EAAK,CAAE,IACvC,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCRtC,SAAgB+C,GAAU,EAAO,EAAM,CAErC,IAAM,EAAS,CAAC,KAAM,UAAW,QAAS,KAAM,WAAY,EAAE,CAAE,SAAU,GAAG,CAE7E,OADA,EAAM,MAAM/C,EAAM,EAAO,CAClB,CAAC,EAAM,UAAUA,EAAM,EAAO,CAAE,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAC,CCJrE,SAAgBhB,GAAK,EAAO,EAAM,CAChC,IAAM,EAAQgB,EAAK,MAAQA,EAAK,MAAQ;EAAO,GAEzC,EAAa,EAAE,CAEjBA,EAAK,OACP,EAAW,UAAY,CAAC,YAAcA,EAAK,KAAK,EAKlD,IAAI,EAAS,CACX,KAAM,UACN,QAAS,OACT,aACA,SAAU,CAAC,CAAC,KAAM,OAAQ,QAAM,EACjC,CAYD,OAVIA,EAAK,OACP,EAAO,KAAO,CAAC,KAAMA,EAAK,KAAK,EAGjC,EAAM,MAAMA,EAAM,EAAO,CACzB,EAAS,EAAM,UAAUA,EAAM,EAAO,CAGtC,EAAS,CAAC,KAAM,UAAW,QAAS,MAAO,WAAY,EAAE,CAAE,SAAU,CAAC,GAAQ,CAC9E,EAAM,MAAMA,EAAM,EAAO,CAClB,EC7BT,SAAgB,GAAc,EAAO,EAAM,CAEzC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,MACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCTtC,SAAgB8C,GAAS,EAAO,EAAM,CAEpC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,KACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAI9C,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCVtC,SAAgBuD,GAAkB,EAAO,EAAM,CAC7C,IAAM,EACJ,OAAO,EAAM,QAAQ,eAAkB,SACnC,EAAM,QAAQ,cACd,gBACA,EAAK,OAAOvD,EAAK,WAAW,CAAC,aAAa,CAC1C,EAAS,GAAa,EAAG,aAAa,CAAC,CACvCtB,EAAQ,EAAM,cAAc,QAAQ,EAAG,CAEzC,EAEA,EAAe,EAAM,eAAe,IAAI,EAAG,CAE3C,IAAiB,QACnB,EAAe,EACf,EAAM,cAAc,KAAK,EAAG,CAC5B,EAAU,EAAM,cAAc,QAE9B,EAAUA,EAAQ,EAGpB,GAAgB,EAChB,EAAM,eAAe,IAAI,EAAI,EAAa,CAG1C,IAAMiE,EAAO,CACX,KAAM,UACN,QAAS,IACT,WAAY,CACV,KAAM,IAAM,EAAgB,MAAQ,EACpC,GACE,EACA,SACA,GACC,EAAe,EAAI,IAAM,EAAe,IAC3C,gBAAiB,GACjB,gBAAiB,CAAC,kBACnB,CACD,SAAU,CAAC,CAAC,KAAM,OAAQ,MAAO,OAAO,GAAS,EAClD,CACD,EAAM,MAAM3C,EAAM2C,EAAK,CAGvB,IAAM,EAAM,CACV,KAAM,UACN,QAAS,MACT,WAAY,EAAE,CACd,SAAU,CAACA,GACZ,CAED,OADA,EAAM,MAAM3C,EAAM,EAAI,CACf,EAAM,UAAUA,EAAM,EAAI,CCjDnC,SAAgB+B,GAAQ,EAAO,EAAM,CAEnC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,IAAM/B,EAAK,MACpB,WAAY,EAAE,CACd,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCPtC,SAAgBgD,GAAK,EAAO,EAAM,CAChC,GAAI,EAAM,QAAQ,mBAAoB,CAEpC,IAAM,EAAS,CAAC,KAAM,MAAO,MAAOhD,EAAK,MAAM,CAE/C,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,ECJxC,SAAgB,GAAO,EAAO,EAAM,CAClC,IAAM,EAAUA,EAAK,cACjB,EAAS,IAQb,GANI,IAAY,YACd,GAAU,KACD,IAAY,SACrB,GAAU,KAAOA,EAAK,OAASA,EAAK,YAAc,KAGhDA,EAAK,OAAS,iBAChB,MAAO,CAAC,CAAC,KAAM,OAAQ,MAAO,KAAOA,EAAK,IAAM,EAAO,CAAC,CAG1D,IAAM,EAAW,EAAM,IAAIA,EAAK,CAC1B,EAAO,EAAS,GAElB,GAAQ,EAAK,OAAS,OACxB,EAAK,MAAQ,IAAM,EAAK,MAExB,EAAS,QAAQ,CAAC,KAAM,OAAQ,MAAO,IAAI,CAAC,CAG9C,IAAM,EAAO,EAAS,EAAS,OAAS,GAQxC,OANI,GAAQ,EAAK,OAAS,OACxB,EAAK,OAAS,EAEd,EAAS,KAAK,CAAC,KAAM,OAAQ,MAAO,EAAO,CAAC,CAGvC,EChCT,SAAgBwD,GAAe,EAAO,EAAM,CAC1C,IAAM,EAAK,OAAOxD,EAAK,WAAW,CAAC,aAAa,CAC1CyB,EAAa,EAAM,eAAe,IAAI,EAAG,CAE/C,GAAI,CAACA,EACH,OAAO,GAAO,EAAOzB,EAAK,CAI5B,IAAM,EAAa,CAAC,IAAK,GAAayB,EAAW,KAAO,GAAG,CAAE,IAAKzB,EAAK,IAAI,CAEvEyB,EAAW,QAAU,MAAQA,EAAW,QAAU,SACpD,EAAW,MAAQA,EAAW,OAIhC,IAAM,EAAS,CAAC,KAAM,UAAW,QAAS,MAAO,aAAY,SAAU,GAAG,CAE1E,OADA,EAAM,MAAMzB,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCpBtC,SAAgBiD,GAAM,EAAO,EAAM,CAEjC,IAAM,EAAa,CAAC,IAAK,GAAajD,EAAK,IAAI,CAAC,CAE5CA,EAAK,MAAQ,MAAQA,EAAK,MAAQ,SACpC,EAAW,IAAMA,EAAK,KAGpBA,EAAK,QAAU,MAAQA,EAAK,QAAU,SACxC,EAAW,MAAQA,EAAK,OAI1B,IAAM,EAAS,CAAC,KAAM,UAAW,QAAS,MAAO,aAAY,SAAU,GAAG,CAE1E,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCdtC,SAAgByD,GAAW,EAAO,EAAM,CAEtC,IAAMzC,EAAO,CAAC,KAAM,OAAQ,MAAOhB,EAAK,MAAM,QAAQ,YAAa,KAAK,CACxE,EAAM,MAAMA,EAAMgB,EAAK,CAGvB,IAAM,EAAS,CACb,KAAM,UACN,QAAS,OACT,WAAY,EAAE,CACd,SAAU,CAACA,GACZ,CAED,OADA,EAAM,MAAMhB,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCZtC,SAAgB0D,GAAc,EAAO,EAAM,CACzC,IAAM,EAAK,OAAO1D,EAAK,WAAW,CAAC,aAAa,CAC1CyB,EAAa,EAAM,eAAe,IAAI,EAAG,CAE/C,GAAI,CAACA,EACH,OAAO,GAAO,EAAOzB,EAAK,CAI5B,IAAM,EAAa,CAAC,KAAM,GAAayB,EAAW,KAAO,GAAG,CAAC,CAEzDA,EAAW,QAAU,MAAQA,EAAW,QAAU,SACpD,EAAW,MAAQA,EAAW,OAIhC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,IACT,aACA,SAAU,EAAM,IAAIzB,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCzBtC,SAAgB2C,GAAK,EAAO,EAAM,CAEhC,IAAM,EAAa,CAAC,KAAM,GAAa3C,EAAK,IAAI,CAAC,CAE7CA,EAAK,QAAU,MAAQA,EAAK,QAAU,SACxC,EAAW,MAAQA,EAAK,OAI1B,IAAM,EAAS,CACb,KAAM,UACN,QAAS,IACT,aACA,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCXtC,SAAgBkD,GAAS,EAAO,EAAM,EAAQ,CAC5C,IAAM,EAAU,EAAM,IAAIlD,EAAK,CACzB,EAAQ,EAAS,GAAU,EAAO,CAAG,GAAcA,EAAK,CAExD,EAAa,EAAE,CAEf,EAAW,EAAE,CAEnB,GAAI,OAAOA,EAAK,SAAY,UAAW,CACrC,IAAM,EAAO,EAAQ,GAEjBgC,EAEA,GAAQ,EAAK,OAAS,WAAa,EAAK,UAAY,IACtD,EAAY,GAEZ,EAAY,CAAC,KAAM,UAAW,QAAS,IAAK,WAAY,EAAE,CAAE,SAAU,GAAG,CACzE,EAAQ,QAAQA,EAAU,EAGxBA,EAAU,SAAS,OAAS,GAC9B,EAAU,SAAS,QAAQ,CAAC,KAAM,OAAQ,MAAO,IAAI,CAAC,CAGxD,EAAU,SAAS,QAAQ,CACzB,KAAM,UACN,QAAS,QACT,WAAY,CAAC,KAAM,WAAY,QAAShC,EAAK,QAAS,SAAU,GAAK,CACrE,SAAU,GACX,CAAC,CAIF,EAAW,UAAY,CAAC,iBAAiB,CAG3C,IAAItB,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAQ,QAAQ,CAC/B,IAAM,EAAQ,EAAQA,IAIpB,GACAA,IAAU,GACV,EAAM,OAAS,WACf,EAAM,UAAY,MAElB,EAAS,KAAK,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAC,CAGxC,EAAM,OAAS,WAAa,EAAM,UAAY,KAAO,CAAC,EACxD,EAAS,KAAK,GAAG,EAAM,SAAS,CAEhC,EAAS,KAAK,EAAM,CAIxB,IAAM,EAAO,EAAQ,EAAQ,OAAS,GAGlC,IAAS,GAAS,EAAK,OAAS,WAAa,EAAK,UAAY,MAChE,EAAS,KAAK,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAC,CAI5C,IAAM,EAAS,CAAC,KAAM,UAAW,QAAS,KAAM,aAAY,WAAS,CAErE,OADA,EAAM,MAAMsB,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CAOtC,SAAS,GAAU,EAAM,CACvB,IAAI,EAAQ,GACZ,GAAIA,EAAK,OAAS,OAAQ,CACxB,EAAQA,EAAK,QAAU,GACvB,IAAM,EAAWA,EAAK,SAClBtB,EAAQ,GAEZ,KAAO,CAAC,GAAS,EAAEA,EAAQ,EAAS,QAClC,EAAQ,GAAc,EAASA,GAAO,CAI1C,OAAO,EAOT,SAAS,GAAc,EAAM,CAG3B,OAFesB,EAAK,QAGhBA,EAAK,SAAS,OAAS,ECtG7B,SAAgBO,GAAK,EAAO,EAAM,CAEhC,IAAM,EAAa,EAAE,CACf,EAAU,EAAM,IAAIP,EAAK,CAC3BtB,EAAQ,GAOZ,IALI,OAAOsB,EAAK,OAAU,UAAYA,EAAK,QAAU,IACnD,EAAW,MAAQA,EAAK,OAInB,EAAEtB,EAAQ,EAAQ,QAAQ,CAC/B,IAAM,EAAQ,EAAQA,GAEtB,GACE,EAAM,OAAS,WACf,EAAM,UAAY,MAClB,EAAM,YACN,MAAM,QAAQ,EAAM,WAAW,UAAU,EACzC,EAAM,WAAW,UAAU,SAAS,iBAAiB,CACrD,CACA,EAAW,UAAY,CAAC,qBAAqB,CAC7C,OAKJ,IAAM,EAAS,CACb,KAAM,UACN,QAASsB,EAAK,QAAU,KAAO,KAC/B,aACA,SAAU,EAAM,KAAK,EAAS,IAC/B,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCnCtC,SAAgBgC,GAAU,EAAO,EAAM,CAErC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,IACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAIhC,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCRtC,SAAgB2D,GAAK,EAAO,EAAM,CAEhC,IAAM,EAAS,CAAC,KAAM,OAAQ,SAAU,EAAM,KAAK,EAAM,IAAI3D,EAAK,EAAE,CAEpE,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCLtC,SAAgBmD,GAAO,EAAO,EAAM,CAElC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,SACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAInD,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCCtC,MAAa,GAAWnB,GAAM,MAAM,CAUvB,GAAaA,GAAM,QAAQ,CAUxC,SAASA,GAAM,EAAM,CACnB,OAAOA,EAQP,SAASA,EAAM,EAAM,CACnB,IAAMA,EAASmB,GAAQA,EAAK,UAAYA,EAAK,SAAS,IAAU,EAAE,CAElE,GACE,OAAOnB,EAAM,MAAS,UACtBA,EAAM,KAAO,GACb,OAAOA,EAAM,QAAW,UACxBA,EAAM,OAAS,EAEf,MAAO,CACL,KAAMA,EAAM,KACZ,OAAQA,EAAM,OACd,OACE,OAAOA,EAAM,QAAW,UAAYA,EAAM,OAAS,GAC/CA,EAAM,OACN,OACP,EAaP,SAAgBD,GAAS,EAAM,CAC7B,IAAM,EAAQ,GAAWoB,EAAK,CACxB,EAAM,GAASA,EAAK,CAE1B,GAAI,GAAS,EACX,MAAO,CAAC,QAAO,MAAI,CC1EvB,SAAgB,GAAM,EAAO,EAAM,CACjC,IAAM,EAAO,EAAM,IAAIA,EAAK,CACtB,EAAW,EAAK,OAAO,CAEvB,EAAe,EAAE,CAEvB,GAAI,EAAU,CAEZ,IAAM,EAAO,CACX,KAAM,UACN,QAAS,QACT,WAAY,EAAE,CACd,SAAU,EAAM,KAAK,CAAC,EAAS,CAAE,IAClC,CACD,EAAM,MAAMA,EAAK,SAAS,GAAI,EAAK,CACnC,EAAa,KAAK,EAAK,CAGzB,GAAI,EAAK,OAAS,EAAG,CAEnB,IAAM,EAAO,CACX,KAAM,UACN,QAAS,QACT,WAAY,EAAE,CACd,SAAU,EAAM,KAAK,EAAM,IAC5B,CAEK,EAAQ,GAAWA,EAAK,SAAS,GAAG,CACpC,EAAM,GAASA,EAAK,SAASA,EAAK,SAAS,OAAS,GAAG,CACzD,GAAS,IAAK,EAAK,SAAW,CAAC,QAAO,MAAI,EAC9C,EAAa,KAAK,EAAK,CAIzB,IAAM,EAAS,CACb,KAAM,UACN,QAAS,QACT,WAAY,EAAE,CACd,SAAU,EAAM,KAAK,EAAc,IACpC,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCnCtC,SAAgB,GAAS,EAAO,EAAM,EAAQ,CAC5C,IAAM,EAAW,EAAS,EAAO,SAAW,OAGtC,GADW,EAAW,EAAS,QAAQA,EAAK,CAAG,KACxB,EAAI,KAAO,KAElC,EAAQ,GAAU,EAAO,OAAS,QAAU,EAAO,MAAQ,OAC3D,EAAS,EAAQ,EAAM,OAASA,EAAK,SAAS,OAChD,EAAY,GAEV,EAAQ,EAAE,CAEhB,KAAO,EAAE,EAAY,GAAQ,CAE3B,IAAM,EAAOA,EAAK,SAAS,GAErB,EAAa,EAAE,CACf,EAAa,EAAQ,EAAM,GAAa,OAE1C,IACF,EAAW,MAAQ,GAIrB,IAAI4D,EAAS,CAAC,KAAM,UAAW,UAAS,aAAY,SAAU,GAAG,CAE7D,IACF,EAAO,SAAW,EAAM,IAAI,EAAK,CACjC,EAAM,MAAM,EAAMA,EAAO,CACzB,EAAS,EAAM,UAAU,EAAMA,EAAO,EAGxC,EAAM,KAAKA,EAAO,CAIpB,IAAM,EAAS,CACb,KAAM,UACN,QAAS,KACT,WAAY,EAAE,CACd,SAAU,EAAM,KAAK,EAAO,IAC7B,CAED,OADA,EAAM,MAAM5D,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CChDtC,SAAgB,GAAU,EAAO,EAAM,CAIrC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,KACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CClBtC,SAAgB,GAAU,EAAO,CAC/B,IAAM,EAAS,OAAO,EAAM,CACtByC,EAAS,YACX,EAAQA,EAAO,KAAK,EAAO,CAC3B,EAAO,EAEL,EAAQ,EAAE,CAEhB,KAAO,GACL,EAAM,KACJ,GAAS,EAAO,MAAM,EAAM,EAAM,MAAM,CAAE,EAAO,EAAG,GAAK,CACzD,EAAM,GACP,CAED,EAAO,EAAM,MAAQ,EAAM,GAAG,OAC9B,EAAQA,EAAO,KAAK,EAAO,CAK7B,OAFA,EAAM,KAAK,GAAS,EAAO,MAAM,EAAK,CAAE,EAAO,EAAG,GAAM,CAAC,CAElD,EAAM,KAAK,GAAG,CAavB,SAAS,GAAS,EAAO,EAAO,EAAK,CACnC,IAAI,EAAa,EACb,EAAW,EAAM,OAErB,GAAI,EAAO,CACT,IAAIzD,EAAO,EAAM,YAAY,EAAW,CAExC,KAAOA,OAAgBA,QACrB,IACA,EAAO,EAAM,YAAY,EAAW,CAIxC,GAAI,EAAK,CACP,IAAIA,EAAO,EAAM,YAAY,EAAW,EAAE,CAE1C,KAAOA,OAAgBA,QACrB,IACA,EAAO,EAAM,YAAY,EAAW,EAAE,CAI1C,OAAO,EAAW,EAAa,EAAM,MAAM,EAAY,EAAS,CAAG,GChDrE,SAAgBgC,GAAK,EAAO,EAAM,CAEhC,IAAM,EAAS,CAAC,KAAM,OAAQ,MAAO,GAAU,OAAOhB,EAAK,MAAM,EAAE,CAEnE,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCJtC,SAAgB6B,GAAc,EAAO,EAAM,CAEzC,IAAM,EAAS,CACb,KAAM,UACN,QAAS,KACT,WAAY,EAAE,CACd,SAAU,GACX,CAED,OADA,EAAM,MAAM7B,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCCtC,MAAa,GAAW,CACtB,cACA,MAAO+C,GACP,QACA,OAAQ,GACR,YACA,qBACA,WACA,QACA,kBACA,SACA,cACA,iBACA,QACA,YACA,QACA,aAEA,QACA,UACA,SACA,aACA,YACA,QACA,iBACA,KAAM,GACN,KAAM,GACN,WAAY,GACZ,mBAAoB,GACrB,CAGD,SAAS,IAAS,ECtDlB,IAAM,GAAM,OAAO,MAAS,SAAW,KAAO,WAExC,IAAgB,EAAG,IAAM,CAC7B,IAAM,GAAM,EAAK,KACf,EAAE,IAAIrE,EAAO,EAAI,CACV,GAGH,EAAS,GAAS,CACtB,GAAImF,EAAE,IAAInF,EAAM,CACd,OAAOmF,EAAE,IAAInF,EAAM,CAErB,GAAM,CAAC,EAAM,GAAS,EAAEA,GACxB,OAAQ,EAAR,CACE,OACA,OACE,OAAO,EAAG,EAAOA,EAAM,CACzB,OAAY,CACV,IAAM,EAAM,EAAG,EAAE,CAAEA,EAAM,CACzB,IAAK,IAAMA,KAAS,EAClB,EAAI,KAAK,EAAOA,EAAM,CAAC,CACzB,OAAO,EAET,OAAa,CACX,IAAM,EAAS,EAAG,EAAE,CAAEA,EAAM,CAC5B,IAAK,GAAM,CAAC,EAAKA,KAAU,EACzB,EAAO,EAAO,EAAI,EAAI,EAAOA,EAAM,CACrC,OAAO,EAET,OACE,OAAO,EAAG,IAAI,KAAK,EAAM,CAAEA,EAAM,CACnC,OAAa,CACX,GAAM,CAAC,SAAQ,SAAS,EACxB,OAAO,EAAG,IAAI,OAAO,EAAQ,EAAM,CAAEA,EAAM,CAE7C,OAAU,CACR,IAAM0D,EAAM,EAAG,IAAI,IAAK1D,EAAM,CAC9B,IAAK,GAAM,CAAC,EAAKA,KAAU,EACzB,EAAI,IAAI,EAAO,EAAI,CAAE,EAAOA,EAAM,CAAC,CACrC,OAAO0D,EAET,OAAU,CACR,IAAM0B,EAAM,EAAG,IAAI,IAAKpF,EAAM,CAC9B,IAAK,IAAMA,KAAS,EAClB,EAAI,IAAI,EAAOA,EAAM,CAAC,CACxB,OAAOoF,EAET,OAAY,CACV,GAAM,CAAC,OAAM,WAAW,EACxB,OAAO,EAAG,IAAI,GAAI,GAAM,EAAQ,CAAEpF,EAAM,CAE1C,OACE,OAAO,EAAG,OAAO,EAAM,CAAEA,EAAM,CACjC,IAAK,SACH,OAAO,EAAG,OAAO,OAAO,EAAM,CAAC,CAAEA,EAAM,CACzC,IAAK,cACH,OAAO,EAAG,IAAI,WAAW,EAAM,CAAC,OAAQ,EAAM,CAChD,IAAK,WAAY,CACf,GAAM,CAAE,UAAW,IAAI,WAAW,EAAM,CACxC,OAAO,EAAG,IAAI,SAAS,EAAO,CAAE,EAAM,EAG1C,OAAO,EAAG,IAAI,GAAI,GAAM,EAAM,CAAEA,EAAM,EAGxC,OAAO,GAYT,MAAa,GAAc,GAAc,GAAa,IAAI,IAAK,EAAW,CAAC,EAAE,CC3E7E,GAAM,CAAC,aAAY,EAAE,CACf,CAAC,SAAQ,OAET,GAAS,GAAS,CACtB,IAAM,EAAO,OAAO,EACpB,GAAI,IAAS,UAAY,CAAC,EACxB,MAAO,GAAY,EAAK,CAE1B,IAAM,EAAWwB,GAAS,KAAK,EAAM,CAAC,MAAM,EAAG,GAAG,CAClD,OAAQ,EAAR,CACE,IAAK,QACH,MAAO,MAAc,CACvB,IAAK,SACH,MAAO,MAAe,CACxB,IAAK,OACH,MAAO,MAAa,CACtB,IAAK,SACH,MAAO,MAAe,CACxB,IAAK,MACH,MAAO,MAAY,CACrB,IAAK,MACH,MAAO,MAAY,CACrB,IAAK,WACH,MAAO,GAAQ,EAAS,CAS5B,OANI,EAAS,SAAS,QAAQ,CACrB,GAAQ,EAAS,CAEtB,EAAS,SAAS,QAAQ,CACrB,GAAQ,EAAS,CAEnB,GAAS,EAAS,EAGrB,IAAc,CAAC,EAAM,KACzB,QACC,IAAS,YAAc,IAAS,UAG7B,IAAc,EAAQ,EAAM,EAAG,IAAM,CAEzC,IAAM,GAAM,EAAK,IAAU,CACzB,IAAMxB,EAAQ,EAAE,KAAK,EAAI,CAAG,EAE5B,OADA,EAAE,IAAI,EAAOA,EAAM,CACZA,GAGH,EAAO,GAAS,CACpB,GAAImF,EAAE,IAAI,EAAM,CACd,OAAOA,EAAE,IAAI,EAAM,CAErB,GAAI,CAAC,EAAM,GAAQ,GAAO,EAAM,CAChC,OAAQ,EAAR,CACE,OAAgB,CACd,IAAI,EAAQ,EACZ,OAAQ,EAAR,CACE,IAAK,SACH,IACA,EAAQ,EAAM,UAAU,CACxB,MACF,IAAK,WACL,IAAK,SACH,GAAI,EACF,MAAU,UAAU,uBAAyB,EAAK,CACpD,EAAQ,KACR,MACF,IAAK,YACH,OAAO,EAAG,IAAM,CAAE,EAAM,CAE5B,OAAO,EAAG,CAAC,EAAM,EAAM,CAAE,EAAM,CAEjC,OAAY,CACV,GAAI,EAAM,CACR,IAAI,EAAS,EAOb,OANI,IAAS,WACX,EAAS,IAAI,WAAW,EAAM,OAAO,CAE9B,IAAS,gBAChB,EAAS,IAAI,WAAW,EAAM,EAEzB,EAAG,CAAC,EAAM,CAAC,GAAG,EAAO,CAAC,CAAE,EAAM,CAGvC,IAAM,EAAM,EAAE,CACRnF,EAAQ,EAAG,CAAC,EAAM,EAAI,CAAE,EAAM,CACpC,IAAK,IAAM,KAAS,EAClB,EAAI,KAAK,EAAK,EAAM,CAAC,CACvB,OAAOA,EAET,OAAa,CACX,GAAI,EACF,OAAQ,EAAR,CACE,IAAK,SACH,OAAO,EAAG,CAAC,EAAM,EAAM,UAAU,CAAC,CAAE,EAAM,CAC5C,IAAK,UACL,IAAK,SACL,IAAK,SACH,OAAO,EAAG,CAAC,EAAM,EAAM,SAAS,CAAC,CAAE,EAAM,CAI/C,GAAI,GAAS,WAAY,EACvB,OAAO,EAAK,EAAM,QAAQ,CAAC,CAE7B,IAAM,EAAU,EAAE,CACZA,EAAQ,EAAG,CAAC,EAAM,EAAQ,CAAE,EAAM,CACxC,IAAK,IAAM,KAAO,GAAK,EAAM,EACvB,GAAU,CAAC,GAAW,GAAO,EAAM,GAAK,CAAC,GAC3C,EAAQ,KAAK,CAAC,EAAK,EAAI,CAAE,EAAK,EAAM,GAAK,CAAC,CAAC,CAE/C,OAAOA,EAET,OACE,OAAO,EAAG,CAAC,EAAM,EAAM,aAAa,CAAC,CAAE,EAAM,CAC/C,OAAa,CACX,GAAM,CAAC,SAAQ,SAAS,EACxB,OAAO,EAAG,CAAC,EAAM,CAAC,SAAQ,QAAM,CAAC,CAAE,EAAM,CAE3C,OAAU,CACR,IAAM,EAAU,EAAE,CACZA,EAAQ,EAAG,CAAC,EAAM,EAAQ,CAAE,EAAM,CACxC,IAAK,GAAM,CAAC,EAAK,KAAU,GACrB,GAAU,EAAE,GAAW,GAAO,EAAI,CAAC,EAAI,GAAW,GAAO,EAAM,CAAC,IAClE,EAAQ,KAAK,CAAC,EAAK,EAAI,CAAE,EAAK,EAAM,CAAC,CAAC,CAE1C,OAAOA,EAET,OAAU,CACR,IAAM,EAAU,EAAE,CACZA,EAAQ,EAAG,CAAC,EAAM,EAAQ,CAAE,EAAM,CACxC,IAAK,IAAM,KAAS,GACd,GAAU,CAAC,GAAW,GAAO,EAAM,CAAC,GACtC,EAAQ,KAAK,EAAK,EAAM,CAAC,CAE7B,OAAOA,GAIX,GAAM,CAAC,WAAW,EAClB,OAAO,EAAG,CAAC,EAAM,CAAC,KAAM,EAAM,UAAQ,CAAC,CAAE,EAAM,EAGjD,OAAO,GAeR,MAAaqF,IAAa,EAAO,CAAC,OAAM,SAAS,EAAE,GAAK,CACvD,IAAM,EAAI,EAAE,CACZ,OAAO,GAAW,EAAE,GAAQ,GAAQ,CAAC,CAAC,EAAM,IAAI,IAAK,EAAE,CAAC,EAAM,CAAE,GC1JlE,OAAe,OAAO,iBAAoB,YAEvC,EAAK,IACJ,IAAY,SAAU,GAAW,UAAW,GAC1C,GAAYA,GAAU,EAAK,EAAQ,CAAC,CAAG,gBAAgB,EAAI,EAE9D,EAAK,IAAY,GAAYA,GAAU,EAAK,EAAQ,CAAC,CC2DxD,SAAgB,GAA2B,EAAG,EAAkB,CAE9D,IAAM,EAAS,CAAC,CAAC,KAAM,OAAQ,MAAO,IAAI,CAAC,CAW3C,OATI,EAAmB,GACrB,EAAO,KAAK,CACV,KAAM,UACN,QAAS,MACT,WAAY,EAAE,CACd,SAAU,CAAC,CAAC,KAAM,OAAQ,MAAO,OAAO,GAAkB,EAC3D,CAAC,CAGG,EAcT,SAAgB,GAAyB,EAAgB,EAAkB,CACzE,MACE,sBACC,EAAiB,IACjB,EAAmB,EAAI,IAAM,EAAmB,IAarD,SAAgB,GAAO,EAAO,CAC5B,IAAM,EACJ,OAAO,EAAM,QAAQ,eAAkB,SACnC,EAAM,QAAQ,cACd,gBACA,EACJ,EAAM,QAAQ,qBAAuB,GACjC,EACJ,EAAM,QAAQ,mBAAqB,GAC/B,EAAgB,EAAM,QAAQ,eAAiB,YAC/C,EAAuB,EAAM,QAAQ,sBAAwB,KAC7D,EAA0B,EAAM,QAAQ,yBAA2B,CACvE,UAAW,CAAC,UAAU,CACvB,CAEK,EAAY,EAAE,CAChB,EAAiB,GAErB,KAAO,EAAE,EAAiB,EAAM,cAAc,QAAQ,CACpD,IAAMtC,EAAa,EAAM,aAAa,IACpC,EAAM,cAAc,GACrB,CAED,GAAI,CAACA,EACH,SAGF,IAAMF,EAAU,EAAM,IAAIE,EAAW,CAC/B,EAAK,OAAOA,EAAW,WAAW,CAAC,aAAa,CAChD,EAAS,GAAa,EAAG,aAAa,CAAC,CACzC,EAAmB,EAEjB,EAAiB,EAAE,CACnB,EAAS,EAAM,eAAe,IAAI,EAAG,CAG3C,KAAO,IAAW,QAAa,EAAE,GAAoB,GAAQ,CACvD,EAAe,OAAS,GAC1B,EAAe,KAAK,CAAC,KAAM,OAAQ,MAAO,IAAI,CAAC,CAGjD,IAAI,EACF,OAAO,GAAwB,SAC3B,EACA,EAAoB,EAAgB,EAAiB,CAEvD,OAAO,GAAa,WACtB,EAAW,CAAC,KAAM,OAAQ,MAAO,EAAS,EAG5C,EAAe,KAAK,CAClB,KAAM,UACN,QAAS,IACT,WAAY,CACV,KACE,IACA,EACA,SACA,GACC,EAAmB,EAAI,IAAM,EAAmB,IACnD,oBAAqB,GACrB,UACE,OAAO,GAAsB,SACzB,EACA,EAAkB,EAAgB,EAAiB,CACzD,UAAW,CAAC,yBACb,CACD,SAAU,MAAM,QAAQ,EAAS,CAAG,EAAW,CAAC,GACjD,CAAC,CAGJ,IAAM,EAAOF,EAAQA,EAAQ,OAAS,GAEtC,GAAI,GAAQ,EAAK,OAAS,WAAa,EAAK,UAAY,IAAK,CAC3D,IAAM,EAAW,EAAK,SAAS,EAAK,SAAS,OAAS,GAClD,GAAY,EAAS,OAAS,OAChC,EAAS,OAAS,IAElB,EAAK,SAAS,KAAK,CAAC,KAAM,OAAQ,MAAO,IAAI,CAAC,CAGhD,EAAK,SAAS,KAAK,GAAG,EAAe,MAErC,EAAQ,KAAK,GAAG,EAAe,CAIjC,IAAM2B,EAAW,CACf,KAAM,UACN,QAAS,KACT,WAAY,CAAC,GAAI,EAAgB,MAAQ,EAAO,CAChD,SAAU,EAAM,KAAK3B,EAAS,IAC/B,CAED,EAAM,MAAME,EAAYyB,EAAS,CAEjC,EAAU,KAAKA,EAAS,CAGtB,KAAU,SAAW,EAIzB,MAAO,CACL,KAAM,UACN,QAAS,UACT,WAAY,CAAC,cAAe,GAAM,UAAW,CAAC,aAAa,CAC3D,SAAU,CACR,CACE,KAAM,UACN,QAAS,EACT,WAAY,CACV,GAAGc,GAAgB,EAAwB,CAC3C,GAAI,iBACL,CACD,SAAU,CAAC,CAAC,KAAM,OAAQ,MAAO,EAAc,EAChD,CACD,CAAC,KAAM,OAAQ,MAAO;EAAK,CAC3B,CACE,KAAM,UACN,QAAS,KACT,WAAY,EAAE,CACd,SAAU,EAAM,KAAK,EAAW,IACjC,CACD,CAAC,KAAM,OAAQ,MAAO;IAEzB,CCvEH,IAAMxE,GAAM,EAAE,CAAC,eAGTS,GAAe,EAAE,CAYvB,SAAgB,GAAY,EAAM,EAAS,CACzC,IAAM,EAAW,GAAWA,GAEtB,EAAiB,IAAI,IAErB,EAAe,IAAI,IAEnB,EAAiB,IAAI,IAIrBgE,EAAW,CAAC,GAAGC,GAAiB,GAAG,EAAS,SAAS,CAGrD,EAAQ,CACZ,MACA,aACA,iBACA,eACA,iBACA,cAAe,EAAE,CACjB,WACA,MACA,QAAS,EACT,SACA,QACD,CAgBD,OAdA,EAAM,EAAM,SAAU,EAAM,CAC1B,GAAIlE,EAAK,OAAS,cAAgBA,EAAK,OAAS,qBAAsB,CACpE,IAAMoC,EAAMpC,EAAK,OAAS,aAAe,EAAiB,EACpD,EAAK,OAAOA,EAAK,WAAW,CAAC,aAAa,CAI3CoC,EAAI,IAAI,EAAG,EAEd,EAAI,IAAI,EAAIpC,EAAK,GAGrB,CAEK,EAYP,SAASG,EAAI,EAAM,EAAQ,CACzB,IAAM,EAAOH,EAAK,KACZmE,EAAS,EAAM,SAAS,GAE9B,GAAI3E,GAAI,KAAK,EAAM,SAAU,EAAK,EAAI2E,EACpC,OAAOA,EAAO,EAAOnE,EAAM,EAAO,CAGpC,GAAI,EAAM,QAAQ,aAAe,EAAM,QAAQ,YAAY,SAAS,EAAK,CAAE,CACzE,GAAI,aAAcA,EAAM,CACtB,GAAM,CAAC,WAAU,GAAG,GAAWA,EACzB,EAASgE,GAAgB,EAAQ,CAIvC,MAFA,GAAO,SAAW,EAAM,IAAIhE,EAAK,CAE1B,EAIT,OAAOgE,GAAgBhE,EAAK,CAK9B,OAFgB,EAAM,QAAQ,gBAAkB,IAEjC,EAAOA,EAAM,EAAO,CAWrC,SAASI,EAAI,EAAQ,CAEnB,IAAM,EAAS,EAAE,CAEjB,GAAI,aAAc,EAAQ,CACxB,IAAM,EAAQ,EAAO,SACjB1B,EAAQ,GACZ,KAAO,EAAEA,EAAQ,EAAM,QAAQ,CAC7B,IAAM,EAAS,EAAM,IAAI,EAAMA,GAAQ,EAAO,CAG9C,GAAI,EAAQ,CACV,GAAIA,GAAS,EAAMA,EAAQ,GAAG,OAAS,UACjC,CAAC,MAAM,QAAQ,EAAO,EAAI,EAAO,OAAS,SAC5C,EAAO,MAAQ,GAAuB,EAAO,MAAM,EAGjD,CAAC,MAAM,QAAQ,EAAO,EAAI,EAAO,OAAS,WAAW,CACvD,IAAM,EAAO,EAAO,SAAS,GAEzB,GAAQ,EAAK,OAAS,SACxB,EAAK,MAAQ,GAAuB,EAAK,MAAM,EAKjD,MAAM,QAAQ,EAAO,CACvB,EAAO,KAAK,GAAG,EAAO,CAEtB,EAAO,KAAK,EAAO,GAM3B,OAAO,GAcX,SAAS0F,GAAM,EAAM,EAAI,CACnB,EAAK,WAAU,EAAG,SAAWxF,GAAS,EAAK,EAejD,SAAS,GAAU,EAAM,EAAI,CAE3B,IAAI,EAAS,EAGb,GAAI,GAAQ,EAAK,KAAM,CACrB,IAAM,EAAQ,EAAK,KAAK,MAClB,EAAY,EAAK,KAAK,UACtB,EAAc,EAAK,KAAK,YAE9B,GAAI,OAAO,GAAU,SAGnB,GAAI,EAAO,OAAS,UAClB,EAAO,QAAU,MAMd,CAGH,IAAM,EAAW,aAAc,EAAS,EAAO,SAAW,CAAC,EAAO,CAClE,EAAS,CAAC,KAAM,UAAW,QAAS,EAAO,WAAY,EAAE,CAAE,WAAS,CAIpE,EAAO,OAAS,WAAa,GAC/B,OAAO,OAAO,EAAO,WAAYoF,GAAgB,EAAY,CAAC,CAI9D,aAAc,GACd,EAAO,UACP,GAAc,OAGd,EAAO,SAAW,GAItB,OAAO,EAaT,SAAS,GAAsB,EAAO,EAAM,CAC1C,IAAM,EAAOhE,EAAK,MAAQ,EAAE,CAEtB,EACJ,UAAWA,GACX,EAAER,GAAI,KAAK,EAAM,cAAc,EAAIA,GAAI,KAAK,EAAM,YAAY,EAC1D,CAAC,KAAM,OAAQ,MAAOQ,EAAK,MAAM,CACjC,CACE,KAAM,UACN,QAAS,MACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAIA,GACrB,CAGP,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CAetC,SAAgB,GAAK,EAAO,EAAO,CAEjC,IAAM,EAAS,EAAE,CACbtB,EAAQ,GAMZ,IAJI,GACF,EAAO,KAAK,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAC,CAGnC,EAAEA,EAAQ,EAAM,QACjBA,GAAO,EAAO,KAAK,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAC,CACnD,EAAO,KAAK,EAAMA,GAAO,CAO3B,OAJI,GAAS,EAAM,OAAS,GAC1B,EAAO,KAAK,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAC,CAGnC,EAWT,SAAS,GAAuB,EAAO,CACrC,IAAIA,EAAQ,EACRM,EAAO,EAAM,WAAWN,EAAM,CAElC,KAAOM,IAAS,GAAKA,IAAS,IAC5B,IACA,EAAO,EAAM,WAAWN,EAAM,CAGhC,OAAO,EAAM,MAAMA,EAAM,CChY3B,SAAgB,GAAO,EAAM,EAAS,CACpC,IAAM,EAAQ,GAAY,EAAM,EAAQ,CAClCsB,EAAO,EAAM,IAAI,EAAM,OAAU,CACjC,EAAO,GAAO,EAAM,CAEpB,EAAS,MAAM,QAAQA,EAAK,CAC9B,CAAC,KAAM,OAAQ,SAAUA,EAAK,CAC9BA,GAAQ,CAAC,KAAM,OAAQ,SAAU,GAAG,CAUxC,OARI,IAIK,aAAc,EACrB,EAAO,SAAS,KAAK,CAAC,KAAM,OAAQ,MAAO;EAAK,CAAE,EAAK,EAGlD,EC2CT,SAAwB,GAAa,EAAa,EAAS,CAiBzD,OAhBI,GAAe,QAAS,EAInB,eAAgB,EAAM,EAAM,CAEjC,IAAM,EACJ,GAAO,EAAM,CAAC,OAAM,GAAG,EAAQ,CAAC,CAElC,MAAM,EAAY,IAAI,EAAU,EAAK,EAOlC,SAAU,EAAM,EAAM,CAM3B,OACE,GAAO,EAAM,CAAC,OAAM,GAAI,GAAe,EAAS,CAAC,EC3KvD,IAAM,GAAQ,OAAO,IAAI,aAAa,CAChC,GAAM,OAAO,IAAI,gBAAgB,CACjC,GAAM,OAAO,IAAI,WAAW,CAC5B,GAAO,OAAO,IAAI,YAAY,CAC9BqE,GAAS,OAAO,IAAI,cAAc,CAClC,GAAM,OAAO,IAAI,WAAW,CAC5B,GAAY,OAAO,IAAI,iBAAiB,CACxC,GAAW,GAAS,CAAC,CAACrE,GAAQ,OAAOA,GAAS,UAAYA,EAAK,MAAe,GAC9E,GAAc,GAAS,CAAC,CAACA,GAAQ,OAAOA,GAAS,UAAYA,EAAK,MAAe,GACjF,GAAS,GAAS,CAAC,CAACA,GAAQ,OAAOA,GAAS,UAAYA,EAAK,MAAe,GAC5E,EAAU,GAAS,CAAC,CAACA,GAAQ,OAAOA,GAAS,UAAYA,EAAK,MAAe,GAC7E,EAAY,GAAS,CAAC,CAACA,GAAQ,OAAOA,GAAS,UAAYA,EAAK,MAAeqE,GAC/E,GAAS,GAAS,CAAC,CAACrE,GAAQ,OAAOA,GAAS,UAAYA,EAAK,MAAe,GAClF,SAAS,EAAa,EAAM,CACxB,GAAIA,GAAQ,OAAOA,GAAS,SACxB,OAAQA,EAAK,IAAb,CACI,KAAK,GACL,KAAK,GACD,MAAO,GAEnB,MAAO,GAEX,SAAS,EAAO,EAAM,CAClB,GAAIA,GAAQ,OAAOA,GAAS,SACxB,OAAQA,EAAK,IAAb,CACI,KAAK,GACL,KAAK,GACL,KAAKqE,GACL,KAAK,GACD,MAAO,GAEnB,MAAO,GAEX,IAAM,GAAa,IAAU,EAASrE,EAAK,EAAI,EAAaA,EAAK,GAAK,CAAC,CAACA,EAAK,OC/BvEsE,GAAQ,OAAO,cAAc,CAC7BC,GAAO,OAAO,gBAAgB,CAC9BC,GAAS,OAAO,cAAc,CA+BpC,SAASC,GAAM,EAAM,EAAS,CAC1B,IAAM,EAAW,GAAY,EAAQ,CACjC,GAAWzE,EAAK,CACL,GAAO,KAAMA,EAAK,SAAU,EAAU,OAAO,OAAO,CAACA,EAAK,CAAC,CAAC,GAC5DwE,KACP,EAAK,SAAW,MAGpB,GAAO,KAAMxE,EAAM,EAAU,OAAO,OAAO,EAAE,CAAC,CAAC,CAMvD,GAAM,MAAQsE,GAEd,GAAM,KAAOC,GAEb,GAAM,OAASC,GACf,SAAS,GAAO,EAAK,EAAM,EAAS,EAAM,CACtC,IAAM,EAAO,GAAY,EAAKxE,EAAM,EAASjB,EAAK,CAClD,GAAI,EAAO,EAAK,EAAI,EAAO,EAAK,CAE5B,OADA,GAAY,EAAKA,EAAM,EAAK,CACrB,GAAO,EAAK,EAAM,EAASA,EAAK,CAE3C,GAAI,OAAO,GAAS,aACZ,EAAaiB,EAAK,CAAE,CACpB,EAAO,OAAO,OAAOjB,EAAK,OAAOiB,EAAK,CAAC,CACvC,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAK,MAAM,OAAQ,EAAE,EAAG,CACxC,IAAM,EAAK,GAAO,EAAGA,EAAK,MAAM,GAAI,EAASjB,EAAK,CAClD,GAAI,OAAO,GAAO,SACd,EAAI,EAAK,UACJ,IAAOuF,GACZ,OAAOA,QACF,IAAOE,KACZ,EAAK,MAAM,OAAO,EAAG,EAAE,CACvB,cAIH,EAAOxE,EAAK,CAAE,CACnB,EAAO,OAAO,OAAOjB,EAAK,OAAOiB,EAAK,CAAC,CACvC,IAAM,EAAK,GAAO,MAAOA,EAAK,IAAK,EAASjB,EAAK,CACjD,GAAI,IAAOuF,GACP,OAAOA,GACF,IAAOE,KACZ,EAAK,IAAM,MACf,IAAM,EAAK,GAAO,QAASxE,EAAK,MAAO,EAASjB,EAAK,CACrD,GAAI,IAAOuF,GACP,OAAOA,GACF,IAAOE,KACZ,EAAK,MAAQ,OAGzB,OAAO,EAiCX,eAAe,GAAW,EAAM,EAAS,CACrC,IAAM,EAAW,GAAY,EAAQ,CACjC,GAAWxE,EAAK,CACL,MAAM,GAAY,KAAMA,EAAK,SAAU,EAAU,OAAO,OAAO,CAACA,EAAK,CAAC,CAAC,GACvEwE,KACP,EAAK,SAAW,MAGpB,MAAM,GAAY,KAAMxE,EAAM,EAAU,OAAO,OAAO,EAAE,CAAC,CAAC,CAMlE,GAAW,MAAQsE,GAEnB,GAAW,KAAOC,GAElB,GAAW,OAASC,GACpB,eAAe,GAAY,EAAK,EAAM,EAAS,EAAM,CACjD,IAAM,EAAO,MAAM,GAAY,EAAKxE,EAAM,EAASjB,EAAK,CACxD,GAAI,EAAO,EAAK,EAAI,EAAO,EAAK,CAE5B,OADA,GAAY,EAAKA,EAAM,EAAK,CACrB,GAAY,EAAK,EAAM,EAASA,EAAK,CAEhD,GAAI,OAAO,GAAS,aACZ,EAAaiB,EAAK,CAAE,CACpB,EAAO,OAAO,OAAOjB,EAAK,OAAOiB,EAAK,CAAC,CACvC,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAK,MAAM,OAAQ,EAAE,EAAG,CACxC,IAAM,EAAK,MAAM,GAAY,EAAGA,EAAK,MAAM,GAAI,EAASjB,EAAK,CAC7D,GAAI,OAAO,GAAO,SACd,EAAI,EAAK,UACJ,IAAOuF,GACZ,OAAOA,QACF,IAAOE,KACZ,EAAK,MAAM,OAAO,EAAG,EAAE,CACvB,cAIH,EAAOxE,EAAK,CAAE,CACnB,EAAO,OAAO,OAAOjB,EAAK,OAAOiB,EAAK,CAAC,CACvC,IAAM,EAAK,MAAM,GAAY,MAAOA,EAAK,IAAK,EAASjB,EAAK,CAC5D,GAAI,IAAOuF,GACP,OAAOA,GACF,IAAOE,KACZ,EAAK,IAAM,MACf,IAAM,EAAK,MAAM,GAAY,QAASxE,EAAK,MAAO,EAASjB,EAAK,CAChE,GAAI,IAAOuF,GACP,OAAOA,GACF,IAAOE,KACZ,EAAK,MAAQ,OAGzB,OAAO,EAEX,SAAS,GAAY,EAAS,CAiB1B,OAhBI,OAAO,GAAY,WAClB,EAAQ,YAAc,EAAQ,MAAQ,EAAQ,OACxC,OAAO,OAAO,CACjB,MAAO,EAAQ,KACf,IAAK,EAAQ,KACb,OAAQ,EAAQ,KAChB,IAAK,EAAQ,KAChB,CAAE,EAAQ,OAAS,CAChB,IAAK,EAAQ,MACb,OAAQ,EAAQ,MAChB,IAAK,EAAQ,MAChB,CAAE,EAAQ,YAAc,CACrB,IAAK,EAAQ,WACb,IAAK,EAAQ,WAChB,CAAE,EAAQ,CAER,EAEX,SAAS,GAAY,EAAK,EAAM,EAAS,EAAM,CAC3C,GAAI,OAAO,GAAY,WACnB,OAAO,EAAQ,EAAKxE,EAAMjB,EAAK,CACnC,GAAI,GAAMiB,EAAK,CACX,OAAO,EAAQ,MAAM,EAAKA,EAAMjB,EAAK,CACzC,GAAI,GAAMiB,EAAK,CACX,OAAO,EAAQ,MAAM,EAAKA,EAAMjB,EAAK,CACzC,GAAI,EAAOiB,EAAK,CACZ,OAAO,EAAQ,OAAO,EAAKA,EAAMjB,EAAK,CAC1C,GAAI,EAASiB,EAAK,CACd,OAAO,EAAQ,SAAS,EAAKA,EAAMjB,EAAK,CAC5C,GAAI,GAAQiB,EAAK,CACb,OAAO,EAAQ,QAAQ,EAAKA,EAAMjB,EAAK,CAG/C,SAAS,GAAY,EAAK,EAAM,EAAM,CAClC,IAAM,EAASA,EAAKA,EAAK,OAAS,GAClC,GAAI,EAAa,EAAO,CACpB,EAAO,MAAM,GAAOiB,UAEf,EAAO,EAAO,CACf,IAAQ,MACR,EAAO,IAAMA,EAEb,EAAO,MAAQA,UAEd,GAAW,EAAO,CACvB,EAAO,SAAWA,MAEjB,CACD,IAAM,EAAK,GAAQ,EAAO,CAAG,QAAU,SACvC,MAAU,MAAM,4BAA4B,EAAG,SAAS,ECjOhE,IAAM,GAAc,CAChB,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACR,CACK,GAAiB,GAAO,EAAG,QAAQ,aAAc,GAAM,GAAY,GAAI,CACvE,GAAN,MAAM,CAAW,CACb,YAAY,EAAM,EAAM,CAKpB,KAAK,SAAW,KAEhB,KAAK,OAAS,GACd,KAAK,KAAO,OAAO,OAAO,EAAE,CAAE,EAAW,YAAa,EAAK,CAC3D,KAAK,KAAO,OAAO,OAAO,EAAE,CAAE,EAAW,YAAa,EAAK,CAE/D,OAAQ,CACJ,IAAM,EAAO,IAAI,EAAW,KAAK,KAAM,KAAK,KAAK,CAEjD,MADA,GAAK,SAAW,KAAK,SACd,EAMX,YAAa,CACT,IAAM,EAAM,IAAI,EAAW,KAAK,KAAM,KAAK,KAAK,CAChD,OAAQ,KAAK,KAAK,QAAlB,CACI,IAAK,MACD,KAAK,eAAiB,GACtB,MACJ,IAAK,MACD,KAAK,eAAiB,GACtB,KAAK,KAAO,CACR,SAAU,EAAW,YAAY,SACjC,QAAS,MACZ,CACD,KAAK,KAAO,OAAO,OAAO,EAAE,CAAE,EAAW,YAAY,CACrD,MAER,OAAO,EAMX,IAAI,EAAM,EAAS,CACf,IAGI,CAAK,kBAFL,KAAK,KAAO,CAAE,SAAU,EAAW,YAAY,SAAU,QAAS,MAAO,CACzE,KAAK,KAAO,OAAO,OAAO,EAAE,CAAE,EAAW,YAAY,CAC/B,IAE1B,IAAM,EAAQ,EAAK,MAAM,CAAC,MAAM,SAAS,CACnC,EAAO,EAAM,OAAO,CAC1B,OAAQ,EAAR,CACI,IAAK,OAAQ,CACT,GAAI,EAAM,SAAW,IACjB,EAAQ,EAAG,kDAAkD,CACzD,EAAM,OAAS,GACf,MAAO,GAEf,GAAM,CAACmE,EAAQ,GAAU,EAEzB,MADA,MAAK,KAAKA,GAAU,EACb,GAEX,IAAK,QAAS,CAEV,GADA,KAAK,KAAK,SAAW,GACjB,EAAM,SAAW,EAEjB,OADA,EAAQ,EAAG,kDAAkD,CACtD,GAEX,GAAM,CAAC,GAAW,EAClB,GAAI,IAAY,OAAS,IAAY,MAEjC,MADA,MAAK,KAAK,QAAU,EACb,GAEN,CACD,IAAM,EAAU,aAAa,KAAK,EAAQ,CAE1C,OADA,EAAQ,EAAG,4BAA4B,IAAW,EAAQ,CACnD,IAGf,QAEI,OADA,EAAQ,EAAG,qBAAqB,IAAQ,GAAK,CACtC,IASnB,QAAQ,EAAQ,EAAS,CACrB,GAAI,IAAW,IACX,MAAO,IACX,GAAI,EAAO,KAAO,IAEd,OADA,EAAQ,oBAAoB,IAAS,CAC9B,KAEX,GAAI,EAAO,KAAO,IAAK,CACnB,IAAM,EAAW,EAAO,MAAM,EAAG,GAAG,CAOpC,OANI,IAAa,KAAO,IAAa,MACjC,EAAQ,qCAAqC,EAAO,cAAc,CAC3D,OAEP,EAAO,EAAO,OAAS,KAAO,KAC9B,EAAQ,kCAAkC,CACvC,GAEX,GAAM,EAAGA,EAAQ,GAAU,EAAO,MAAM,kBAAkB,CACrD,GACD,EAAQ,OAAO,EAAO,oBAAoB,CAC9C,IAAM,EAAS,KAAK,KAAKA,GACzB,GAAI,EACA,GAAI,CACA,OAAO,EAAS,mBAAmB,EAAO,OAEvC,EAAO,CAEV,OADA,EAAQ,OAAO,EAAM,CAAC,CACf,KAMf,OAHIA,IAAW,IACJ,GACX,EAAQ,0BAA0B,IAAS,CACpC,MAMX,UAAU,EAAK,CACX,IAAK,GAAM,CAACA,EAAQ,KAAW,OAAO,QAAQ,KAAK,KAAK,CACpD,GAAI,EAAI,WAAW,EAAO,CACtB,OAAOA,EAAS,GAAc,EAAI,UAAU,EAAO,OAAO,CAAC,CAEnE,OAAO,EAAI,KAAO,IAAM,EAAM,KAAK,EAAI,GAE3C,SAAS,EAAK,CACV,IAAM,EAAQ,KAAK,KAAK,SAClB,CAAC,SAAS,KAAK,KAAK,SAAW,QAAQ,CACvC,EAAE,CACF,EAAa,OAAO,QAAQ,KAAK,KAAK,CACxC,EACJ,GAAI,GAAO,EAAW,OAAS,GAAK,EAAO,EAAI,SAAS,CAAE,CACtD,IAAM,EAAO,EAAE,CACf,GAAM,EAAI,UAAW,EAAM,IAAS,CAC5B,EAAOnE,EAAK,EAAIA,EAAK,MACrB,EAAKA,EAAK,KAAO,KACvB,CACF,EAAW,OAAO,KAAK,EAAK,MAG5B,EAAW,EAAE,CACjB,IAAK,GAAM,CAACmE,EAAQ,KAAW,EAAY,CACvC,GAAIA,IAAW,MAAQ,IAAW,qBAC9B,UACA,CAAC,GAAO,EAAS,KAAK,GAAM,EAAG,WAAW,EAAO,CAAC,GAClD,EAAM,KAAK,QAAQA,EAAO,GAAG,IAAS,CAE9C,OAAO,EAAM,KAAK;EAAK,GAG/B,GAAW,YAAc,CAAE,SAAU,GAAO,QAAS,MAAO,CAC5D,GAAW,YAAc,CAAE,KAAM,qBAAsB,CCrKvD,SAAS,GAAc,EAAQ,CAC3B,GAAI,sBAAsB,KAAK,EAAO,CAAE,CAEpC,IAAM,EAAM,6DADD,KAAK,UAAU,EAAO,GAEjC,MAAU,MAAM,EAAI,CAExB,MAAO,GAEX,SAAS,GAAY,EAAM,CACvB,IAAM,EAAU,IAAI,IAOpB,OANA,GAAMR,EAAM,CACR,MAAM,EAAM,EAAM,CACV3D,EAAK,QACL,EAAQ,IAAIA,EAAK,OAAO,EAEnC,CAAC,CACK,EAGX,SAAS,GAAc,EAAQ,EAAS,CACpC,IAAK,IAAI,EAAI,GAAS,EAAE,EAAG,CACvB,IAAM,EAAO,GAAG,IAAS,IACzB,GAAI,CAAC,EAAQ,IAAI,EAAK,CAClB,OAAO,GAGnB,SAAS,GAAkB,EAAK,EAAQ,CACpC,IAAM,EAAe,EAAE,CACjB,EAAgB,IAAI,IACtB,EAAc,KAClB,MAAO,CACH,SAAW,GAAW,CAClB,EAAa,KAAK,EAAO,CACzB,CAAgB,GAAc,GAAY,EAAI,CAC9C,IAAM,EAAS,GAAc,EAAQ,EAAY,CAEjD,OADA,EAAY,IAAI,EAAO,CAChB,GAOX,eAAkB,CACd,IAAK,IAAM,KAAU,EAAc,CAC/B,IAAM,EAAM,EAAc,IAAI,EAAO,CACrC,GAAI,OAAO,GAAQ,UACf,EAAI,SACH,EAAS,EAAI,KAAK,EAAI,EAAa,EAAI,KAAK,EAC7C,EAAI,KAAK,OAAS,EAAI,WAErB,CACD,IAAM,EAAY,MAAM,6DAA6D,CAErF,KADA,GAAM,OAAS,EACT,KAIlB,gBACH,CC5DL,SAAS,GAAa,EAAS,EAAK,EAAK,EAAK,CAC1C,GAAI,GAAO,OAAO,GAAQ,SACtB,GAAI,MAAM,QAAQ,EAAI,CAClB,IAAK,IAAI,EAAI,EAAG,EAAM,EAAI,OAAQ,EAAI,EAAK,EAAE,EAAG,CAC5C,IAAM,EAAK,EAAI,GACT,EAAK,GAAa,EAAS,EAAK,OAAO,EAAE,CAAE,EAAG,CAEhD,IAAO,OACP,OAAO,EAAI,GACN,IAAO,IACZ,EAAI,GAAK,WAGZ,aAAe,IACpB,IAAK,IAAM,KAAK,MAAM,KAAK,EAAI,MAAM,CAAC,CAAE,CACpC,IAAM,EAAK,EAAI,IAAI,EAAE,CACf,EAAK,GAAa,EAAS,EAAK,EAAG,EAAG,CACxC,IAAO,OACP,EAAI,OAAO,EAAE,CACR,IAAO,GACZ,EAAI,IAAI,EAAG,EAAG,SAGjB,aAAe,IACpB,IAAK,IAAM,KAAM,MAAM,KAAK,EAAI,CAAE,CAC9B,IAAM,EAAK,GAAa,EAAS,EAAK,EAAI,EAAG,CACzC,IAAO,OACP,EAAI,OAAO,EAAG,CACT,IAAO,IACZ,EAAI,OAAO,EAAG,CACd,EAAI,IAAI,EAAG,OAKnB,IAAK,GAAM,CAAC,EAAG,KAAO,OAAO,QAAQ,EAAI,CAAE,CACvC,IAAM,EAAK,GAAa,EAAS,EAAK,EAAG,EAAG,CACxC,IAAO,OACP,OAAO,EAAI,GACN,IAAO,IACZ,EAAI,GAAK,GAIzB,OAAO,EAAQ,KAAK,EAAK,EAAK,EAAI,CCvCtC,SAAS,GAAK,EAAO,EAAK,EAAK,CAE3B,GAAI,MAAM,QAAQ,EAAM,CACpB,OAAO,EAAM,KAAK,EAAG,IAAM,GAAK,EAAG,OAAO,EAAE,CAAE,EAAI,CAAC,CACvD,GAAI,GAAS,OAAO,EAAM,QAAW,WAAY,CAE7C,GAAI,CAAC,GAAO,CAAC,GAAU,EAAM,CACzB,OAAO,EAAM,OAAO,EAAK,EAAI,CACjC,IAAM,EAAO,CAAE,WAAY,EAAG,MAAO,EAAG,IAAK,OAAW,CACxD,EAAI,QAAQ,IAAI,EAAO,EAAK,CAC5B,EAAI,SAAW,GAAO,CAClB,EAAK,IAAM0E,EACX,OAAO,EAAI,UAEf,IAAM,EAAM,EAAM,OAAO,EAAK,EAAI,CAGlC,OAFI,EAAI,UACJ,EAAI,SAAS,EAAI,CACd,EAIX,OAFI,OAAO,GAAU,UAAY,CAAC,GAAK,KAC5B,OAAO,EAAM,CACjB,EC7BX,IAAM,GAAN,KAAe,CACX,YAAY,EAAM,CACd,OAAO,eAAe,KAAM,GAAW,CAAE,MAAO,EAAM,CAAC,CAG3D,OAAQ,CACJ,IAAM,EAAO,OAAO,OAAO,OAAO,eAAe,KAAK,CAAE,OAAO,0BAA0B,KAAK,CAAC,CAG/F,OAFI,KAAK,QACL,EAAK,MAAQ,KAAK,MAAM,OAAO,EAC5B,EAGX,KAAK,EAAK,CAAE,WAAU,gBAAe,WAAU,WAAY,EAAE,CAAE,CAC3D,GAAI,CAAC,GAAW,EAAI,CAChB,MAAU,UAAU,kCAAkC,CAC1D,IAAM,EAAM,CACR,QAAS,IAAI,IACb,MACA,KAAM,GACN,SAAU,IAAa,GACvB,aAAc,GACd,cAAe,OAAO,GAAkB,SAAW,EAAgB,IACtE,CACK,EAAM,GAAK,KAAM,GAAI,EAAI,CAC/B,GAAI,OAAO,GAAa,WACpB,IAAK,GAAM,CAAE,QAAO,SAAS,EAAI,QAAQ,QAAQ,CAC7C,EAASA,EAAK,EAAM,CAC5B,OAAO,OAAO,GAAY,WACpB,GAAa,EAAS,CAAE,GAAI,EAAK,CAAE,GAAI,EAAI,CAC3C,IC3BR,GAAN,cAAoB,EAAS,CACzB,YAAY,EAAQ,CAChB,MAAM,GAAM,CACZ,KAAK,OAAS,EACd,OAAO,eAAe,KAAM,MAAO,CAC/B,KAAM,CACF,MAAU,MAAM,+BAA+B,EAEtD,CAAC,CAMN,QAAQ,EAAK,EAAK,CACd,IAAI,EACA,GAAK,kBACL,EAAQ,EAAI,mBAGZ,EAAQ,EAAE,CACV,GAAM,EAAK,CACP,MAAO,EAAM,IAAS,EACd,GAAQ1E,EAAK,EAAI,GAAUA,EAAK,GAChC,EAAM,KAAKA,EAAK,EAE3B,CAAC,CACE,IACA,EAAI,kBAAoB,IAEhC,IAAI,EACJ,IAAK,IAAMA,KAAQ,EAAO,CACtB,GAAIA,IAAS,KACT,MACAA,EAAK,SAAW,KAAK,SACrB,EAAQA,GAEhB,OAAO,EAEX,OAAO,EAAM,EAAK,CACd,GAAI,CAAC,EACD,MAAO,CAAE,OAAQ,KAAK,OAAQ,CAClC,GAAM,CAAE,UAAS,MAAK,iBAAkB,EAClC,EAAS,KAAK,QAAQ,EAAK,EAAI,CACrC,GAAI,CAAC,EAAQ,CACT,IAAM,EAAM,+DAA+D,KAAK,SAChF,MAAU,eAAe,EAAI,CAEjC,IAAI,EAAO,EAAQ,IAAI,EAAO,CAO9B,GANA,CAGI,IADA,GAAK,EAAQ,KAAM,EAAI,CAChB,EAAQ,IAAI,EAAO,EAG1B,CAAC,GAAQ,EAAK,MAAQ,OAEtB,MAAU,eADE,yDACiB,CAEjC,GAAI,GAAiB,IACjB,EAAK,OAAS,EACV,EAAK,aAAe,IACpB,EAAK,WAAa,GAAc,EAAK,EAAQ,EAAQ,EACrD,EAAK,MAAQ,EAAK,WAAa,GAE/B,MAAU,eADE,+DACiB,CAGrC,OAAO,EAAK,IAEhB,SAAS,EAAK,EAAY,EAAc,CACpC,IAAM,EAAM,IAAI,KAAK,SACrB,GAAI,EAAK,CAEL,GADA,GAAc,KAAK,OAAO,CACtB,EAAI,QAAQ,kBAAoB,CAAC,EAAI,QAAQ,IAAI,KAAK,OAAO,CAAE,CAC/D,IAAM,EAAM,+DAA+D,KAAK,SAChF,MAAU,MAAM,EAAI,CAExB,GAAI,EAAI,YACJ,MAAO,GAAG,EAAI,GAEtB,OAAO,IAGf,SAAS,GAAc,EAAK,EAAM,EAAS,CACvC,GAAI,GAAQA,EAAK,CAAE,CACf,IAAM,EAASA,EAAK,QAAQ,EAAI,CAC1B,EAAS,GAAW,GAAU,EAAQ,IAAI,EAAO,CACvD,OAAO,EAAS,EAAO,MAAQ,EAAO,WAAa,UAE9C,EAAaA,EAAK,CAAE,CACzB,IAAI,EAAQ,EACZ,IAAK,IAAM,KAAQA,EAAK,MAAO,CAC3B,IAAM,EAAI,GAAc,EAAK,EAAM,EAAQ,CACvC,EAAI,IACJ,EAAQ,GAEhB,OAAO,UAEF,EAAOA,EAAK,CAAE,CACnB,IAAM,EAAK,GAAc,EAAKA,EAAK,IAAK,EAAQ,CAC1C,EAAK,GAAc,EAAKA,EAAK,MAAO,EAAQ,CAClD,OAAO,KAAK,IAAI,EAAI,EAAG,CAE3B,MAAO,GC1GX,IAAM,GAAiB,GAAU,CAAC,GAAU,OAAO,GAAU,YAAc,OAAO,GAAU,SACtF,EAAN,cAAqB,EAAS,CAC1B,YAAY,EAAO,CACf,MAAMqE,GAAO,CACb,KAAK,MAAQ,EAEjB,OAAO,EAAK,EAAK,CACb,OAAO,GAAK,KAAO,KAAK,MAAQ,GAAK,KAAK,MAAO,EAAK,EAAI,CAE9D,UAAW,CACP,OAAO,OAAO,KAAK,MAAM,GAGjC,EAAO,aAAe,eACtB,EAAO,cAAgB,gBACvB,EAAO,MAAQ,QACf,EAAO,aAAe,eACtB,EAAO,aAAe,eCjBtB,IAAM,GAAmB,qBACzB,SAAS,GAAc,EAAO,EAAS,EAAM,CACzC,GAAI,EAAS,CACT,IAAM,EAAQ,EAAK,OAAO,GAAK,EAAE,MAAQ,EAAQ,CAC3C,EAAS,EAAM,KAAK,GAAK,CAAC,EAAE,OAAO,EAAI,EAAM,GACnD,GAAI,CAAC,EACD,MAAU,MAAM,OAAO,EAAQ,YAAY,CAC/C,OAAO,EAEX,OAAO,EAAK,KAAK,GAAK,EAAE,WAAW,EAAM,EAAI,CAAC,EAAE,OAAO,CAE3D,SAAS,GAAW,EAAO,EAAS,EAAK,CAGrC,GAFI,GAAW,EAAM,GACjB,EAAQ,EAAM,UACd,EAAO,EAAM,CACb,OAAO,EACX,GAAI,EAAO,EAAM,CAAE,CACf,IAAMjC,EAAM,EAAI,OAAO,IAAK,aAAa,EAAI,OAAQ,KAAM,EAAI,CAE/D,OADA,EAAI,MAAM,KAAK,EAAM,CACdA,GAEP,aAAiB,QACjB,aAAiB,QACjB,aAAiB,SAChB,OAAO,OAAW,KAAe,aAAiB,UAGnD,EAAQ,EAAM,SAAS,EAE3B,GAAM,CAAE,wBAAuB,WAAU,WAAU,SAAQ,iBAAkB,EAGzE,EACJ,GAAI,GAAyB,GAAS,OAAO,GAAU,SAAU,CAE7D,GADA,EAAM,EAAc,IAAI,EAAM,CAC1B,EAEA,MADA,CAAe,EAAI,SAAS,EAAS,EAAM,CACpC,IAAI,GAAM,EAAI,OAAO,CAG5B,EAAM,CAAE,OAAQ,KAAM,KAAM,KAAM,CAClC,EAAc,IAAI,EAAO,EAAI,CAGjC,GAAS,WAAW,KAAK,GACzB,EAAU,GAAmB,EAAQ,MAAM,EAAE,EACjD,IAAI,EAAS,GAAc,EAAO,EAASuC,EAAO,KAAK,CACvD,GAAI,CAAC,EAAQ,CAKT,GAJI,GAAS,OAAO,EAAM,QAAW,aAEjC,EAAQ,EAAM,QAAQ,EAEtB,CAAC,GAAS,OAAO,GAAU,SAAU,CACrC,IAAM3E,EAAO,IAAI,EAAO,EAAM,CAG9B,OAFI,IACA,EAAI,KAAOA,GACRA,EAEX,EACI,aAAiB,IACX2E,EAAO,IACP,OAAO,YAAY,OAAO,EAAM,CAC5BA,EAAO,IACPA,EAAO,IAErB,IACA,EAAS,EAAO,CAChB,OAAO,EAAI,UAEf,IAAM3E,EAAO,GAAQ,WACf,EAAO,WAAW,EAAI,OAAQ,EAAO,EAAI,CACzC,OAAO,GAAQ,WAAW,MAAS,WAC/B,EAAO,UAAU,KAAK,EAAI,OAAQ,EAAO,EAAI,CAC7C,IAAI,EAAO,EAAM,CAO3B,OANI,EACA,EAAK,IAAM,EACL,EAAO,UACb,EAAK,IAAM,EAAO,KAClB,IACA,EAAI,KAAOA,GACRA,EChFX,SAAS,GAAmB,EAAQ,EAAM,EAAO,CAC7C,IAAI,EAAI,EACR,IAAK,IAAI,EAAIjB,EAAK,OAAS,EAAG,GAAK,EAAG,EAAE,EAAG,CACvC,IAAM,EAAIA,EAAK,GACf,GAAI,OAAO,GAAM,UAAY,OAAO,UAAU,EAAE,EAAI,GAAK,EAAG,CACxD,IAAM,EAAI,EAAE,CACZ,EAAE,GAAK,EACP,EAAI,OAGJ,EAAI,IAAI,IAAI,CAAC,CAAC,EAAG,EAAE,CAAC,CAAC,CAG7B,OAAO,GAAW,EAAG,OAAW,CAC5B,sBAAuB,GACvB,cAAe,GACf,aAAgB,CACZ,MAAU,MAAM,+CAA+C,EAEnE,SACA,cAAe,IAAI,IACtB,CAAC,CAIN,IAAM,GAAe,GAASA,GAAQ,MACjC,OAAOA,GAAS,UAAY,CAAC,CAACA,EAAK,OAAO,WAAW,CAAC,MAAM,CAAC,KAC5D,GAAN,cAAyB,EAAS,CAC9B,YAAY,EAAM,EAAQ,CACtB,MAAM,EAAK,CACX,OAAO,eAAe,KAAM,SAAU,CAClC,MAAO4F,EACP,aAAc,GACd,WAAY,GACZ,SAAU,GACb,CAAC,CAON,MAAM,EAAQ,CACV,IAAM,EAAO,OAAO,OAAO,OAAO,eAAe,KAAK,CAAE,OAAO,0BAA0B,KAAK,CAAC,CAM/F,OALIA,IACA,EAAK,OAASA,GAClB,EAAK,MAAQ,EAAK,MAAM,IAAI,GAAM,EAAO,EAAG,EAAI,EAAO,EAAG,CAAG,EAAG,MAAMA,EAAO,CAAG,EAAG,CAC/E,KAAK,QACL,EAAK,MAAQ,KAAK,MAAM,OAAO,EAC5B,EAOX,MAAM,EAAM,EAAO,CACf,GAAI,GAAY5F,EAAK,CACjB,KAAK,IAAI,EAAM,KACd,CACD,GAAM,CAAC,EAAK,GAAG,GAAQA,EACjBiB,EAAO,KAAK,IAAI,EAAK,GAAK,CAChC,GAAI,EAAaA,EAAK,CAClB,EAAK,MAAM,EAAM,EAAM,SAClBA,IAAS,QAAa,KAAK,OAChC,KAAK,IAAI,EAAK,GAAmB,KAAK,OAAQ,EAAM,EAAM,CAAC,MAE3D,MAAU,MAAM,+BAA+B,EAAI,oBAAoB,IAAO,EAO1F,SAAS,EAAM,CACX,GAAM,CAAC,EAAK,GAAG,GAAQjB,EACvB,GAAI,EAAK,SAAW,EAChB,OAAO,KAAK,OAAO,EAAI,CAC3B,IAAMiB,EAAO,KAAK,IAAI,EAAK,GAAK,CAChC,GAAI,EAAaA,EAAK,CAClB,OAAOA,EAAK,SAAS,EAAK,CAE1B,MAAU,MAAM,+BAA+B,EAAI,oBAAoB,IAAO,CAOtF,MAAM,EAAM,EAAY,CACpB,GAAM,CAAC,EAAK,GAAG,GAAQjB,EACjBiB,EAAO,KAAK,IAAI,EAAK,GAAK,CAI5B,OAHA,EAAK,SAAW,EACT,CAAC,GAAc,EAASA,EAAK,CAAGA,EAAK,MAAQA,EAE7C,EAAaA,EAAK,CAAGA,EAAK,MAAM,EAAM,EAAW,CAAG,OAEnE,iBAAiB,EAAa,CAC1B,OAAO,KAAK,MAAM,MAAM,GAAQ,CAC5B,GAAI,CAAC,EAAOA,EAAK,CACb,MAAO,GACX,IAAM,EAAIA,EAAK,MACf,OAAQ,GAAK,MACR,GACG,EAAS,EAAE,EACX,EAAE,OAAS,MACX,CAAC,EAAE,eACH,CAAC,EAAE,SACH,CAAC,EAAE,KACb,CAKN,MAAM,EAAM,CACR,GAAM,CAAC,EAAK,GAAG,GAAQjB,EACvB,GAAI,EAAK,SAAW,EAChB,OAAO,KAAK,IAAI,EAAI,CACxB,IAAMiB,EAAO,KAAK,IAAI,EAAK,GAAK,CAChC,OAAO,EAAaA,EAAK,CAAGA,EAAK,MAAM,EAAK,CAAG,GAMnD,MAAM,EAAM,EAAO,CACf,GAAM,CAAC,EAAK,GAAG,GAAQjB,EACvB,GAAI,EAAK,SAAW,EAChB,KAAK,IAAI,EAAK,EAAM,KAEnB,CACD,IAAMiB,EAAO,KAAK,IAAI,EAAK,GAAK,CAChC,GAAI,EAAaA,EAAK,CAClB,EAAK,MAAM,EAAM,EAAM,SAClBA,IAAS,QAAa,KAAK,OAChC,KAAK,IAAI,EAAK,GAAmB,KAAK,OAAQ,EAAM,EAAM,CAAC,MAE3D,MAAU,MAAM,+BAA+B,EAAI,oBAAoB,IAAO,ICtIxF,GAAoB,GAAQ,EAAI,QAAQ,kBAAmB,IAAI,CACrE,SAAS,GAAc,EAAS,EAAQ,CAGpC,MAFI,QAAQ,KAAK2B,EAAQ,CACdA,EAAQ,UAAU,EAAE,CACxBiD,EAASjD,EAAQ,QAAQ,aAAciD,EAAO,CAAGjD,EAE5D,IAAM,IAAe,EAAK,EAAQ,IAAY,EAAI,SAAS;EAAK,CAC1D,GAAcA,EAASiD,EAAO,CAC9BjD,EAAQ,SAAS;EAAK,CAClB;EAAO,GAAcA,EAASiD,EAAO,EACpC,EAAI,SAAS,IAAI,CAAG,GAAK,KAAOjD,ECjBrC,GAAY,OACZ,GAAa,QACb,GAAc,SAMpB,SAAS,GAAc,EAAM,EAAQ,EAAO,OAAQ,CAAE,gBAAe,YAAY,GAAI,kBAAkB,GAAI,SAAQ,cAAe,EAAE,CAAE,CAClI,GAAI,CAAC,GAAa,EAAY,EAC1B,OAAOX,EACP,EAAY,IACZ,EAAkB,GACtB,IAAM,EAAU,KAAK,IAAI,EAAI,EAAiB,EAAI,EAAY4D,EAAO,OAAO,CAC5E,GAAI5D,EAAK,QAAU,EACf,OAAOA,EACX,IAAM,EAAQ,EAAE,CACV,EAAe,EAAE,CACnB,EAAM,EAAY4D,EAAO,OACzB,OAAO,GAAkB,WACrB,EAAgB,EAAY,KAAK,IAAI,EAAG,EAAgB,CACxD,EAAM,KAAK,EAAE,CAEb,EAAM,EAAY,GAE1B,IAAI,EACA,EACA,EAAW,GACX,EAAI,GACJ,EAAW,GACX,EAAS,GACT,cACA,EAAI,GAAyB5D,EAAM,EAAG4D,EAAO,OAAO,CAChD,IAAM,KACN,EAAM,EAAI,IAElB,IAAK,IAAI,EAAK,EAAK5D,EAAM,GAAK,IAAO,CACjC,GAAI,cAAwB,IAAO,KAAM,CAErC,OADA,EAAW,EACHA,EAAK,EAAI,GAAjB,CACI,IAAK,IACD,GAAK,EACL,MACJ,IAAK,IACD,GAAK,EACL,MACJ,IAAK,IACD,GAAK,EACL,MACJ,QACI,GAAK,EAEb,EAAS,EAEb,GAAI,IAAO;EACH,cACA,EAAI,GAAyBA,EAAM,EAAG4D,EAAO,OAAO,EACxD,EAAM,EAAIA,EAAO,OAAS,EAC1B,EAAQ,WAEP,CACD,GAAI,IAAO,KACP,GACA,IAAS,KACT,IAAS;GACT,IAAS,IAAM,CAEf,IAAMnG,EAAOuC,EAAK,EAAI,GAClBvC,GAAQA,IAAS,KAAOA,IAAS;GAAQA,IAAS,MAClD,EAAQ,GAEhB,GAAI,GAAK,EACL,GAAI,EACA,EAAM,KAAK,EAAM,CACjB,EAAM,EAAQ,EACd,EAAQ,eAEH,aAAsB,CAE3B,KAAO,IAAS,KAAO,IAAS,KAC5B,EAAO,EACP,EAAKuC,EAAM,GAAK,GAChB,EAAW,GAGf,IAAM,EAAI,EAAI,EAAS,EAAI,EAAI,EAAI,EAAW,EAE9C,GAAI,EAAa,GACb,OAAOA,EACX,EAAM,KAAK,EAAE,CACb,EAAa,GAAK,GAClB,EAAM,EAAI,EACV,EAAQ,YAGR,EAAW,GAIvB,EAAO,EAIX,GAFI,GAAY,GACZ,GAAY,CACZ,EAAM,SAAW,EACjB,OAAOA,EACP,GACA,GAAQ,CACZ,IAAI,EAAMA,EAAK,MAAM,EAAG,EAAM,GAAG,CACjC,IAAK,IAAI6D,EAAI,EAAGA,EAAI,EAAM,OAAQ,EAAEA,EAAG,CACnC,IAAM,EAAO,EAAMA,GACbC,EAAM,EAAMD,EAAI,IAAM7D,EAAK,OAC7B,IAAS,EACT,EAAM,KAAK4D,IAAS5D,EAAK,MAAM,EAAG8D,EAAI,IAElC,cAAwB,EAAa,KACrC,GAAO,GAAG9D,EAAK,GAAM,KACzB,GAAO,KAAK4D,IAAS5D,EAAK,MAAM,EAAO,EAAG8D,EAAI,IAGtD,OAAO,EAMX,SAAS,GAAyB,EAAM,EAAG,EAAQ,CAC/C,IAAI,EAAM,EACN,EAAQ,EAAI,EACZ,EAAK9D,EAAK,GACd,KAAO,IAAO,KAAO,IAAO,KACxB,GAAI,EAAI,EAAQ4D,EACZ,EAAK5D,EAAK,EAAE,OAEX,CACD,EACI,GAAKA,EAAK,EAAE,SACP,GAAM,IAAO;GACtB,EAAM,EACN,EAAQ,EAAI,EACZ,EAAKA,EAAK,GAGlB,OAAO,EC3IX,IAAM,IAAkB,EAAK,KAAa,CACtC,cAAe+D,EAAU,EAAI,OAAO,OAAS,EAAI,cACjD,UAAW,EAAI,QAAQ,UACvB,gBAAiB,EAAI,QAAQ,gBAChC,EAGK,GAA0B,GAAQ,mBAAmB,KAAK,EAAI,CACpE,SAAS,GAAoB,EAAK,EAAW,EAAc,CACvD,GAAI,CAAC,GAAa,EAAY,EAC1B,MAAO,GACX,IAAM,EAAQ,EAAY,EACpB,EAAS,EAAI,OACnB,GAAI,GAAU,EACV,MAAO,GACX,IAAK,IAAI,EAAI,EAAG,EAAQ,EAAG,EAAI,EAAQ,EAAE,EACrC,GAAI,EAAI,KAAO;EAAM,CACjB,GAAI,EAAI,EAAQ,EACZ,MAAO,GAEX,GADA,EAAQ,EAAI,EACR,EAAS,GAAS,EAClB,MAAO,GAGnB,MAAO,GAEX,SAAS,GAAmB,EAAO,EAAK,CACpC,IAAM,EAAO,KAAK,UAAU,EAAM,CAClC,GAAI,EAAI,QAAQ,mBACZ,OAAO,EACX,GAAM,CAAE,eAAgB,EAClB,EAAqB,EAAI,QAAQ,+BACjCH,EAAS,EAAI,SAAW,GAAuB,EAAM,CAAG,KAAO,IACjE,EAAM,GACN,EAAQ,EACZ,IAAK,IAAI,EAAI,EAAG,EAAK,EAAK,GAAI,EAAI,EAAK,EAAK,EAAE,GAQ1C,GAPI,IAAO,KAAO,EAAK,EAAI,KAAO,MAAQ,EAAK,EAAI,KAAO,MAEtD,GAAO,EAAK,MAAM,EAAO,EAAE,CAAG,MAC9B,GAAK,EACL,EAAQ,EACR,EAAK,MAEL,IAAO,KACP,OAAQ,EAAK,EAAI,GAAjB,CACI,IAAK,IACD,CACI,GAAO,EAAK,MAAM,EAAO,EAAE,CAC3B,IAAM5F,EAAO,EAAK,OAAO,EAAI,EAAG,EAAE,CAClC,OAAQA,EAAR,CACI,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,IAAK,OACD,GAAO,MACP,MACJ,QACQA,EAAK,OAAO,EAAG,EAAE,GAAK,KACtB,GAAO,MAAQA,EAAK,OAAO,EAAE,CAE7B,GAAO,EAAK,OAAO,EAAG,EAAE,CAEpC,GAAK,EACL,EAAQ,EAAI,EAEhB,MACJ,IAAK,IACD,GAAI,GACA,EAAK,EAAI,KAAO,KAChB,EAAK,OAAS,EACd,GAAK,MAEJ,CAGD,IADA,GAAO,EAAK,MAAM,EAAO,EAAE,CAAG;;EACvB,EAAK,EAAI,KAAO,MACnB,EAAK,EAAI,KAAO,KAChB,EAAK,EAAI,KAAO,KAChB,GAAO;EACP,GAAK,EAET,GAAO4F,EAEH,EAAK,EAAI,KAAO,MAChB,GAAO,MACX,GAAK,EACL,EAAQ,EAAI,EAEhB,MACJ,QACI,GAAK,EAIrB,MADA,GAAM,EAAQ,EAAM,EAAK,MAAM,EAAM,CAAG,EACjC,EACD,EACA,GAAc,EAAKA,EAAQ,GAAa,GAAe,EAAK,GAAM,CAAC,CAE7E,SAAS,GAAmB,EAAO,EAAK,CACpC,GAAI,EAAI,QAAQ,cAAgB,IAC3B,EAAI,aAAe,EAAM,SAAS;EAAK,EACxC,kBAAkB,KAAK,EAAM,CAE7B,OAAO,GAAmB,EAAO,EAAI,CACzC,IAAMA,EAAS,EAAI,SAAW,GAAuB,EAAM,CAAG,KAAO,IAC/D,EAAM,IAAM,EAAM,QAAQ,KAAM,KAAK,CAAC,QAAQ,OAAQ,OAAOA,IAAS,CAAG,IAC/E,OAAO,EAAI,YACL,EACA,GAAc,EAAKA,EAAQ,GAAW,GAAe,EAAK,GAAM,CAAC,CAE3E,SAAS,GAAa,EAAO,EAAK,CAC9B,GAAM,CAAE,eAAgB,EAAI,QACxB,EACJ,GAAI,IAAgB,GAChB,EAAK,OACJ,CACD,IAAM,EAAY,EAAM,SAAS,IAAI,CAC/B,EAAY,EAAM,SAAS,IAAI,CACrC,CAKI,CALA,GAAa,CAAC,EACT,GACA,GAAa,CAAC,EACd,GAEA,EAAc,GAAqB,GAEhD,OAAO,EAAG,EAAO,EAAI,CAIzB,IAAI,GACJ,GAAI,CACA,GAAuB,OAAO;;;KAA0B,IAAI,MAE1D,CACF,GAAmB,eAEvB,SAAS,GAAY,CAAE,UAAS,OAAM,SAAS,EAAK,EAAW,EAAa,CACxE,GAAM,CAAE,aAAY,gBAAe,aAAc,EAAI,QAGrD,GAAI,CAAChC,GAAc,YAAY,KAAK,EAAM,CACtC,OAAO,GAAa,EAAO,EAAI,CAEnC,IAAMgC,EAAS,EAAI,SACd,EAAI,kBAAoB,GAAuB,EAAM,CAAG,KAAO,IAC9D,EAAUhC,IAAe,UACzB,GACAA,IAAe,UAAY,IAAS,EAAO,aACvC,GACA,IAAS,EAAO,cACZ,GACA,CAAC,GAAoB,EAAO,EAAWgC,EAAO,OAAO,CACnE,GAAI,CAAC,EACD,OAAO,EAAU;EAAQ;EAE7B,IAAI,EACA,EACJ,IAAK,EAAW,EAAM,OAAQ,EAAW,EAAG,EAAE,EAAU,CACpD,IAAM,EAAK,EAAM,EAAW,GAC5B,GAAI,IAAO;GAAQ,IAAO,KAAQ,IAAO,IACrC,MAER,IAAI,EAAM,EAAM,UAAU,EAAS,CAC7B,EAAW,EAAI,QAAQ;EAAK,CAC9B,IAAa,GACb,EAAQ,IAEH,IAAU,GAAO,IAAa,EAAI,OAAS,GAChD,EAAQ,IACJ,GACA,GAAa,EAGjB,EAAQ,GAEZ,CAII,IAHA,EAAQ,EAAM,MAAM,EAAG,CAAC,EAAI,OAAO,CAC/B,EAAI,EAAI,OAAS,KAAO;IACxB,EAAM,EAAI,MAAM,EAAG,GAAG,EACpB,EAAI,QAAQ,GAAkB,KAAKA,IAAS,EAGtD,IAAI,EAAiB,GACjB,EACA,EAAa,GACjB,IAAK,EAAW,EAAG,EAAW,EAAM,OAAQ,EAAE,EAAU,CACpD,IAAM,EAAK,EAAM,GACjB,GAAI,IAAO,IACP,EAAiB,WACZ,IAAO;EACZ,EAAa,OAEb,MAER,IAAI,EAAQ,EAAM,UAAU,EAAG,EAAa,EAAW,EAAa,EAAI,EAAS,CACjF,CAEI,IADA,EAAQ,EAAM,UAAU,EAAM,OAAO,CAC7B,EAAM,QAAQ,OAAQ,KAAKA,IAAS,EAIhD,IAAI,GAAU,EAFKA,EAAS,IAAM,IAEU,IAAM,EAMlD,GALIjD,IACA,GAAU,IAAM,EAAcA,EAAQ,QAAQ,aAAc,IAAI,CAAC,CAC7D,GACA,GAAW,EAEf,CAAC,EAAS,CACV,IAAM,EAAc,EACf,QAAQ,OAAQ;IAAO,CACvB,QAAQ,iDAAkD,OAAO,CAEjE,QAAQ,OAAQ,KAAKiD,IAAS,CAC/B,EAAkB,GAChB,EAAc,GAAe,EAAK,GAAK,CACzChC,IAAe,UAAY,IAAS,EAAO,eAC3C,EAAY,eAAmB,CAC3B,EAAkB,KAG1B,IAAM,EAAO,GAAc,GAAG,IAAQ,IAAc,IAAOgC,EAAQ,GAAY,EAAY,CAC3F,GAAI,CAAC,EACD,MAAO,IAAI,EAAO,IAAIA,IAAS,IAGvC,MADA,GAAQ,EAAM,QAAQ,OAAQ,KAAKA,IAAS,CACrC,IAAI,EAAO,IAAIA,IAAS,IAAQ,IAAQ,IAEnD,SAAS,GAAY,EAAM,EAAK,EAAW,EAAa,CACpD,GAAM,CAAE,OAAM,SAAU,EAClB,CAAE,eAAc,cAAa,SAAQ,aAAY,UAAW,EAClE,GAAK,GAAe,EAAM,SAAS;EAAK,EACnC,GAAU,WAAW,KAAK,EAAM,CACjC,OAAO,GAAa,EAAO,EAAI,CAEnC,GAAI,oFAAoF,KAAK,EAAM,CAO/F,OAAO,GAAe,GAAU,CAAC,EAAM,SAAS;EAAK,CAC/C,GAAa,EAAO,EAAI,CACxB,GAAY,EAAM,EAAK,EAAW,EAAY,CAExD,GAAI,CAAC,GACD,CAAC,GACD,IAAS,EAAO,OAChB,EAAM,SAAS;EAAK,CAEpB,OAAO,GAAY,EAAM,EAAK,EAAW,EAAY,CAEzD,GAAI,GAAuB,EAAM,CAC7B,IAAIA,IAAW,GAEX,MADA,GAAI,iBAAmB,GAChB,GAAY,EAAM,EAAK,EAAW,EAAY,IAEhD,GAAeA,IAAW,EAC/B,OAAO,GAAa,EAAO,EAAI,CAGvC,IAAM,EAAM,EAAM,QAAQ,OAAQ,OAAOA,IAAS,CAIlD,GAAI,EAAc,CACd,IAAM,EAAQ,GAAQ,EAAI,SAAW,EAAI,MAAQ,yBAA2B,EAAI,MAAM,KAAK,EAAI,CACzF,CAAE,SAAQ,QAAS,EAAI,IAAI,OACjC,GAAI,EAAK,KAAK,EAAK,EAAI,GAAQ,KAAK,EAAK,CACrC,OAAO,GAAa,EAAO,EAAI,CAEvC,OAAO,EACD,EACA,GAAc,EAAKA,EAAQ,GAAW,GAAe,EAAK,GAAM,CAAC,CAE3E,SAAS,GAAgB,EAAM,EAAK,EAAW,EAAa,CACxD,GAAM,CAAE,cAAa,UAAW,EAC1B,EAAK,OAAO,EAAK,OAAU,SAC3B,EACA,OAAO,OAAO,EAAE,CAAE,EAAM,CAAE,MAAO,OAAO,EAAK,MAAM,CAAE,CAAC,CACxD,CAAE,QAAS,EACX,IAAS,EAAO,cAEZ,kDAAkD,KAAK,EAAG,MAAM,GAChE,EAAO,EAAO,cAEtB,IAAM,EAAc,GAAU,CAC1B,OAAQ,EAAR,CACI,KAAK,EAAO,aACZ,KAAK,EAAO,cACR,OAAO,GAAe,EAChB,GAAa,EAAG,MAAO,EAAI,CAC3B,GAAY,EAAI,EAAK,EAAW,EAAY,CACtD,KAAK,EAAO,aACR,OAAO,GAAmB,EAAG,MAAO,EAAI,CAC5C,KAAK,EAAO,aACR,OAAO,GAAmB,EAAG,MAAO,EAAI,CAC5C,KAAK,EAAO,MACR,OAAO,GAAY,EAAI,EAAK,EAAW,EAAY,CACvD,QACI,OAAO,OAGf,EAAM,EAAW,EAAK,CAC1B,GAAI,IAAQ,KAAM,CACd,GAAM,CAAE,iBAAgB,qBAAsB,EAAI,QAC5C,EAAK,GAAe,GAAmB,EAE7C,GADA,EAAM,EAAW,EAAE,CACf,IAAQ,KACR,MAAU,MAAM,mCAAmC,IAAI,CAE/D,OAAO,ECvUX,SAAS,GAAuB,EAAK,EAAS,CAC1C,IAAM,EAAM,OAAO,OAAO,CACtB,WAAY,GACZ,cAAe,GACf,eAAgB,KAChB,kBAAmB,QACnB,WAAY,KACZ,mBAAoB,GACpB,+BAAgC,GAChC,SAAU,QACV,sBAAuB,GACvB,UAAW,GACX,UAAW,GACX,gBAAiB,GACjB,QAAS,OACT,WAAY,GACZ,YAAa,KACb,QAAS,OACT,iBAAkB,GACrB,CAAE,EAAI,OAAO,gBAAiB,EAAQ,CACnC,EACJ,OAAQ,EAAI,gBAAZ,CACI,IAAK,QACD,EAAS,GACT,MACJ,IAAK,OACD,EAAS,GACT,MACJ,QACI,EAAS,KAEjB,MAAO,CACH,QAAS,IAAI,IACb,MACA,sBAAuB,EAAI,sBAAwB,IAAM,GACzD,OAAQ,GACR,WAAY,OAAO,EAAI,QAAW,SAAW,IAAI,OAAO,EAAI,OAAO,CAAG,KACtE,SACA,QAAS,EACZ,CAEL,SAAS,GAAa,EAAM,EAAM,CAC9B,GAAI,EAAK,IAAK,CACV,IAAM,EAAQ,EAAK,OAAO,GAAK,EAAE,MAAQ,EAAK,IAAI,CAClD,GAAI,EAAM,OAAS,EACf,OAAO,EAAM,KAAK,GAAK,EAAE,SAAW,EAAK,OAAO,EAAI,EAAM,GAElE,IAAI,EACA,EACJ,GAAI,EAAS,EAAK,CAAE,CAChB,EAAM,EAAK,MACX,IAAI,EAAQ,EAAK,OAAO,GAAK,EAAE,WAAW,EAAI,CAAC,CAC/C,GAAI,EAAM,OAAS,EAAG,CAClB,IAAM,EAAY,EAAM,OAAO,GAAK,EAAE,KAAK,CACvC,EAAU,OAAS,IACnB,EAAQ,GAEhB,EACI,EAAM,KAAK,GAAK,EAAE,SAAW,EAAK,OAAO,EAAI,EAAM,KAAK,GAAK,CAAC,EAAE,OAAO,MAG3E,EAAM,EACN,EAAS,EAAK,KAAK,GAAK,EAAE,WAAa,aAAe,EAAE,UAAU,CAEtE,GAAI,CAAC,EAAQ,CACT,IAAM,EAAO,GAAK,aAAa,OAAS,IAAQ,KAAO,OAAS,OAAO,GACvE,MAAU,MAAM,wBAAwB,EAAK,QAAQ,CAEzD,OAAO,EAGX,SAAS,GAAe,EAAM,EAAQ,CAAE,UAAS,OAAO,CACpD,GAAI,CAAC,EAAI,WACL,MAAO,GACX,IAAM,EAAQ,EAAE,CACV,GAAU,EAAS5E,EAAK,EAAI,EAAaA,EAAK,GAAKA,EAAK,OAC1D,GAAU,GAAc,EAAO,GAC/B,EAAQ,IAAI,EAAO,CACnB,EAAM,KAAK,IAAI,IAAS,EAE5B,IAAM,EAAMA,EAAK,MAAQ,EAAO,QAAU,KAAO,EAAO,KAGxD,OAFI,GACA,EAAM,KAAK,EAAI,WAAW,UAAU,EAAI,CAAC,CACtC,EAAM,KAAK,IAAI,CAE1B,SAASgF,GAAU,EAAM,EAAK,EAAW,EAAa,CAClD,GAAI,EAAO,EAAK,CACZ,OAAO,EAAK,SAAS,EAAK,EAAW,EAAY,CACrD,GAAI,GAAQ,EAAK,CAAE,CACf,GAAI,EAAI,IAAI,WACR,OAAO,EAAK,SAAS,EAAI,CAC7B,GAAI,EAAI,iBAAiB,IAAI,EAAK,CAC9B,MAAU,UAAU,0DAA0D,CAG1E,EAAI,gBACJ,EAAI,gBAAgB,IAAI,EAAK,CAE7B,EAAI,gBAAkB,IAAI,IAAI,CAAC,EAAK,CAAC,CACzC,EAAO,EAAK,QAAQ,EAAI,IAAI,CAGpC,IAAI,EACEhF,EAAO,EAAO,EAAK,CACnB,EACA,EAAI,IAAI,WAAW,EAAM,CAAE,SAAU,GAAM,EAAS,EAAI,CAAC,CAC/D,CAAW,GAAS,GAAa,EAAI,IAAI,OAAO,KAAMA,EAAK,CAC3D,IAAM,EAAQ,GAAeA,EAAM,EAAQ,EAAI,CAC3C,EAAM,OAAS,IACf,EAAI,eAAiB,EAAI,eAAiB,GAAK,EAAM,OAAS,GAClE,IAAM,EAAM,OAAO,EAAO,WAAc,WAClC,EAAO,UAAUA,EAAM,EAAK,EAAW,EAAY,CACnD,EAASA,EAAK,CACV,GAAgBA,EAAM,EAAK,EAAW,EAAY,CAClDA,EAAK,SAAS,EAAK,EAAW,EAAY,CAGpD,OAFK,EAEE,EAASA,EAAK,EAAI,EAAI,KAAO,KAAO,EAAI,KAAO,IAChD,GAAG,EAAM,GAAG,IACZ,GAAG,EAAM,IAAI,EAAI,SAAS,IAHrB,ECpHf,SAAS,GAAc,CAAE,MAAK,SAAS,EAAK,EAAW,EAAa,CAChE,GAAM,CAAE,gBAAe,MAAK,SAAQ,aAAY,QAAS,CAAE,gBAAe,YAAW,eAAiB,EAClG,EAAc,EAAO,EAAI,EAAI,EAAI,SAAY,KACjD,GAAI,EAAY,CACZ,GAAI,EACA,MAAU,MAAM,mDAAmD,CAEvE,GAAI,EAAa,EAAI,EAAK,CAAC,EAAO,EAAI,EAAI,OAAO,GAAQ,SAErD,MAAU,MADE,6DACQ,CAG5B,IAAI,EAAc,CAAC,IACd,CAAC,GACG,GAAc,GAAS,MAAQ,CAAC,EAAI,QACrC,EAAa,EAAI,GAChB,EAAS,EAAI,CACR,EAAI,OAAS,EAAO,cAAgB,EAAI,OAAS,EAAO,cACxD,OAAO,GAAQ,WAC7B,EAAM,OAAO,OAAO,EAAE,CAAE,EAAK,CACzB,cAAe,GACf,YAAa,CAAC,IAAgB,GAAc,CAAC,GAC7C,OAAQ4E,EAAS,EACpB,CAAC,CACF,IAAI,EAAiB,GACjB,EAAY,GACZ,EAAMI,GAAU,EAAK,MAAY,EAAiB,OAAc,EAAY,GAAM,CACtF,GAAI,CAAC,GAAe,CAAC,EAAI,QAAU,EAAI,OAAS,KAAM,CAClD,GAAI,EACA,MAAU,MAAM,+EAA+E,CACnG,EAAc,GAElB,GAAI,EAAI,WACA,GAAiB,GAAS,KAG1B,OAFI,GAAkB,GAClB,GAAW,CACR,IAAQ,GAAK,IAAM,EAAc,KAAK,IAAQ,UAGnD,GAAiB,CAAC,GAAgB,GAAS,MAAQ,EAOzD,MANA,GAAM,KAAK,IACP,GAAc,CAAC,EACf,GAAO,GAAY,EAAK,EAAI,OAAQ,EAAc,EAAW,CAAC,CAEzD,GAAa,GAClB,GAAa,CACV,EAEP,IACA,EAAa,MACb,GACI,IACA,GAAO,GAAY,EAAK,EAAI,OAAQ,EAAc,EAAW,CAAC,EAClE,EAAM,KAAK,EAAI,IAAIJ,EAAO,KAG1B,EAAM,GAAG,EAAI,GACT,IACA,GAAO,GAAY,EAAK,EAAI,OAAQ,EAAc,EAAW,CAAC,GAEtE,IAAI,EAAK,EAAK,EACV,EAAO,EAAM,EACb,EAAM,CAAC,CAAC,EAAM,YACd,EAAM,EAAM,cACZ,EAAe,EAAM,UAGrB,EAAM,GACN,EAAM,KACN,EAAe,KACX,GAAS,OAAO,GAAU,WAC1B,EAAQ,EAAI,WAAW,EAAM,GAErC,EAAI,YAAc,GACd,CAAC,GAAe,CAAC,GAAc,EAAS,EAAM,GAC9C,EAAI,cAAgB,EAAI,OAAS,GACrC,EAAY,GACR,CAAC,GACD,EAAW,QAAU,GACrB,CAAC,EAAI,QACL,CAAC,GACD,GAAM,EAAM,EACZ,CAAC,EAAM,MACP,CAAC,EAAM,KACP,CAAC,EAAM,SAEP,EAAI,OAAS,EAAI,OAAO,UAAU,EAAE,EAExC,IAAI,EAAmB,GACjB,EAAWI,GAAU,EAAO,MAAY,EAAmB,OAAc,EAAY,GAAM,CAC7F,EAAK,IACT,GAAI,GAAc,GAAO,EAAK,CAE1B,GADA,EAAK,EAAM;EAAO,GACd,EAAK,CACL,IAAM,EAAK,EAAc,EAAI,CAC7B,GAAM,KAAK,GAAc,EAAI,EAAI,OAAO,GAExC,IAAa,IAAM,CAAC,EAAI,OACpB,IAAO;IACP,EAAK;;GAGT,GAAM,KAAK,EAAI,iBAGd,CAAC,GAAe,EAAa,EAAM,CAAE,CAC1C,IAAM,EAAM,EAAS,GACf,EAAM,EAAS,QAAQ;EAAK,CAC5B,EAAa,IAAQ,GACrB9C,EAAO,EAAI,QAAU,EAAM,MAAQ,EAAM,MAAM,SAAW,EAChE,GAAI,GAAc,CAACA,EAAM,CACrB,IAAI,EAAe,GACnB,GAAI,IAAe,IAAQ,KAAO,IAAQ,KAAM,CAC5C,IAAI,EAAM,EAAS,QAAQ,IAAI,CAC3B,IAAQ,KACR,IAAQ,IACR,EAAM,GACN,EAAS,EAAM,KAAO,MACtB,EAAM,EAAS,QAAQ,IAAK,EAAM,EAAE,GAEpC,IAAQ,IAAM,EAAM,KACpB,EAAe,IAElB,IACD,EAAK,KAAK,EAAI,iBAGjB,IAAa,IAAM,EAAS,KAAO;KACxC,EAAK,IAaT,MAXA,IAAO,EAAK,EACR,EAAI,OACA,GAAoB,GACpB,GAAW,CAEV,GAAgB,CAAC,EACtB,GAAO,GAAY,EAAK,EAAI,OAAQ,EAAc,EAAa,CAAC,CAE3D,GAAa,GAClB,GAAa,CAEV,EC9IX,SAAS,GAAK,EAAU,EAAS,EACzB,IAAa,SAAW,IAAa,SACrC,QAAQ,KAAK,EAAQ,CCK7B,IAAM+C,GAAQ,CACV,SAAU,GAAS,UACd,OAAO,GAAU,UAAY,EAAM,mBACxC,QAAS,MACT,IAAK,0BACL,KAAM,OACN,YAAe,OAAO,OAAO,IAAI,EAAO,YAAiB,CAAC,CAAE,CACxD,WAAY,GACf,CAAC,CACF,mBACH,CACK,IAAc,EAAK,KAASA,GAAM,SAAS,EAAI,EAChD,EAAS,EAAI,GACT,CAAC,EAAI,MAAQ,EAAI,OAAS,EAAO,QAClCA,GAAM,SAAS,EAAI,MAAM,GAC7B,GAAK,IAAI,OAAO,KAAK,KAAK,GAAO,EAAI,MAAQA,GAAM,KAAO,EAAI,QAAQ,CAC1E,SAAS,GAAgB,EAAK,EAAK,EAAO,CAEtC,GADA,EAAQ,GAAO,GAAQ,EAAM,CAAG,EAAM,QAAQ,EAAI,IAAI,CAAG,EACrD,GAAM,EAAM,CACZ,IAAK,IAAM,KAAM,EAAM,MACnB,GAAW,EAAK7C,EAAK,EAAG,SACvB,MAAM,QAAQ,EAAM,CACzB,IAAK,IAAM,KAAM,EACb,GAAW,EAAKA,EAAK,EAAG,MAE5B,GAAW,EAAKA,EAAK,EAAM,CAEnC,SAAS,GAAW,EAAK,EAAK,EAAO,CACjC,IAAM,EAAS,GAAO,GAAQ,EAAM,CAAG,EAAM,QAAQ,EAAI,IAAI,CAAG,EAChE,GAAI,CAAC,GAAM,EAAO,CACd,MAAU,MAAM,4CAA4C,CAChE,IAAM,EAAS,EAAO,OAAO,KAAM,EAAK,IAAI,CAC5C,IAAK,GAAM,CAAC,EAAKvC,KAAU,EACnBuC,aAAe,IACVA,EAAI,IAAI,EAAI,EACb,EAAI,IAAI,EAAKvC,EAAM,CAElBuC,aAAe,IACpB,EAAI,IAAI,EAAI,CAEN,OAAO,UAAU,eAAe,KAAKA,EAAK,EAAI,EACpD,OAAO,eAAeA,EAAK,EAAK,CAC5B,QACA,SAAU,GACV,WAAY,GACZ,aAAc,GACjB,CAAC,CAGV,OAAOA,ECtDX,SAAS,GAAe,EAAK,EAAK,CAAE,MAAK,SAAS,CAC9C,GAAI,EAAO,EAAI,EAAI,EAAI,WACnB,EAAI,WAAW,EAAKA,EAAK,EAAM,SAE1B,GAAW,EAAK,EAAI,CACzB,GAAgB,EAAKA,EAAK,EAAM,KAC/B,CACD,IAAM,EAAQ,GAAK,EAAK,GAAI,EAAI,CAChC,GAAIA,aAAe,IACf,EAAI,IAAI,EAAO,GAAK,EAAO,EAAO,EAAI,CAAC,SAElCA,aAAe,IACpB,EAAI,IAAI,EAAM,KAEb,CACD,IAAM,EAAY,GAAa,EAAK,EAAO,EAAI,CACzC,EAAU,GAAK,EAAO,EAAW,EAAI,CACvC,KAAaA,EACb,OAAO,eAAeA,EAAK,EAAW,CAClC,MAAO,EACP,SAAU,GACV,WAAY,GACZ,aAAc,GACjB,CAAC,CAEF,EAAI,GAAa,GAG7B,OAAOA,EAEX,SAAS,GAAa,EAAK,EAAO,EAAK,CACnC,GAAI,IAAU,KACV,MAAO,GAEX,GAAI,OAAO,GAAU,SACjB,OAAO,OAAO,EAAM,CACxB,GAAI,EAAO,EAAI,EAAI,GAAK,IAAK,CACzB,IAAM,EAAS,GAAuB,EAAI,IAAK,EAAE,CAAC,CAClD,EAAO,QAAU,IAAI,IACrB,IAAK,IAAMpC,KAAQ,EAAI,QAAQ,MAAM,CACjC,EAAO,QAAQ,IAAIA,EAAK,OAAO,CACnC,EAAO,OAAS,GAChB,EAAO,eAAiB,GACxB,IAAM,EAAS,EAAI,SAAS,EAAO,CACnC,GAAI,CAAC,EAAI,aAAc,CACnB,IAAI,EAAU,KAAK,UAAU,EAAO,CAChC,EAAQ,OAAS,KACjB,EAAU,EAAQ,UAAU,EAAG,GAAG,CAAG,QACzC,GAAK,EAAI,IAAI,QAAQ,SAAU,kFAAkF,EAAQ,0CAA0C,CACnK,EAAI,aAAe,GAEvB,OAAO,EAEX,OAAO,KAAK,UAAU,EAAM,CCtDhC,SAAS,GAAW,EAAK,EAAO,EAAK,CACjC,IAAM,EAAI,GAAW,EAAK,OAAW,EAAI,CACnC,EAAI,GAAW,EAAO,OAAW,EAAI,CAC3C,OAAO,IAAI,GAAK,EAAG,EAAE,CAEzB,IAAM,GAAN,MAAM,CAAK,CACP,YAAY,EAAK,EAAQ,KAAM,CAC3B,OAAO,eAAe,KAAM,GAAW,CAAE,MAAO,GAAM,CAAC,CACvD,KAAK,IAAM,EACX,KAAK,MAAQ,EAEjB,MAAM,EAAQ,CACV,GAAI,CAAE,MAAK,SAAU,KAKrB,OAJI,EAAO,EAAI,GACX,EAAM,EAAI,MAAM2E,EAAO,EACvB,EAAO,EAAM,GACb,EAAQ,EAAM,MAAMA,EAAO,EACxB,IAAI,EAAK,EAAK,EAAM,CAE/B,OAAO,EAAG,EAAK,CACX,IAAM,EAAO,GAAK,SAAW,IAAI,IAAQ,EAAE,CAC3C,OAAO,GAAe,EAAK,EAAM,KAAK,CAE1C,SAAS,EAAK,EAAW,EAAa,CAClC,OAAO,GAAK,IACN,GAAc,KAAM,EAAK,EAAW,EAAY,CAChD,KAAK,UAAU,KAAK,GC3BlC,SAAS,GAAoB,EAAY,EAAK,EAAS,CAGnD,OAFa,EAAI,QAAU,EAAW,KACb,GAA0B,IAClC,EAAY,EAAK,EAAQ,CAE9C,SAAS,GAAyB,CAAE,UAAS,SAAS,EAAK,CAAE,kBAAiB,YAAW,aAAY,cAAa,aAAa,CAC3H,GAAM,CAAE,SAAQ,QAAS,CAAE,kBAAoB,EACzC,EAAU,OAAO,OAAO,EAAE,CAAE,EAAK,CAAE,OAAQ,EAAY,KAAM,KAAM,CAAC,CACtE,EAAY,GACV,EAAQ,EAAE,CAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,EAAG,CACnC,IAAM,EAAO,EAAM,GACfhD,EAAU,KACd,GAAI,EAAO,EAAK,CACR,CAAC,GAAa,EAAK,aACnB,EAAM,KAAK,GAAG,CAClB,GAAiB,EAAK,EAAO,EAAK,cAAe,EAAU,CACvD,EAAK,UACL,EAAU,EAAK,iBAEd,EAAO,EAAK,CAAE,CACnB,IAAM,EAAK,EAAO,EAAK,IAAI,CAAG,EAAK,IAAM,KACrC,IACI,CAAC,GAAa,EAAG,aACjB,EAAM,KAAK,GAAG,CAClB,GAAiB,EAAK,EAAO,EAAG,cAAe,EAAU,EAGjE,EAAY,GACZ,IAAIuD,EAAMF,GAAU,EAAM,MAAgB,EAAU,SAAc,EAAY,GAAM,CAChFrD,IACA,GAAO,GAAYuD,EAAK,EAAY,EAAcvD,EAAQ,CAAC,EAC3D,GAAaA,IACb,EAAY,IAChB,EAAM,KAAK,EAAkBuD,EAAI,CAErC,IAAI,EACJ,GAAI,EAAM,SAAW,EACjB,EAAM,EAAU,MAAQ,EAAU,QAEjC,CACD,EAAM,EAAM,GACZ,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,EAAG,CACnC,IAAM,EAAO,EAAM,GACnB,GAAO,EAAO,KAAKN,IAAS,IAAS;GAU7C,OAPIjD,GACA,GAAO;EAAO,GAAc,EAAcA,EAAQ,CAAEiD,EAAO,CACvD,GACA,GAAW,EAEV,GAAa,GAClB,GAAa,CACV,EAEX,SAAS,GAAwB,CAAE,SAAS,EAAK,CAAE,YAAW,cAAc,CACxE,GAAM,CAAE,SAAQ,aAAY,sBAAuB,EAAW,QAAS,CAAE,kBAAoB,EAC7F,GAAc,EACd,IAAM,EAAU,OAAO,OAAO,EAAE,CAAE,EAAK,CACnC,OAAQ,EACR,OAAQ,GACR,KAAM,KACT,CAAC,CACE,EAAa,GACb,EAAe,EACb,EAAQ,EAAE,CAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,EAAG,CACnC,IAAM,EAAO,EAAM,GACfjD,EAAU,KACd,GAAI,EAAO,EAAK,CACR,EAAK,aACL,EAAM,KAAK,GAAG,CAClB,GAAiB,EAAK,EAAO,EAAK,cAAe,GAAM,CACnD,EAAK,UACL,EAAU,EAAK,iBAEd,EAAO,EAAK,CAAE,CACnB,IAAM,EAAK,EAAO,EAAK,IAAI,CAAG,EAAK,IAAM,KACrC,IACI,EAAG,aACH,EAAM,KAAK,GAAG,CAClB,GAAiB,EAAK,EAAO,EAAG,cAAe,GAAM,CACjD,EAAG,UACH,EAAa,KAErB,IAAM,EAAK,EAAO,EAAK,MAAM,CAAG,EAAK,MAAQ,KACzC,GACI,EAAG,UACH,EAAU,EAAG,SACb,EAAG,gBACH,EAAa,KAEZ,EAAK,OAAS,MAAQ,GAAI,UAC/B,EAAU,EAAG,SAGjBA,IACA,EAAa,IACjB,IAAI,EAAMqD,GAAU,EAAM,MAAgB,EAAU,KAAM,CACtD,EAAI,EAAM,OAAS,IACnB,GAAO,KACPrD,IACA,GAAO,GAAY,EAAK,EAAY,EAAcA,EAAQ,CAAC,EAC3D,CAAC,IAAe,EAAM,OAAS,GAAgB,EAAI,SAAS;EAAK,IACjE,EAAa,IACjB,EAAM,KAAK,EAAI,CACf,EAAe,EAAM,OAEzB,GAAM,CAAE,QAAO,OAAQ,EACvB,GAAI,EAAM,SAAW,EACjB,OAAO,EAAQ,EAGf,GAAI,CAAC,EAAY,CACb,IAAM,EAAM,EAAM,QAAQ,EAAK,IAAS,EAAM,EAAK,OAAS,EAAG,EAAE,CACjE,EAAa,EAAI,QAAQ,UAAY,GAAK,EAAM,EAAI,QAAQ,UAEhE,GAAI,EAAY,CACZ,IAAI,EAAM,EACV,IAAK,IAAM,KAAQ,EACf,GAAO,EAAO,KAAK,IAAaiD,IAAS,IAAS;EACtD,MAAO,GAAG,EAAI,IAAIA,IAAS,SAG3B,MAAO,GAAG,IAAQ,IAAY,EAAM,KAAK,IAAI,GAAG,IAAY,IAIxE,SAAS,GAAiB,CAAE,SAAQ,QAAS,CAAE,kBAAmB,EAAO,EAAS,EAAW,CAGzF,GAFIjD,GAAW,IACX,EAAUA,EAAQ,QAAQ,OAAQ,GAAG,EACrCA,EAAS,CACT,IAAM,EAAK,GAAc,EAAcA,EAAQ,CAAEiD,EAAO,CACxD,EAAM,KAAK,EAAG,WAAW,CAAC,ECnIlC,SAAS,GAAS,EAAO,EAAK,CAC1B,IAAM,EAAI,EAAS,EAAI,CAAG,EAAI,MAAQ,EACtC,IAAK,IAAM,KAAM,EACb,GAAI,EAAO,EAAG,GACN,EAAG,MAAQ,GAAO,EAAG,MAAQ,GAE7B,EAAS,EAAG,IAAI,EAAI,EAAG,IAAI,QAAU,GACrC,OAAO,EAKvB,IAAM,GAAN,cAAsB,EAAW,CAC7B,WAAW,SAAU,CACjB,MAAO,wBAEX,YAAY,EAAQ,CAChB,MAAM,GAAKD,EAAO,CAClB,KAAK,MAAQ,EAAE,CAMnB,OAAO,KAAK,EAAQ,EAAK,EAAK,CAC1B,GAAM,CAAE,gBAAe,YAAa,EAC9BvC,EAAM,IAAI,KAAKuC,EAAO,CACtB,GAAO,EAAK,IAAU,CACxB,GAAI,OAAO,GAAa,WACpB,EAAQ,EAAS,KAAK,EAAK,EAAK,EAAM,SACjC,MAAM,QAAQ,EAAS,EAAI,CAAC,EAAS,SAAS,EAAI,CACvD,QACA,IAAU,QAAa,IACvB,EAAI,MAAM,KAAK,GAAW,EAAK,EAAO,EAAI,CAAC,EAEnD,GAAI,aAAe,IACf,IAAK,GAAM,CAAC,EAAK,KAAU,EACvB,EAAI,EAAK,EAAM,SAEd,GAAO,OAAO,GAAQ,SAC3B,IAAK,IAAM,KAAO,OAAO,KAAK,EAAI,CAC9B,EAAI,EAAK,EAAI,GAAK,CAK1B,OAHI,OAAOA,EAAO,gBAAmB,YACjC,EAAI,MAAM,KAAKA,EAAO,eAAe,CAElCvC,EAQX,IAAI,EAAM,EAAW,CACjB,IAAI,EACJ,CAOI,CAPA,EAAO,EAAK,CACJ,EACH,CAAC,GAAQ,OAAO,GAAS,UAAY,EAAE,QAAS,GAE7C,IAAI,GAAK,EAAM,GAAM,MAAM,CAG3B,IAAI,GAAK,EAAK,IAAK,EAAK,MAAM,CAC1C,IAAM,EAAO,GAAS,KAAK,MAAO,EAAM,IAAI,CACtC,EAAc,KAAK,QAAQ,eACjC,GAAI,EAAM,CACN,GAAI,CAAC,EACD,MAAU,MAAM,OAAO,EAAM,IAAI,cAAc,CAE/C,EAAS,EAAK,MAAM,EAAI,GAAc,EAAM,MAAM,CAClD,EAAK,MAAM,MAAQ,EAAM,MAEzB,EAAK,MAAQ,EAAM,cAElB,EAAa,CAClB,IAAM,EAAI,KAAK,MAAM,UAAU,GAAQ,EAAY,EAAO,EAAK,CAAG,EAAE,CAChE,IAAM,GACN,KAAK,MAAM,KAAK,EAAM,CAEtB,KAAK,MAAM,OAAO,EAAG,EAAG,EAAM,MAGlC,KAAK,MAAM,KAAK,EAAM,CAG9B,OAAO,EAAK,CACR,IAAM,EAAK,GAAS,KAAK,MAAO,EAAI,CAIpC,OAHK,EAEO,KAAK,MAAM,OAAO,KAAK,MAAM,QAAQ,EAAG,CAAE,EAAE,CAC7C,OAAS,EAFT,GAIf,IAAI,EAAK,EAAY,CAEjB,IAAMpC,EADK,GAAS,KAAK,MAAO,EAAI,EACnB,MACjB,OAAQ,CAAC,GAAc,EAASA,EAAK,CAAGA,EAAK,MAAQA,IAAS,OAElE,IAAI,EAAK,CACL,MAAO,CAAC,CAAC,GAAS,KAAK,MAAO,EAAI,CAEtC,IAAI,EAAK,EAAO,CACZ,KAAK,IAAI,IAAI,GAAK,EAAK,EAAM,CAAE,GAAK,CAOxC,OAAO,EAAG,EAAK,EAAM,CACjB,IAAMoC,EAAM,EAAO,IAAI,EAAS,GAAK,SAAW,IAAI,IAAQ,EAAE,CAC1D,GAAK,UACL,EAAI,SAASA,EAAI,CACrB,IAAK,IAAM,KAAQ,KAAK,MACpB,GAAe,EAAKA,EAAK,EAAK,CAClC,OAAOA,EAEX,SAAS,EAAK,EAAW,EAAa,CAClC,GAAI,CAAC,EACD,OAAO,KAAK,UAAU,KAAK,CAC/B,IAAK,IAAM,KAAQ,KAAK,MACpB,GAAI,CAAC,EAAO,EAAK,CACb,MAAU,MAAM,sCAAsC,KAAK,UAAU,EAAK,CAAC,UAAU,CAI7F,MAFI,CAAC,EAAI,eAAiB,KAAK,iBAAiB,GAAM,GAClD,EAAM,OAAO,OAAO,EAAE,CAAE,EAAK,CAAE,cAAe,GAAM,CAAC,EAClD,GAAoB,KAAM,EAAK,CAClC,gBAAiB,GACjB,UAAW,CAAE,MAAO,IAAK,IAAK,IAAK,CACnC,WAAY,EAAI,QAAU,GAC1B,cACA,YACH,CAAC,GCxIJA,GAAM,CACR,WAAY,MACZ,QAAS,GACT,UAAW,GACX,IAAK,wBACL,QAAQ,EAAK,EAAS,CAGlB,OAFK,GAAMA,EAAI,EACX,EAAQ,kCAAkC,CACvCA,GAEX,YAAa,EAAQ,EAAK,IAAQ,GAAQ,KAAKuC,EAAQ,EAAK,GAC/D,CCPK,GAAN,cAAsB,EAAW,CAC7B,WAAW,SAAU,CACjB,MAAO,wBAEX,YAAY,EAAQ,CAChB,MAAM,GAAKA,EAAO,CAClB,KAAK,MAAQ,EAAE,CAEnB,IAAI,EAAO,CACP,KAAK,MAAM,KAAK,EAAM,CAU1B,OAAO,EAAK,CACR,IAAM,EAAM,GAAY,EAAI,CAI5B,OAHI,OAAO,GAAQ,SAEP,KAAK,MAAM,OAAO,EAAK,EAAE,CAC1B,OAAS,EAFT,GAIf,IAAI,EAAK,EAAY,CACjB,IAAM,EAAM,GAAY,EAAI,CAC5B,GAAI,OAAO,GAAQ,SACf,OACJ,IAAM,EAAK,KAAK,MAAM,GACtB,MAAO,CAAC,GAAc,EAAS,EAAG,CAAG,EAAG,MAAQ,EAQpD,IAAI,EAAK,CACL,IAAM,EAAM,GAAY,EAAI,CAC5B,OAAO,OAAO,GAAQ,UAAY,EAAM,KAAK,MAAM,OASvD,IAAI,EAAK,EAAO,CACZ,IAAM,EAAM,GAAY,EAAI,CAC5B,GAAI,OAAO,GAAQ,SACf,MAAU,MAAM,+BAA+B,EAAI,GAAG,CAC1D,IAAM,EAAO,KAAK,MAAM,GACpB,EAAS,EAAK,EAAI,GAAc,EAAM,CACtC,EAAK,MAAQ,EAEb,KAAK,MAAM,GAAO,EAE1B,OAAO,EAAG,EAAK,CACX,IAAMQ,EAAM,EAAE,CACV,GAAK,UACL,EAAI,SAASA,EAAI,CACrB,IAAI,EAAI,EACR,IAAK,IAAM,KAAQ,KAAK,MACpB,EAAI,KAAK,GAAK,EAAM,OAAO,IAAI,CAAE,EAAI,CAAC,CAC1C,OAAOA,EAEX,SAAS,EAAK,EAAW,EAAa,CAGlC,OAFK,EAEE,GAAoB,KAAM,EAAK,CAClC,gBAAiB,KACjB,UAAW,CAAE,MAAO,IAAK,IAAK,IAAK,CACnC,YAAa,EAAI,QAAU,IAAM,KACjC,cACA,YACH,CAAC,CAPS,KAAK,UAAU,KAAK,CASnC,OAAO,KAAK,EAAQ,EAAK,EAAK,CAC1B,GAAM,CAAE,YAAa,EACfA,EAAM,IAAI,KAAKR,EAAO,CAC5B,GAAI,GAAO,OAAO,YAAY,OAAO,EAAI,CAAE,CACvC,IAAI,EAAI,EACR,IAAK,IAAI,KAAM,EAAK,CAChB,GAAI,OAAO,GAAa,WAAY,CAChC,IAAM,EAAM,aAAe,IAAM,EAAK,OAAO,IAAI,CACjD,EAAK,EAAS,KAAK,EAAK,EAAK,EAAG,CAEpC,EAAI,MAAM,KAAK,GAAW,EAAI,OAAW,EAAI,CAAC,EAGtD,OAAOQ,IAGf,SAAS,GAAY,EAAK,CACtB,IAAI,EAAM,EAAS,EAAI,CAAG,EAAI,MAAQ,EAGtC,OAFI,GAAO,OAAO,GAAQ,WACtB,EAAM,OAAO,EAAI,EACd,OAAO,GAAQ,UAAY,OAAO,UAAU,EAAI,EAAI,GAAO,EAC5D,EACA,KC1GV,IAAM,GAAM,CACR,WAAY,MACZ,QAAS,GACT,UAAW,GACX,IAAK,wBACL,QAAQ,EAAK,EAAS,CAGlB,OAFK,GAAMA,EAAI,EACX,EAAQ,mCAAmC,CACxCA,GAEX,YAAa,EAAQ,EAAK,IAAQ,GAAQ,KAAKR,EAAQ,EAAK,GAC/D,CCZK,GAAS,CACX,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,wBACL,QAAS,GAAO,EAChB,UAAU,EAAM,EAAK,EAAW,EAAa,CAEzC,MADA,GAAM,OAAO,OAAO,CAAE,aAAc,GAAM,CAAE,EAAI,CACzC,GAAgB,EAAM,EAAK,EAAW,EAAY,EAEhE,CCTK,GAAU,CACZ,SAAU,GAAS,GAAS,KAC5B,eAAkB,IAAI,EAAO,KAAK,CAClC,QAAS,GACT,IAAK,yBACL,KAAM,wBACN,YAAe,IAAI,EAAO,KAAK,CAC/B,WAAY,CAAE,UAAU,IAAQ,OAAO,GAAW,UAAY,GAAQ,KAAK,KAAK,EAAO,CACjF,EACA,EAAI,QAAQ,QACrB,CCVK,GAAU,CACZ,SAAU,GAAS,OAAO,GAAU,UACpC,QAAS,GACT,IAAK,yBACL,KAAM,oCACN,QAAS,GAAO,IAAI,EAAO,EAAI,KAAO,KAAO,EAAI,KAAO,IAAI,CAC5D,UAAU,CAAE,SAAQ,SAAS,EAAK,CAC9B,GAAI,GAAU,GAAQ,KAAK,KAAK,EAAO,CAAE,CACrC,IAAM,EAAK,EAAO,KAAO,KAAO,EAAO,KAAO,IAC9C,GAAI,IAAU,EACV,OAAO,EAEf,OAAO,EAAQ,EAAI,QAAQ,QAAU,EAAI,QAAQ,UAExD,CChBD,SAAS,GAAgB,CAAE,SAAQ,oBAAmB,MAAK,SAAS,CAChE,GAAI,OAAO,GAAU,SACjB,OAAO,OAAO,EAAM,CACxB,IAAM,EAAM,OAAO,GAAU,SAAW,EAAQ,OAAO,EAAM,CAC7D,GAAI,CAAC,SAAS,EAAI,CACd,OAAO,MAAM,EAAI,CAAG,OAAS,EAAM,EAAI,QAAU,OACrD,IAAI,EAAI,KAAK,UAAU,EAAM,CAC7B,GAAI,CAAC,GACD,IACC,CAAC,GAAO,IAAQ,4BACjB,MAAM,KAAK,EAAE,CAAE,CACf,IAAI,EAAI,EAAE,QAAQ,IAAI,CAClB,EAAI,IACJ,EAAI,EAAE,OACN,GAAK,KAET,IAAI,EAAI,GAAqB,EAAE,OAAS,EAAI,GAC5C,KAAO,KAAM,GACT,GAAK,IAEb,OAAO,ECjBX,IAAM,GAAW,CACb,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,KAAM,iDACN,QAAS,GAAO,EAAI,MAAM,GAAG,CAAC,aAAa,GAAK,MAC1C,IACA,EAAI,KAAO,IACP,KACA,IACV,UAAW,GACd,CACK,GAAW,CACb,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,OAAQ,MACR,KAAM,yDACN,QAAS,GAAO,WAAW,EAAI,CAC/B,UAAU,EAAM,CACZ,IAAM,EAAM,OAAO3E,EAAK,MAAM,CAC9B,OAAO,SAAS,EAAI,CAAG,EAAI,eAAe,CAAG,GAAgBA,EAAK,EAEzE,CACK,GAAQ,CACV,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,KAAM,qCACN,QAAQ,EAAK,CACT,IAAMA,EAAO,IAAI,EAAO,WAAW,EAAI,CAAC,CAClC,EAAM,EAAI,QAAQ,IAAI,CAG5B,OAFI,IAAQ,IAAM,EAAI,EAAI,OAAS,KAAO,MACtC,EAAK,kBAAoB,EAAI,OAAS,EAAM,GACzCA,GAEX,UAAW,GACd,CCtCKoF,GAAe,GAAU,OAAO,GAAU,UAAY,OAAO,UAAU,EAAM,CAC7EC,IAAc,EAAK,EAAQ,EAAO,CAAE,iBAAmB,EAAc,OAAO,EAAI,CAAG,SAAS,EAAI,UAAU,EAAO,CAAE,EAAM,CAC/H,SAASC,GAAa,EAAM,EAAO,EAAQ,CACvC,GAAM,CAAE,SAAUtF,EAGlB,OAFIoF,GAAY,EAAM,EAAI,GAAS,EACxB,EAAS,EAAM,SAAS,EAAM,CAClC,GAAgBpF,EAAK,CAEhC,IAAM,GAAS,CACX,SAAU,GAASoF,GAAY,EAAM,EAAI,GAAS,EAClD,QAAS,GACT,IAAK,wBACL,OAAQ,MACR,KAAM,aACN,SAAU,EAAK,EAAU,IAAQC,GAAW,EAAK,EAAG,EAAG,EAAI,CAC3D,UAAW,GAAQC,GAAatF,EAAM,EAAG,MAC5C,CACK,GAAM,CACR,SAAUoF,GACV,QAAS,GACT,IAAK,wBACL,KAAM,gBACN,SAAU,EAAK,EAAU,IAAQC,GAAW,EAAK,EAAG,GAAI,EAAI,CAC5D,UAAW,GACd,CACK,GAAS,CACX,SAAU,GAASD,GAAY,EAAM,EAAI,GAAS,EAClD,QAAS,GACT,IAAK,wBACL,OAAQ,MACR,KAAM,mBACN,SAAU,EAAK,EAAU,IAAQC,GAAW,EAAK,EAAG,GAAI,EAAI,CAC5D,UAAW,GAAQC,GAAatF,EAAM,GAAI,MAC7C,CC3BK2E,GAAS,CACXvC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACH,CChBD,SAASgD,GAAY,EAAO,CACxB,OAAO,OAAO,GAAU,UAAY,OAAO,UAAU,EAAM,CAE/D,IAAM,IAAiB,CAAE,WAAY,KAAK,UAAU,EAAM,CACpD,GAAc,CAChB,CACI,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,wBACL,QAAS,GAAO,EAChB,UAAW,GACd,CACD,CACI,SAAU,GAAS,GAAS,KAC5B,eAAkB,IAAI,EAAO,KAAK,CAClC,QAAS,GACT,IAAK,yBACL,KAAM,SACN,YAAe,KACf,UAAW,GACd,CACD,CACI,SAAU,GAAS,OAAO,GAAU,UACpC,QAAS,GACT,IAAK,yBACL,KAAM,iBACN,QAAS,GAAO,IAAQ,OACxB,UAAW,GACd,CACD,CACI,SAAUA,GACV,QAAS,GACT,IAAK,wBACL,KAAM,wBACN,SAAU,EAAK,EAAU,CAAE,iBAAkB,EAAc,OAAO,EAAI,CAAG,SAAS,EAAK,GAAG,CAC1F,WAAY,CAAE,WAAYA,GAAY,EAAM,CAAG,EAAM,UAAU,CAAG,KAAK,UAAU,GACpF,CACD,CACI,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,KAAM,yDACN,QAAS,GAAO,WAAW,EAAI,CAC/B,UAAW,IAElB,CAUKT,GAAS,CAACvC,GAAK,GAAI,CAAC,OAAO,GATf,CACd,QAAS,GACT,IAAK,GACL,KAAM,IACN,QAAQ,EAAK,EAAS,CAElB,OADA,EAAQ,2BAA2B,KAAK,UAAU,EAAI,GAAG,CAClD,GAEd,CACuD,CCxDlD,GAAS,CACX,SAAU,GAAS,aAAiB,WACpC,QAAS,GACT,IAAK,2BASL,QAAQ,EAAK,EAAS,CAClB,GAAI,OAAO,MAAS,WAAY,CAE5B,IAAM,EAAM,KAAK,EAAI,QAAQ,UAAW,GAAG,CAAC,CACtC,EAAS,IAAI,WAAW,EAAI,OAAO,CACzC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,OAAQ,EAAE,EAC9B,EAAO,GAAK,EAAI,WAAW,EAAE,CACjC,OAAO,OAIP,OADA,EAAQ,2FAA2F,CAC5F,GAGf,UAAU,CAAE,UAAS,OAAM,SAAS,EAAK,EAAW,EAAa,CAC7D,GAAI,CAAC,EACD,MAAO,GACX,IAAM,EAAM,EACR,EACJ,GAAI,OAAO,MAAS,WAAY,CAC5B,IAAImD,EAAI,GACR,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,OAAQ,EAAE,EAC9B,GAAK,OAAO,aAAa,EAAI,GAAG,CACpC,EAAM,KAAKA,EAAE,MAGb,MAAU,MAAM,2FAA2F,CAG/G,GADA,CAAS,GAAO,EAAO,cACnB,IAAS,EAAO,aAAc,CAC9B,IAAM,EAAY,KAAK,IAAI,EAAI,QAAQ,UAAY,EAAI,OAAO,OAAQ,EAAI,QAAQ,gBAAgB,CAC5F,EAAI,KAAK,KAAK,EAAI,OAAS,EAAU,CACrC,EAAY,MAAM,EAAE,CAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,GAAK,EACpC,EAAM,GAAK,EAAI,OAAO,EAAG,EAAU,CAEvC,EAAM,EAAM,KAAK,IAAS,EAAO,cAAgB;EAAO,IAAI,CAEhE,OAAO,GAAgB,CAAE,UAAS,OAAM,MAAO,EAAK,CAAE,EAAK,EAAW,EAAY,EAEzF,CClDD,SAAS,GAAa,EAAK,EAAS,CAChC,GAAI,GAAMJ,EAAI,CACV,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAI,MAAM,OAAQ,EAAE,EAAG,CACvC,IAAI,EAAOA,EAAI,MAAM,GACjB,MAAO,EAAK,KAEP,GAAM,EAAK,CAAE,CACd,EAAK,MAAM,OAAS,GACpB,EAAQ,iDAAiD,CAC7D,IAAM,EAAO,EAAK,MAAM,IAAM,IAAI,GAAK,IAAI,EAAO,KAAK,CAAC,CAKxD,GAJI,EAAK,gBACL,EAAK,IAAI,cAAgB,EAAK,IAAI,cAC5B,GAAG,EAAK,cAAc,IAAI,EAAK,IAAI,gBACnC,EAAK,eACX,EAAK,QAAS,CACd,IAAM,EAAK,EAAK,OAAS,EAAK,IAC9B,EAAG,QAAU,EAAG,QACV,GAAG,EAAK,QAAQ,IAAI,EAAG,UACvB,EAAK,QAEf,EAAO,EAEX,EAAI,MAAM,GAAK,EAAO,EAAK,CAAG,EAAO,IAAI,GAAK,EAAK,OAIvD,EAAQ,mCAAmC,CAC/C,OAAOA,EAEX,SAAS,GAAY,EAAQ,EAAU,EAAK,CACxC,GAAM,CAAE,YAAa,EACfK,EAAQ,IAAI,GAAQb,EAAO,CACjC,EAAM,IAAM,0BACZ,IAAI,EAAI,EACR,GAAI,GAAY,OAAO,YAAY,OAAO,EAAS,CAC/C,IAAK,IAAI,KAAM,EAAU,CACjB,OAAO,GAAa,aACpB,EAAK,EAAS,KAAK,EAAU,OAAO,IAAI,CAAE,EAAG,EACjD,IAAI,EAAK,EACT,GAAI,MAAM,QAAQ,EAAG,CACjB,GAAI,EAAG,SAAW,EACd,EAAM,EAAG,GACT,EAAQ,EAAG,QAGX,MAAU,UAAU,gCAAgC,IAAK,SAExD,GAAM,aAAc,OAAQ,CACjC,IAAMc,EAAO,OAAO,KAAK,EAAG,CAC5B,GAAIA,EAAK,SAAW,EAChB,EAAMA,EAAK,GACX,EAAQ,EAAG,QAGX,MAAU,UAAU,oCAAoCA,EAAK,OAAO,OAAO,MAI/E,EAAM,EAEV,EAAM,MAAM,KAAK,GAAW,EAAK,EAAO,EAAI,CAAC,CAErD,OAAOD,EAEX,IAAM,GAAQ,CACV,WAAY,MACZ,QAAS,GACT,IAAK,0BACL,QAAS,GACT,WAAY,GACf,CCrEK,GAAN,MAAM,UAAiB,EAAQ,CAC3B,aAAc,CACV,OAAO,CACP,KAAK,IAAM,GAAQ,UAAU,IAAI,KAAK,KAAK,CAC3C,KAAK,OAAS,GAAQ,UAAU,OAAO,KAAK,KAAK,CACjD,KAAK,IAAM,GAAQ,UAAU,IAAI,KAAK,KAAK,CAC3C,KAAK,IAAM,GAAQ,UAAU,IAAI,KAAK,KAAK,CAC3C,KAAK,IAAM,GAAQ,UAAU,IAAI,KAAK,KAAK,CAC3C,KAAK,IAAM,EAAS,IAMxB,OAAO,EAAG,EAAK,CACX,GAAI,CAAC,EACD,OAAO,MAAM,OAAO,EAAE,CAC1B,IAAMpD,EAAM,IAAI,IACZ,GAAK,UACL,EAAI,SAASA,EAAI,CACrB,IAAK,IAAM,KAAQ,KAAK,MAAO,CAC3B,IAAI,EAAK,EAQT,GAPI,EAAO,EAAK,EACZ,EAAM,GAAK,EAAK,IAAK,GAAI,EAAI,CAC7B,EAAQ,GAAK,EAAK,MAAO,EAAK,EAAI,EAGlC,EAAM,GAAK,EAAM,GAAI,EAAI,CAEzBA,EAAI,IAAI,EAAI,CACZ,MAAU,MAAM,+CAA+C,CACnE,EAAI,IAAI,EAAK,EAAM,CAEvB,OAAOA,EAEX,OAAO,KAAK,EAAQ,EAAU,EAAK,CAC/B,IAAMoD,EAAQ,GAAYb,EAAQ,EAAU,EAAI,CAC1Ce,EAAO,IAAI,KAEjB,MADA,GAAK,MAAQF,EAAM,MACZE,IAGf,GAAS,IAAM,yBACf,IAAM,GAAO,CACT,WAAY,MACZ,SAAU,GAAS,aAAiB,IACpC,UAAW,GACX,QAAS,GACT,IAAK,yBACL,QAAQ,EAAK,EAAS,CAClB,IAAMF,EAAQ,GAAaL,EAAK,EAAQ,CAClC,EAAW,EAAE,CACnB,IAAK,GAAM,CAAE,SAASK,EAAM,MACpB,EAAS,EAAI,GACT,EAAS,SAAS,EAAI,MAAM,CAC5B,EAAQ,iDAAiD,EAAI,QAAQ,CAGrE,EAAS,KAAK,EAAI,MAAM,EAIpC,OAAO,OAAO,OAAO,IAAI,GAAYA,EAAM,EAE/C,YAAa,EAAQ,EAAU,IAAQ,GAAS,KAAKb,EAAQ,EAAU,GAC1E,CCrED,SAAS,GAAc,CAAE,QAAO,UAAU,EAAK,CAI3C,OAFI,IADY,EAAQ,GAAU,IACZ,KAAK,KAAK,EAAO,CAC5B,EACJ,EAAQ,EAAI,QAAQ,QAAU,EAAI,QAAQ,SAErD,IAAM,GAAU,CACZ,SAAU,GAAS,IAAU,GAC7B,QAAS,GACT,IAAK,yBACL,KAAM,6CACN,YAAe,IAAI,EAAO,GAAK,CAC/B,UAAW,GACd,CACK,GAAW,CACb,SAAU,GAAS,IAAU,GAC7B,QAAS,GACT,IAAK,yBACL,KAAM,+CACN,YAAe,IAAI,EAAO,GAAM,CAChC,UAAW,GACd,CCpBKgB,GAAW,CACb,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,KAAM,iDACN,QAAU,GAAQ,EAAI,MAAM,GAAG,CAAC,aAAa,GAAK,MAC5C,IACA,EAAI,KAAO,IACP,KACA,IACV,UAAW,GACd,CACKC,GAAW,CACb,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,OAAQ,MACR,KAAM,wDACN,QAAU,GAAQ,WAAW,EAAI,QAAQ,KAAM,GAAG,CAAC,CACnD,UAAU,EAAM,CACZ,IAAM,EAAM,OAAO5F,EAAK,MAAM,CAC9B,OAAO,SAAS,EAAI,CAAG,EAAI,eAAe,CAAG,GAAgBA,EAAK,EAEzE,CACK6F,GAAQ,CACV,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,KAAM,oCACN,QAAQ,EAAK,CACT,IAAM7F,EAAO,IAAI,EAAO,WAAW,EAAI,QAAQ,KAAM,GAAG,CAAC,CAAC,CACpD,EAAM,EAAI,QAAQ,IAAI,CAC5B,GAAI,IAAQ,GAAI,CACZ,IAAM,EAAI,EAAI,UAAU,EAAM,EAAE,CAAC,QAAQ,KAAM,GAAG,CAC9C,EAAE,EAAE,OAAS,KAAO,MACpB,EAAK,kBAAoB,EAAE,QAEnC,OAAOA,GAEX,UAAW,GACd,CCzCK,GAAe,GAAU,OAAO,GAAU,UAAY,OAAO,UAAU,EAAM,CACnF,SAAS,GAAW,EAAK,EAAQ,EAAO,CAAE,eAAe,CACrD,IAAM,EAAO,EAAI,GAIjB,IAHI,IAAS,KAAO,IAAS,OACzB,GAAU,GACd,EAAM,EAAI,UAAU,EAAO,CAAC,QAAQ,KAAM,GAAG,CACzC,EAAa,CACb,OAAQ,EAAR,CACI,IAAK,GACD,EAAM,KAAK,IACX,MACJ,IAAK,GACD,EAAM,KAAK,IACX,MACJ,IAAK,IACD,EAAM,KAAK,IACX,MAER,IAAM8F,EAAI,OAAO,EAAI,CACrB,OAAO,IAAS,IAAM,OAAO,GAAG,CAAGA,EAAIA,EAE3C,IAAM,EAAI,SAAS,EAAK,EAAM,CAC9B,OAAO,IAAS,IAAM,GAAK,EAAI,EAEnC,SAAS,GAAa,EAAM,EAAO,EAAQ,CACvC,GAAM,CAAE,SAAU9F,EAClB,GAAI,GAAY,EAAM,CAAE,CACpB,IAAM,EAAM,EAAM,SAAS,EAAM,CACjC,OAAO,EAAQ,EAAI,IAAM,EAAS,EAAI,OAAO,EAAE,CAAG,EAAS,EAE/D,OAAO,GAAgBA,EAAK,CAEhC,IAAM,GAAS,CACX,SAAU,GACV,QAAS,GACT,IAAK,wBACL,OAAQ,MACR,KAAM,mBACN,SAAU,EAAK,EAAU,IAAQ,GAAW,EAAK,EAAG,EAAG,EAAI,CAC3D,UAAW,GAAQ,GAAaA,EAAM,EAAG,MAC5C,CACK+F,GAAS,CACX,SAAU,GACV,QAAS,GACT,IAAK,wBACL,OAAQ,MACR,KAAM,kBACN,SAAU,EAAK,EAAU,IAAQ,GAAW,EAAK,EAAG,EAAG,EAAI,CAC3D,UAAW,GAAQ,GAAa/F,EAAM,EAAG,KAC5C,CACKgG,GAAM,CACR,SAAU,GACV,QAAS,GACT,IAAK,wBACL,KAAM,sBACN,SAAU,EAAK,EAAU,IAAQ,GAAW,EAAK,EAAG,GAAI,EAAI,CAC5D,UAAW,GACd,CACKC,GAAS,CACX,SAAU,GACV,QAAS,GACT,IAAK,wBACL,OAAQ,MACR,KAAM,yBACN,SAAU,EAAK,EAAU,IAAQ,GAAW,EAAK,EAAG,GAAI,EAAI,CAC5D,UAAW,GAAQ,GAAajG,EAAM,GAAI,MAC7C,CChEK,GAAN,MAAM,UAAgB,EAAQ,CAC1B,YAAY,EAAQ,CAChB,MAAM2E,EAAO,CACb,KAAK,IAAM,EAAQ,IAEvB,IAAI,EAAK,CACL,IAAI,EACJ,CASI,CATA,EAAO,EAAI,CACJ,EACF,GACL,OAAO,GAAQ,UACf,QAAS,GACT,UAAW,GACX,EAAI,QAAU,KACP,IAAI,GAAK,EAAI,IAAK,KAAK,CAEvB,IAAI,GAAK,EAAK,KAAK,CACjB,GAAS,KAAK,MAAO,EAAK,IAAI,EAEvC,KAAK,MAAM,KAAK,EAAK,CAM7B,IAAI,EAAK,EAAU,CACf,IAAM,EAAO,GAAS,KAAK,MAAO,EAAI,CACtC,MAAO,CAAC,GAAY,EAAO,EAAK,CAC1B,EAAS,EAAK,IAAI,CACd,EAAK,IAAI,MACT,EAAK,IACT,EAEV,IAAI,EAAK,EAAO,CACZ,GAAI,OAAO,GAAU,UACjB,MAAU,MAAM,iEAAiE,OAAO,IAAQ,CACpG,IAAM,EAAO,GAAS,KAAK,MAAO,EAAI,CAClC,GAAQ,CAAC,EACT,KAAK,MAAM,OAAO,KAAK,MAAM,QAAQ,EAAK,CAAE,EAAE,CAEzC,CAAC,GAAQ,GACd,KAAK,MAAM,KAAK,IAAI,GAAK,EAAI,CAAC,CAGtC,OAAO,EAAG,EAAK,CACX,OAAO,MAAM,OAAO,EAAG,EAAK,IAAI,CAEpC,SAAS,EAAK,EAAW,EAAa,CAClC,GAAI,CAAC,EACD,OAAO,KAAK,UAAU,KAAK,CAC/B,GAAI,KAAK,iBAAiB,GAAK,CAC3B,OAAO,MAAM,SAAS,OAAO,OAAO,EAAE,CAAE,EAAK,CAAE,cAAe,GAAM,CAAC,CAAE,EAAW,EAAY,CAE9F,MAAU,MAAM,sCAAsC,CAE9D,OAAO,KAAK,EAAQ,EAAU,EAAK,CAC/B,GAAM,CAAE,YAAa,EACfb,EAAM,IAAI,KAAKa,EAAO,CAC5B,GAAI,GAAY,OAAO,YAAY,OAAO,EAAS,CAC/C,IAAK,IAAI,KAAS,EACV,OAAO,GAAa,aACpB,EAAQ,EAAS,KAAK,EAAU,EAAO,EAAM,EACjD,EAAI,MAAM,KAAK,GAAW,EAAO,KAAM,EAAI,CAAC,CAEpD,OAAOb,IAGf,GAAQ,IAAM,wBACd,IAAM,GAAM,CACR,WAAY,MACZ,SAAU,GAAS,aAAiB,IACpC,UAAW,GACX,QAAS,GACT,IAAK,wBACL,YAAa,EAAQ,EAAU,IAAQ,GAAQ,KAAKa,EAAQ,EAAU,EAAI,CAC1E,QAAQ,EAAK,EAAS,CAClB,GAAI,GAAMvC,EAAI,CACV,IAAIA,EAAI,iBAAiB,GAAK,CAC1B,OAAO,OAAO,OAAO,IAAI,GAAWA,EAAI,CAExC,EAAQ,sCAAsC,MAGlD,EAAQ,kCAAkC,CAC9C,OAAOA,GAEd,CCvFD,SAAS,GAAiB,EAAK,EAAU,CACrC,IAAM,EAAO,EAAI,GACX,EAAQ,IAAS,KAAO,IAAS,IAAM,EAAI,UAAU,EAAE,CAAG,EAC1D,EAAO,GAAM,EAAW,OAAO,EAAE,CAAG,OAAO,EAAE,CAC7C,EAAM,EACP,QAAQ,KAAM,GAAG,CACjB,MAAM,IAAI,CACV,QAAQ,EAAK,IAAMsC,EAAM,EAAI,GAAG,CAAG,EAAI,EAAE,CAAE,EAAI,EAAE,CAAC,CACvD,OAAQ,IAAS,IAAM,EAAI,GAAG,CAAG,EAAM,EAO3C,SAAS,GAAqB,EAAM,CAChC,GAAI,CAAE,SAAU1E,EACZ,EAAO,GAAM,EACjB,GAAI,OAAO,GAAU,SACjB,EAAM,GAAK,OAAO,EAAE,SACf,MAAM,EAAM,EAAI,CAAC,SAAS,EAAM,CACrC,OAAO,GAAgBA,EAAK,CAChC,IAAI,EAAO,GACP,EAAQ,IACR,EAAO,IACP,GAAS,EAAI,GAAG,EAEpB,IAAM,EAAM,EAAI,GAAG,CACb,EAAQ,CAAC,EAAQ,EAAI,CAY3B,OAXI,EAAQ,GACR,EAAM,QAAQ,EAAE,EAGhB,GAAS,EAAQ,EAAM,IAAM,EAC7B,EAAM,QAAQ,EAAQ,EAAI,CACtB,GAAS,KACT,GAAS,EAAQ,EAAM,IAAM,EAC7B,EAAM,QAAQ,EAAM,GAGpB,EACJ,EACK,IAAI,GAAK,OAAO,EAAE,CAAC,SAAS,EAAG,IAAI,CAAC,CACpC,KAAK,IAAI,CACT,QAAQ,aAAc,GAAG,CAGtC,IAAM,GAAU,CACZ,SAAU,GAAS,OAAO,GAAU,UAAY,OAAO,UAAU,EAAM,CACvE,QAAS,GACT,IAAK,wBACL,OAAQ,OACR,KAAM,uCACN,SAAU,EAAK,EAAU,CAAE,iBAAkB,GAAiB,EAAK,EAAY,CAC/E,UAAW,GACd,CACK,GAAY,CACd,SAAU,GAAS,OAAO,GAAU,SACpC,QAAS,GACT,IAAK,0BACL,OAAQ,OACR,KAAM,gDACN,QAAS,GAAO,GAAiB,EAAK,GAAM,CAC5C,UAAW,GACd,CACK,GAAY,CACd,SAAU,GAAS,aAAiB,KACpC,QAAS,GACT,IAAK,8BAIL,KAAM,OAAO,4JAKH,CACV,QAAQ,EAAK,CACT,IAAM,EAAQ,EAAI,MAAM,GAAU,KAAK,CACvC,GAAI,CAAC,EACD,MAAU,MAAM,uDAAuD,CAC3E,GAAM,EAAG,EAAM,EAAO,EAAK,EAAM,EAAQ,GAAU,EAAM,IAAI,OAAO,CAC9D,EAAW,EAAM,GAAK,QAAQ,EAAM,GAAK,MAAM,OAAO,EAAG,EAAE,CAAC,CAAG,EACjE,EAAO,KAAK,IAAI,EAAM,EAAQ,EAAG,EAAK,GAAQ,EAAG,GAAU,EAAG,GAAU,EAAG,EAAS,CAClF,EAAK,EAAM,GACjB,GAAI,GAAM,IAAO,IAAK,CAClB,IAAI,EAAI,GAAiB,EAAI,GAAM,CAC/B,KAAK,IAAI,EAAE,CAAG,KACd,GAAK,IACT,GAAQ,IAAQ,EAEpB,OAAO,IAAI,KAAK,EAAK,EAEzB,WAAY,CAAE,WAAY,GAAO,aAAa,CAAC,QAAQ,sBAAuB,GAAG,EAAI,GACxF,CCpFK2E,GAAS,CACXvC,GACA,GACA,GACA,GACA,GACA,GACA,GACA2D,GACAC,GACAC,GACAN,GACAC,GACAC,GACA,GACAZ,GACA,GACA,GACA,GACA,GACA,GACA,GACH,CCnBK,GAAU,IAAI,IAAI,CACpB,CAAC,OAAQN,GAAO,CAChB,CAAC,WAAY,CAACvC,GAAK,GAAK,GAAO,CAAC,CAChC,CAAC,OAAQ8D,GAAS,CAClB,CAAC,SAAUC,GAAS,CACpB,CAAC,WAAYA,IAChB,CAAC,CACI,GAAa,CACf,UACA,KAAM,GACN,SACA,YACA,YACA,aACA,OACA,UACA,UACA,WACA,OACA,SACA,KAAM,GACN,QACA,SACA,OACA,OACA,aACH,CACK,GAAgB,CAClB,2BAA4B,GAC5B,0BAA2BlB,GAC3B,yBAA0B,GAC1B,0BAA2B,GAC3B,wBAAyB,GACzB,8BAA+B,GAClC,CACD,SAAS,GAAQ,EAAY,EAAY,EAAa,CAClD,IAAM,EAAa,GAAQ,IAAI,EAAW,CAC1C,GAAI,GAAc,CAAC,EACf,OAAO,GAAe,CAAC,EAAW,SAASA,GAAM,CAC3C,EAAW,OAAOA,GAAM,CACxB,EAAW,OAAO,CAE5B,IAAI,EAAO,EACX,GAAI,CAAC,EACD,GAAI,MAAM,QAAQ,EAAW,CACzB,EAAO,EAAE,KACR,CACD,IAAMQ,EAAO,MAAM,KAAK,GAAQ,MAAM,CAAC,CAClC,OAAO,GAAO,IAAQ,SAAS,CAC/B,IAAI,GAAO,KAAK,UAAU,EAAI,CAAC,CAC/B,KAAK,KAAK,CACf,MAAU,MAAM,mBAAmB,EAAW,gBAAgBA,EAAK,6BAA6B,CAGxG,GAAI,MAAM,QAAQ,EAAW,CACzB,IAAK,IAAM,KAAO,EACd,EAAO,EAAK,OAAO,EAAI,MAEtB,OAAO,GAAe,aAC3B,EAAO,EAAW,EAAK,OAAO,CAAC,EAInC,OAFI,IACA,EAAO,EAAK,OAAOR,GAAM,EACtB,EAAK,QAAQ,EAAM,IAAQ,CAC9B,IAAM,EAAS,OAAO,GAAQ,SAAW,GAAW,GAAO,EAC3D,GAAI,CAAC,EAAQ,CACT,IAAM,EAAU,KAAK,UAAU,EAAI,CAC7BQ,EAAO,OAAO,KAAK,GAAW,CAC/B,IAAI,GAAO,KAAK,UAAU,EAAI,CAAC,CAC/B,KAAK,KAAK,CACf,MAAU,MAAM,sBAAsB,EAAQ,eAAeA,IAAO,CAIxE,OAFKW,EAAK,SAAS,EAAO,EACtB,EAAK,KAAK,EAAO,CACdA,GACR,EAAE,CAAC,CCtFV,IAAM,IAAuB,EAAG,IAAM,EAAE,IAAM,EAAE,IAAM,GAAK,EAAE,IAAM,EAAE,IAAM,EAAI,EACzEC,GAAN,MAAMA,CAAO,CACT,YAAY,CAAE,SAAQ,aAAY,QAAO,mBAAkB,SAAQ,iBAAgB,oBAAoB,CACnG,KAAK,OAAS,MAAM,QAAQ,EAAO,CAC7B,GAAQ,EAAQ,SAAS,CACzB,EACI,GAAQ,KAAM,EAAO,CACrB,KACV,KAAK,KAAQ,OAAO1B,GAAW,UAAYA,GAAW,OACtD,KAAK,UAAY,EAAmB,GAAgB,EAAE,CACtD,KAAK,KAAO,GAAQ,EAAY,KAAK,KAAMM,EAAM,CACjD,KAAK,gBAAkB,GAAoB,KAC3C,OAAO,eAAe,KAAM,GAAK,CAAE,MAAO7C,GAAK,CAAC,CAChD,OAAO,eAAe,KAAMiC,GAAQ,CAAE,MAAO,GAAQ,CAAC,CACtD,OAAO,eAAe,KAAM,GAAK,CAAE,MAAO,GAAK,CAAC,CAEhD,KAAK,eACD,OAAO,GAAmB,WACpB,EACA,IAAmB,GACf,GACA,KAElB,OAAQ,CACJ,IAAM,EAAO,OAAO,OAAOgC,EAAO,UAAW,OAAO,0BAA0B,KAAK,CAAC,CAEpF,MADA,GAAK,KAAO,KAAK,KAAK,OAAO,CACtB,IC5Bf,SAAS,GAAkB,EAAK,EAAS,CACrC,IAAM,EAAQ,EAAE,CACZ,EAAgB,EAAQ,aAAe,GAC3C,GAAI,EAAQ,aAAe,IAAS,EAAI,WAAY,CAChD,IAAM,EAAM,EAAI,WAAW,SAAS,EAAI,CACpC,GACA,EAAM,KAAK,EAAI,CACf,EAAgB,IAEX,EAAI,WAAW,WACpB,EAAgB,IAEpB,GACA,EAAM,KAAK,MAAM,CACrB,IAAM,EAAM,GAAuB,EAAK,EAAQ,CAC1C,CAAE,iBAAkB,EAAI,QAC9B,GAAI,EAAI,cAAe,CACf,EAAM,SAAW,GACjB,EAAM,QAAQ,GAAG,CACrB,IAAM,EAAK,EAAc,EAAI,cAAc,CAC3C,EAAM,QAAQ,GAAc,EAAI,GAAG,CAAC,CAExC,IAAI,EAAY,GACZ,EAAiB,KACrB,GAAI,EAAI,SAAU,CACd,GAAI,EAAO,EAAI,SAAS,CAAE,CAGtB,GAFI,EAAI,SAAS,aAAe,GAC5B,EAAM,KAAK,GAAG,CACd,EAAI,SAAS,cAAe,CAC5B,IAAM,EAAK,EAAc,EAAI,SAAS,cAAc,CACpD,EAAM,KAAK,GAAc,EAAI,GAAG,CAAC,CAGrC,EAAI,iBAAmB,CAAC,CAAC,EAAI,QAC7B,EAAiB,EAAI,SAAS,QAElC,IAAM,EAAc,EAAiB,WAAmB,EAAY,GAChE,EAAOrB,GAAU,EAAI,SAAU,MAAY,EAAiB,KAAO,EAAY,CAC/E,IACA,GAAQ,GAAY,EAAM,GAAI,EAAc,EAAe,CAAC,GAC3D,EAAK,KAAO,KAAO,EAAK,KAAO,MAChC,EAAM,EAAM,OAAS,KAAO,MAG5B,EAAM,EAAM,OAAS,GAAK,OAAO,IAGjC,EAAM,KAAK,EAAK,MAGpB,EAAM,KAAKA,GAAU,EAAI,SAAU,EAAI,CAAC,CAE5C,GAAI,EAAI,YAAY,OAChB,GAAI,EAAI,QAAS,CACb,IAAM,EAAK,EAAc,EAAI,QAAQ,CACjC,EAAG,SAAS;EAAK,EACjB,EAAM,KAAK,MAAM,CACjB,EAAM,KAAK,GAAc,EAAI,GAAG,CAAC,EAGjC,EAAM,KAAK,OAAO,IAAK,MAI3B,EAAM,KAAK,MAAM,KAGpB,CACD,IAAI,EAAK,EAAI,QACT,GAAM,IACN,EAAK,EAAG,QAAQ,OAAQ,GAAG,EAC3B,KACK,CAAC,GAAa,IAAmB,EAAM,EAAM,OAAS,KAAO,IAC9D,EAAM,KAAK,GAAG,CAClB,EAAM,KAAK,GAAc,EAAc,EAAG,CAAE,GAAG,CAAC,EAGxD,OAAO,EAAM,KAAK;EAAK,CAAG;ECrE9B,IAAM,GAAN,MAAM,CAAS,CACX,YAAY,EAAO,EAAU,EAAS,CAElC,KAAK,cAAgB,KAErB,KAAK,QAAU,KAEf,KAAK,OAAS,EAAE,CAEhB,KAAK,SAAW,EAAE,CAClB,OAAO,eAAe,KAAM,GAAW,CAAE,MAAO,GAAK,CAAC,CACtD,IAAI,EAAY,KACZ,OAAO,GAAa,YAAc,MAAM,QAAQ,EAAS,CACzD,EAAY,EAEP,IAAY,QAAa,IAC9B,EAAU,EACV,EAAW,QAEf,IAAM,EAAM,OAAO,OAAO,CACtB,YAAa,GACb,iBAAkB,GAClB,SAAU,OACV,aAAc,GACd,OAAQ,GACR,WAAY,GACZ,WAAY,GACZ,QAAS,MACZ,CAAE,EAAQ,CACX,KAAK,QAAU,EACf,GAAI,CAAE,WAAY,EACd,GAAS,aACT,KAAK,WAAa,EAAQ,YAAY,YAAY,CAC9C,KAAK,WAAW,KAAK,WACrB,EAAU,KAAK,WAAW,KAAK,UAGnC,KAAK,WAAa,IAAI,GAAW,CAAE,UAAS,CAAC,CACjD,KAAK,UAAU,EAAS,EAAQ,CAEhC,KAAK,SACD,IAAU,OAAY,KAAO,KAAK,WAAW,EAAO,EAAW,EAAQ,CAO/E,OAAQ,CACJ,IAAM,EAAO,OAAO,OAAO,EAAS,UAAW,EAC1C,IAAY,CAAE,MAAO,GAAK,CAC9B,CAAC,CAeF,MAdA,GAAK,cAAgB,KAAK,cAC1B,EAAK,QAAU,KAAK,QACpB,EAAK,OAAS,KAAK,OAAO,OAAO,CACjC,EAAK,SAAW,KAAK,SAAS,OAAO,CACrC,EAAK,QAAU,OAAO,OAAO,EAAE,CAAE,KAAK,QAAQ,CAC1C,KAAK,aACL,EAAK,WAAa,KAAK,WAAW,OAAO,EAC7C,EAAK,OAAS,KAAK,OAAO,OAAO,CAEjC,EAAK,SAAW,EAAO,KAAK,SAAS,CAC/B,KAAK,SAAS,MAAM,EAAK,OAAO,CAChC,KAAK,SACP,KAAK,QACL,EAAK,MAAQ,KAAK,MAAM,OAAO,EAC5B,EAGX,IAAI,EAAO,CACH,GAAiB,KAAK,SAAS,EAC/B,KAAK,SAAS,IAAI,EAAM,CAGhC,MAAM,EAAM,EAAO,CACX,GAAiB,KAAK,SAAS,EAC/B,KAAK,SAAS,MAAMjG,EAAM,EAAM,CAWxC,YAAY,EAAM,EAAM,CACpB,GAAI,CAACiB,EAAK,OAAQ,CACd,IAAM,EAAO,GAAY,KAAK,CAC9B,EAAK,OAED,CAAC,GAAQ,EAAK,IAAI,EAAK,CAAG,GAAc,GAAQ,IAAK,EAAK,CAAG,EAErE,OAAO,IAAI,GAAMA,EAAK,OAAO,CAEjC,WAAW,EAAO,EAAU,EAAS,CACjC,IAAI,EACJ,GAAI,OAAO,GAAa,WACpB,EAAQ,EAAS,KAAK,CAAE,GAAI,EAAO,CAAE,GAAI,EAAM,CAC/C,EAAY,UAEP,MAAM,QAAQ,EAAS,CAAE,CAE9B,IAAM,EAAQ,EAAS,OADL,GAAM,OAAO,GAAM,UAAY,aAAa,QAAU,aAAa,OAC9C,CAAC,IAAI,OAAO,CAC/C,EAAM,OAAS,IACf,EAAW,EAAS,OAAO,EAAM,EACrC,EAAY,OAEP,IAAY,QAAa,IAC9B,EAAU,EACV,EAAW,QAEf,GAAM,CAAE,wBAAuB,eAAc,OAAM,gBAAe,WAAU,OAAQ,GAAW,EAAE,CAC3F,CAAE,WAAU,aAAY,iBAAkB,GAAkB,KAElE,GAAgB,IAAI,CACd,EAAM,CACR,sBAAuB,GAAyB,GAChD,cAAe,GAAiB,GAChC,WACA,WACA,SAAU,EACV,OAAQ,KAAK,OACb,gBACH,CACKA,EAAO,GAAW,EAAO,EAAK,EAAI,CAIxC,OAHIkC,GAAQ,EAAalC,EAAK,GAC1B,EAAK,KAAO,IAChB,GAAY,CACLA,EAMX,WAAW,EAAK,EAAO,EAAU,EAAE,CAAE,CACjC,IAAM,EAAI,KAAK,WAAW,EAAK,KAAM,EAAQ,CACvC,EAAI,KAAK,WAAW,EAAO,KAAM,EAAQ,CAC/C,OAAO,IAAI,GAAK,EAAG,EAAE,CAMzB,OAAO,EAAK,CACR,OAAO,GAAiB,KAAK,SAAS,CAAG,KAAK,SAAS,OAAO,EAAI,CAAG,GAMzE,SAAS,EAAM,CAQX,OAPI,GAAYjB,EAAK,CACb,KAAK,UAAY,KACV,IAEX,KAAK,SAAW,KACT,IAEJ,GAAiB,KAAK,SAAS,CAChC,KAAK,SAAS,SAASA,EAAK,CAC5B,GAOV,IAAI,EAAK,EAAY,CACjB,OAAO,EAAa,KAAK,SAAS,CAC5B,KAAK,SAAS,IAAI,EAAK,EAAW,CAClC,OAOV,MAAM,EAAM,EAAY,CAKpB,OAJI,GAAYA,EAAK,CACV,CAAC,GAAc,EAAS,KAAK,SAAS,CACvC,KAAK,SAAS,MACd,KAAK,SACR,EAAa,KAAK,SAAS,CAC5B,KAAK,SAAS,MAAMA,EAAM,EAAW,CACrC,OAKV,IAAI,EAAK,CACL,OAAO,EAAa,KAAK,SAAS,CAAG,KAAK,SAAS,IAAI,EAAI,CAAG,GAKlE,MAAM,EAAM,CAGR,OAFI,GAAYA,EAAK,CACV,KAAK,WAAa,OACtB,EAAa,KAAK,SAAS,CAAG,KAAK,SAAS,MAAMA,EAAK,CAAG,GAMrE,IAAI,EAAK,EAAO,CACR,KAAK,UAAY,KAEjB,KAAK,SAAW,GAAmB,KAAK,OAAQ,CAAC,EAAI,CAAE,EAAM,CAExD,GAAiB,KAAK,SAAS,EACpC,KAAK,SAAS,IAAI,EAAK,EAAM,CAOrC,MAAM,EAAM,EAAO,CACX,GAAYA,EAAK,CAEjB,KAAK,SAAW,EAEX,KAAK,UAAY,KAEtB,KAAK,SAAW,GAAmB,KAAK,OAAQ,MAAM,KAAKA,EAAK,CAAE,EAAM,CAEnE,GAAiB,KAAK,SAAS,EACpC,KAAK,SAAS,MAAMA,EAAM,EAAM,CAUxC,UAAU,EAAS,EAAU,EAAE,CAAE,CACzB,OAAO,GAAY,WACnB,EAAU,OAAO,EAAQ,EAC7B,IAAI,EACJ,OAAQ,EAAR,CACI,IAAK,MACG,KAAK,WACL,KAAK,WAAW,KAAK,QAAU,MAE/B,KAAK,WAAa,IAAI,GAAW,CAAE,QAAS,MAAO,CAAC,CACxD,EAAM,CAAE,iBAAkB,GAAO,OAAQ,WAAY,CACrD,MACJ,IAAK,MACL,IAAK,OACG,KAAK,WACL,KAAK,WAAW,KAAK,QAAU,EAE/B,KAAK,WAAa,IAAI,GAAW,CAAE,UAAS,CAAC,CACjD,EAAM,CAAE,iBAAkB,GAAM,OAAQ,OAAQ,CAChD,MACJ,KAAK,KACG,KAAK,YACL,OAAO,KAAK,WAChB,EAAM,KACN,MACJ,QAAS,CACL,IAAM,EAAK,KAAK,UAAU,EAAQ,CAClC,MAAU,MAAM,+DAA+D,IAAK,EAI5F,GAAI,EAAQ,kBAAkB,OAC1B,KAAK,OAAS,EAAQ,eACjB,EACL,KAAK,OAAS,IAAIsH,GAAO,OAAO,OAAO,EAAK,EAAQ,CAAC,MAErD,MAAU,MAAM,sEAAsE,CAG9F,KAAK,CAAE,OAAM,UAAS,WAAU,gBAAe,WAAU,WAAY,EAAE,CAAE,CACrE,IAAM,EAAM,CACR,QAAS,IAAI,IACb,IAAK,KACL,KAAM,CAAC,EACP,SAAU,IAAa,GACvB,aAAc,GACd,cAAe,OAAO,GAAkB,SAAW,EAAgB,IACtE,CACK,EAAM,GAAK,KAAK,SAAU,GAAW,GAAI,EAAI,CACnD,GAAI,OAAO,GAAa,WACpB,IAAK,GAAM,CAAE,QAAO,SAAS,EAAI,QAAQ,QAAQ,CAC7C,EAAS3B,EAAK,EAAM,CAC5B,OAAO,OAAO,GAAY,WACpB,GAAa,EAAS,CAAE,GAAI,EAAK,CAAE,GAAI,EAAI,CAC3C,EAQV,OAAO,EAAS,EAAU,CACtB,OAAO,KAAK,KAAK,CAAE,KAAM,GAAM,UAAS,SAAU,GAAO,WAAU,CAAC,CAGxE,SAAS,EAAU,EAAE,CAAE,CACnB,GAAI,KAAK,OAAO,OAAS,EACrB,MAAU,MAAM,6CAA6C,CACjE,GAAI,WAAY,IACX,CAAC,OAAO,UAAU,EAAQ,OAAO,EAAI,OAAO,EAAQ,OAAO,EAAI,GAAI,CACpE,IAAMa,EAAI,KAAK,UAAU,EAAQ,OAAO,CACxC,MAAU,MAAM,mDAAmDA,IAAI,CAE3E,OAAO,GAAkB,KAAM,EAAQ,GAG/C,SAAS,GAAiB,EAAU,CAChC,GAAI,EAAa,EAAS,CACtB,MAAO,GACX,MAAU,MAAM,kDAAkD,CC3UtE,IAAM,GAAN,cAAwB,KAAM,CAC1B,YAAY,EAAM,EAAK,EAAM,EAAS,CAClC,OAAO,CACP,KAAK,KAAO,EACZ,KAAK,KAAOvG,EACZ,KAAK,QAAU,EACf,KAAK,IAAM,IAGb,GAAN,cAA6B,EAAU,CACnC,YAAY,EAAK,EAAM,EAAS,CAC5B,MAAM,iBAAkB,EAAKA,EAAM,EAAQ,GAG7C,GAAN,cAA0B,EAAU,CAChC,YAAY,EAAK,EAAM,EAAS,CAC5B,MAAM,cAAe,EAAKA,EAAM,EAAQ,GAG1C,IAAiB,EAAK,IAAQ,GAAU,CAC1C,GAAI,EAAM,IAAI,KAAO,GACjB,OACJ,EAAM,QAAU,EAAM,IAAI,IAAI,GAAO,EAAG,QAAQ,EAAI,CAAC,CACrD,GAAM,CAAE,OAAM,OAAQ,EAAM,QAAQ,GACpC,EAAM,SAAW,YAAY,EAAK,WAAW,IAC7C,IAAI,EAAK,EAAM,EACX,EAAU,EACT,UAAU,EAAG,WAAW,EAAO,GAAI,EAAG,WAAW,GAAM,CACvD,QAAQ,WAAY,GAAG,CAE5B,GAAI,GAAM,IAAM,EAAQ,OAAS,GAAI,CACjC,IAAM,EAAY,KAAK,IAAI,EAAK,GAAI,EAAQ,OAAS,GAAG,CACxD,EAAU,IAAM,EAAQ,UAAU,EAAU,CAC5C,GAAM,EAAY,EAKtB,GAHI,EAAQ,OAAS,KACjB,EAAU,EAAQ,UAAU,EAAG,GAAG,CAAG,KAErC,EAAO,GAAK,OAAO,KAAK,EAAQ,UAAU,EAAG,EAAG,CAAC,CAAE,CAEnD,IAAI,EAAO,EAAI,UAAU,EAAG,WAAW,EAAO,GAAI,EAAG,WAAW,EAAO,GAAG,CACtE,EAAK,OAAS,KACd,EAAO,EAAK,UAAU,EAAG,GAAG,CAAG;GACnC,EAAU,EAAO,EAErB,GAAI,OAAO,KAAK,EAAQ,CAAE,CACtB,IAAI,EAAQ,EACN,EAAM,EAAM,QAAQ,GACtB,GAAO,EAAI,OAAS,GAAQ,EAAI,IAAM,IACtC,EAAQ,KAAK,IAAI,EAAG,KAAK,IAAI,EAAI,IAAM,EAAK,GAAK,EAAG,CAAC,EAEzD,IAAM,EAAU,IAAI,OAAO,EAAG,CAAG,IAAI,OAAO,EAAM,CAClD,EAAM,SAAW,QAAQ,EAAQ,IAAI,EAAQ,MCpDrD,SAAS,GAAa,EAAQ,CAAE,OAAM,YAAW,OAAM,SAAQ,UAAS,eAAc,kBAAkB,CACpG,IAAI,EAAc,GACd,EAAY,EACZ,EAAW,EACX2C,EAAU,GACV,EAAa,GACb,EAAa,GACb,EAAW,GACX2E,EAAM,KACN,EAAS,KACT,EAAM,KACN,EAAmB,KACnB,EAAQ,KACR,EAAQ,KACR,EAAQ,KACZ,IAAK,IAAM,KAAS,EAchB,OAbA,CAKI,IAJI,EAAM,OAAS,SACf,EAAM,OAAS,WACf,EAAM,OAAS,SACf,EAAQ,EAAM,OAAQ,eAAgB,wEAAwE,CACvG,IAEf,CAII,IAHI,GAAa,EAAM,OAAS,WAAa,EAAM,OAAS,WACxD,EAAQA,EAAK,gBAAiB,sCAAsC,CAElE,MAEF,EAAM,KAAd,CACI,IAAK,QAIG,CAACpE,IACA,IAAc,aAAezD,GAAM,OAAS,oBAC7C,EAAM,OAAO,SAAS,IAAK,GAC3B,EAAM,GAEV,EAAW,GACX,MACJ,IAAK,UAAW,CACP,GACD,EAAQ,EAAO,eAAgB,yEAAyE,CAC5G,IAAM,EAAK,EAAM,OAAO,UAAU,EAAE,EAAI,IACnCkD,EAGD,GAAW,EAAa,EAFxB,EAAU,EAGd,EAAa,GACb,EAAY,GACZ,MAEJ,IAAK,UACG,EACIA,EACA,GAAW,EAAM,QACZ,CAAC,GAAS,IAAc,kBAC7B,EAAc,IAGlB,GAAc,EAAM,OACxB,EAAY,GACZ,EAAa,IACT,GAAU,KACV,EAAmB,GACvB,EAAW,GACX,MACJ,IAAK,SACG,GACA,EAAQ,EAAO,mBAAoB,qCAAqC,CACxE,EAAM,OAAO,SAAS,IAAI,EAC1B,EAAQ,EAAM,OAAS,EAAM,OAAO,OAAS,EAAG,YAAa,kCAAmC,GAAK,CACzG,EAAS,EACT,CAAU,GAAQ,EAAM,OACxB,EAAY,GACZ,EAAW,GACX,EAAW,GACX,MACJ,IAAK,MACG,GACA,EAAQ,EAAO,gBAAiB,kCAAkC,CACtE,EAAM,EACN,CAAU,GAAQ,EAAM,OACxB,EAAY,GACZ,EAAW,GACX,EAAW,GACX,MAEJ,KAAK,GAEG,GAAU,IACV,EAAQ,EAAO,iBAAkB,sCAAsC,EAAM,OAAO,YAAY,CAChG,GACA,EAAQ,EAAO,mBAAoB,cAAc,EAAM,OAAO,MAAMO,GAAQ,eAAe,CAC/F,EAAQ,EACR,EACI,IAAc,gBAAkB,IAAc,mBAClD,EAAW,GACX,MACJ,IAAK,QACD,GAAIA,EAAM,CACF,GACA,EAAQ,EAAO,mBAAoB,mBAAmBA,IAAO,CACjE,EAAQ,EACR,EAAY,GACZ,EAAW,GACX,MAGR,QACI,EAAQ,EAAO,mBAAoB,cAAc,EAAM,KAAK,QAAQ,CACpE,EAAY,GACZ,EAAW,GAGvB,IAAM,EAAO,EAAO,EAAO,OAAS,GAC9B,EAAM,EAAO,EAAK,OAAS,EAAK,OAAO,OAAS,EActD,OAbI,GACAzD,GACAA,EAAK,OAAS,SACdA,EAAK,OAAS,WACdA,EAAK,OAAS,UACbA,EAAK,OAAS,UAAYA,EAAK,SAAW,KAC3C,EAAQA,EAAK,OAAQ,eAAgB,wEAAwE,CAE7G6H,IACE,GAAaA,EAAI,QAAU,GACzB7H,GAAM,OAAS,aACfA,GAAM,OAAS,cACnB,EAAQ6H,EAAK,gBAAiB,sCAAsC,CACjE,CACH,QACA,QACA,cACA,UACA,aACA,SACA,MACA,mBACA,MACA,MAAO,GAAS,EACnB,CC9IL,SAAS,GAAgB,EAAK,CAC1B,GAAI,CAAC,EACD,OAAO,KACX,OAAQ,EAAI,KAAZ,CACI,IAAK,QACL,IAAK,SACL,IAAK,uBACL,IAAK,uBACD,GAAI,EAAI,OAAO,SAAS;EAAK,CACzB,MAAO,GACX,GAAI,EAAI,SACC,IAAM,KAAM,EAAI,IACjB,GAAI,EAAG,OAAS,UACZ,MAAO,GACnB,MAAO,GACX,IAAK,kBACD,IAAK,IAAM,KAAM,EAAI,MAAO,CACxB,IAAK,IAAM,KAAM,EAAG,MAChB,GAAI,EAAG,OAAS,UACZ,MAAO,GACf,GAAI,EAAG,SACE,IAAM,KAAM,EAAG,IAChB,GAAI,EAAG,OAAS,UACZ,MAAO,GACnB,GAAI,GAAgB,EAAG,IAAI,EAAI,GAAgB,EAAG,MAAM,CACpD,MAAO,GAEf,MAAO,GACX,QACI,MAAO,IC3BnB,SAAS,GAAgB,EAAQ,EAAI,EAAS,CAC1C,GAAI,GAAI,OAAS,kBAAmB,CAChC,IAAM,EAAM,EAAG,IAAI,GACf,EAAI,SAAW1B,IACd,EAAI,SAAW,KAAO,EAAI,SAAW,MACtC,GAAgB,EAAG,EAEnB,EAAQ,EAAK,aADD,yDACoB,GAAK,ECPjD,SAAS,GAAY,EAAK,EAAO,EAAQ,CACrC,GAAM,CAAE,cAAe,EAAI,QAC3B,GAAI,IAAe,GACf,MAAO,GACX,IAAM,EAAU,OAAO,GAAe,WAChC,GACC,EAAG,IAAM,IAAM,GAAM,EAAS,EAAE,EAAI,EAAS,EAAE,EAAI,EAAE,QAAU,EAAE,MACxE,OAAO,EAAM,KAAK,GAAQ,EAAQ,EAAK,IAAKnC,EAAO,CAAC,CCFxD,IAAM,GAAc,kDACpB,SAAS,GAAgB,CAAE,cAAa,oBAAoB,EAAK,EAAI,EAAS,EAAK,CAE/E,IAAML,EAAM,IADM,GAAK,WAAa,IACV,EAAI,OAAO,CACrC,CACI,CAAI,SAAS,GACjB,IAAI,EAAS,EAAG,OACZ,EAAa,KACjB,IAAK,IAAM,KAAY,EAAG,MAAO,CAC7B,GAAM,CAAE,QAAO,MAAK,MAAK,SAAU,EAE7B,EAAW,GAAa,EAAO,CACjC,UAAW,mBACX,KAAM,GAAO,IAAM,GACnB,SACA,UACA,aAAc,EAAG,OACjB,eAAgB,GACnB,CAAC,CACI,EAAc,CAAC,EAAS,MAC9B,GAAI,EAAa,CAOb,GANI,IACI,EAAI,OAAS,YACb,EAAQ,EAAQ,wBAAyB,0DAA0D,CAC9F,WAAY,GAAO,EAAI,SAAW,EAAG,QAC1C,EAAQ,EAAQ,aAAc,GAAY,EAE9C,CAAC,EAAS,QAAU,CAAC,EAAS,KAAO,CAAC,EAAK,CAC3C,EAAa,EAAS,IAClB,EAAS,UACLA,EAAI,QACJ,EAAI,SAAW;EAAO,EAAS,QAE/B,EAAI,QAAU,EAAS,SAE/B,UAEA,EAAS,kBAAoB,GAAgB,EAAI,GACjD,EAAQ,GAAO,EAAM,EAAM,OAAS,GAAI,yBAA0B,4CAA4C,MAG7G,EAAS,OAAO,SAAW,EAAG,QACnC,EAAQ,EAAQ,aAAc,GAAY,CAG9C,EAAI,MAAQ,GACZ,IAAM,EAAW,EAAS,IACpB,EAAU,EACVmE,EAAY,EAAK,EAAK,EAAU,EAAQ,CACxCC,EAAiB,EAAK,EAAU,EAAO,KAAM,EAAU,EAAQ,CACjE,EAAI,OAAO,QACX,GAAgB,EAAG,OAAQ,EAAK,EAAQ,CAC5C,EAAI,MAAQ,GACR,GAAY,EAAKpE,EAAI,MAAO,EAAQ,EACpC,EAAQ,EAAU,gBAAiB,0BAA0B,CAEjE,IAAM,EAAa,GAAa,GAAO,EAAE,CAAE,CACvC,UAAW,gBACX,KAAM,EACN,OAAQ,EAAQ,MAAM,GACtB,UACA,aAAc,EAAG,OACjB,eAAgB,CAAC,GAAO,EAAI,OAAS,eACxC,CAAC,CAEF,GADA,EAAS,EAAW,IAChB,EAAW,MAAO,CACd,IACI,GAAO,OAAS,aAAe,CAAC,EAAW,YAC3C,EAAQ,EAAQ,wBAAyB,sDAAsD,CAC/F,EAAI,QAAQ,QACZ,EAAS,MAAQ,EAAW,MAAM,OAAS,MAC3C,EAAQ,EAAQ,MAAO,sBAAuB,8FAA8F,EAGpJ,IAAM,EAAY,EACZmE,EAAY,EAAK,EAAO,EAAY,EAAQ,CAC5CC,EAAiB,EAAK,EAAQ,EAAK,KAAM,EAAY,EAAQ,CAC/D,EAAI,OAAO,QACX,GAAgB,EAAG,OAAQ,EAAO,EAAQ,CAC9C,EAAS,EAAU,MAAM,GACzB,IAAM,EAAO,IAAI,GAAK,EAAS,EAAU,CACrC,EAAI,QAAQ,mBACZ,EAAK,SAAW,GACpB,EAAI,MAAM,KAAK,EAAK,KAEnB,CAEG,GACA,EAAQ,EAAQ,MAAO,eAAgB,sDAAsD,CAC7F,EAAW,UACP,EAAQ,QACR,EAAQ,SAAW;EAAO,EAAW,QAErC,EAAQ,QAAU,EAAW,SAErC,IAAM,EAAO,IAAI,GAAK,EAAQ,CAC1B,EAAI,QAAQ,mBACZ,EAAK,SAAW,GACpB,EAAI,MAAM,KAAK,EAAK,EAM5B,OAHI,GAAc,EAAa,GAC3B,EAAQ,EAAY,aAAc,oCAAoC,CAC1E,EAAI,MAAQ,CAAC,EAAG,OAAQ,EAAQ,GAAc,EAAO,CAC9CpE,EC3GX,SAAS,GAAgB,CAAE,cAAa,oBAAoB,EAAK,EAAI,EAAS,EAAK,CAE/E,IAAM+C,EAAM,IADM,GAAK,WAAa,IACV,EAAI,OAAO,CACrC,CACI,CAAI,SAAS,GACjB,CACI,CAAI,QAAQ,GAChB,IAAI,EAAS,EAAG,OACZ,EAAa,KACjB,IAAK,GAAM,CAAE,QAAO,WAAW,EAAG,MAAO,CACrC,IAAM,EAAQ,GAAa,EAAO,CAC9B,UAAW,eACX,KAAM,EACN,SACA,UACA,aAAc,EAAG,OACjB,eAAgB,GACnB,CAAC,CACF,GAAI,CAAC,EAAM,MACP,GAAI,EAAM,QAAU,EAAM,KAAO,EACzB,GAAS,EAAM,OAAS,YACxB,EAAQ,EAAM,IAAK,aAAc,mDAAmD,CAEpF,EAAQ,EAAQ,eAAgB,oCAAoC,KAEvE,CACD,EAAa,EAAM,IACf,EAAM,UACN,EAAI,QAAU,EAAM,SACxB,SAGR,IAAMnF,EAAO,EACPuG,EAAY,EAAK,EAAO,EAAO,EAAQ,CACvCC,EAAiB,EAAK,EAAM,IAAK,EAAO,KAAM,EAAO,EAAQ,CAC/D,EAAI,OAAO,QACX,GAAgB,EAAG,OAAQ,EAAO,EAAQ,CAC9C,EAASxG,EAAK,MAAM,GACpB,EAAI,MAAM,KAAKA,EAAK,CAGxB,MADA,GAAI,MAAQ,CAAC,EAAG,OAAQ,EAAQ,GAAc,EAAO,CAC9CmF,EC7CX,SAAS,GAAW,EAAK,EAAQ,EAAU,EAAS,CAChD,IAAIxD,EAAU,GACd,GAAI,EAAK,CACL,IAAI,EAAW,GACX,EAAM,GACV,IAAK,IAAM,KAAS,EAAK,CACrB,GAAM,CAAE,SAAQ,QAAS,EACzB,OAAQ,EAAR,CACI,IAAK,QACD,EAAW,GACX,MACJ,IAAK,UAAW,CACR,GAAY,CAAC,GACb,EAAQ,EAAO,eAAgB,yEAAyE,CAC5G,IAAM,EAAK,EAAO,UAAU,EAAE,EAAI,IAC7BA,EAGD,GAAW,EAAM,EAFjB,EAAU,EAGd,EAAM,GACN,MAEJ,IAAK,UACGA,IACA,GAAO,GACX,EAAW,GACX,MACJ,QACI,EAAQ,EAAO,mBAAoB,cAAc,EAAK,cAAc,CAE5E,GAAU,EAAO,QAGzB,MAAO,CAAE,UAAS,SAAQ,CCxB9B,IAAM,GAAW,4DACX,GAAW,GAAU,IAAU,EAAM,OAAS,aAAe,EAAM,OAAS,aAClF,SAAS,GAAsB,CAAE,cAAa,oBAAoB,EAAK,EAAI,EAAS,EAAK,CACrF,IAAM8E,EAAQ,EAAG,MAAM,SAAW,IAC5B,EAASA,EAAQ,WAAa,gBAE9B,EAAO,IADM,GAAK,YAAcA,EAAQ,GAAU,KAC7B,EAAI,OAAO,CACtC,EAAK,KAAO,GACZ,IAAM,EAAS,EAAI,OACf,IACA,EAAI,OAAS,IACjB,CACI,CAAI,QAAQ,GAChB,IAAI,EAAS,EAAG,OAAS,EAAG,MAAM,OAAO,OACzC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,MAAM,OAAQ,EAAE,EAAG,CACtC,IAAM,EAAW,EAAG,MAAM,GACpB,CAAE,QAAO,MAAK,MAAK,SAAU,EAC7B,EAAQ,GAAa,EAAO,CAC9B,KAAM,EACN,UAAW,mBACX,KAAM,GAAO,IAAM,GACnB,SACA,UACA,aAAc,EAAG,OACjB,eAAgB,GACnB,CAAC,CACF,GAAI,CAAC,EAAM,MAAO,CACd,GAAI,CAAC,EAAM,QAAU,CAAC,EAAM,KAAO,CAAC,GAAO,CAAC,EAAO,CAC3C,IAAM,GAAK,EAAM,MACjB,EAAQ,EAAM,MAAO,mBAAoB,mBAAmB,IAAS,CAChE,EAAI,EAAG,MAAM,OAAS,GAC3B,EAAQ,EAAM,MAAO,mBAAoB,4BAA4B,IAAS,CAC9E,EAAM,UACF,EAAK,QACL,EAAK,SAAW;EAAO,EAAM,QAE7B,EAAK,QAAU,EAAM,SAE7B,EAAS,EAAM,IACf,SAEA,CAACA,GAAS,EAAI,QAAQ,QAAU,GAAgB,EAAI,EACpD,EAAQ,EACR,yBAA0B,mEAAmE,CAErG,GAAI,IAAM,EACF,EAAM,OACN,EAAQ,EAAM,MAAO,mBAAoB,mBAAmB,IAAS,SAGpE,EAAM,OACP,EAAQ,EAAM,MAAO,eAAgB,qBAAqB,EAAO,QAAQ,CACzE,EAAM,QAAS,CACf,IAAI,EAAkB,GACtB,KAAM,IAAK,IAAM,KAAM,EACnB,OAAQ,EAAG,KAAX,CACI,IAAK,QACL,IAAK,QACD,MACJ,IAAK,UACD,EAAkB,EAAG,OAAO,UAAU,EAAE,CACxC,MAAM,KACV,QACI,MAAM,KAGlB,GAAI,EAAiB,CACjB,IAAI,EAAO,EAAK,MAAM,EAAK,MAAM,OAAS,GACtC,EAAO,EAAK,GACZ,EAAO,EAAK,OAAS,EAAK,KAC1B,EAAK,QACL,EAAK,SAAW;EAAO,EAEvB,EAAK,QAAU,EACnB,EAAM,QAAU,EAAM,QAAQ,UAAU,EAAgB,OAAS,EAAE,EAI/E,GAAI,CAACA,GAAS,CAAC,GAAO,CAAC,EAAM,MAAO,CAGhC,IAAM,EAAY,EACZF,EAAY,EAAK,EAAO,EAAO,EAAQ,CACvCC,EAAiB,EAAK,EAAM,IAAK,EAAK,KAAM,EAAO,EAAQ,CACjE,EAAK,MAAM,KAAK,EAAU,CAC1B,EAAS,EAAU,MAAM,GACrB,GAAQ,EAAM,EACd,EAAQ,EAAU,MAAO,gBAAiB,GAAS,KAEtD,CAGD,EAAI,MAAQ,GACZ,IAAM,EAAW,EAAM,IACjB,EAAU,EACVD,EAAY,EAAK,EAAK,EAAO,EAAQ,CACrCC,EAAiB,EAAK,EAAU,EAAO,KAAM,EAAO,EAAQ,CAC9D,GAAQ,EAAI,EACZ,EAAQ,EAAQ,MAAO,gBAAiB,GAAS,CACrD,EAAI,MAAQ,GAEZ,IAAM,EAAa,GAAa,GAAO,EAAE,CAAE,CACvC,KAAM,EACN,UAAW,gBACX,KAAM,EACN,OAAQ,EAAQ,MAAM,GACtB,UACA,aAAc,EAAG,OACjB,eAAgB,GACnB,CAAC,CACF,GAAI,EAAW,UACP,CAACC,GAAS,CAAC,EAAM,OAAS,EAAI,QAAQ,OAAQ,CAC9C,GAAI,EACA,IAAK,IAAM,KAAM,EAAK,CAClB,GAAI,IAAO,EAAW,MAClB,MACJ,GAAI,EAAG,OAAS,UAAW,CACvB,EAAQ,EAAI,yBAA0B,mEAAmE,CACzG,OAGR,EAAM,MAAQ,EAAW,MAAM,OAAS,MACxC,EAAQ,EAAW,MAAO,sBAAuB,8FAA8F,OAGlJ,IACD,WAAY,GAAS,EAAM,QAAU,EAAM,OAAO,KAAO,IACzD,EAAQ,EAAO,eAAgB,4BAA4B,IAAS,CAEpE,EAAQ,EAAW,MAAO,eAAgB,0BAA0B,EAAO,QAAQ,EAG3F,IAAM,EAAY,EACZF,EAAY,EAAK,EAAO,EAAY,EAAQ,CAC5C,EAAW,MACPC,EAAiB,EAAK,EAAW,IAAK,EAAK,KAAM,EAAY,EAAQ,CACrE,KACN,EACI,GAAQ,EAAM,EACd,EAAQ,EAAU,MAAO,gBAAiB,GAAS,CAElD,EAAW,UACZ,EAAQ,QACR,EAAQ,SAAW;EAAO,EAAW,QAErC,EAAQ,QAAU,EAAW,SAErC,IAAM,EAAO,IAAI,GAAK,EAAS,EAAU,CAGzC,GAFI,EAAI,QAAQ,mBACZ,EAAK,SAAW,GAChBC,EAAO,CACP,IAAMrE,EAAM,EACR,GAAY,EAAKA,EAAI,MAAO,EAAQ,EACpC,EAAQ,EAAU,gBAAiB,0BAA0B,CACjE,EAAI,MAAM,KAAK,EAAK,KAEnB,CACD,IAAMA,EAAM,IAAI,GAAQ,EAAI,OAAO,CACnC,EAAI,KAAO,GACX,EAAI,MAAM,KAAK,EAAK,CACpB,IAAM,GAAY,GAAa,GAAS,MACxC,EAAI,MAAQ,CAAC,EAAQ,MAAM,GAAI,EAAS,GAAI,EAAS,GAAG,CACxD,EAAK,MAAM,KAAKA,EAAI,CAExB,EAAS,EAAY,EAAU,MAAM,GAAK,EAAW,KAG7D,IAAM,EAAcqE,EAAQ,IAAM,IAC5B,CAAC,EAAI,GAAG,GAAM,EAAG,IACnB,EAAQ,EACZ,GAAI,GAAM,EAAG,SAAW,EACpB,EAAQ,EAAG,OAAS,EAAG,OAAO,WAC7B,CACD,IAAM,EAAO,EAAO,GAAG,aAAa,CAAG,EAAO,UAAU,EAAE,CACpD,EAAM,EACN,GAAG,EAAK,mBAAmB,IAC3B,GAAG,EAAK,oEAAoE,IAClF,EAAQ,EAAQ,EAAS,eAAiB,aAAc,EAAI,CACxD,GAAM,EAAG,OAAO,SAAW,GAC3B,EAAG,QAAQ,EAAG,CAEtB,GAAI,EAAG,OAAS,EAAG,CACf,IAAM,EAAM,GAAW,EAAI,EAAO,EAAI,QAAQ,OAAQ,EAAQ,CAC1D,EAAI,UACA,EAAK,QACL,EAAK,SAAW;EAAO,EAAI,QAE3B,EAAK,QAAU,EAAI,SAE3B,EAAK,MAAQ,CAAC,EAAG,OAAQ,EAAO,EAAI,OAAO,MAG3C,EAAK,MAAQ,CAAC,EAAG,OAAQ,EAAO,EAAM,CAE1C,OAAO,ECnMX,SAAS,GAAkB,EAAI,EAAK,EAAO,EAAS,EAAS,EAAK,CAC9D,IAAM,EAAO,EAAM,OAAS,YACtB,GAAgBC,EAAI,EAAK,EAAO,EAAS,EAAI,CAC7C,EAAM,OAAS,YACX,GAAgBA,EAAI,EAAK,EAAO,EAAS,EAAI,CAC7C,GAAsBA,EAAI,EAAK,EAAO,EAAS,EAAI,CACvD,EAAO,EAAK,YASlB,OANI,IAAY,KAAO,IAAY,EAAK,SACpC,EAAK,IAAM,EAAK,QACT,IAEP,IACA,EAAK,IAAM,GACR,GAEX,SAAS,GAAkB,EAAI,EAAK,EAAO,EAAO,EAAS,CACvD,IAAM,EAAW,EAAM,IACjB,EAAW,EAEX,EAAI,WAAW,QAAQ,EAAS,OAAQ,GAAO,EAAQ,EAAU,qBAAsB,EAAI,CAAC,CAD5F,KAEN,GAAI,EAAM,OAAS,YAAa,CAC5B,GAAM,CAAE,SAAQ,iBAAkB,GAAO,EACnC,EAAW,GAAU,EACrB,EAAO,OAAS,EAAS,OACrB,EACA,EACH,GAAU,EACb,IAAa,CAAC,GAAM,EAAG,OAAS,EAAS,SAEzC,EAAQ,EAAU,eADF,6CAC0B,CAGlD,IAAM,EAAU,EAAM,OAAS,YACzB,MACA,EAAM,OAAS,YACX,MACA,EAAM,MAAM,SAAW,IACnB,MACA,MAGd,GAAI,CAAC,GACD,CAAC,GACD,IAAY,KACX,IAAY,GAAQ,SAAW,IAAY,OAC3C,IAAY,GAAQ,SAAW,IAAY,MAC5C,OAAO,GAAkBA,EAAI,EAAK,EAAO,EAAS,EAAQ,CAE9D,IAAI,EAAM,EAAI,OAAO,KAAK,KAAK,GAAK,EAAE,MAAQ,GAAW,EAAE,aAAe,EAAQ,CAClF,GAAI,CAAC,EAAK,CACN,IAAM,EAAK,EAAI,OAAO,UAAU,GAChC,GAAI,GAAM,EAAG,aAAe,EACxB,EAAI,OAAO,KAAK,KAAK,OAAO,OAAO,EAAE,CAAE,EAAI,CAAE,QAAS,GAAO,CAAC,CAAC,CAC/D,EAAM,OASN,OANI,EACA,EAAQ,EAAU,sBAAuB,GAAG,EAAG,IAAI,YAAY,EAAQ,2BAA2B,EAAG,YAAc,WAAY,GAAK,CAGpI,EAAQ,EAAU,qBAAsB,mBAAmB,IAAW,GAAK,CAExE,GAAkBA,EAAI,EAAK,EAAO,EAAS,EAAQ,CAGlE,IAAM,EAAO,GAAkBA,EAAI,EAAK,EAAO,EAAS,EAAS,EAAI,CAC/D,EAAM,EAAI,UAAU,EAAM,GAAO,EAAQ,EAAU,qBAAsB,EAAI,CAAE,EAAI,QAAQ,EAAI,EAC/F1G,EAAO,EAAO,EAAI,CAClB,EACA,IAAI,EAAO,EAAI,CAKrB,MAJA,GAAK,MAAQ,EAAK,MAClB,EAAK,IAAM,EACP,GAAK,SACL,EAAK,OAAS,EAAI,QACfA,EClFX,SAAS,GAAmB,EAAK,EAAQ,EAAS,CAC9C,IAAM,EAAQ,EAAO,OACf,EAAS,GAAuB,EAAQ,EAAI,QAAQ,OAAQ,EAAQ,CAC1E,GAAI,CAAC,EACD,MAAO,CAAE,MAAO,GAAI,KAAM,KAAM,QAAS,GAAI,MAAO,CAAC,EAAO,EAAO,GAAQ,CAC/E,IAAM,EAAO,EAAO,OAAS,IAAM,EAAO,aAAe,EAAO,cAC1D,EAAQ,EAAO,OAAS,GAAW,EAAO,OAAO,CAAG,EAAE,CAExD,EAAa,EAAM,OACvB,IAAK,IAAI,EAAI,EAAM,OAAS,EAAG,GAAK,EAAG,EAAE,EAAG,CACxC,IAAMuB,EAAU,EAAM,GAAG,GACzB,GAAIA,IAAY,IAAMA,IAAY,KAC9B,EAAa,OAEb,MAGR,GAAI,IAAe,EAAG,CAClB,IAAM1B,EAAQ,EAAO,QAAU,KAAO,EAAM,OAAS,EAC/C;EAAK,OAAO,KAAK,IAAI,EAAG,EAAM,OAAS,EAAE,CAAC,CAC1C,GACFiF,EAAM,EAAQ,EAAO,OAGzB,OAFI,EAAO,SACP,GAAO,EAAO,OAAO,QAClB,CAAE,QAAO,OAAM,QAAS,EAAO,QAAS,MAAO,CAAC,EAAOA,EAAKA,GAAM,CAG7E,IAAI,EAAa,EAAO,OAAS,EAAO,OACpC,EAAS,EAAO,OAAS,EAAO,OAChC,EAAe,EACnB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,EAAE,EAAG,CACjC,GAAM,CAACF,EAAQrD,GAAW,EAAM,GAChC,GAAIA,IAAY,IAAMA,IAAY,KAC1B,EAAO,SAAW,GAAKqD,EAAO,OAAS,IACvC,EAAaA,EAAO,YAEvB,CACGA,EAAO,OAAS,GAEhB,EAAQ,EAASA,EAAO,OAAQ,eADhB,kGACwC,CAExD,EAAO,SAAW,IAClB,EAAaA,EAAO,QACxB,EAAe,EACX,IAAe,GAAK,CAAC,EAAI,QAEzB,EAAQ,EAAQ,aADA,sDACsB,CAE1C,MAEJ,GAAUA,EAAO,OAASrD,EAAQ,OAAS,EAG/C,IAAK,IAAI,EAAI,EAAM,OAAS,EAAG,GAAK,EAAY,EAAE,EAC1C,EAAM,GAAG,GAAG,OAAS,IACrB,EAAa,EAAI,GAEzB,IAAI,EAAQ,GACR,EAAM,GACN,EAAmB,GAEvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,EAAE,EAChC,GAAS,EAAM,GAAG,GAAG,MAAM,EAAW,CAAG;EAC7C,IAAK,IAAI,EAAI,EAAc,EAAI,EAAY,EAAE,EAAG,CAC5C,GAAI,CAACqD,EAAQrD,GAAW,EAAM,GAC9B,GAAUqD,EAAO,OAASrD,EAAQ,OAAS,EAC3C,IAAM,EAAOA,EAAQA,EAAQ,OAAS,KAAO,KAI7C,GAHI,IACA,EAAUA,EAAQ,MAAM,EAAG,GAAG,EAE9BA,GAAWqD,EAAO,OAAS,EAAY,CAIvC,IAAM,EAAU,2DAHJ,EAAO,OACb,iCACA,eAEN,EAAQ,EAASrD,EAAQ,QAAU,EAAO,EAAI,GAAI,aAAc,EAAQ,CACxE,EAAS,GAET,IAAS,EAAO,eAChB,GAAS,EAAMqD,EAAO,MAAM,EAAW,CAAGrD,EAC1C,EAAM;GAEDqD,EAAO,OAAS,GAAcrD,EAAQ,KAAO,KAE9C,IAAQ,IACR,EAAM;EACD,CAAC,GAAoB,IAAQ;IAClC,EAAM;;GACV,GAAS,EAAMqD,EAAO,MAAM,EAAW,CAAGrD,EAC1C,EAAM;EACN,EAAmB,IAEdA,IAAY,GAEb,IAAQ;EACR,GAAS;EAET,EAAM;GAGV,GAAS,EAAMA,EACf,EAAM,IACN,EAAmB,IAG3B,OAAQ,EAAO,MAAf,CACI,IAAK,IACD,MACJ,IAAK,IACD,IAAK,IAAI,EAAI,EAAY,EAAI,EAAM,OAAQ,EAAE,EACzC,GAAS;EAAO,EAAM,GAAG,GAAG,MAAM,EAAW,CAC7C,EAAM,EAAM,OAAS,KAAO;IAC5B,GAAS;GACb,MACJ,QACI,GAAS;EAEjB,IAAM,EAAM,EAAQ,EAAO,OAAS,EAAO,OAAO,OAClD,MAAO,CAAE,QAAO,OAAM,QAAS,EAAO,QAAS,MAAO,CAAC,EAAO,EAAK,GAAM,CAE7E,SAAS,GAAuB,CAAE,SAAQ,SAAS,EAAQ,EAAS,CAEhE,GAAI,EAAM,GAAG,OAAS,sBAElB,OADA,EAAQ,EAAM,GAAI,aAAc,gCAAgC,CACzD,KAEX,GAAM,CAAE,UAAW,EAAM,GACnB,EAAO,EAAO,GAChBqD,EAAS,EACT,EAAQ,GACR,EAAQ,GACZ,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAE,EAAG,CACpC,IAAM,EAAK,EAAO,GAClB,GAAI,CAAC,IAAU,IAAO,KAAO,IAAO,KAChC,EAAQ,MACP,CACD,IAAM,EAAI,OAAO,EAAG,CAChB,CAACA,GAAU,EACX,EAAS,EACJ,IAAU,KACf,EAAQ,EAAS,IAGzB,IAAU,IACV,EAAQ,EAAO,mBAAoB,kDAAkD,IAAS,CAClG,IAAI,EAAW,GACXjD,EAAU,GACV,EAAS,EAAO,OACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,EAAG,CACnC,IAAM,EAAQ,EAAM,GACpB,OAAQ,EAAM,KAAd,CACI,IAAK,QACD,EAAW,GAEf,IAAK,UACD,GAAU,EAAM,OAAO,OACvB,MACJ,IAAK,UACG,GAAU,CAAC,GAEX,EAAQ,EAAO,eADC,yEACuB,CAE3C,GAAU,EAAM,OAAO,OACvB,EAAU,EAAM,OAAO,UAAU,EAAE,CACnC,MACJ,IAAK,QACD,EAAQ,EAAO,mBAAoB,EAAM,QAAQ,CACjD,GAAU,EAAM,OAAO,OACvB,MAEJ,QAAS,CACL,IAAM,EAAU,4CAA4C,EAAM,OAClE,EAAQ,EAAO,mBAAoB,EAAQ,CAC3C,IAAM,EAAK,EAAM,OACb,GAAM,OAAO,GAAO,WACpB,GAAU,EAAG,UAI7B,MAAO,CAAE,OAAM,SAAQ,QAAO,UAAS,SAAQ,CAGnD,SAAS,GAAW,EAAQ,CACxB,IAAM,EAAQ,EAAO,MAAM,SAAS,CAC9B,EAAQ,EAAM,GACd,EAAI,EAAM,MAAM,QAAQ,CAIxB,EAAQ,CAHA,IAAI,GACZ,CAAC,EAAE,GAAI,EAAM,MAAM,EAAE,GAAG,OAAO,CAAC,CAChC,CAAC,GAAI,EAAM,CACI,CACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,GAAK,EACnC,EAAM,KAAK,CAAC,EAAM,GAAI,EAAM,EAAI,GAAG,CAAC,CACxC,OAAO,EC/LX,SAAS,GAAkB,EAAQ,EAAQ,EAAS,CAChD,GAAM,CAAE,SAAQ,OAAM,SAAQ,OAAQ,EAClC,EACA,EACE,GAAY,EAAK,EAAM,IAAQ,EAAQ,EAAS,EAAK3C,EAAM,EAAI,CACrE,OAAQ,EAAR,CACI,IAAK,SACD,EAAQ,EAAO,MACf,EAAQ,GAAW,EAAQ,EAAS,CACpC,MACJ,IAAK,uBACD,EAAQ,EAAO,aACf,EAAQ,GAAkB,EAAQ,EAAS,CAC3C,MACJ,IAAK,uBACD,EAAQ,EAAO,aACf,EAAQ,GAAkB,EAAQ,EAAS,CAC3C,MAEJ,QAEI,OADA,EAAQ,EAAQ,mBAAoB,4CAA4C,IAAO,CAChF,CACH,MAAO,GACP,KAAM,KACN,QAAS,GACT,MAAO,CAAC,EAAQ,EAAS,EAAO,OAAQ,EAAS,EAAO,QAC3D,CAET,IAAM,EAAW,EAAS,EAAO,OAC3B,EAAK,GAAW,EAAK,EAAU,EAAQ,EAAQ,CACrD,MAAO,CACH,QACA,KAAM,EACN,QAAS,EAAG,QACZ,MAAO,CAAC,EAAQ,EAAU,EAAG,QAChC,CAEL,SAAS,GAAW,EAAQ,EAAS,CACjC,IAAI,EAAU,GACd,OAAQ,EAAO,GAAf,CAEI,IAAK,IACD,EAAU,kBACV,MACJ,IAAK,IACD,EAAU,6BACV,MACJ,IAAK,IACD,EAAU,kCACV,MACJ,IAAK,IACL,IAAK,IACD,EAAU,0BAA0B,EAAO,KAC3C,MAEJ,IAAK,IACL,IAAK,IACD,EAAU,sBAAsB,EAAO,KACvC,MAKR,OAFI,GACA,EAAQ,EAAG,mBAAoB,iCAAiC,IAAU,CACvE,GAAU,EAAO,CAE5B,SAAS,GAAkB,EAAQ,EAAS,CAGxC,OAFI,EAAO,EAAO,OAAS,KAAO,KAAO,EAAO,SAAW,IACvD,EAAQ,EAAO,OAAQ,eAAgB,yBAAyB,CAC7D,GAAU,EAAO,MAAM,EAAG,GAAG,CAAC,CAAC,QAAQ,MAAO,IAAI,CAE7D,SAAS,GAAU,EAAQ,CAQvB,IAAI,EAAO,EACX,GAAI,CACA,EAAY,OAAO;EAA8B,KAAK,CACtD,EAAW,OAAO;EAAyC,KAAK,MAE9D,CACF,EAAQ,qBACR,EAAO,2BAEX,IAAI,EAAQ,EAAM,KAAK,EAAO,CAC9B,GAAI,CAAC,EACD,OAAO,EACX,IAAI,EAAM,EAAM,GACZ,EAAM,IACN,EAAM,EAAM,UAEhB,IADA,EAAK,UAAY,EACT,EAAQ,EAAK,KAAK,EAAO,EACzB,EAAM,KAAO,GACT,IAAQ;EACR,GAAO,EAEP,EAAM;GAGV,GAAO,EAAM,EAAM,GACnB,EAAM,KAEV,EAAM,EAAK,UAEf,IAAM,EAAO,eAGb,MAFA,GAAK,UAAY,EACjB,EAAQ,EAAK,KAAK,EAAO,CAClB,EAAM,GAAO,IAAQ,IAAM,IAEtC,SAAS,GAAkB,EAAQ,EAAS,CACxC,IAAI,EAAM,GACV,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAS,EAAG,EAAE,EAAG,CACxC,IAAM,EAAK,EAAO,GACd,SAAO,MAAQ,EAAO,EAAI,KAAO;GAErC,GAAI,IAAO;EAAM,CACb,GAAM,CAAE,OAAM,UAAW,GAAY,EAAQ,EAAE,CAC/C,GAAO,EACP,EAAI,UAEC,IAAO,KAAM,CAClB,IAAIP,EAAO,EAAO,EAAE,GACd,EAAK,GAAYA,GACvB,GAAI,EACA,GAAO,UACFA,IAAS;EAGd,IADA,EAAO,EAAO,EAAI,GACXA,IAAS,KAAOA,IAAS,KAC5B,EAAO,EAAO,EAAE,EAAI,WAEnBA,IAAS,MAAQ,EAAO,EAAI,KAAO;EAGxC,IADA,EAAO,EAAO,EAAE,EAAI,GACbA,IAAS,KAAOA,IAAS,KAC5B,EAAO,EAAO,EAAE,EAAI,WAEnBA,IAAS,KAAOA,IAAS,KAAOA,IAAS,IAAK,CACnD,IAAM,EAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAACA,GACpC,GAAO,GAAc,EAAQ,EAAI,EAAG,EAAQ,EAAQ,CACpD,GAAK,MAEJ,CACD,IAAM+C,EAAM,EAAO,OAAO,EAAI,EAAG,EAAE,CACnC,EAAQ,EAAI,EAAG,gBAAiB,2BAA2BA,IAAM,CACjE,GAAOA,WAGN,IAAO,KAAO,IAAO,IAAM,CAEhC,IAAM,EAAU,EACZ/C,EAAO,EAAO,EAAI,GACtB,KAAOA,IAAS,KAAOA,IAAS,KAC5B,EAAO,EAAO,EAAE,EAAI,GACpBA,IAAS;GAAQ,EAAEA,IAAS,MAAQ,EAAO,EAAI,KAAO;KACtD,GAAO,EAAI,EAAU,EAAO,MAAM,EAAS,EAAI,EAAE,CAAG,QAGxD,GAAO,EAKf,OAFI,EAAO,EAAO,OAAS,KAAO,KAAO,EAAO,SAAW,IACvD,EAAQ,EAAO,OAAQ,eAAgB,yBAAyB,CAC7D,EAMX,SAAS,GAAY,EAAQ,EAAQ,CACjC,IAAI,EAAO,GACP,EAAK,EAAO,EAAS,GACzB,MAAO,IAAO,KAAO,IAAO,KAAQ,IAAO;GAAQ,IAAO,OAClD,MAAO,MAAQ,EAAO,EAAS,KAAO;IAEtC,IAAO;IACP,GAAQ;GACZ,GAAU,EACV,EAAK,EAAO,EAAS,GAIzB,MAFA,CACI,IAAO,IACJ,CAAE,OAAM,SAAQ,CAE3B,IAAM,GAAc,CAChB,EAAK,KACL,EAAG,OACH,EAAG,KACH,EAAG,OACH,EAAG,KACH,EAAG;EACH,EAAG,KACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,OACH,EAAG,SACH,EAAG,SACH,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,KACN,IAAM,IACT,CACD,SAAS,GAAc,EAAQ,EAAQ,EAAQ,EAAS,CACpD,IAAM,EAAK,EAAO,OAAO,EAAQ,EAAO,CAElCO,EADK,EAAG,SAAW,GAAU,iBAAiB,KAAK,EAAG,CAC1C,SAAS,EAAI,GAAG,CAAG,IACrC,GAAI,MAAMA,EAAK,CAAE,CACb,IAAMwC,EAAM,EAAO,OAAO,EAAS,EAAG,EAAS,EAAE,CAEjD,OADA,EAAQ,EAAS,EAAG,gBAAiB,2BAA2BA,IAAM,CAC/DA,EAEX,OAAO,OAAO,cAAcxC,EAAK,CCtNrC,SAAS,GAAc,EAAK,EAAO,EAAU,EAAS,CAClD,GAAM,CAAE,QAAO,OAAM,UAAS,SAAU,EAAM,OAAS,eACjD,GAAmB,EAAK,EAAO,EAAQ,CACvC,GAAkB,EAAO,EAAI,QAAQ,OAAQ,EAAQ,CACrD,EAAU,EACV,EAAI,WAAW,QAAQ,EAAS,OAAQ,GAAO,EAAQ,EAAU,qBAAsB,EAAI,CAAC,CAC5F,KACF,EACJ,CAQI,CARA,EAAI,QAAQ,YAAc,EAAI,MACxB,EAAI,OAAOqF,IAEZ,EACC,GAAoB,EAAI,OAAQ,EAAO,EAAS,EAAU,EAAQ,CACnE,EAAM,OAAS,SACd,GAAoB,EAAK,EAAO,EAAO,EAAQ,CAE/C,EAAI,OAAOA,IACrB,IAAI,EACJ,GAAI,CACA,IAAM,EAAM,EAAI,QAAQ,EAAO,GAAO,EAAQ,GAAY,EAAO,qBAAsB,EAAI,CAAE,EAAI,QAAQ,CACzG,EAAS,EAAS,EAAI,CAAG,EAAM,IAAI,EAAO,EAAI,OAE3C,EAAO,CACV,IAAM,EAAM,aAAiB,MAAQ,EAAM,QAAU,OAAO,EAAM,CAClE,EAAQ,GAAY,EAAO,qBAAsB,EAAI,CACrD,EAAS,IAAI,EAAO,EAAM,CAY9B,MAVA,GAAO,MAAQ,EACf,EAAO,OAAS,EACZ,IACA,EAAO,KAAO,GACd,IACA,EAAO,IAAM,GACb,EAAI,SACJ,EAAO,OAAS,EAAI,QACpB1C,IACA,EAAO,QAAUA,GACd,EAEX,SAAS,GAAoB,EAAQ,EAAO,EAAS,EAAU,EAAS,CACpE,GAAI,IAAY,IACZ,OAAOgD,EAAON,IAClB,IAAM,EAAgB,EAAE,CACxB,IAAK,IAAM,KAAOM,EAAO,KACrB,GAAI,CAAC,EAAI,YAAc,EAAI,MAAQ,EAC/B,GAAI,EAAI,SAAW,EAAI,KACnB,EAAc,KAAK,EAAI,MAEvB,OAAO,EAGnB,IAAK,IAAM,KAAO,EACd,GAAI,EAAI,MAAM,KAAK,EAAM,CACrB,OAAO,EACf,IAAM,EAAKA,EAAO,UAAU,GAQ5B,OAPI,GAAM,CAAC,EAAG,YAGV,EAAO,KAAK,KAAK,OAAO,OAAO,EAAE,CAAE,EAAI,CAAE,QAAS,GAAO,KAAM,OAAW,CAAC,CAAC,CACrE,IAEX,EAAQ,EAAU,qBAAsB,mBAAmB,IAAW,IAAY,wBAAwB,CACnGA,EAAON,KAElB,SAAS,GAAoB,CAAE,QAAO,aAAY,UAAU,EAAO,EAAO,EAAS,CAC/E,IAAM,EAAMM,EAAO,KAAK,KAAK,IAAQgC,EAAI,UAAY,IAAS,GAASA,EAAI,UAAY,QACnFA,EAAI,MAAM,KAAK,EAAM,CAAC,EAAIhC,EAAON,IACrC,GAAIM,EAAO,OAAQ,CACf,IAAM,EAASA,EAAO,OAAO,KAAK,GAAOgC,EAAI,SAAWA,EAAI,MAAM,KAAK,EAAM,CAAC,EAC1EhC,EAAON,IACX,GAAI,EAAI,MAAQ,EAAO,IAAK,CACxB,IAAM,EAAK,EAAW,UAAU,EAAI,IAAI,CAClC,EAAK,EAAW,UAAU,EAAO,IAAI,CACrC,EAAM,iCAAiC,EAAG,MAAM,IACtD,EAAQ,EAAO,qBAAsB,EAAK,GAAK,EAGvD,OAAO,EClFX,SAAS,GAAoB,EAAQ,EAAQ,EAAK,CAC9C,GAAI,EAAQ,CACR,CAAQ,GAAM,EAAO,OACrB,IAAK,IAAI,EAAI,EAAM,EAAG,GAAK,EAAG,EAAE,EAAG,CAC/B,IAAI,EAAK,EAAO,GAChB,OAAQ,EAAG,KAAX,CACI,IAAK,QACL,IAAK,UACL,IAAK,UACD,GAAU,EAAG,OAAO,OACpB,SAKR,IADA,EAAK,EAAO,EAAE,GACP,GAAI,OAAS,SAChB,GAAU,EAAG,OAAO,OACpB,EAAK,EAAO,EAAE,GAElB,OAGR,OAAO,ECfX,IAAM,GAAK,CAAE,eAAa,oBAAkB,CAC5C,SAAS,GAAY,EAAK,EAAO,EAAO,EAAS,CAC7C,IAAM,EAAQ,EAAI,MACZ,CAAE,cAAa,UAAS,SAAQ,OAAQ,EAC1CrE,EACA,EAAa,GACjB,OAAQ,EAAM,KAAd,CACI,IAAK,QACD,EAAO,GAAa,EAAK,EAAO,EAAQ,EACpC,GAAU,IACV,EAAQ,EAAO,cAAe,gDAAgD,CAClF,MACJ,IAAK,SACL,IAAK,uBACL,IAAK,uBACL,IAAK,eACD,EAAO,GAAc,EAAK,EAAO,EAAK,EAAQ,CAC1C,IACA,EAAK,OAAS,EAAO,OAAO,UAAU,EAAE,EAC5C,MACJ,IAAK,YACL,IAAK,YACL,IAAK,kBACD,EAAO,GAAkB,GAAI,EAAK,EAAO,EAAO,EAAQ,CACpD,IACA,EAAK,OAAS,EAAO,OAAO,UAAU,EAAE,EAC5C,MACJ,QAAS,CACL,IAAM,EAAU,EAAM,OAAS,QACzB,EAAM,QACN,4BAA4B,EAAM,KAAK,GAC7C,EAAQ,EAAO,mBAAoB,EAAQ,CAC3C,EAAO,GAAiB,EAAK,EAAM,OAAQ,OAAW,KAAM,EAAO,EAAQ,CAC3E,EAAa,IAwBrB,OArBI,GAAUA,EAAK,SAAW,IAC1B,EAAQ,EAAQ,YAAa,mCAAmC,CAChE,GACA,EAAI,QAAQ,aACX,CAAC,EAASA,EAAK,EACZ,OAAOA,EAAK,OAAU,UACrBA,EAAK,KAAOA,EAAK,MAAQ,0BAE9B,EAAQ,GAAO,EAAO,iBADV,4CACgC,CAE5C,IACA,EAAK,YAAc,IACnB2B,IACI,EAAM,OAAS,UAAY,EAAM,SAAW,GAC5C,EAAK,QAAUA,EAEf,EAAK,cAAgBA,GAGzB,EAAI,QAAQ,kBAAoB,IAChC,EAAK,SAAW,GACb3B,EAEX,SAAS,GAAiB,EAAK,EAAQ,EAAQ,EAAK,CAAE,cAAa,UAAS,SAAQ,MAAK,OAAO,EAAS,CACrG,IAAM,EAAQ,CACV,KAAM,SACN,OAAQ,GAAoB,EAAQ,EAAQ,EAAI,CAChD,OAAQ,GACR,OAAQ,GACX,CACKA,EAAO,GAAc,EAAK,EAAO,EAAK,EAAQ,CAYpD,OAXI,IACA,EAAK,OAAS,EAAO,OAAO,UAAU,EAAE,CACpCA,EAAK,SAAW,IAChB,EAAQ,EAAQ,YAAa,mCAAmC,EAEpE,IACA,EAAK,YAAc,IACnB2B,IACA,EAAK,QAAUA,EACf,EAAK,MAAM,GAAK,GAEb3B,EAEX,SAAS,GAAa,CAAE,WAAW,CAAE,SAAQ,SAAQ,OAAO,EAAS,CACjE,IAAM,EAAQ,IAAI,GAAM,EAAO,UAAU,EAAE,CAAC,CACxC,EAAM,SAAW,IACjB,EAAQ,EAAQ,YAAa,kCAAkC,CAC/D,EAAM,OAAO,SAAS,IAAI,EAC1B,EAAQ,EAAS,EAAO,OAAS,EAAG,YAAa,iCAAkC,GAAK,CAC5F,IAAM,EAAW,EAAS,EAAO,OAC3B,EAAK,GAAW,EAAK,EAAU,EAAQ,OAAQ,EAAQ,CAI7D,MAHA,GAAM,MAAQ,CAAC,EAAQ,EAAU,EAAG,OAAO,CACvC,EAAG,UACH,EAAM,QAAU,EAAG,SAChB,EC7FX,SAAS,GAAW,EAAS,EAAY,CAAE,SAAQ,QAAO,QAAO,OAAO,EAAS,CAC7E,IAAM,EAAO,OAAO,OAAO,CAAE,YAAa,EAAY,CAAE,EAAQ,CAC1D,EAAM,IAAI,GAAS,OAAW,EAAK,CACnC,EAAM,CACR,MAAO,GACP,OAAQ,GACR,WAAY,EAAI,WAChB,QAAS,EAAI,QACb,OAAQ,EAAI,OACf,CACK,EAAQ,GAAa,EAAO,CAC9B,UAAW,YACX,KAAM,GAAS,IAAM,GACrB,SACA,UACA,aAAc,EACd,eAAgB,GACnB,CAAC,CACE,EAAM,QACN,EAAI,WAAW,SAAW,GACtB,IACC,EAAM,OAAS,aAAe,EAAM,OAAS,cAC9C,CAAC,EAAM,YACP,EAAQ,EAAM,IAAK,eAAgB,wEAAwE,EAGnH,EAAI,SAAW,EACT,GAAY,EAAK,EAAO,EAAO,EAAQ,CACvC,GAAiB,EAAK,EAAM,IAAK,EAAO,KAAM,EAAO,EAAQ,CACnE,IAAM,EAAa,EAAI,SAAS,MAAM,GAChC,EAAK,GAAW,EAAK,EAAY,GAAO,EAAQ,CAItD,OAHI,EAAG,UACH,EAAI,QAAU,EAAG,SACrB,EAAI,MAAQ,CAAC,EAAQ,EAAY,EAAG,OAAO,CACpC,EChCX,SAAS,GAAY,EAAK,CACtB,GAAI,OAAO,GAAQ,SACf,MAAO,CAAC,EAAK,EAAM,EAAE,CACzB,GAAI,MAAM,QAAQ,EAAI,CAClB,OAAO,EAAI,SAAW,EAAI,EAAM,CAAC,EAAI,GAAI,EAAI,GAAG,CACpD,GAAM,CAAE,SAAQ,UAAW,EAC3B,MAAO,CAAC,EAAQ,GAAU,OAAO,GAAW,SAAW,EAAO,OAAS,GAAG,CAE9E,SAAS,GAAa,EAAS,CAC3B,IAAI2B,EAAU,GACV,EAAY,GACZ,EAAiB,GACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,EAAE,EAAG,CACrC,IAAM,EAAS,EAAQ,GACvB,OAAQ,EAAO,GAAf,CACI,IAAK,IACD,IACKA,IAAY,GAAK,GAAK,EAAiB;;EAAS;IAC5C,EAAO,UAAU,EAAE,EAAI,KAChC,EAAY,GACZ,EAAiB,GACjB,MACJ,IAAK,IACG,EAAQ,EAAI,KAAK,KAAO,MACxB,GAAK,GACT,EAAY,GACZ,MACJ,QAES,IACD,EAAiB,IACrB,EAAY,IAGxB,MAAO,CAAE,UAAS,iBAAgB,CAatC,IAAM,GAAN,KAAe,CACX,YAAY,EAAU,EAAE,CAAE,CACtB,KAAK,IAAM,KACX,KAAK,aAAe,GACpB,KAAK,QAAU,EAAE,CACjB,KAAK,OAAS,EAAE,CAChB,KAAK,SAAW,EAAE,CAClB,KAAK,SAAW,EAAQ,EAAM,EAAS,IAAY,CAC/C,IAAM,EAAM,GAAY,EAAO,CAC3B,EACA,KAAK,SAAS,KAAK,IAAI,GAAY,EAAK3C,EAAM,EAAQ,CAAC,CAEvD,KAAK,OAAO,KAAK,IAAI,GAAe,EAAKA,EAAM,EAAQ,CAAC,EAGhE,KAAK,WAAa,IAAI,GAAW,CAAE,QAAS,EAAQ,SAAW,MAAO,CAAC,CACvE,KAAK,QAAU,EAEnB,SAAS,EAAK,EAAU,CACpB,GAAM,CAAE,UAAS,kBAAmB,GAAa,KAAK,QAAQ,CAE9D,GAAI2C,EAAS,CACT,IAAM,EAAK,EAAI,SACf,GAAI,EACA,EAAI,QAAU,EAAI,QAAU,GAAG,EAAI,QAAQ,IAAIA,IAAYA,UAEtD,GAAkB,EAAI,WAAW,UAAY,CAAC,EACnD,EAAI,cAAgBA,UAEf,EAAa,EAAG,EAAI,CAAC,EAAG,MAAQ,EAAG,MAAM,OAAS,EAAG,CAC1D,IAAI,EAAK,EAAG,MAAM,GACd,EAAO,EAAG,GACV,EAAK,EAAG,KACZ,IAAM,EAAK,EAAG,cACd,EAAG,cAAgB,EAAK,GAAGA,EAAQ,IAAI,IAAOA,MAE7C,CACD,IAAM,EAAK,EAAG,cACd,EAAG,cAAgB,EAAK,GAAGA,EAAQ,IAAI,IAAOA,GAGlD,GACA,MAAM,UAAU,KAAK,MAAM,EAAI,OAAQ,KAAK,OAAO,CACnD,MAAM,UAAU,KAAK,MAAM,EAAI,SAAU,KAAK,SAAS,GAGvD,EAAI,OAAS,KAAK,OAClB,EAAI,SAAW,KAAK,UAExB,KAAK,QAAU,EAAE,CACjB,KAAK,OAAS,EAAE,CAChB,KAAK,SAAW,EAAE,CAOtB,YAAa,CACT,MAAO,CACH,QAAS,GAAa,KAAK,QAAQ,CAAC,QACpC,WAAY,KAAK,WACjB,OAAQ,KAAK,OACb,SAAU,KAAK,SAClB,CAQL,CAAC,QAAQ,EAAQ,EAAW,GAAO,EAAY,GAAI,CAC/C,IAAK,IAAM,KAAS,EAChB,MAAO,KAAK,KAAK,EAAM,CAC3B,MAAO,KAAK,IAAI,EAAU,EAAU,CAGxC,CAAC,KAAK,EAAO,CACT,OAAQ,EAAM,KAAd,CACI,IAAK,YACD,KAAK,WAAW,IAAI,EAAM,QAAS,EAAQ,EAAS,IAAY,CAC5D,IAAM,EAAM,GAAY,EAAM,CAC9B,EAAI,IAAM,EACV,KAAK,QAAQ,EAAK,gBAAiB,EAAS,EAAQ,EACtD,CACF,KAAK,QAAQ,KAAK,EAAM,OAAO,CAC/B,KAAK,aAAe,GACpB,MACJ,IAAK,WAAY,CACb,IAAM,EAAM,GAAW,KAAK,QAAS,KAAK,WAAY,EAAO,KAAK,QAAQ,CACtE,KAAK,cAAgB,CAAC,EAAI,WAAW,UACrC,KAAK,QAAQ,EAAO,eAAgB,kDAAkD,CAC1F,KAAK,SAAS,EAAK,GAAM,CACrB,KAAK,MACL,MAAM,KAAK,KACf,KAAK,IAAM,EACX,KAAK,aAAe,GACpB,MAEJ,IAAK,kBACL,IAAK,QACD,MACJ,IAAK,UACL,IAAK,UACD,KAAK,QAAQ,KAAK,EAAM,OAAO,CAC/B,MACJ,IAAK,QAAS,CACV,IAAM,EAAM,EAAM,OACZ,GAAG,EAAM,QAAQ,IAAI,KAAK,UAAU,EAAM,OAAO,GACjD,EAAM,QACN,EAAQ,IAAI,GAAe,GAAY,EAAM,CAAE,mBAAoB,EAAI,CACzE,KAAK,cAAgB,CAAC,KAAK,IAC3B,KAAK,OAAO,KAAK,EAAM,CAEvB,KAAK,IAAI,OAAO,KAAK,EAAM,CAC/B,MAEJ,IAAK,UAAW,CACZ,GAAI,CAAC,KAAK,IAAK,CAEX,KAAK,OAAO,KAAK,IAAI,GAAe,GAAY,EAAM,CAAE,mBAD5C,gDACoE,CAAC,CACjF,MAEJ,KAAK,IAAI,WAAW,OAAS,GAC7B,IAAM,EAAM,GAAW,EAAM,IAAK,EAAM,OAAS,EAAM,OAAO,OAAQ,KAAK,IAAI,QAAQ,OAAQ,KAAK,QAAQ,CAE5G,GADA,KAAK,SAAS,KAAK,IAAK,GAAK,CACzB,EAAI,QAAS,CACb,IAAM,EAAK,KAAK,IAAI,QACpB,KAAK,IAAI,QAAU,EAAK,GAAG,EAAG,IAAI,EAAI,UAAY,EAAI,QAE1D,KAAK,IAAI,MAAM,GAAK,EAAI,OACxB,MAEJ,QACI,KAAK,OAAO,KAAK,IAAI,GAAe,GAAY,EAAM,CAAE,mBAAoB,qBAAqB,EAAM,OAAO,CAAC,EAS3H,CAAC,IAAI,EAAW,GAAO,EAAY,GAAI,CACnC,GAAI,KAAK,IACL,KAAK,SAAS,KAAK,IAAK,GAAK,CAC7B,MAAM,KAAK,IACX,KAAK,IAAM,aAEN,EAAU,CACf,IAAM,EAAO,OAAO,OAAO,CAAE,YAAa,KAAK,WAAY,CAAE,KAAK,QAAQ,CACpE,EAAM,IAAI,GAAS,OAAW,EAAK,CACrC,KAAK,cACL,KAAK,QAAQ,EAAW,eAAgB,wCAAwC,CACpF,EAAI,MAAQ,CAAC,EAAG,EAAW,EAAU,CACrC,KAAK,SAAS,EAAK,GAAM,CACzB,MAAM,KCnNZ,GAAQ,OAAO,cAAc,CAC7B,GAAO,OAAO,gBAAgB,CAC9B,GAAS,OAAO,cAAc,CA6BpC,SAAS8C,GAAM,EAAK,EAAS,CACrB,SAAU,GAAO,EAAI,OAAS,aAC9B,EAAM,CAAE,MAAO,EAAI,MAAO,MAAO,EAAI,MAAO,EAChD,GAAO,OAAO,OAAO,EAAE,CAAC,CAAE,EAAK,EAAQ,CAM3C,GAAM,MAAQ,GAEd,GAAM,KAAO,GAEb,GAAM,OAAS,GAEf,GAAM,YAAc,EAAK,IAAS,CAC9B,IAAI,EAAO,EACX,IAAK,GAAM,CAAC,EAAO/F,KAAUK,EAAM,CAC/B,IAAM,EAAM,IAAO,GACnB,GAAI,GAAO,UAAW,EAClB,EAAO,EAAI,MAAML,QAGjB,OAER,OAAO,GAOX,GAAM,kBAAoB,EAAK,IAAS,CACpC,IAAM,EAAS+F,GAAM,WAAW,EAAK1F,EAAK,MAAM,EAAG,GAAG,CAAC,CACjD,EAAQA,EAAKA,EAAK,OAAS,GAAG,GAC9B,EAAO,IAAS,GACtB,GAAI,GAAQ,UAAW,EACnB,OAAO,EACX,MAAU,MAAM,8BAA8B,EAElD,SAAS,GAAO,EAAM,EAAM,EAAS,CACjC,IAAI,EAAO,EAAQ,EAAMA,EAAK,CAC9B,GAAI,OAAO,GAAS,SAChB,OAAO,EACX,IAAK,IAAM,IAAS,CAAC,MAAO,QAAQ,CAAE,CAClC,IAAM,EAAQ,EAAK,GACnB,GAAI,GAAS,UAAW,EAAO,CAC3B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,OAAQ,EAAE,EAAG,CACzC,IAAM,EAAK,GAAO,OAAO,OAAOA,EAAK,OAAO,CAAC,CAAC,EAAO,EAAE,CAAC,CAAC,CAAC,CAAE,EAAM,MAAM,GAAI,EAAQ,CACpF,GAAI,OAAO,GAAO,SACd,EAAI,EAAK,UACJ,IAAO,GACZ,OAAO,QACF,IAAO,KACZ,EAAM,MAAM,OAAO,EAAG,EAAE,CACxB,KAGJ,OAAO,GAAS,YAAc,IAAU,QACxC,EAAO,EAAK,EAAMA,EAAK,GAGnC,OAAO,OAAO,GAAS,WAAa,EAAK,EAAMA,EAAK,CAAG,ECxD3D,SAAS,GAAU,EAAQ,CACvB,OAAQ,EAAR,CACI,QACI,MAAO,kBACX,QACI,MAAO,WACX,QACI,MAAO,iBACX,QACI,MAAO,SACX,IAAK,MACD,MAAO,YACX,IAAK,MACD,MAAO,UACX,IAAK,GACL,IAAK;EACL,IAAK;EACD,MAAO,UACX,IAAK,IACD,MAAO,eACX,IAAK,IACD,MAAO,mBACX,IAAK,IACD,MAAO,gBACX,IAAK,IACD,MAAO,iBACX,IAAK,IACD,MAAO,eACX,IAAK,IACD,MAAO,iBACX,IAAK,IACD,MAAO,eACX,IAAK,IACD,MAAO,QAEf,OAAQ,EAAO,GAAf,CACI,IAAK,IACL,IAAK,IACD,MAAO,QACX,IAAK,IACD,MAAO,UACX,IAAK,IACD,MAAO,iBACX,IAAK,IACD,MAAO,QACX,IAAK,IACD,MAAO,SACX,IAAK,IACD,MAAO,MACX,IAAK,IACD,MAAO,uBACX,IAAK,IACD,MAAO,uBACX,IAAK,IACL,IAAK,IACD,MAAO,sBAEf,OAAO,KCzBX,SAAS,GAAQ,EAAI,CACjB,OAAQ,EAAR,CACI,KAAK,OACL,IAAK,IACL,IAAK;EACL,IAAK,KACL,IAAK,IACD,MAAO,GACX,QACI,MAAO,IAGnB,IAAM,GAAY,IAAI,IAAI,yBAAyB,CAC7C,GAAW,IAAI,IAAI,oFAAoF,CACvG,GAAqB,IAAI,IAAI,QAAQ,CACrC,GAAqB,IAAI,IAAI;KAAe,CAC5C,GAAmB,GAAO,CAAC,GAAM,GAAmB,IAAI,EAAG,CAgB3D,GAAN,KAAY,CACR,aAAc,CAKV,KAAK,MAAQ,GAMb,KAAK,kBAAoB,GAMzB,KAAK,gBAAkB,GAEvB,KAAK,OAAS,GAKd,KAAK,QAAU,GAEf,KAAK,UAAY,EAKjB,KAAK,WAAa,EAElB,KAAK,YAAc,EAEnB,KAAK,WAAa,KAElB,KAAK,KAAO,KAEZ,KAAK,IAAM,EAQf,CAAC,IAAI,EAAQ,EAAa,GAAO,CAC7B,GAAI,EAAQ,CACR,GAAI,OAAO,GAAW,SAClB,MAAM,UAAU,yBAAyB,CAC7C,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,EAAS,EACnD,KAAK,WAAa,KAEtB,KAAK,MAAQ,CAAC,EACd,IAAIN,EAAO,KAAK,MAAQ,SACxB,KAAOA,IAAS,GAAc,KAAK,SAAS,EAAE,GAC1C,EAAO,MAAO,KAAK,UAAUA,EAAK,CAE1C,WAAY,CACR,IAAI,EAAI,KAAK,IACT,EAAK,KAAK,OAAO,GACrB,KAAO,IAAO,KAAO,IAAO,KACxB,EAAK,KAAK,OAAO,EAAE,GAKvB,MAJI,CAAC,GAAM,IAAO,KAAO,IAAO;EACrB,GACP,IAAO,KACA,KAAK,OAAO,EAAI,KAAO;EAC3B,GAEX,OAAO,EAAG,CACN,OAAO,KAAK,OAAO,KAAK,IAAM,GAElC,eAAe,EAAQ,CACnB,IAAI,EAAK,KAAK,OAAO,GACrB,GAAI,KAAK,WAAa,EAAG,CACrB,IAAImG,EAAS,EACb,KAAO,IAAO,KACV,EAAK,KAAK,OAAO,EAAEA,EAAS,GAChC,GAAI,IAAO,KAAM,CACb,IAAMnG,EAAO,KAAK,OAAOmG,EAAS,EAAS,GAC3C,GAAInG,IAAS;GAAS,CAACA,GAAQ,CAAC,KAAK,MACjC,OAAO,EAASmG,EAAS,EAEjC,OAAO,IAAO;GAAQA,GAAU,KAAK,YAAe,CAAC,GAAM,CAAC,KAAK,MAC3D,EAASA,EACT,GAEV,GAAI,IAAO,KAAO,IAAO,IAAK,CAC1B,IAAM,EAAK,KAAK,OAAO,OAAO,EAAQ,EAAE,CACxC,IAAK,IAAO,OAAS,IAAO,QAAU,GAAQ,KAAK,OAAO,EAAS,GAAG,CAClE,MAAO,GAEf,OAAO,EAEX,SAAU,CACN,IAAI,EAAM,KAAK,WASf,OARI,OAAO,GAAQ,UAAa,IAAQ,IAAM,EAAM,KAAK,OACrD,EAAM,KAAK,OAAO,QAAQ;EAAM,KAAK,IAAI,CACzC,KAAK,WAAa,GAElB,IAAQ,GACD,KAAK,MAAQ,KAAK,OAAO,UAAU,KAAK,IAAI,CAAG,MACtD,KAAK,OAAO,EAAM,KAAO,MACzB,IACG,KAAK,OAAO,UAAU,KAAK,IAAK,EAAI,EAE/C,SAAS,EAAG,CACR,OAAO,KAAK,IAAM,GAAK,KAAK,OAAO,OAEvC,QAAQ,EAAO,CAKX,MAJA,MAAK,OAAS,KAAK,OAAO,UAAU,KAAK,IAAI,CAC7C,KAAK,IAAM,EACX,KAAK,WAAa,KAClB,KAAK,KAAO,EACL,KAEX,KAAK,EAAG,CACJ,OAAO,KAAK,OAAO,OAAO,KAAK,IAAK,EAAE,CAE1C,CAAC,UAAU,EAAM,CACb,OAAQnG,EAAR,CACI,IAAK,SACD,OAAO,MAAO,KAAK,aAAa,CACpC,IAAK,aACD,OAAO,MAAO,KAAK,gBAAgB,CACvC,IAAK,cACD,OAAO,MAAO,KAAK,iBAAiB,CACxC,IAAK,MACD,OAAO,MAAO,KAAK,eAAe,CACtC,IAAK,OACD,OAAO,MAAO,KAAK,qBAAqB,CAC5C,IAAK,gBACD,OAAO,MAAO,KAAK,mBAAmB,CAC1C,IAAK,eACD,OAAO,MAAO,KAAK,kBAAkB,CACzC,IAAK,eACD,OAAO,MAAO,KAAK,kBAAkB,EAGjD,CAAC,aAAc,CACX,IAAI,EAAO,KAAK,SAAS,CACzB,GAAI,IAAS,KACT,OAAO,KAAK,QAAQ,SAAS,CAKjC,GAJI,EAAK,WACL,MAAO,KAAK,UAAU,EAAE,CACxB,EAAO,EAAK,UAAU,EAAE,EAExB,EAAK,KAAO,IAAK,CACjB,IAAI,EAAS,EAAK,OACd,EAAK,EAAK,QAAQ,IAAI,CAC1B,KAAO,IAAO,IAAI,CACd,IAAM,EAAK,EAAK,EAAK,GACrB,GAAI,IAAO,KAAO,IAAO,IAAM,CAC3B,EAAS,EAAK,EACd,WAGA,EAAK,EAAK,QAAQ,IAAK,EAAK,EAAE,CAGtC,OAAa,CACT,IAAM,EAAK,EAAK,EAAS,GACzB,GAAI,IAAO,KAAO,IAAO,IACrB,SAEA,MAER,IAAM,GAAK,MAAO,KAAK,UAAU,EAAO,GAAK,MAAO,KAAK,WAAW,GAAK,EAGzE,OAFA,MAAO,KAAK,UAAU,EAAK,OAAS,EAAE,CACtC,KAAK,aAAa,CACX,SAEX,GAAI,KAAK,WAAW,CAAE,CAClB,IAAM,EAAK,MAAO,KAAK,WAAW,GAAK,CAGvC,OAFA,MAAO,KAAK,UAAU,EAAK,OAAS,EAAG,CACvC,MAAO,KAAK,aAAa,CAClB,SAGX,OADA,SACO,MAAO,KAAK,gBAAgB,CAEvC,CAAC,gBAAiB,CACd,IAAM,EAAK,KAAK,OAAO,EAAE,CACzB,GAAI,CAAC,GAAM,CAAC,KAAK,MACb,OAAO,KAAK,QAAQ,aAAa,CACrC,GAAI,IAAO,KAAO,IAAO,IAAK,CAC1B,GAAI,CAAC,KAAK,OAAS,CAAC,KAAK,SAAS,EAAE,CAChC,OAAO,KAAK,QAAQ,aAAa,CACrC,IAAM8G,EAAI,KAAK,KAAK,EAAE,CACtB,IAAKA,IAAM,OAASA,IAAM,QAAU,GAAQ,KAAK,OAAO,EAAE,CAAC,CAIvD,OAHA,MAAO,KAAK,UAAU,EAAE,CACxB,KAAK,YAAc,EACnB,KAAK,WAAa,EACXA,IAAM,MAAQ,MAAQ,SAMrC,MAHA,MAAK,YAAc,MAAO,KAAK,WAAW,GAAM,CAC5C,KAAK,WAAa,KAAK,aAAe,CAAC,GAAQ,KAAK,OAAO,EAAE,CAAC,GAC9D,KAAK,WAAa,KAAK,aACpB,MAAO,KAAK,iBAAiB,CAExC,CAAC,iBAAkB,CACf,GAAM,CAAC,EAAK,GAAO,KAAK,KAAK,EAAE,CAC/B,GAAI,CAAC,GAAO,CAAC,KAAK,MACd,OAAO,KAAK,QAAQ,cAAc,CACtC,IAAK,IAAQ,KAAO,IAAQ,KAAO,IAAQ,MAAQ,GAAQ,EAAI,CAAE,CAC7D,IAAM,GAAK,MAAO,KAAK,UAAU,EAAE,GAAK,MAAO,KAAK,WAAW,GAAK,EAGpE,MAFA,MAAK,WAAa,KAAK,YAAc,EACrC,KAAK,aAAe,EACb,MAAO,KAAK,iBAAiB,CAExC,MAAO,MAEX,CAAC,eAAgB,CACb,MAAO,KAAK,WAAW,GAAK,CAC5B,IAAM,EAAO,KAAK,SAAS,CAC3B,GAAI,IAAS,KACT,OAAO,KAAK,QAAQ,MAAM,CAC9B,IAAI,EAAI,MAAO,KAAK,gBAAgB,CACpC,OAAQ,EAAK,GAAb,CACI,IAAK,IACD,MAAO,KAAK,UAAU,EAAK,OAAS,EAAE,CAE1C,KAAK,OAED,OADA,MAAO,KAAK,aAAa,CAClB,MAAO,KAAK,gBAAgB,CACvC,IAAK,IACL,IAAK,IAID,OAHA,MAAO,KAAK,UAAU,EAAE,CACxB,KAAK,QAAU,GACf,KAAK,UAAY,EACV,OACX,IAAK,IACL,IAAK,IAGD,OADA,MAAO,KAAK,UAAU,EAAE,CACjB,MACX,IAAK,IAED,OADA,MAAO,KAAK,UAAU,GAAgB,CAC/B,MACX,IAAK,IACL,IAAK,IACD,OAAO,MAAO,KAAK,mBAAmB,CAC1C,IAAK,IACL,IAAK,IAKD,MAJA,IAAK,MAAO,KAAK,wBAAwB,CACzC,GAAK,MAAO,KAAK,WAAW,GAAK,CACjC,MAAO,KAAK,UAAU,EAAK,OAAS,EAAE,CACtC,MAAO,KAAK,aAAa,CAClB,MAAO,KAAK,kBAAkB,CACzC,QACI,OAAO,MAAO,KAAK,kBAAkB,EAGjD,CAAC,qBAAsB,CACnB,IAAI,EAAI,EACJX,EAAS,GACb,EACI,GAAK,MAAO,KAAK,aAAa,CAC1B,EAAK,GACL,EAAK,MAAO,KAAK,WAAW,GAAM,CAClC,KAAK,YAAc,EAAS,GAG5B,EAAK,EAET,GAAM,MAAO,KAAK,WAAW,GAAK,OAC7B,EAAK,EAAK,GACnB,IAAM,EAAO,KAAK,SAAS,CAC3B,GAAI,IAAS,KACT,OAAO,KAAK,QAAQ,OAAO,CAC/B,IAAKA,IAAW,IAAMA,EAAS,KAAK,YAAc,EAAK,KAAO,KACzDA,IAAW,IACP,EAAK,WAAW,MAAM,EAAI,EAAK,WAAW,MAAM,GACjD,GAAQ,EAAK,GAAG,GAOhB,EAHoBA,IAAW,KAAK,WAAa,GACjD,KAAK,YAAc,IAClB,EAAK,KAAO,KAAO,EAAK,KAAO,MAKhC,MAFA,MAAK,UAAY,EACjB,SACO,MAAO,KAAK,gBAAgB,CAG3C,IAAI,EAAI,EACR,KAAO,EAAK,KAAO,KACf,GAAK,MAAO,KAAK,UAAU,EAAE,CAC7B,GAAK,MAAO,KAAK,WAAW,GAAK,CACjC,KAAK,QAAU,GAGnB,OADA,GAAK,MAAO,KAAK,gBAAgB,CACzB,EAAK,GAAb,CACI,KAAK,OACD,MAAO,OACX,IAAK,IAED,OADA,MAAO,KAAK,UAAU,EAAK,OAAS,EAAE,CAC/B,OACX,IAAK,IACL,IAAK,IAID,OAHA,MAAO,KAAK,UAAU,EAAE,CACxB,KAAK,QAAU,GACf,KAAK,WAAa,EACX,OACX,IAAK,IACL,IAAK,IAID,OAHA,MAAO,KAAK,UAAU,EAAE,CACxB,KAAK,QAAU,GACf,OAAK,UACE,KAAK,UAAY,OAAS,MACrC,IAAK,IAED,OADA,MAAO,KAAK,UAAU,GAAgB,CAC/B,OACX,IAAK,IACL,IAAK,IAED,MADA,MAAK,QAAU,GACR,MAAO,KAAK,mBAAmB,CAC1C,IAAK,IAAK,CACN,IAAMnG,EAAO,KAAK,OAAO,EAAE,CAC3B,GAAI,KAAK,SAAW,GAAQA,EAAK,EAAIA,IAAS,IAI1C,MAHA,MAAK,QAAU,GACf,MAAO,KAAK,UAAU,EAAE,CACxB,MAAO,KAAK,WAAW,GAAK,CACrB,OAIf,QAEI,MADA,MAAK,QAAU,GACR,MAAO,KAAK,kBAAkB,EAGjD,CAAC,mBAAoB,CACjB,IAAM,EAAQ,KAAK,OAAO,EAAE,CACxB,EAAM,KAAK,OAAO,QAAQ,EAAO,KAAK,IAAM,EAAE,CAClD,GAAI,IAAU,IACV,KAAO,IAAQ,IAAM,KAAK,OAAO,EAAM,KAAO,KAC1C,EAAM,KAAK,OAAO,QAAQ,IAAK,EAAM,EAAE,MAI3C,KAAO,IAAQ,IAAI,CACf,IAAI,EAAI,EACR,KAAO,KAAK,OAAO,EAAM,EAAI,KAAO,MAChC,GAAK,EACT,GAAI,EAAI,GAAM,EACV,MACJ,EAAM,KAAK,OAAO,QAAQ,IAAK,EAAM,EAAE,CAI/C,IAAM,EAAK,KAAK,OAAO,UAAU,EAAG,EAAI,CACpC,EAAK,EAAG,QAAQ;EAAM,KAAK,IAAI,CACnC,GAAI,IAAO,GAAI,CACX,KAAO,IAAO,IAAI,CACd,IAAM,EAAK,KAAK,eAAe,EAAK,EAAE,CACtC,GAAI,IAAO,GACP,MACJ,EAAK,EAAG,QAAQ;EAAM,EAAG,CAEzB,IAAO,KAEP,EAAM,GAAM,EAAG,EAAK,KAAO,KAAO,EAAI,IAG9C,GAAI,IAAQ,GAAI,CACZ,GAAI,CAAC,KAAK,MACN,OAAO,KAAK,QAAQ,gBAAgB,CACxC,EAAM,KAAK,OAAO,OAGtB,OADA,MAAO,KAAK,YAAY,EAAM,EAAG,GAAM,CAChC,KAAK,UAAY,OAAS,MAErC,CAAC,wBAAyB,CACtB,KAAK,kBAAoB,GACzB,KAAK,gBAAkB,GACvB,IAAI,EAAI,KAAK,IACb,OAAa,CACT,IAAM,EAAK,KAAK,OAAO,EAAE,GACzB,GAAI,IAAO,IACP,KAAK,gBAAkB,WAClB,EAAK,KAAO,GAAM,IACvB,KAAK,kBAAoB,OAAO,EAAG,CAAG,UACjC,IAAO,IACZ,MAER,OAAO,MAAO,KAAK,UAAU,GAAM,GAAQ,EAAG,EAAI,IAAO,IAAI,CAEjE,CAAC,kBAAmB,CAChB,IAAI,EAAK,KAAK,IAAM,EAChBmG,EAAS,EACT,EACJ,KAAM,IAAK,IAAIC,EAAI,KAAK,IAAM,EAAK,KAAK,OAAOA,GAAK,EAAEA,EAClD,OAAQ,EAAR,CACI,IAAK,IACD,GAAU,EACV,MACJ,IAAK;EACD,EAAKA,EACL,EAAS,EACT,MACJ,IAAK,KAAM,CACP,IAAMpG,EAAO,KAAK,OAAOoG,EAAI,GAC7B,GAAI,CAACpG,GAAQ,CAAC,KAAK,MACf,OAAO,KAAK,QAAQ,eAAe,CACvC,GAAIA,IAAS;EACT,MAER,QACI,MAAM,KAGlB,GAAI,CAAC,GAAM,CAAC,KAAK,MACb,OAAO,KAAK,QAAQ,eAAe,CACvC,GAAImG,GAAU,KAAK,WAAY,CACvB,KAAK,oBAAsB,GAC3B,KAAK,WAAaA,EAElB,KAAK,WACD,KAAK,mBAAqB,KAAK,aAAe,EAAI,EAAI,KAAK,YAEnE,EAAG,CACC,IAAM,EAAK,KAAK,eAAe,EAAK,EAAE,CACtC,GAAI,IAAO,GACP,MACJ,EAAK,KAAK,OAAO,QAAQ;EAAM,EAAG,OAC7B,IAAO,IAChB,GAAI,IAAO,GAAI,CACX,GAAI,CAAC,KAAK,MACN,OAAO,KAAK,QAAQ,eAAe,CACvC,EAAK,KAAK,OAAO,QAKzB,IAAI,EAAI,EAAK,EAEb,IADA,EAAK,KAAK,OAAO,GACV,IAAO,KACV,EAAK,KAAK,OAAO,EAAE,GACvB,GAAI,IAAO,IAAM,CACb,KAAO,IAAO,KAAQ,IAAO,KAAO,IAAO,MAAQ,IAAO;GACtD,EAAK,KAAK,OAAO,EAAE,GACvB,EAAK,EAAI,UAEJ,CAAC,KAAK,gBACX,EAAG,CACC,IAAIC,EAAI,EAAK,EACT+B,EAAK,KAAK,OAAO/B,GACjB+B,IAAO,OACP,EAAK,KAAK,OAAO,EAAE/B,IACvB,IAAM,EAAWA,EACjB,KAAO+B,IAAO,KACV,EAAK,KAAK,OAAO,EAAE/B,GACvB,GAAI+B,IAAO;GAAQ/B,GAAK,KAAK,KAAOA,EAAI,EAAID,EAAS,EACjD,EAAKC,OAEL,YACC,IAIb,OAFA,SACA,MAAO,KAAK,YAAY,EAAK,EAAG,GAAK,CAC9B,MAAO,KAAK,gBAAgB,CAEvC,CAAC,kBAAmB,CAChB,IAAM,EAAS,KAAK,UAAY,EAC5B,EAAM,KAAK,IAAM,EACjB,EAAI,KAAK,IAAM,EACf,EACJ,KAAQ,EAAK,KAAK,OAAO,EAAE,IACvB,GAAI,IAAO,IAAK,CACZ,IAAMpG,EAAO,KAAK,OAAO,EAAI,GAC7B,GAAI,GAAQA,EAAK,EAAK,GAAU,GAAmB,IAAIA,EAAK,CACxD,MACJ,EAAM,UAED,GAAQ,EAAG,CAAE,CAClB,IAAIA,EAAO,KAAK,OAAO,EAAI,GAU3B,GATI,IAAO,OACHA,IAAS;GACT,GAAK,EACL,EAAK;EACL,EAAO,KAAK,OAAO,EAAI,IAGvB,EAAM,GAEVA,IAAS,KAAQ,GAAU,GAAmB,IAAIA,EAAK,CACvD,MACJ,GAAI,IAAO;EAAM,CACb,IAAM,EAAK,KAAK,eAAe,EAAI,EAAE,CACrC,GAAI,IAAO,GACP,MACJ,EAAI,KAAK,IAAI,EAAG,EAAK,EAAE,MAG1B,CACD,GAAI,GAAU,GAAmB,IAAI,EAAG,CACpC,MACJ,EAAM,EAOd,MAJI,CAAC,GAAM,CAAC,KAAK,MACN,KAAK,QAAQ,eAAe,EACvC,SACA,MAAO,KAAK,YAAY,EAAM,EAAG,GAAK,CAC/B,EAAS,OAAS,OAE7B,CAAC,UAAU,EAAG,CAMV,OALI,EAAI,GACJ,MAAM,KAAK,OAAO,OAAO,KAAK,IAAK,EAAE,CACrC,KAAK,KAAO,EACL,GAEJ,EAEX,CAAC,YAAY,EAAG,EAAY,CACxB,IAAM8G,EAAI,KAAK,OAAO,MAAM,KAAK,IAAK,EAAE,CAQxC,OAPIA,GACA,MAAMA,EACN,KAAK,KAAOA,EAAE,OACPA,EAAE,SAEJ,IACL,KAAM,IACH,GAEX,CAAC,gBAAiB,CACd,OAAQ,KAAK,OAAO,EAAE,CAAtB,CACI,IAAK,IACD,OAAS,MAAO,KAAK,SAAS,GACzB,MAAO,KAAK,WAAW,GAAK,GAC5B,MAAO,KAAK,gBAAgB,EACrC,IAAK,IACD,OAAS,MAAO,KAAK,UAAU,GAAgB,GAC1C,MAAO,KAAK,WAAW,GAAK,GAC5B,MAAO,KAAK,gBAAgB,EACrC,IAAK,IACL,IAAK,IACL,IAAK,IAAK,CACN,IAAM,EAAS,KAAK,UAAY,EAC1B,EAAM,KAAK,OAAO,EAAE,CAC1B,GAAI,GAAQ,EAAI,EAAK,GAAU,GAAmB,IAAI,EAAI,CAKtD,OAJK,EAGD,KAAK,UAAU,GAFf,KAAK,WAAa,KAAK,YAAc,GAGhC,MAAO,KAAK,UAAU,EAAE,GAC5B,MAAO,KAAK,WAAW,GAAK,GAC5B,MAAO,KAAK,gBAAgB,GAI7C,MAAO,GAEX,CAAC,SAAU,CACP,GAAI,KAAK,OAAO,EAAE,GAAK,IAAK,CACxB,IAAI,EAAI,KAAK,IAAM,EACf,EAAK,KAAK,OAAO,GACrB,KAAO,CAAC,GAAQ,EAAG,EAAI,IAAO,KAC1B,EAAK,KAAK,OAAO,EAAE,GACvB,OAAO,MAAO,KAAK,YAAY,IAAO,IAAM,EAAI,EAAI,EAAG,GAAM,KAE5D,CACD,IAAI,EAAI,KAAK,IAAM,EACf,EAAK,KAAK,OAAO,GACrB,KAAO,GACH,GAAI,GAAS,IAAI,EAAG,CAChB,EAAK,KAAK,OAAO,EAAE,WACd,IAAO,KACZ,GAAU,IAAI,KAAK,OAAO,EAAI,GAAG,EACjC,GAAU,IAAI,KAAK,OAAO,EAAI,GAAG,CACjC,EAAK,KAAK,OAAQ,GAAK,QAGvB,MAER,OAAO,MAAO,KAAK,YAAY,EAAG,GAAM,EAGhD,CAAC,aAAc,CACX,IAAM,EAAK,KAAK,OAAO,KAAK,KAMxB,OALA,IAAO;EACA,MAAO,KAAK,UAAU,EAAE,CAC1B,IAAO,MAAQ,KAAK,OAAO,EAAE,GAAK;EAChC,MAAO,KAAK,UAAU,EAAE,CAExB,EAEf,CAAC,WAAW,EAAW,CACnB,IAAI,EAAI,KAAK,IAAM,EACf,EACJ,EACI,GAAK,KAAK,OAAO,EAAE,SACd,IAAO,KAAQ,GAAa,IAAO,KAC5C,IAAM,EAAI,EAAI,KAAK,IAKnB,OAJI,EAAI,IACJ,MAAM,KAAK,OAAO,OAAO,KAAK,IAAK,EAAE,CACrC,KAAK,IAAM,GAER,EAEX,CAAC,UAAU,EAAM,CACb,IAAI,EAAI,KAAK,IACT,EAAK,KAAK,OAAO,GACrB,KAAO,CAAC,EAAK,EAAG,EACZ,EAAK,KAAK,OAAO,EAAE,GACvB,OAAO,MAAO,KAAK,YAAY,EAAG,GAAM,GCnsB1C,GAAN,KAAkB,CACd,aAAc,CACV,KAAK,WAAa,EAAE,CAKpB,KAAK,WAAc,GAAW,KAAK,WAAW,KAAK,EAAO,CAM1D,KAAK,QAAW,GAAW,CACvB,IAAI,EAAM,EACN,EAAO,KAAK,WAAW,OAC3B,KAAO,EAAM,GAAM,CACf,IAAM,EAAO,EAAM,GAAS,EACxB,KAAK,WAAW,GAAO,EACvB,EAAM,EAAM,EAEZ,EAAO,EAEf,GAAI,KAAK,WAAW,KAAS,EACzB,MAAO,CAAE,KAAM,EAAM,EAAG,IAAK,EAAG,CACpC,GAAI,IAAQ,EACR,MAAO,CAAE,KAAM,EAAG,IAAK,EAAQ,CACnC,IAAM,EAAQ,KAAK,WAAW,EAAM,GACpC,MAAO,CAAE,KAAM,EAAK,IAAK,EAAS,EAAQ,EAAG,IC9BzD,SAAS,GAAc,EAAM,EAAM,CAC/B,IAAK,IAAI,EAAI,EAAG,EAAIhF,EAAK,OAAQ,EAAE,EAC/B,GAAIA,EAAK,GAAG,OAAS,EACjB,MAAO,GACf,MAAO,GAEX,SAAS,GAAkB,EAAM,CAC7B,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAK,OAAQ,EAAE,EAC/B,OAAQA,EAAK,GAAG,KAAhB,CACI,IAAK,QACL,IAAK,UACL,IAAK,UACD,MACJ,QACI,OAAO,EAGnB,MAAO,GAEX,SAAS,GAAY,EAAO,CACxB,OAAQ,GAAO,KAAf,CACI,IAAK,QACL,IAAK,SACL,IAAK,uBACL,IAAK,uBACL,IAAK,kBACD,MAAO,GACX,QACI,MAAO,IAGnB,SAAS,GAAa,EAAQ,CAC1B,OAAQ,EAAO,KAAf,CACI,IAAK,WACD,OAAO,EAAO,MAClB,IAAK,YAAa,CACd,IAAM,EAAK,EAAO,MAAM,EAAO,MAAM,OAAS,GAC9C,OAAO,EAAG,KAAO,EAAG,MAExB,IAAK,YACD,OAAO,EAAO,MAAM,EAAO,MAAM,OAAS,GAAG,MAEjD,QACI,MAAO,EAAE,EAIrB,SAAS,GAAsB,EAAM,CACjC,GAAI,EAAK,SAAW,EAChB,MAAO,EAAE,CACb,IAAI,EAAI,EAAK,OACb,KAAM,KAAO,EAAE,GAAK,GAChB,OAAQ,EAAK,GAAG,KAAhB,CACI,IAAK,YACL,IAAK,mBACL,IAAK,gBACL,IAAK,eACL,IAAK,UACD,MAAM,KAGlB,KAAO,EAAK,EAAE,IAAI,OAAS,UAG3B,OAAO,EAAK,OAAO,EAAG,EAAK,OAAO,CAEtC,SAAS,GAAgB,EAAI,CACzB,GAAI,EAAG,MAAM,OAAS,qBACb,IAAM,KAAM,EAAG,MACZ,EAAG,KACH,CAAC,EAAG,OACJ,CAAC,GAAc,EAAG,MAAO,mBAAmB,EAC5C,CAAC,GAAc,EAAG,IAAK,gBAAgB,GACnC,EAAG,MACH,EAAG,MAAQ,EAAG,KAClB,OAAO,EAAG,IACN,GAAY,EAAG,MAAM,CACjB,EAAG,MAAM,IACT,MAAM,UAAU,KAAK,MAAM,EAAG,MAAM,IAAK,EAAG,IAAI,CAEhD,EAAG,MAAM,IAAM,EAAG,IAGtB,MAAM,UAAU,KAAK,MAAM,EAAG,MAAO,EAAG,IAAI,CAChD,OAAO,EAAG,KAgC1B,IAAMsG,GAAN,KAAa,CAKT,YAAY,EAAW,CAEnB,KAAK,UAAY,GAEjB,KAAK,SAAW,GAEhB,KAAK,OAAS,EAEd,KAAK,OAAS,EAEd,KAAK,UAAY,GAEjB,KAAK,MAAQ,EAAE,CAEf,KAAK,OAAS,GAEd,KAAK,KAAO,GAEZ,KAAK,MAAQ,IAAI,GACjB,KAAK,UAAY,EAUrB,CAAC,MAAM,EAAQ,EAAa,GAAO,CAC3B,KAAK,WAAa,KAAK,SAAW,GAClC,KAAK,UAAU,EAAE,CACrB,IAAK,IAAM,KAAU,KAAK,MAAM,IAAI,EAAQ,EAAW,CACnD,MAAO,KAAK,KAAK,EAAO,CACvB,IACD,MAAO,KAAK,KAAK,EAKzB,CAAC,KAAK,EAAQ,CAEV,GADA,KAAK,OAAS,EACV,KAAK,SAAU,CACf,KAAK,SAAW,GAChB,MAAO,KAAK,MAAM,CAClB,KAAK,QAAU,EAAO,OACtB,OAEJ,IAAM,EAAO,GAAU,EAAO,CAC9B,GAAK,KAKI,IAAS,SACd,KAAK,UAAY,GACjB,KAAK,SAAW,GAChB,KAAK,KAAO,aAEX,CAGD,OAFA,KAAK,KAAO,EACZ,MAAO,KAAK,MAAM,CACV,EAAR,CACI,IAAK,UACD,KAAK,UAAY,GACjB,KAAK,OAAS,EACV,KAAK,WACL,KAAK,UAAU,KAAK,OAAS,EAAO,OAAO,CAC/C,MACJ,IAAK,QACG,KAAK,WAAa,EAAO,KAAO,MAChC,KAAK,QAAU,EAAO,QAC1B,MACJ,IAAK,mBACL,IAAK,gBACL,IAAK,eACG,KAAK,YACL,KAAK,QAAU,EAAO,QAC1B,MACJ,IAAK,WACL,IAAK,iBACD,OACJ,QACI,KAAK,UAAY,GAEzB,KAAK,QAAU,EAAO,WApCf,CACP,IAAM,EAAU,qBAAqB,IACrC,MAAO,KAAK,IAAI,CAAE,KAAM,QAAS,OAAQ,KAAK,OAAQ,UAAS,SAAQ,CAAC,CACxE,KAAK,QAAU,EAAO,QAqC9B,CAAC,KAAM,CACH,KAAO,KAAK,MAAM,OAAS,GACvB,MAAO,KAAK,KAAK,CAEzB,IAAI,aAAc,CAOd,MANW,CACP,KAAM,KAAK,KACX,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,OAAQ,KAAK,OAChB,CAGL,CAAC,MAAO,CACJ,IAAM,EAAM,KAAK,KAAK,EAAE,CACxB,GAAI,KAAK,OAAS,YAAc,CAAC,GAAO,EAAI,OAAS,WAAY,CAC7D,KAAO,KAAK,MAAM,OAAS,GACvB,MAAO,KAAK,KAAK,CACrB,KAAK,MAAM,KAAK,CACZ,KAAM,UACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OAChB,CAAC,CACF,OAEJ,GAAI,CAAC,EACD,OAAO,MAAO,KAAK,QAAQ,CAC/B,OAAQ,EAAI,KAAZ,CACI,IAAK,WACD,OAAO,MAAO,KAAK,SAAS,EAAI,CACpC,IAAK,QACL,IAAK,SACL,IAAK,uBACL,IAAK,uBACD,OAAO,MAAO,KAAK,OAAO,EAAI,CAClC,IAAK,eACD,OAAO,MAAO,KAAK,YAAY,EAAI,CACvC,IAAK,YACD,OAAO,MAAO,KAAK,SAAS,EAAI,CACpC,IAAK,YACD,OAAO,MAAO,KAAK,cAAc,EAAI,CACzC,IAAK,kBACD,OAAO,MAAO,KAAK,eAAe,EAAI,CAC1C,IAAK,UACD,OAAO,MAAO,KAAK,YAAY,EAAI,CAG3C,MAAO,KAAK,KAAK,CAErB,KAAK,EAAG,CACJ,OAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GAE1C,CAAC,IAAI,EAAO,CACR,IAAM,EAAQ,GAAS,KAAK,MAAM,KAAK,CAEvC,GAAI,CAAC,EAED,KAAM,CAAE,KAAM,QAAS,OAAQ,KAAK,OAAQ,OAAQ,GAAI,QADxC,8BACiD,SAE5D,KAAK,MAAM,SAAW,EAC3B,MAAM,MAEL,CACD,IAAM,EAAM,KAAK,KAAK,EAAE,CAWxB,OAVI,EAAM,OAAS,eAEf,EAAM,OAAS,WAAY,EAAM,EAAI,OAAS,EAEzC,EAAM,OAAS,mBAAqB,EAAI,OAAS,aAEtD,EAAM,OAAS,GAEf,EAAM,OAAS,mBACf,GAAgB,EAAM,CAClB,EAAI,KAAZ,CACI,IAAK,WACD,EAAI,MAAQ,EACZ,MACJ,IAAK,eACD,EAAI,MAAM,KAAK,EAAM,CACrB,MACJ,IAAK,YAAa,CACd,IAAM,EAAK,EAAI,MAAM,EAAI,MAAM,OAAS,GACxC,GAAI,EAAG,MAAO,CACV,EAAI,MAAM,KAAK,CAAE,MAAO,EAAE,CAAE,IAAK,EAAO,IAAK,GAAI,CAAC,CAClD,KAAK,UAAY,GACjB,eAEK,EAAG,IACR,EAAG,MAAQ,MAEV,CACD,OAAO,OAAO,EAAI,CAAE,IAAK,EAAO,IAAK,GAAI,CAAC,CAC1C,KAAK,UAAY,CAAC,EAAG,YACrB,OAEJ,MAEJ,IAAK,YAAa,CACd,IAAM,EAAK,EAAI,MAAM,EAAI,MAAM,OAAS,GACpC,EAAG,MACH,EAAI,MAAM,KAAK,CAAE,MAAO,EAAE,CAAE,MAAO,EAAO,CAAC,CAE3C,EAAG,MAAQ,EACf,MAEJ,IAAK,kBAAmB,CACpB,IAAM,EAAK,EAAI,MAAM,EAAI,MAAM,OAAS,GACpC,CAAC,GAAM,EAAG,MACV,EAAI,MAAM,KAAK,CAAE,MAAO,EAAE,CAAE,IAAK,EAAO,IAAK,GAAI,CAAC,CAC7C,EAAG,IACR,EAAG,MAAQ,EAEX,OAAO,OAAO,EAAI,CAAE,IAAK,EAAO,IAAK,GAAI,CAAC,CAC9C,OAGJ,QACI,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,IAAI,EAAM,CAE9B,IAAK,EAAI,OAAS,YACd,EAAI,OAAS,aACb,EAAI,OAAS,eACZ,EAAM,OAAS,aAAe,EAAM,OAAS,aAAc,CAC5D,IAAM,EAAO,EAAM,MAAM,EAAM,MAAM,OAAS,GAC1C,GACA,CAAC,EAAK,KACN,CAAC,EAAK,OACN,EAAK,MAAM,OAAS,GACpB,GAAkB,EAAK,MAAM,GAAK,KACjC,EAAM,SAAW,GACd,EAAK,MAAM,MAAM,GAAM,EAAG,OAAS,WAAa,EAAG,OAAS,EAAM,OAAO,IACzE,EAAI,OAAS,WACb,EAAI,IAAM,EAAK,MAEf,EAAI,MAAM,KAAK,CAAE,MAAO,EAAK,MAAO,CAAC,CACzC,EAAM,MAAM,OAAO,GAAI,EAAE,IAKzC,CAAC,QAAS,CACN,OAAQ,KAAK,KAAb,CACI,IAAK,iBACD,KAAM,CAAE,KAAM,YAAa,OAAQ,KAAK,OAAQ,OAAQ,KAAK,OAAQ,CACrE,OACJ,IAAK,kBACL,IAAK,QACL,IAAK,UACL,IAAK,UACD,MAAM,KAAK,YACX,OACJ,IAAK,WACL,IAAK,YAAa,CACd,IAAM,EAAM,CACR,KAAM,WACN,OAAQ,KAAK,OACb,MAAO,GACV,CACG,KAAK,OAAS,aACd,EAAI,MAAM,KAAK,KAAK,YAAY,CACpC,KAAK,MAAM,KAAK,EAAI,CACpB,QAGR,KAAM,CACF,KAAM,QACN,OAAQ,KAAK,OACb,QAAS,cAAc,KAAK,KAAK,uBACjC,OAAQ,KAAK,OAChB,CAEL,CAAC,SAAS,EAAK,CACX,GAAI,EAAI,MACJ,OAAO,MAAO,KAAK,QAAQ,EAAI,CACnC,OAAQ,KAAK,KAAb,CACI,IAAK,YACG,GAAkB,EAAI,MAAM,GAAK,GAKjC,EAAI,MAAM,KAAK,KAAK,YAAY,EAJhC,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,EAItB,OAEJ,IAAK,SACL,IAAK,MACL,IAAK,QACL,IAAK,UACL,IAAK,UACD,EAAI,MAAM,KAAK,KAAK,YAAY,CAChC,OAER,IAAM,EAAK,KAAK,gBAAgB,EAAI,CAChC,EACA,KAAK,MAAM,KAAK,EAAG,CAEnB,KAAM,CACF,KAAM,QACN,OAAQ,KAAK,OACb,QAAS,cAAc,KAAK,KAAK,yBACjC,OAAQ,KAAK,OAChB,CAGT,CAAC,OAAO,EAAQ,CACZ,GAAI,KAAK,OAAS,gBAAiB,CAC/B,IAAM,EAAO,GAAa,KAAK,KAAK,EAAE,CAAC,CACjC,EAAQ,GAAsB,EAAK,CACrC,EACA,EAAO,KACP,EAAM,EAAO,IACb,EAAI,KAAK,KAAK,YAAY,CAC1B,OAAO,EAAO,KAGd,EAAM,CAAC,KAAK,YAAY,CAC5B,IAAMzE,EAAM,CACR,KAAM,YACN,OAAQ,EAAO,OACf,OAAQ,EAAO,OACf,MAAO,CAAC,CAAE,QAAO,IAAK,EAAQ,MAAK,EACtC,CACD,KAAK,UAAY,GACjB,KAAK,MAAM,KAAK,MAAM,OAAS,GAAKA,OAGpC,MAAO,KAAK,QAAQ,EAAO,CAEnC,CAAC,YAAY,EAAQ,CACjB,OAAQ,KAAK,KAAb,CACI,IAAK,QACL,IAAK,UACL,IAAK,UACD,EAAO,MAAM,KAAK,KAAK,YAAY,CACnC,OACJ,IAAK,SAKD,GAJA,EAAO,OAAS,KAAK,OAErB,KAAK,UAAY,GACjB,KAAK,OAAS,EACV,KAAK,UAAW,CAChB,IAAI,EAAK,KAAK,OAAO,QAAQ;EAAK,CAAG,EACrC,KAAO,IAAO,GACV,KAAK,UAAU,KAAK,OAAS,EAAG,CAChC,EAAK,KAAK,OAAO,QAAQ;EAAM,EAAG,CAAG,EAG7C,MAAO,KAAK,KAAK,CACjB,MAEJ,QACI,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,EAG9B,CAAC,SAAS,EAAK,CACX,IAAM,EAAKA,EAAI,MAAMA,EAAI,MAAM,OAAS,GAExC,OAAQ,KAAK,KAAb,CACI,IAAK,UAED,GADA,KAAK,UAAY,GACb,EAAG,MAAO,CACV,IAAM,EAAM,QAAS,EAAG,MAAQ,EAAG,MAAM,IAAM,QAClC,MAAM,QAAQ,EAAI,CAAG,EAAI,EAAI,OAAS,GAAK,SAC9C,OAAS,UACf,GAAK,KAAK,KAAK,YAAY,CAE3B,EAAI,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,MAE5C,EAAG,IACR,EAAG,IAAI,KAAK,KAAK,YAAY,CAG7B,EAAG,MAAM,KAAK,KAAK,YAAY,CAEnC,OACJ,IAAK,QACL,IAAK,UACD,GAAI,EAAG,MACH,EAAI,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,SAExC,EAAG,IACR,EAAG,IAAI,KAAK,KAAK,YAAY,KAE5B,CACD,GAAI,KAAK,kBAAkB,EAAG,MAAOA,EAAI,OAAO,CAAE,CAE9C,IAAM,EADOA,EAAI,MAAMA,EAAI,MAAM,OAAS,IACxB,OAAO,IACzB,GAAI,MAAM,QAAQ,EAAI,CAAE,CACpB,MAAM,UAAU,KAAK,MAAM,EAAK,EAAG,MAAM,CACzC,EAAI,KAAK,KAAK,YAAY,CAC1B,EAAI,MAAM,KAAK,CACf,QAGR,EAAG,MAAM,KAAK,KAAK,YAAY,CAEnC,OAER,GAAI,KAAK,QAAUA,EAAI,OAAQ,CAC3B,IAAM,EAAc,CAAC,KAAK,WAAa,KAAK,SAAWA,EAAI,OACrD,EAAa,IACd,EAAG,KAAO,EAAG,cACd,KAAK,OAAS,eAEd,EAAQ,EAAE,CACd,GAAI,GAAc,EAAG,KAAO,CAAC,EAAG,MAAO,CACnC,IAAM,EAAK,EAAE,CACb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAAI,OAAQ,EAAE,EAAG,CACpC,IAAM,EAAK,EAAG,IAAI,GAClB,OAAQ,EAAG,KAAX,CACI,IAAK,UACD,EAAG,KAAK,EAAE,CACV,MACJ,IAAK,QACD,MACJ,IAAK,UACG,EAAG,OAASA,EAAI,SAChB,EAAG,OAAS,GAChB,MACJ,QACI,EAAG,OAAS,GAGpB,EAAG,QAAU,IACb,EAAQ,EAAG,IAAI,OAAO,EAAG,GAAG,EAEpC,OAAQ,KAAK,KAAb,CACI,IAAK,SACL,IAAK,MACG,GAAc,EAAG,OACjB,EAAM,KAAK,KAAK,YAAY,CAC5B,EAAI,MAAM,KAAK,CAAE,QAAO,CAAC,CACzB,KAAK,UAAY,IAEZ,EAAG,IACR,EAAG,IAAI,KAAK,KAAK,YAAY,CAG7B,EAAG,MAAM,KAAK,KAAK,YAAY,CAEnC,OACJ,IAAK,mBACG,CAAC,EAAG,KAAO,CAAC,EAAG,aACf,EAAG,MAAM,KAAK,KAAK,YAAY,CAC/B,EAAG,YAAc,IAEZ,GAAc,EAAG,OACtB,EAAM,KAAK,KAAK,YAAY,CAC5B,EAAI,MAAM,KAAK,CAAE,QAAO,YAAa,GAAM,CAAC,EAG5C,KAAK,MAAM,KAAK,CACZ,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,YAAa,GAAM,EAC3D,CAAC,CAEN,KAAK,UAAY,GACjB,OACJ,IAAK,gBACD,GAAI,EAAG,YACH,GAAK,EAAG,OAcC,EAAG,MACR,EAAI,MAAM,KAAK,CAAE,MAAO,EAAE,CAAE,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,CAAC,SAE5D,GAAc,EAAG,IAAK,gBAAgB,CAC3C,KAAK,MAAM,KAAK,CACZ,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,QAAO,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,EACxD,CAAC,SAEG,GAAY,EAAG,IAAI,EACxB,CAAC,GAAc,EAAG,IAAK,UAAU,CAAE,CACnC,IAAMjB,EAAQ,GAAsB,EAAG,MAAM,CACvC,EAAM,EAAG,IACT,EAAM,EAAG,IACf,EAAI,KAAK,KAAK,YAAY,CAE1B,OAAO,EAAG,IAEV,OAAO,EAAG,IACV,KAAK,MAAM,KAAK,CACZ,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,QAAO,MAAK,MAAK,EAC9B,CAAC,MAEG,EAAM,OAAS,EAEpB,EAAG,IAAM,EAAG,IAAI,OAAO,EAAO,KAAK,YAAY,CAG/C,EAAG,IAAI,KAAK,KAAK,YAAY,SA9CzB,GAAc,EAAG,MAAO,UAAU,CAClC,OAAO,OAAO,EAAI,CAAE,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,CAAC,KAExD,CACD,IAAMA,EAAQ,GAAsB,EAAG,MAAM,CAC7C,KAAK,MAAM,KAAK,CACZ,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,QAAO,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,EACxD,CAAC,MAwCL,EAAG,IAGC,EAAG,OAAS,EACjB,EAAI,MAAM,KAAK,CAAE,QAAO,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,CAAC,CAExD,GAAc,EAAG,IAAK,gBAAgB,CAC3C,KAAK,MAAM,KAAK,CACZ,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,MAAO,EAAE,CAAE,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,EAC5D,CAAC,CAGF,EAAG,IAAI,KAAK,KAAK,YAAY,CAd7B,OAAO,OAAO,EAAI,CAAE,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,CAAC,CAiBjE,KAAK,UAAY,GACjB,OACJ,IAAK,QACL,IAAK,SACL,IAAK,uBACL,IAAK,uBAAwB,CACzB,IAAM,EAAK,KAAK,WAAW,KAAK,KAAK,CACjC,GAAc,EAAG,OACjB,EAAI,MAAM,KAAK,CAAE,QAAO,IAAK,EAAI,IAAK,GAAI,CAAC,CAC3C,KAAK,UAAY,IAEZ,EAAG,IACR,KAAK,MAAM,KAAK,EAAG,EAGnB,OAAO,OAAO,EAAI,CAAE,IAAK,EAAI,IAAK,GAAI,CAAC,CACvC,KAAK,UAAY,IAErB,OAEJ,QAAS,CACL,IAAM,EAAK,KAAK,gBAAgBiB,EAAI,CACpC,GAAI,EAAI,CACJ,GAAI,EAAG,OAAS,gBACR,CAAC,EAAG,aACJ,EAAG,KACH,CAAC,GAAc,EAAG,IAAK,UAAU,CAAE,CACnC,MAAO,KAAK,IAAI,CACZ,KAAM,QACN,OAAQ,KAAK,OACb,QAAS,iDACT,OAAQ,KAAK,OAChB,CAAC,CACF,aAGC,GACL,EAAI,MAAM,KAAK,CAAE,QAAO,CAAC,CAE7B,KAAK,MAAM,KAAK,EAAG,CACnB,UAKhB,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,CAEtB,CAAC,cAAc,EAAK,CAChB,IAAM,EAAK+C,EAAI,MAAMA,EAAI,MAAM,OAAS,GACxC,OAAQ,KAAK,KAAb,CACI,IAAK,UACD,GAAI,EAAG,MAAO,CACV,IAAM,EAAM,QAAS,EAAG,MAAQ,EAAG,MAAM,IAAM,QAClC,MAAM,QAAQ,EAAI,CAAG,EAAI,EAAI,OAAS,GAAK,SAC9C,OAAS,UACf,GAAK,KAAK,KAAK,YAAY,CAE3B,EAAI,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,MAGjD,EAAG,MAAM,KAAK,KAAK,YAAY,CACnC,OACJ,IAAK,QACL,IAAK,UACD,GAAI,EAAG,MACH,EAAI,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,KAC5C,CACD,GAAI,KAAK,kBAAkB,EAAG,MAAOA,EAAI,OAAO,CAAE,CAE9C,IAAM,EADOA,EAAI,MAAMA,EAAI,MAAM,OAAS,IACxB,OAAO,IACzB,GAAI,MAAM,QAAQ,EAAI,CAAE,CACpB,MAAM,UAAU,KAAK,MAAM,EAAK,EAAG,MAAM,CACzC,EAAI,KAAK,KAAK,YAAY,CAC1B,EAAI,MAAM,KAAK,CACf,QAGR,EAAG,MAAM,KAAK,KAAK,YAAY,CAEnC,OACJ,IAAK,SACL,IAAK,MACD,GAAI,EAAG,OAAS,KAAK,QAAUA,EAAI,OAC/B,MACJ,EAAG,MAAM,KAAK,KAAK,YAAY,CAC/B,OACJ,IAAK,eACD,GAAI,KAAK,SAAWA,EAAI,OACpB,MACA,EAAG,OAAS,GAAc,EAAG,MAAO,eAAe,CACnD,EAAI,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,CAE7C,EAAG,MAAM,KAAK,KAAK,YAAY,CACnC,OAER,GAAI,KAAK,OAASA,EAAI,OAAQ,CAC1B,IAAM,EAAK,KAAK,gBAAgBA,EAAI,CACpC,GAAI,EAAI,CACJ,KAAK,MAAM,KAAK,EAAG,CACnB,QAGR,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,CAEtB,CAAC,eAAe,EAAI,CAChB,IAAM,EAAK,EAAG,MAAM,EAAG,MAAM,OAAS,GACtC,GAAI,KAAK,OAAS,iBAAkB,CAChC,IAAI,EACJ,GACI,MAAO,KAAK,KAAK,CACjB,EAAM,KAAK,KAAK,EAAE,OACb,GAAO,EAAI,OAAS,2BAExB,EAAG,IAAI,SAAW,EAAG,CAC1B,OAAQ,KAAK,KAAb,CACI,IAAK,QACL,IAAK,mBACG,CAAC,GAAM,EAAG,IACV,EAAG,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,CAE5C,EAAG,MAAM,KAAK,KAAK,YAAY,CACnC,OACJ,IAAK,gBACG,CAAC,GAAM,EAAG,MACV,EAAG,MAAM,KAAK,CAAE,MAAO,EAAE,CAAE,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,CAAC,CAC3D,EAAG,IACR,EAAG,IAAI,KAAK,KAAK,YAAY,CAE7B,OAAO,OAAO,EAAI,CAAE,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,CAAC,CAC7D,OACJ,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,SACL,IAAK,MACG,CAAC,GAAM,EAAG,MACV,EAAG,MAAM,KAAK,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,CAAC,CACvC,EAAG,IACR,EAAG,IAAI,KAAK,KAAK,YAAY,CAE7B,EAAG,MAAM,KAAK,KAAK,YAAY,CACnC,OACJ,IAAK,QACL,IAAK,SACL,IAAK,uBACL,IAAK,uBAAwB,CACzB,IAAM,EAAK,KAAK,WAAW,KAAK,KAAK,CACjC,CAAC,GAAM,EAAG,MACV,EAAG,MAAM,KAAK,CAAE,MAAO,EAAE,CAAE,IAAK,EAAI,IAAK,GAAI,CAAC,CACzC,EAAG,IACR,KAAK,MAAM,KAAK,EAAG,CAEnB,OAAO,OAAO,EAAI,CAAE,IAAK,EAAI,IAAK,GAAI,CAAC,CAC3C,OAEJ,IAAK,eACL,IAAK,eACD,EAAG,IAAI,KAAK,KAAK,YAAY,CAC7B,OAER,IAAM,EAAK,KAAK,gBAAgB,EAAG,CAE/B,EACA,KAAK,MAAM,KAAK,EAAG,EAEnB,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,MAGrB,CACD,IAAM,EAAS,KAAK,KAAK,EAAE,CAC3B,GAAI,EAAO,OAAS,cACd,KAAK,OAAS,iBAAmB,EAAO,SAAW,EAAG,QACnD,KAAK,OAAS,WACX,CAAC,EAAO,MAAM,EAAO,MAAM,OAAS,GAAG,KAC/C,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,SAEb,KAAK,OAAS,iBACnB,EAAO,OAAS,kBAAmB,CACnC,IAAM,EAAO,GAAa,EAAO,CAC3B,EAAQ,GAAsB,EAAK,CACzC,GAAgB,EAAG,CACnB,IAAM,EAAM,EAAG,IAAI,OAAO,EAAG,EAAG,IAAI,OAAO,CAC3C,EAAI,KAAK,KAAK,YAAY,CAC1B,IAAM/C,EAAM,CACR,KAAM,YACN,OAAQ,EAAG,OACX,OAAQ,EAAG,OACX,MAAO,CAAC,CAAE,QAAO,IAAK,EAAI,MAAK,EAClC,CACD,KAAK,UAAY,GACjB,KAAK,MAAM,KAAK,MAAM,OAAS,GAAKA,OAGpC,MAAO,KAAK,QAAQ,EAAG,EAInC,WAAW,EAAM,CACb,GAAI,KAAK,UAAW,CAChB,IAAI,EAAK,KAAK,OAAO,QAAQ;EAAK,CAAG,EACrC,KAAO,IAAO,GACV,KAAK,UAAU,KAAK,OAAS,EAAG,CAChC,EAAK,KAAK,OAAO,QAAQ;EAAM,EAAG,CAAG,EAG7C,MAAO,CACH,OACA,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,OAAQ,KAAK,OAChB,CAEL,gBAAgB,EAAQ,CACpB,OAAQ,KAAK,KAAb,CACI,IAAK,QACL,IAAK,SACL,IAAK,uBACL,IAAK,uBACD,OAAO,KAAK,WAAW,KAAK,KAAK,CACrC,IAAK,sBACD,MAAO,CACH,KAAM,eACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,KAAK,YAAY,CACzB,OAAQ,GACX,CACL,IAAK,iBACL,IAAK,iBACD,MAAO,CACH,KAAM,kBACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,KAAK,YACZ,MAAO,EAAE,CACT,IAAK,GACR,CACL,IAAK,eACD,MAAO,CACH,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,MAAO,CAAC,KAAK,YAAY,CAAE,EACxC,CACL,IAAK,mBAAoB,CACrB,KAAK,UAAY,GACjB,IAAM,EAAO,GAAa,EAAO,CAC3B,EAAQ,GAAsB,EAAK,CAEzC,OADA,EAAM,KAAK,KAAK,YAAY,CACrB,CACH,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,QAAO,YAAa,GAAM,EACvC,CAEL,IAAK,gBAAiB,CAClB,KAAK,UAAY,GACjB,IAAM,EAAO,GAAa,EAAO,CAC3B,EAAQ,GAAsB,EAAK,CACzC,MAAO,CACH,KAAM,YACN,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,CAAC,CAAE,QAAO,IAAK,KAAM,IAAK,CAAC,KAAK,aAAc,EACxD,EAGT,OAAO,KAEX,kBAAkB,EAAO,EAAQ,CAK7B,OAJI,KAAK,OAAS,WAEd,KAAK,QAAUwC,EACR,GACJ,EAAM,MAAM,GAAM,EAAG,OAAS,WAAa,EAAG,OAAS,QAAQ,CAE1E,CAAC,YAAY,EAAQ,CACb,KAAK,OAAS,aACV,EAAO,IACP,EAAO,IAAI,KAAK,KAAK,YAAY,CAEjC,EAAO,IAAM,CAAC,KAAK,YAAY,CAC/B,KAAK,OAAS,YACd,MAAO,KAAK,KAAK,GAG7B,CAAC,QAAQ,EAAO,CACZ,OAAQ,KAAK,KAAb,CACI,IAAK,QACL,IAAK,YACL,IAAK,UACL,IAAK,eACL,IAAK,eACL,IAAK,gBACD,MAAO,KAAK,KAAK,CACjB,MAAO,KAAK,MAAM,CAClB,MACJ,IAAK,UACD,KAAK,UAAY,GAErB,IAAK,QACL,IAAK,UACL,QAEQ,EAAM,IACN,EAAM,IAAI,KAAK,KAAK,YAAY,CAEhC,EAAM,IAAM,CAAC,KAAK,YAAY,CAC9B,KAAK,OAAS,YACd,MAAO,KAAK,KAAK,KCz7BrC,SAASkC,GAAa,EAAS,CAC3B,IAAM,EAAe,EAAQ,eAAiB,GAE9C,MAAO,CAAE,YADW,EAAQ,aAAgB,GAAgB,IAAI,IAAkB,KAC5D,eAAc,CA0BxC,SAAS,GAAc,EAAQ,EAAU,EAAE,CAAE,CACzC,GAAM,CAAE,cAAa,gBAAiBA,GAAa,EAAQ,CACrD,EAAS,IAAID,GAAO,GAAa,WAAW,CAC5C,EAAW,IAAI,GAAS,EAAQ,CAElC,EAAM,KACV,IAAK,IAAM,KAAQ,EAAS,QAAQ,EAAO,MAAM,EAAO,CAAE,GAAM,EAAO,OAAO,CAC1E,GAAI,CAAC,EACD,EAAM,UACD,EAAI,QAAQ,WAAa,SAAU,CACxC,EAAI,OAAO,KAAK,IAAI,GAAe,EAAK,MAAM,MAAM,EAAG,EAAE,CAAE,gBAAiB,0EAA0E,CAAC,CACvJ,MAOR,OAJI,GAAgB,IAChB,EAAI,OAAO,QAAQ,GAAc,EAAQ,EAAY,CAAC,CACtD,EAAI,SAAS,QAAQ,GAAc,EAAQ,EAAY,CAAC,EAErD,EAEX,SAASvE,GAAM,EAAK,EAAS,EAAS,CAClC,IAAI,EACA,OAAO,GAAY,WACnB,EAAW,EAEN,IAAY,QAAa,GAAW,OAAO,GAAY,WAC5D,EAAU,GAEd,IAAM,EAAM,GAAc,EAAK,EAAQ,CACvC,GAAI,CAAC,EACD,OAAO,KAEX,GADA,EAAI,SAAS,QAAQ,GAAW,GAAK,EAAI,QAAQ,SAAU,EAAQ,CAAC,CAChE,EAAI,OAAO,OAAS,EACpB,IAAI,EAAI,QAAQ,WAAa,SACzB,MAAM,EAAI,OAAO,GAEjB,EAAI,OAAS,EAAE,CAEvB,OAAO,EAAI,KAAK,OAAO,OAAO,CAAE,QAAS,EAAU,CAAE,EAAQ,CAAC,CAElE,SAAS0C,GAAU,EAAO,EAAU,EAAS,CACzC,IAAI,EAAY,KAShB,GARI,OAAO,GAAa,YAAc,MAAM,QAAQ,EAAS,CACzD,EAAY,EAEP,IAAY,QAAa,IAC9B,EAAU,GAEV,OAAO,GAAY,WACnB,EAAU,EAAQ,QAClB,OAAO,GAAY,SAAU,CAC7B,IAAMJ,EAAS,KAAK,MAAM,EAAQ,CAClC,EAAUA,EAAS,EAAI,OAAYA,EAAS,EAAI,CAAE,OAAQ,EAAG,CAAG,CAAE,SAAQ,CAE9E,GAAI,IAAU,OAAW,CACrB,GAAM,CAAE,iBAAkB,GAAW,GAAY,EAAE,CACnD,GAAI,CAAC,EACD,OAIR,OAFI,GAAW,EAAM,EAAI,CAAC,EACf,EAAM,SAAS,EAAQ,CAC3B,IAAI,GAAS,EAAO,EAAW,EAAQ,CAAC,SAAS,EAAQ,CClGpE,SAAS,GAAU,EAAK,CACtB,OAAO,GACL,EAAI,aACH,OAAO,EAAI,YAAY,UAAa,YACrC,EAAI,YAAY,SAAS,EAAI,CAGjC,SAAS,GAAa,EAAK,CACzB,OAAO,EAGT,SAAgB,GAAS,EAAQ,EAAM,CACrC,IAAe,EAAE,CAEjB,IAAM,EAAY,EAAK,WAAa,IAC9B,EAAW,EAAK,SAChB,EAAe,EAAK,cAAgB,GACpC,EAAS,EAAE,CAEjB,SAAS,EAAM,EAAQ,EAAM,EAAc,CACzC,IAA+B,EAC/B,OAAO,KAAK,EAAO,CAAC,QAAQ,SAAU,EAAK,CACzC,IAAM,EAAQ,EAAO,GACf,EAAU,EAAK,MAAQ,MAAM,QAAQ,EAAM,CAC3C,EAAO,OAAO,UAAU,SAAS,KAAK,EAAM,CAC5C,EAAW,GAAS,EAAM,CAC1B,EACJ,IAAS,mBACT,IAAS,iBAGL,EAAS,EACX,EAAO,EAAY,EAAa,EAAI,CACpC,EAAa,EAAI,CAErB,GAAI,CAAC,GAAW,CAAC,GAAY,GAAY,OAAO,KAAK,EAAM,CAAC,SACzD,CAAC,EAAK,UAAY,EAAe,GAClC,OAAO,EAAK,EAAO,EAAQ,EAAe,EAAE,CAG9C,EAAO,GAAU,GACjB,CAKJ,OAFA,EAAK,EAAO,CAEL,EAGT,SAAgB,GAAW,EAAQ,EAAM,CACvC,IAAe,EAAE,CAEjB,IAAM,EAAY,EAAK,WAAa,IAC9B,EAAY,EAAK,WAAa,GAC9B,EAAe,EAAK,cAAgB,GACpC,EAAS,EAAE,CAGjB,GADiB,GAAS,EAAO,EACjB,OAAO,UAAU,SAAS,KAAK,EAAO,GAAK,kBACzD,OAAO,EAKT,SAAS,EAAQ,EAAK,CACpB,IAAM,EAAY,OAAO,EAAI,CAE7B,OACE,MAAM,EAAU,EAChB,EAAI,QAAQ,IAAI,GAAK,IACrB,EAAK,OAEH,EACA,EAGN,SAAS,EAAS,EAAW,EAAW,EAAQ,CAC9C,OAAO,OAAO,KAAKmC,EAAO,CAAC,OAAO,SAAU,EAAQ,EAAK,CAGvD,MAFA,GAAO,EAAY,EAAY,GAAOA,EAAO,GAEtCnD,GACN,EAAU,CAGf,SAASoD,EAAS,EAAK,CACrB,IAAM,EAAO,OAAO,UAAU,SAAS,KAAK,EAAI,CAC1CC,EAAU,IAAS,iBACnB,EAAW,IAAS,kBAE1B,GAAK,MAEMA,EACT,MAAO,CAAC,EAAI,UACH,EACT,MAAO,CAAC,OAAO,KAAK,EAAI,CAAC,YAJzB,MAAO,GAiEX,MAzDA,GAAS,OAAO,KAAK,EAAO,CAAC,OAAO,SAAU,EAAQ,EAAK,CACzD,IAAM,EAAO,OAAO,UAAU,SAAS,KAAK,EAAO,GAAK,CAMtD,MAJE,EADc,IAAS,mBAAqB,IAAS,mBACxCD,EAAQ,EAAO,GAAK,EACnC,EAAO,GAAO,EAAO,GACdpD,GAEA,EACL,EACAA,EACA,GAAQ,EAAO,GAAM,EAAK,CAC3B,EAEF,EAAE,CAAC,CAEN,OAAO,KAAK,EAAO,CAAC,QAAQ,SAAU,EAAK,CACzC,IAAM,EAAQ,EAAI,MAAM,EAAU,CAAC,IAAI,EAAa,CAChD,EAAO,EAAO,EAAM,OAAO,CAAC,CAC5B,EAAO,EAAO,EAAM,GAAG,CACvB,EAAY,EAEhB,KAAO,IAAS,QAAW,CACzB,GAAI,IAAS,YACX,OAGF,IAAM,EAAO,OAAO,UAAU,SAAS,KAAK,EAAU,GAAM,CACtD,EACJ,IAAS,mBACT,IAAS,iBAIX,GAAI,CAAC,GAAa,CAAC,GAAmB,EAAU,KAAU,OACxD,QAGG,GAAa,CAAC,GAAc,CAAC,GAAa,EAAU,IAAS,QAChE,EAAU,GACR,OAAO,GAAS,UAChB,CAAC,EAAK,OACF,EAAE,CACF,EAAE,EAIV,EAAY,EAAU,GAClB,EAAM,OAAS,IACjB,EAAO,EAAO,EAAM,OAAO,CAAC,CAC5B,EAAO,EAAO,EAAM,GAAG,EAK3B,EAAU,GAAQ,GAAU,EAAO,GAAM,EAAK,EAC9C,CAEK,EC/IT,SAAgB,GAAW,EAAM,EAAG,EAAO,EAAM,CAC/C,IAAM1C,EAAO,EAAM,MAAM,aAAa,CAChC,EAAU,EAAM,cAAc,EAAK,CACzC,EAAQ,KAAK,KAAK,CAClB,EAAQ,MAAM,EAAE,CAChB,IAAM,EAAQ,EAAM,YAClB,EAAM,cAAclB,EAAM,EAAQ,SAAS,CAAC,CAC5CoC,GACD,CAED,OADA,GAAM,CACC,EAIT,SAASA,GAAI,EAAM,EAAG,EAAO,CAC3B,MAAO,KAAO,EAAQ,GAAK,KAAO,EClBpC,SAAgB,GAAe,EAAO,EAAS,CAC7C,OACE,GAAY,EAAO,EAAQ,YAAa,GAAK,EAC7C,CAAC,GAAY,EAAO,EAAQ,eAAgB,GAAM,CAUtD,SAAS,GAAY,EAAO,EAAM,EAAM,CAKtC,GAJI,OAAO7B,GAAS,WAClB,EAAO,CAACA,EAAK,EAGX,CAACA,GAAQA,EAAK,SAAW,EAC3B,OAAO,EAGT,IAAI7B,EAAQ,GAEZ,KAAO,EAAEA,EAAQ6B,EAAK,QACpB,GAAI,EAAM,SAASA,EAAK7B,GAAO,CAC7B,MAAO,GAIX,MAAO,GCzBT,SAAgB,GAAU,EAAG,EAAI,EAAO,EAAM,CAC5C,IAAIA,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAM,OAAO,QAG5B,GACE,EAAM,OAAOA,GAAO,YAAc;GAClC,GAAe,EAAM,MAAO,EAAM,OAAOA,GAAO,CAEhD,MAAO,QAAQ,KAAK,EAAK,OAAO,CAAG,GAAK,IAI5C,MAAO;EClBT,SAAgB,GAAc,EAAO,EAAW,CAC9C,IAAM,EAAS,OAAO,EAAM,CACxBA,EAAQ,EAAO,QAAQ,EAAU,CACjC,EAAWA,EACX,EAAQ,EACR,EAAM,EAEV,GAAI,OAAO,GAAc,SACvB,MAAU,UAAU,qBAAqB,CAG3C,KAAOA,IAAU,IACXA,IAAU,EACR,EAAE,EAAQ,IACZ,EAAM,GAGR,EAAQ,EAGV,EAAWA,EAAQ,EAAU,OAC7B,EAAQ,EAAO,QAAQ,EAAW,EAAS,CAG7C,OAAO,ECxBT,SAAgB,GAAqB,EAAM,EAAO,CAChD,MAAO,GACL,EAAM,QAAQ,SAAW,IACvBsB,EAAK,OAEL,CAACA,EAAK,MAEN,WAAW,KAAKA,EAAK,MAAM,EAE3B,CAAC,0CAA0C,KAAKA,EAAK,MAAM,ECXjE,SAAgB,GAAW,EAAO,CAChC,IAAM,EAAS,EAAM,QAAQ,OAAS,IAEtC,GAAI,IAAW,KAAO,IAAW,IAC/B,MAAU,MACR,+BACE,EACA,iDACH,CAGH,OAAO,ECHT,SAAgBhB,GAAK,EAAM,EAAG,EAAO,EAAM,CACzC,IAAM,EAAS,GAAW,EAAM,CAC1BwC,EAAMxB,EAAK,OAAS,GACpB,EAAS,IAAW,IAAM,cAAgB,QAEhD,GAAI,GAAqBA,EAAM,EAAM,CAAE,CACrC,IAAMkB,EAAO,EAAM,MAAM,eAAe,CAClCrB,EAAQ,EAAM,YAAY2B,EAAK,GAAI,CAEzC,OADA,GAAM,CACC3B,EAGT,IAAM,EAAU,EAAM,cAAc,EAAK,CACnC,EAAW,EAAO,OAAO,KAAK,IAAI,GAAc2B,EAAK,EAAO,CAAG,EAAG,EAAE,CAAC,CACrEN,EAAO,EAAM,MAAM,aAAa,CAClC,EAAQ,EAAQ,KAAK,EAAS,CAElC,GAAIlB,EAAK,KAAM,CACb,IAAM,EAAU,EAAM,MAAM,iBAAiB,IAAS,CACtD,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,KAAM,CACpB,OAAQ,EACR,MAAO,IACP,OAAQ,CAAC,IAAI,CACb,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,CAGX,GAAIA,EAAK,MAAQA,EAAK,KAAM,CAC1B,IAAM,EAAU,EAAM,MAAM,iBAAiB,IAAS,CACtD,GAAS,EAAQ,KAAK,IAAI,CAC1B,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,KAAM,CACpB,OAAQ,EACR,MAAO;EACP,OAAQ,CAAC,IAAI,CACb,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,CAWX,MARA,IAAS,EAAQ,KAAK;EAAK,CAEvBwB,IACF,GAAS,EAAQ,KAAKA,EAAM;EAAK,EAGnC,GAAS,EAAQ,KAAK,EAAS,CAC/B,GAAM,CACC,EAIT,SAAS,GAAI,EAAM,EAAG,EAAO,CAC3B,OAAQ,EAAQ,GAAK,QAAU,ECjEjC,SAAgB0F,GAAW,EAAO,CAChC,IAAM,EAAS,EAAM,QAAQ,OAAS,IAEtC,GAAI,IAAW,KAAO,IAAW,IAC/B,MAAU,MACR,gCACE,EACA,+CACH,CAGH,OAAO,ECLT,SAAgB,GAAW,EAAM,EAAG,EAAO,EAAM,CAC/C,IAAM,EAAQA,GAAW,EAAM,CACzB,EAAS,IAAU,IAAM,QAAU,aACnChG,EAAO,EAAM,MAAM,aAAa,CAClC,EAAU,EAAM,MAAM,QAAQ,CAC5B,EAAU,EAAM,cAAc,EAAK,CACrC,EAAQ,EAAQ,KAAK,IAAI,CAsD7B,MArDA,IAAS,EAAQ,KACf,EAAM,KAAK,EAAM,cAAclB,EAAK,CAAE,CACpC,OAAQ,EACR,MAAO,IACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,EAAQ,KAAK,MAAM,CAE5B,GAAS,CAIP,CAACA,EAAK,KAEN,eAAe,KAAKA,EAAK,IAAI,EAE7B,EAAU,EAAM,MAAM,qBAAqB,CAC3C,GAAS,EAAQ,KAAK,IAAI,CAC1B,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,IAAK,CAAC,OAAQ,EAAO,MAAO,IAAK,GAAG,EAAQ,UAAU,CAAC,CACxE,CACD,GAAS,EAAQ,KAAK,IAAI,GAG1B,EAAU,EAAM,MAAM,iBAAiB,CACvC,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,IAAK,CACnB,OAAQ,EACR,MAAOA,EAAK,MAAQ,IAAM;EAC1B,GAAG,EAAQ,UACZ,CAAC,CACH,EAGH,GAAS,CAELA,EAAK,QACP,EAAU,EAAM,MAAM,QAAQ,IAAS,CACvC,GAAS,EAAQ,KAAK,IAAM,EAAM,CAClC,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,MAAO,CACrB,OAAQ,EACR,MAAO,EACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,EAAQ,KAAK,EAAM,CAC5B,GAAS,EAGX,GAAM,CAEC,EClET,SAAgB,GAAc,EAAO,CACnC,IAAM,EAAS,EAAM,QAAQ,UAAY,IAEzC,GAAI,IAAW,KAAO,IAAW,IAC/B,MAAU,MACR,mCACE,EACA,iDACH,CAGH,OAAO,ECXT,SAAgB,GAAyB,EAAM,CAC7C,MAAO,MAAQhB,EAAK,SAAS,GAAG,CAAC,aAAa,CAAG,IC+BnD,SAAgB,GAAW,EAAS,EAAQ,EAAQ,CAClD,IAAM,EAAc,GAAkB,EAAQ,CACxC,EAAa,GAAkB,EAAO,CA+B5C,OA5BI,IAAgB,OACX,IAAe,OAIlB,IAAW,IACT,CAAC,OAAQ,GAAM,QAAS,GAAK,CAC7B,CAAC,OAAQ,GAAO,QAAS,GAAM,CACjC,IAAe,EAEb,CAAC,OAAQ,GAAM,QAAS,GAAK,CAE7B,CAAC,OAAQ,GAAO,QAAS,GAAK,CAIlC,IAAgB,EACX,IAAe,OAElB,CAAC,OAAQ,GAAO,QAAS,GAAM,CAC/B,IAAe,EAEb,CAAC,OAAQ,GAAM,QAAS,GAAK,CAE7B,CAAC,OAAQ,GAAO,QAAS,GAAM,CAIhC,IAAe,OAElB,CAAC,OAAQ,GAAO,QAAS,GAAM,CAC/B,IAAe,EAEb,CAAC,OAAQ,GAAM,QAAS,GAAM,CAE9B,CAAC,OAAQ,GAAO,QAAS,GAAM,CCvEvC,GAAS,KAAO,GAShB,SAAgB8D,GAAS,EAAM,EAAG,EAAO,EAAM,CAC7C,IAAM,EAAS,GAAc,EAAM,CAC7B5B,EAAO,EAAM,MAAM,WAAW,CAC9B,EAAU,EAAM,cAAc,EAAK,CACnC,EAAS,EAAQ,KAAK,EAAO,CAE/B,EAAU,EAAQ,KACpB,EAAM,kBAAkBlB,EAAM,CAC5B,MAAO,EACP,SACA,GAAG,EAAQ,UACZ,CAAC,CACH,CACK,EAAc,EAAQ,WAAW,EAAE,CACnC,EAAO,GACX,EAAK,OAAO,WAAW,EAAK,OAAO,OAAS,EAAE,CAC9C,EACA,EACD,CAEG,EAAK,SACP,EAAU,GAAyB,EAAY,CAAG,EAAQ,MAAM,EAAE,EAGpE,IAAM,EAAc,EAAQ,WAAW,EAAQ,OAAS,EAAE,CACpD,EAAQ,GAAW,EAAK,MAAM,WAAW,EAAE,CAAE,EAAa,EAAO,CAEnE,EAAM,SACR,EAAU,EAAQ,MAAM,EAAG,GAAG,CAAG,GAAyB,EAAY,EAGxE,IAAM,EAAQ,EAAQ,KAAK,EAAO,CAQlC,OANA,GAAM,CAEN,EAAM,+BAAiC,CACrC,MAAO,EAAM,QACb,OAAQ,EAAK,QACd,CACM,EAAS,EAAU,EAS5B,SAAS,GAAa,EAAG,EAAI,EAAO,CAClC,OAAO,EAAM,QAAQ,UAAY,ICtDnC,SAAgB,GAAsB,EAAM,EAAO,CACjD,IAAI,EAAmB,GAcvB,OAVA,EAAMA,EAAM,SAAU,EAAM,CAC1B,GACG,UAAWA,GAAQ,WAAW,KAAKA,EAAK,MAAM,EAC/CA,EAAK,OAAS,QAGd,MADA,GAAmB,GACnB,IAEF,CAEK,IACJ,CAACA,EAAK,OAASA,EAAK,MAAQ,IAC3BE,GAASF,EAAK,GACb,EAAM,QAAQ,QAAU,IChB/B,SAAgB,GAAQ,EAAM,EAAG,EAAO,EAAM,CAC5C,IAAM,EAAO,KAAK,IAAI,KAAK,IAAI,EAAGA,EAAK,OAAS,EAAE,CAAE,EAAE,CAChD,EAAU,EAAM,cAAc,EAAK,CAEzC,GAAI,GAAsBA,EAAM,EAAM,CAAE,CACtC,IAAMkB,EAAO,EAAM,MAAM,gBAAgB,CACnCiG,EAAU,EAAM,MAAM,WAAW,CACjCtH,EAAQ,EAAM,kBAAkBG,EAAM,CAC1C,GAAG,EAAQ,SAAS,CACpB,OAAQ;EACR,MAAO;EACR,CAAC,CAIF,OAHA,GAAS,CACT,GAAM,CAGJH,EACA;GACC,IAAS,EAAI,IAAM,KAAK,OAEvBA,EAAM,QAGH,KAAK,IAAIA,EAAM,YAAY,KAAK,CAAEA,EAAM,YAAY;EAAK,CAAC,CAAG,GACjE,CAIL,IAAM,EAAW,IAAI,OAAO,EAAK,CAC3BqB,EAAO,EAAM,MAAM,aAAa,CAChC,EAAU,EAAM,MAAM,WAAW,CAMvC,EAAQ,KAAK,EAAW,IAAI,CAE5B,IAAI,EAAQ,EAAM,kBAAkBlB,EAAM,CACxC,OAAQ,KACR,MAAO;EACP,GAAG,EAAQ,UACZ,CAAC,CAgBF,MAdI,SAAS,KAAK,EAAM,GAEtB,EAAQ,GAAyB,EAAM,WAAW,EAAE,CAAC,CAAG,EAAM,MAAM,EAAE,EAGxE,EAAQ,EAAQ,EAAW,IAAM,EAAQ,EAErC,EAAM,QAAQ,WAChB,GAAS,IAAM,GAGjB,GAAS,CACT,GAAM,CAEC,ECrET,GAAK,KAAO,GAMZ,SAAgBgD,GAAK,EAAM,CACzB,OAAOhD,EAAK,OAAS,GAMvB,SAAS,IAAW,CAClB,MAAO,ICXT,GAAM,KAAO,GASb,SAAgBiD,GAAM,EAAM,EAAG,EAAO,EAAM,CAC1C,IAAM,EAAQiE,GAAW,EAAM,CACzB,EAAS,IAAU,IAAM,QAAU,aACnChG,EAAO,EAAM,MAAM,QAAQ,CAC7B,EAAU,EAAM,MAAM,QAAQ,CAC5B,EAAU,EAAM,cAAc,EAAK,CACrC,EAAQ,EAAQ,KAAK,KAAK,CAmD9B,MAlDA,IAAS,EAAQ,KACf,EAAM,KAAKlB,EAAK,IAAK,CAAC,OAAQ,EAAO,MAAO,IAAK,GAAG,EAAQ,UAAU,CAAC,CACxE,CACD,GAAS,EAAQ,KAAK,KAAK,CAE3B,GAAS,CAIN,CAACA,EAAK,KAAOA,EAAK,OAEnB,eAAe,KAAKA,EAAK,IAAI,EAE7B,EAAU,EAAM,MAAM,qBAAqB,CAC3C,GAAS,EAAQ,KAAK,IAAI,CAC1B,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,IAAK,CAAC,OAAQ,EAAO,MAAO,IAAK,GAAG,EAAQ,UAAU,CAAC,CACxE,CACD,GAAS,EAAQ,KAAK,IAAI,GAG1B,EAAU,EAAM,MAAM,iBAAiB,CACvC,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,IAAK,CACnB,OAAQ,EACR,MAAOA,EAAK,MAAQ,IAAM,IAC1B,GAAG,EAAQ,UACZ,CAAC,CACH,EAGH,GAAS,CAELA,EAAK,QACP,EAAU,EAAM,MAAM,QAAQ,IAAS,CACvC,GAAS,EAAQ,KAAK,IAAM,EAAM,CAClC,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,MAAO,CACrB,OAAQ,EACR,MAAO,EACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,EAAQ,KAAK,EAAM,CAC5B,GAAS,EAGX,GAAS,EAAQ,KAAK,IAAI,CAC1B,GAAM,CAEC,EAMT,SAAS,IAAY,CACnB,MAAO,IC3ET,GAAe,KAAO,GAStB,SAAgB,GAAe,EAAM,EAAG,EAAO,EAAM,CACnD,IAAM,EAAOA,EAAK,cACZkB,EAAO,EAAM,MAAM,iBAAiB,CACtC,EAAU,EAAM,MAAM,QAAQ,CAC5B,EAAU,EAAM,cAAc,EAAK,CACrC,EAAQ,EAAQ,KAAK,KAAK,CACxB,EAAM,EAAM,KAAKlB,EAAK,IAAK,CAC/B,OAAQ,EACR,MAAO,IACP,GAAG,EAAQ,UACZ,CAAC,CACF,GAAS,EAAQ,KAAK,EAAM,KAAK,CAEjC,GAAS,CAET,IAAM,EAAQ,EAAM,MACpB,EAAM,MAAQ,EAAE,CAChB,EAAU,EAAM,MAAM,YAAY,CAKlC,IAAM,EAAY,EAAM,KAAK,EAAM,cAAcA,EAAK,CAAE,CACtD,OAAQ,EACR,MAAO,IACP,GAAG,EAAQ,UACZ,CAAC,CAcF,OAbA,GAAS,CACT,EAAM,MAAQ,EACd,GAAM,CAEF,IAAS,QAAU,CAAC,GAAO,IAAQ,EACrC,GAAS,EAAQ,KAAK,EAAY,IAAI,CAC7B,IAAS,WAElB,EAAQ,EAAM,MAAM,EAAG,GAAG,CAE1B,GAAS,EAAQ,KAAK,IAAI,CAGrB,EAMT,SAAS,IAAqB,CAC5B,MAAO,ICxDT,GAAW,KAAO,GAQlB,SAAgByD,GAAW,EAAM,EAAG,EAAO,CACzC,IAAI,EAAQzD,EAAK,OAAS,GACtB,EAAW,IACXtB,EAAQ,GAKZ,KAAW,OAAO,WAAa,EAAW,WAAW,CAAC,KAAK,EAAM,EAC/D,GAAY,IAmBd,IAbE,WAAW,KAAK,EAAM,GACpB,WAAW,KAAK,EAAM,EAAI,WAAW,KAAK,EAAM,EAAK,QAAQ,KAAK,EAAM,IAE1E,EAAQ,IAAM,EAAQ,KAUjB,EAAEA,EAAQ,EAAM,OAAO,QAAQ,CACpC,IAAM,EAAU,EAAM,OAAOA,GACvB,EAAa,EAAM,eAAe,EAAQ,CAE5C,EAKC,KAAQ,QAEb,KAAQ,EAAQ,EAAW,KAAK,EAAM,EAAG,CACvC,IAAIE,EAAW,EAAM,MAInB,EAAM,WAAWA,EAAS,GAAK,IAC/B,EAAM,WAAWA,EAAW,EAAE,GAAK,IAEnC,IAGF,EAAQ,EAAM,MAAM,EAAGA,EAAS,CAAG,IAAM,EAAM,MAAM,EAAM,MAAQ,EAAE,EAIzE,OAAO,EAAW,EAAQ,EAM5B,SAAS,IAAiB,CACxB,MAAO,IC9DT,SAAgB,GAAqB,EAAM,EAAO,CAChD,IAAM4C,EAAMtB,GAASF,EAAK,CAE1B,MAAO,GACL,CAAC,EAAM,QAAQ,cAEbA,EAAK,KAEL,CAACA,EAAK,OAENA,EAAK,UACLA,EAAK,SAAS,SAAW,GACzBA,EAAK,SAAS,GAAG,OAAS,SAEzBwB,IAAQxB,EAAK,KAAO,UAAYwB,IAAQxB,EAAK,MAE9C,oBAAoB,KAAKA,EAAK,IAAI,EAGlC,CAAC,iBAAiB,KAAKA,EAAK,IAAI,ECtBtC,GAAK,KAAO,GASZ,SAAgB2C,GAAK,EAAM,EAAG,EAAO,EAAM,CACzC,IAAM,EAAQuE,GAAW,EAAM,CACzB,EAAS,IAAU,IAAM,QAAU,aACnC,EAAU,EAAM,cAAc,EAAK,CAErChG,EAEA,EAEJ,GAAI,GAAqBlB,EAAM,EAAM,CAAE,CAErC,IAAM,EAAQ,EAAM,MACpB,EAAM,MAAQ,EAAE,CAChB,EAAO,EAAM,MAAM,WAAW,CAC9B,IAAIH,EAAQ,EAAQ,KAAK,IAAI,CAW7B,MAVA,IAAS,EAAQ,KACf,EAAM,kBAAkBG,EAAM,CAC5B,OAAQH,EACR,MAAO,IACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,EAAQ,KAAK,IAAI,CAC1B,GAAM,CACN,EAAM,MAAQ,EACPA,EAGT,EAAO,EAAM,MAAM,OAAO,CAC1B,EAAU,EAAM,MAAM,QAAQ,CAC9B,IAAI,EAAQ,EAAQ,KAAK,IAAI,CAsD7B,MArDA,IAAS,EAAQ,KACf,EAAM,kBAAkBG,EAAM,CAC5B,OAAQ,EACR,MAAO,KACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,EAAQ,KAAK,KAAK,CAC3B,GAAS,CAIN,CAACA,EAAK,KAAOA,EAAK,OAEnB,eAAe,KAAKA,EAAK,IAAI,EAE7B,EAAU,EAAM,MAAM,qBAAqB,CAC3C,GAAS,EAAQ,KAAK,IAAI,CAC1B,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,IAAK,CAAC,OAAQ,EAAO,MAAO,IAAK,GAAG,EAAQ,UAAU,CAAC,CACxE,CACD,GAAS,EAAQ,KAAK,IAAI,GAG1B,EAAU,EAAM,MAAM,iBAAiB,CACvC,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,IAAK,CACnB,OAAQ,EACR,MAAOA,EAAK,MAAQ,IAAM,IAC1B,GAAG,EAAQ,UACZ,CAAC,CACH,EAGH,GAAS,CAELA,EAAK,QACP,EAAU,EAAM,MAAM,QAAQ,IAAS,CACvC,GAAS,EAAQ,KAAK,IAAM,EAAM,CAClC,GAAS,EAAQ,KACf,EAAM,KAAKA,EAAK,MAAO,CACrB,OAAQ,EACR,MAAO,EACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACD,GAAS,EAAQ,KAAK,EAAM,CAC5B,GAAS,EAGX,GAAS,EAAQ,KAAK,IAAI,CAE1B,GAAM,CACC,EAST,SAAS,GAAS,EAAM,EAAG,EAAO,CAChC,OAAO,GAAqBA,EAAM,EAAM,CAAG,IAAM,IC3GnD,GAAc,KAAO,GASrB,SAAgB,GAAc,EAAM,EAAG,EAAO,EAAM,CAClD,IAAM,EAAOA,EAAK,cACZkB,EAAO,EAAM,MAAM,gBAAgB,CACrC,EAAU,EAAM,MAAM,QAAQ,CAC5B,EAAU,EAAM,cAAc,EAAK,CACrC,EAAQ,EAAQ,KAAK,IAAI,CACvBF,EAAO,EAAM,kBAAkBhB,EAAM,CACzC,OAAQ,EACR,MAAO,IACP,GAAG,EAAQ,UACZ,CAAC,CACF,GAAS,EAAQ,KAAKgB,EAAO,KAAK,CAElC,GAAS,CAET,IAAM,EAAQ,EAAM,MACpB,EAAM,MAAQ,EAAE,CAChB,EAAU,EAAM,MAAM,YAAY,CAKlC,IAAM,EAAY,EAAM,KAAK,EAAM,cAAchB,EAAK,CAAE,CACtD,OAAQ,EACR,MAAO,IACP,GAAG,EAAQ,UACZ,CAAC,CAcF,OAbA,GAAS,CACT,EAAM,MAAQ,EACd,GAAM,CAEF,IAAS,QAAU,CAACgB,GAAQA,IAAS,EACvC,GAAS,EAAQ,KAAK,EAAY,IAAI,CAC7B,IAAS,WAElB,EAAQ,EAAM,MAAM,EAAG,GAAG,CAE1B,GAAS,EAAQ,KAAK,IAAI,CAGrB,EAMT,SAAS,IAAoB,CAC3B,MAAO,ICrDT,SAAgB,GAAY,EAAO,CACjC,IAAM,EAAS,EAAM,QAAQ,QAAU,IAEvC,GAAI,IAAW,KAAO,IAAW,KAAO,IAAW,IACjD,MAAU,MACR,gCACE,EACA,oDACH,CAGH,OAAO,ECTT,SAAgB,GAAiB,EAAO,CACtC,IAAM,EAAS,GAAY,EAAM,CAC3B,EAAc,EAAM,QAAQ,YAElC,GAAI,CAAC,EACH,OAAO,IAAW,IAAM,IAAM,IAGhC,GAAI,IAAgB,KAAO,IAAgB,KAAO,IAAgB,IAChE,MAAU,MACR,gCACE,EACA,yDACH,CAGH,GAAI,IAAgB,EAClB,MAAU,MACR,uBACE,EACA,0BACA,EACA,qBACH,CAGH,OAAO,EC5BT,SAAgB,GAAmB,EAAO,CACxC,IAAM,EAAS,EAAM,QAAQ,eAAiB,IAE9C,GAAI,IAAW,KAAO,IAAW,IAC/B,MAAU,MACR,gCACE,EACA,qDACH,CAGH,OAAO,ECXT,SAAgB,GAAU,EAAO,CAC/B,IAAM,EAAS,EAAM,QAAQ,MAAQ,IAErC,GAAI,IAAW,KAAO,IAAW,KAAO,IAAW,IACjD,MAAU,MACR,gCACE,EACA,kDACH,CAGH,OAAO,ECFT,SAAgBT,GAAK,EAAM,EAAQ,EAAO,EAAM,CAC9C,IAAMW,EAAO,EAAM,MAAM,OAAO,CAC1B,EAAgB,EAAM,cAExB,EAASlB,EAAK,QAAU,GAAmB,EAAM,CAAG,GAAY,EAAM,CAEpE,EAAcA,EAAK,QACrB,IAAW,IACT,IACA,IACF,GAAiB,EAAM,CACvB,EACF,GAAU,EAAM,eAAiB,IAAW,EAAM,eAAiB,GAErE,GAAI,CAACA,EAAK,QAAS,CACjB,IAAM,EAAgBA,EAAK,SAAWA,EAAK,SAAS,GAAK,OAqCzD,IAzBG,IAAW,KAAO,IAAW,MAE9B,IACC,CAAC,EAAc,UAAY,CAAC,EAAc,SAAS,KAEpD,EAAM,MAAM,EAAM,MAAM,OAAS,KAAO,QACxC,EAAM,MAAM,EAAM,MAAM,OAAS,KAAO,YACxC,EAAM,MAAM,EAAM,MAAM,OAAS,KAAO,QACxC,EAAM,MAAM,EAAM,MAAM,OAAS,KAAO,YAExC,EAAM,WAAW,EAAM,WAAW,OAAS,KAAO,GAClD,EAAM,WAAW,EAAM,WAAW,OAAS,KAAO,GAClD,EAAM,WAAW,EAAM,WAAW,OAAS,KAAO,IAElD,EAAqB,IAWnB,GAAU,EAAM,GAAK,GAAU,EAAe,CAChD,IAAItB,EAAQ,GAEZ,KAAO,EAAEA,EAAQsB,EAAK,SAAS,QAAQ,CACrC,IAAM,EAAOA,EAAK,SAAStB,GAE3B,GACE,GACA,EAAK,OAAS,YACd,EAAK,UACL,EAAK,SAAS,IACd,EAAK,SAAS,GAAG,OAAS,gBAC1B,CACA,EAAqB,GACrB,SAMJ,IACF,EAAS,GAGX,EAAM,cAAgB,EACtB,IAAM,EAAQ,EAAM,cAAcsB,EAAM,EAAK,CAI7C,MAHA,GAAM,eAAiB,EACvB,EAAM,cAAgB,EACtB,GAAM,CACC,EC1FT,SAAgB,GAAoB,EAAO,CACzC,IAAMoH,EAAQ,EAAM,QAAQ,gBAAkB,MAE9C,GAAIA,IAAU,OAASA,IAAU,OAASA,IAAU,QAClD,MAAU,MACR,gCACEA,EACA,oEACH,CAGH,OAAOA,ECJT,SAAgB,GAAS,EAAM,EAAQ,EAAO,EAAM,CAClD,IAAM,EAAiB,GAAoB,EAAM,CAC7C,EAAS,EAAM,eAAiB,GAAY,EAAM,CAGlD,GAAU,EAAO,OAAS,QAAU,EAAO,UAC7C,GACG,OAAO,EAAO,OAAU,UAAY,EAAO,MAAQ,GAChD,EAAO,MACP,IACH,EAAM,QAAQ,sBAAwB,GACnC,EACA,EAAO,SAAS,QAAQpH,EAAK,EACjC,GAGJ,IAAI,EAAO,EAAO,OAAS,GAGzB,IAAmB,OAClB,IAAmB,UAChB,GAAU,EAAO,OAAS,QAAU,EAAO,QAAWA,EAAK,WAE/D,EAAO,KAAK,KAAK,EAAO,EAAE,CAAG,GAG/B,IAAM,EAAU,EAAM,cAAc,EAAK,CACzC,EAAQ,KAAK,EAAS,IAAI,OAAO,EAAO,EAAO,OAAO,CAAC,CACvD,EAAQ,MAAM,EAAK,CACnB,IAAMkB,EAAO,EAAM,MAAM,WAAW,CAC9B,EAAQ,EAAM,YAClB,EAAM,cAAclB,EAAM,EAAQ,SAAS,CAAC,CAC5CoC,EACD,CAGD,OAFA,GAAM,CAEC,EAGP,SAASA,EAAI,EAAM,EAAO,EAAO,CAK/B,OAJI1D,GACM,EAAQ,GAAK,IAAI,OAAO,EAAK,EAAI,GAGnC,EAAQ,EAAS,EAAS,IAAI,OAAO,EAAO,EAAO,OAAO,EAAI,GC/C1E,SAAgBsD,GAAU,EAAM,EAAG,EAAO,EAAM,CAC9C,IAAMd,EAAO,EAAM,MAAM,YAAY,CAC/B,EAAU,EAAM,MAAM,WAAW,CACjC,EAAQ,EAAM,kBAAkBlB,EAAM,EAAK,CAGjD,OAFA,GAAS,CACT,GAAM,CACC,ECAT,MAAa,GAGT,EAAQ,CACN,QACA,SACA,WAEA,WACA,oBACA,QACA,iBACA,aAEA,aACA,OACA,gBAEA,oBAEA,oBACA,SACA,OAEA,gBACD,CAAC,CC7BN,SAAgB2D,GAAK,EAAM,EAAG,EAAO,EAAM,CAOzC,OALoB3D,EAAK,SAAS,KAAK,SAAU,EAAG,CAClD,OAAO,GAAS,EAAE,EAClB,CAE8B,EAAM,kBAAoB,EAAM,eAC/C,KAAK,EAAOA,EAAM,EAAK,CCb1C,SAAgB,GAAY,EAAO,CACjC,IAAM,EAAS,EAAM,QAAQ,QAAU,IAEvC,GAAI,IAAW,KAAO,IAAW,IAC/B,MAAU,MACR,iCACE,EACA,+CACH,CAGH,OAAO,ECVT,GAAO,KAAO,GASd,SAAgBmD,GAAO,EAAM,EAAG,EAAO,EAAM,CAC3C,IAAM,EAAS,GAAY,EAAM,CAC3BjC,EAAO,EAAM,MAAM,SAAS,CAC5B,EAAU,EAAM,cAAc,EAAK,CACnC,EAAS,EAAQ,KAAK,EAAS,EAAO,CAExC,EAAU,EAAQ,KACpB,EAAM,kBAAkBlB,EAAM,CAC5B,MAAO,EACP,SACA,GAAG,EAAQ,UACZ,CAAC,CACH,CACK,EAAc,EAAQ,WAAW,EAAE,CACnC,EAAO,GACX,EAAK,OAAO,WAAW,EAAK,OAAO,OAAS,EAAE,CAC9C,EACA,EACD,CAEG,EAAK,SACP,EAAU,GAAyB,EAAY,CAAG,EAAQ,MAAM,EAAE,EAGpE,IAAM,EAAc,EAAQ,WAAW,EAAQ,OAAS,EAAE,CACpD,EAAQ,GAAW,EAAK,MAAM,WAAW,EAAE,CAAE,EAAa,EAAO,CAEnE,EAAM,SACR,EAAU,EAAQ,MAAM,EAAG,GAAG,CAAG,GAAyB,EAAY,EAGxE,IAAM,EAAQ,EAAQ,KAAK,EAAS,EAAO,CAQ3C,OANA,GAAM,CAEN,EAAM,+BAAiC,CACrC,MAAO,EAAM,QACb,OAAQ,EAAK,QACd,CACM,EAAS,EAAU,EAS5B,SAAS,GAAW,EAAG,EAAI,EAAO,CAChC,OAAO,EAAM,QAAQ,QAAU,ICvDjC,SAAgBgB,GAAK,EAAM,EAAG,EAAO,EAAM,CACzC,OAAO,EAAM,KAAKhB,EAAK,MAAO,EAAK,CCLrC,SAAgB,GAAoB,EAAO,CACzC,IAAM,EAAa,EAAM,QAAQ,gBAAkB,EAEnD,GAAI,EAAa,EACf,MAAU,MACR,2CACE,EACA,uDACH,CAGH,OAAO,ECLT,SAAgB,GAAc,EAAG,EAAI,EAAO,CAC1C,IAAM,GACJ,GAAU,EAAM,EAAI,EAAM,QAAQ,WAAa,IAAM,KACrD,OAAO,GAAoB,EAAM,CAAC,CAEpC,OAAO,EAAM,QAAQ,WAAa,EAAM,MAAM,EAAG,GAAG,CAAG,ECIzD,MAAa,GAAS,CACpB,cACA,MAAO,GACP,QACA,cACA,YACA,aACA,WACA,QACA,SACA,kBACA,cACA,QACA,iBACA,QACA,YACA,aACA,QACA,UACA,QACA,iBACD,CCvCY,GAA4B,CACvC,EAAG,IACH,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACN,CC3BD,SAAgB,GAAU,EAAW,CACnC,IAAMhB,EACJ,OAAO,GAAc,SAAW,EAAU,WAAW,EAAE,CAAG,EAE5D,OAAOA,GAAQ,IAAMA,GAAQ,GCJ/B,SAAgB,GAAc,EAAW,CACvC,IAAMA,EACJ,OAAO,GAAc,SAAW,EAAU,WAAW,EAAE,CAAG,EAE5D,OACGA,GAAQ,IAAcA,GAAQ,KAC9BA,GAAQ,IAAcA,GAAQ,IAC9BA,GAAQ,IAAcA,GAAQ,GCPnC,SAAgB,GAAe,EAAW,CACxC,IAAMA,EACJ,OAAO,GAAc,SAAW,EAAU,WAAW,EAAE,CAAG,EAE5D,OACGA,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,IAAMA,GAAQ,GCH3B,SAAgB,GAAiB,EAAW,CAC1C,OAAO,GAAe,EAAU,EAAI,GAAU,EAAU,CCE1D,IAAM,GAAW,CACf,GAEA,+DAEA,iEAEA,6CAEA,+CAEA,2CAEA,oDAEA,+EACD,CAQD,SAAgB,GAAc,EAAO,EAAS,CAC5C,IAAM,EAAW,GAAW,EAAE,CACxB,EACJ,OAAO,EAAS,YAAe,SAC3B,EAAS,WAAW,WAAW,EAAE,CACjC,EAAS,WAET,EAAS,EAAE,CACbN,EAAQ,EACR,EAAQ,GACR,EAAQ,GAERG,EAEA+F,EAEA,EAAS,WACP,UAAW,EAAS,UAAY,WAAY,EAAS,UAEvD,EAAS,EAAS,SAAS,OAE3B,EAAQ,EAAS,SAAS,OAE1B,EAAQ,EAAS,UAIrB,IAAI,GAAQ/F,EAAQA,EAAM,KAAO,IAAM,EACnC,GAAUA,EAAQA,EAAM,OAAS,IAAM,EAGvC+B,EAAW,GAAK,CAEhB,EAKJ,IAFA,IAEO,EAAElC,GAAS,EAAM,QAQtB,GANI,IAAc,KAChB,GAAUkG,EAASA,EAAO,GAAS,IAAM,GAG3C,EAAY,EAAM,WAAWlG,EAAM,CAE/B,IAAc,GAAc,CAC9B,IAAM,EAAY,EAAM,WAAWA,EAAQ,EAAE,CAG7C,GACE,IAAc,GACd,IAAc,IACd,IAAc,IACd,IAAc,IACd,IAAc,IACd,IAAc,IACd,OAAO,MAAM,EAAU,EACtB,GAAc,IAAc,EAC7B,CAIA,GAAS,OAAO,aAAa,EAAU,CACvC,IACA,SAGF,IAAM,EAAQA,EAAQ,EAClB,EAAQ,EACR,EAAM,EAEN,EAEJ,GAAI,IAAc,GAAc,CAE9B,EAAM,EAAE,EAGR,IAAM2I,EAAY,EAAM,WAAW,EAAI,CAEnCA,IAAc,IAAgBA,IAAc,KAE9C,EAAO,cACP,EAAM,EAAE,GAGR,EAAO,eAIT,EAAO,QAGT,IAAI,EAA+B,GAC/B/G,EAAqB,GACrB,EAAa,GAIX,EACJ,IAAS,QACL,GACA,IAAS,UACP,GACA,GAIR,IAFA,IAEO,EAAE,GAAO,EAAM,QAAQ,CAC5B,IAAM+G,EAAY,EAAM,WAAW,EAAI,CAEvC,GAAI,CAAC,EAAKA,EAAU,CAClB,MAGF,GAAc,OAAO,aAAaA,EAAU,CAKxC,IAAS,SAAW,EAAwB,SAAS,EAAW,GAClE,EAA+B,EAE/B,EAAqB,GAA8B,EAAW,EAIlE,IAAI,EAAa,EAAM,WAAW,EAAI,GAAK,GAE3C,GAAI,EAAY,CACd,IAEA,IAAM,EACJ,IAAS,QAAU,GAA8B,EAAW,CAAG,GAE7D,IACF,EAA+B,EAC/B,EAAqB,GAIzB,IAAI,EAAO,EAAI,EAAM,EACjB,EAAY,GAEhB,GAAI,GAAC,GAAc,EAAS,gBAAkB,IAAO,GAE1C,CAAC,EAGN,IAAS,SACX,EAAQ,EAAyB,EAAK,SAE/B,IAAS,QAAS,CAG3B,GAAI,GAAc,CAAC/G,EACjB,EAAQ,EAAyB,EAAE,SAI/B,IAAiC,IACnC,EAAM,EAAQ,EAA6B,OAC3C,EAAO,EAAI,EAAM,EACjB,EAAa,IAIX,CAAC,EAAY,CACf,IAAM,EAAS,EACX,EACA,EAEJ,GAAI,EAAS,UAAW,CACtB,IAAM+G,EAAY,EAAM,WAAW,EAAI,CAEnCA,IAAc,IAChB,EAAQ,EAAQ,EAAK,CACrB,EAAqB,IACZ,GAAiBA,EAAU,CACpC,EAAqB,GAErB,EAAQ,EAAQ,EAAK,MAGvB,EAAQ,EAAQ,EAAK,CAK3B,EAAY/G,MACP,CACA,GAGH,EAAQ,EAAkC,EAAK,CAKjD,IAAI,EAAgB,OAAO,SACzB,EACA,IAAS,cAAgB,GAAK,GAC/B,CAID,GAAI,GAAW,EAAc,CAC3B,EAAQ,EAA8B,EAAK,CAC3C,EAAY,YACH,KAAiB,GAG1B,EAAQ,EAA8B,EAAK,CAC3C,EAAY,GAA0B,OACjC,CAEL,IAAI,EAAS,GAGT,GAAW,EAAc,EAC3B,EAAQ,EAA8B,EAAK,CAIzC,EAAgB,QAClB,GAAiB,MACjB,GAAU,OAAO,aACd,IAAmB,GAAe,MACpC,CACD,EAAgB,MAAU,EAAgB,MAG5C,EAAY,EAAS,OAAO,aAAa,EAAc,EAM3D,GAAI,EAAW,CACb,GAAO,CAEP,EAAW,GAAK,CAChB,EAAQ,EAAM,EACd,GAAU,EAAM,EAAQ,EACxB,EAAO,KAAK,EAAU,CACtB,IAAM7B,EAAO,GAAK,CAClB,EAAK,SAED,EAAS,WACX,EAAS,UAAU,KACjB,EAAS,kBAAoB,OAC7B,EACA,CAAC,MAAOmC,EAAU,IAAKnC,EAAK,CAC5B,EAAM,MAAM,EAAQ,EAAG,EAAI,CAC5B,CAGH,EAAWA,OAMX,EAAa,EAAM,MAAM,EAAQ,EAAG,EAAI,CACxC,GAAS,EACT,GAAU,EAAW,OACrB,EAAQ,EAAM,OAIZ,IAAc,KAChB,IACA,IACA,EAAS,GAGP,OAAO,MAAM,EAAU,CACzB,GAAO,EAEP,GAAS,OAAO,aAAa,EAAU,CACvC,KAMN,OAAO,EAAO,KAAK,GAAG,CAGtB,SAAS,GAAM,CACb,MAAO,CACL,OACA,SACA,OAAQC,IAAUG,EAAQA,EAAM,OAAS,IAAM,GAChD,CASH,SAAS,EAAQ,EAAM,EAAQ,CAE7B,IAAID,EAEA,EAAS,UACX,EAAW,GAAK,CAChB,EAAS,QAAU,EACnB,EAAS,QAAU,EAEnB,EAAS,QAAQ,KACf,EAAS,gBAAkB,OAC3B,GAASI,GACTJ,EACAI,EACD,EASL,SAAS,GAAQ,CACf,CAUE,IATA,EAAO,KAAK,EAAM,CAEd,EAAS,MACX,EAAS,KAAK,KAAK,EAAS,aAAe,OAAW,EAAO,CAC3D,MAAO4B,EACP,IAAK,IACN,CAAC,CAGI,KAWd,SAAS,GAAW,EAAM,CACxB,OAAQ5B,GAAQ,OAAUA,GAAQ,OAAWA,EAAO,QAStD,SAAS,GAAW,EAAM,CACxB,OACGA,GAAQ,GAAUA,GAAQ,GAC3BA,IAAS,IACRA,GAAQ,IAAUA,GAAQ,IAC1BA,GAAQ,KAAUA,GAAQ,KAC1BA,GAAQ,OAAUA,GAAQ,QAC1BA,EAAO,QAAY,QACnBA,EAAO,QAAY,MCvYxB,IAAM,GAAwC,kBAG9C,SAAS,GAAqB,EAAM,EAAU,GAAI,CAChD,GAAI,CAAC,OAAO,KAAK,EAAK,CAAC,OACrB,OAAOuC,EAAQ,MAAM,CAEvB,EAAO+F,GAAe,GAAQ,EAAE,CAAE,EAAE,CAAC,CACrC,IAAM,EAAc,OAElBtC,GAAU,EAAK,CAAC,MAAM,OAEtB,GACD,CAAC,KAAK;EAAK,CAIZ,OAHIzD,EACK,CAAC,EAAaA,EAAQ,MAAM,CAAE,GAAG,CAAC,KAAK;EAAK,CAE9C,EAET,SAAS,GAAwB,EAAM,EAAU,GAAI,CAKnD,OAJK,OAAO,KAAK,EAAK,CAAC,QAGvB,EAAO+F,GAAe,GAAQ,EAAE,CAAE,EAAE,CAAC,CAC9B,CACL,GACAtC,GAAU,EAAK,CAAC,MAAM,CACtB,MACAzD,EACD,CAAC,KAAK;EAAK,EARH,GAUX,SAAS,GAAiB,EAAS,CACjC,IAAI,EAAO,EAAE,CACb,GAAIA,EAAQ,iBAAyC,CAAE,CACrD,IAAM,EAAMA,EAAQ;KAA2C,CAC/D,GAAI,IAAQ,GAAI,CACd,IAAM,EAAoBA,EAAQ,EAAM,UAClC,EAAcA,EAAQ,MAAM,EAAG,GAAO,EAAoB,EAAI,GAAG,CACnE,IACF,EAAOe,GAAM,EAAY,CACzB,EAAUf,EAAQ,MAAM,EAAM,GAAK,EAAoB,EAAI,GAAG,GAIpE,MAAO,CACL,UAEA,KAAM+F,GAAe,GAAQ,EAAE,CAAE,EAAE,EACpC,CAGH,SAAS,GAAM,EAAU,CACvB,IAAM,EAAU,GAAY,EAAE,CACxB,EAAM,EAAQ,KAAO,EAAE,CACzB,EAAY,EAAQ,WAAa,EACjC,EAAO,EAAI,MAAQ,EACnB,EAAS,EAAI,QAAU,EAC3B,MAAO,CAAE,OAAM,UAAS,QAAO,CAC/B,SAAS,GAAU,CACjB,MAAO,CAAE,IAAK,CAAE,OAAM,SAAQ,CAAE,YAAW,CAE7C,SAAS,EAAM,EAAO,CACpB,GAAa,EAEf,SAAS,EAAK,EAAQ,GAAI,CACxB,IAAM,EAAS,EAAM,MAAM,YAAY,CACjC,EAAO,EAAO,EAAO,OAAS,GAGpC,MAFA,IAAQ,EAAO,OAAS,EACxB,EAAS,EAAO,SAAW,EAAI,EAAS,EAAK,OAAS,EAAI,EAAK,OAAS,EACjE,GAGX,SAAS,GAAoB,EAAQ,EAAS,EAAc,EAAE,CAAE,CAC9D,IAAM,EAAa,EAAQ,WACrB,EAAW,EAAO,UAAY,EAAE,CAChC,EAAU,GAAM,EAAY,CAC5B,EAAU,EAAE,CACd5I,EAAQ,GAEZ,IADA,EAAW,KAAK,GAAG,CACZ,EAAEA,EAAQ,EAAS,QAAQ,CAChC,IAAM,EAAQ,EAASA,GACvB,EAAW,EAAW,OAAS,GAAKA,EACpC,EAAQ,KACN,EAAQ,KACN,EAAQ,OAAO,EAAO,EAAQ,EAAS,CACrC,OAAQ,GACR,MAAO,GACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACF,CAGH,OADA,EAAW,KAAK,CACT,EAAQ,KAAK,GAAG,CAEzB,SAAS,GAAc,EAAQ,EAAS,EAAc,EAAE,CAAE,CACxD,IAAM,EAAa,EAAQ,WACrB,EAAW,EAAO,UAAY,EAAE,CAChC,EAAU,GAAM,EAAY,CAC5B,EAAU,EAAE,CACdA,EAAQ,GAEZ,IADA,EAAW,KAAK,GAAG,CACZ,EAAEA,EAAQ,EAAS,QAAQ,CAChC,IAAM,EAAQ,EAASA,GACvB,EAAW,EAAW,OAAS,GAAKA,EACpC,EAAQ,KACN,EAAQ,KACN,EAAQ,OAAO,EAAO,EAAQ,EAAS,CACrC,OAAQ;EACR,MAAO;EACP,GAAG,EAAQ,UACZ,CAAC,CACH,CACF,CACG,EAAM,OAAS,SACjB,EAAQ,eAAiB,IAAK,IAE5BA,EAAQ,EAAS,OAAS,GAC5B,EAAQ,KAAK,EAAQ,KAAK,EAAQ,EAAO,EAASA,EAAQ,GAAG,CAAC,CAAC,CAInE,OADA,EAAW,KAAK,CACT,EAAQ,KAAK,GAAG,CACvB,SAAS,EAAQ,EAAM,EAAO,CAC5B,IAAI,EAAS,EAAQ,KAAK,OAC1B,KAAO,KAAU,CACf,IAAM,EAAS,EAAQ,KAAK,GAAQ,EAAM,EAAO,EAAQ,EAAQ,CACjE,GAAI,IAAW,IAAQ,IAAW,EAChC,MAEF,GAAI,OAAO,GAAW,SACpB,MAAO;EAAK,OAAO,EAAI,EAAO,CAEhC,GAAI,IAAW,GACb,MAAO;;;;EAGX,MAAO;;GAGX,SAAS,GAAkB,EAAQ,EAAS,EAAa,CACvD,IAAM,EAAa,EAAQ,WACrB,EAAW,EAAO,UAAY,EAAE,CAChC,EAAU,EAAE,CACdA,EAAQ,GACR,EAAS,EAAY,OACzB,EAAW,KAAK,GAAG,CACnB,IAAI,EAAU,GAAM,EAAY,CAChC,KAAO,EAAEA,EAAQ,EAAS,QAAQ,CAChC,IAAM,EAAQ,EAASA,GACnB,EAEJ,GADA,EAAW,EAAW,OAAS,GAAKA,EAChCA,EAAQ,EAAI,EAAS,OAAQ,CAC/B,IAAIyF,EAAS,EAAQ,OAAO,SAAS,EAASzF,EAAQ,GAAG,MACrDyF,GAAUA,EAAO,OACnB,EAASA,EAAO,MAElB,EAAQ,GACJA,IACF,EAAQA,EACN,EAASzF,EAAQ,GACjB,EACA,EACA,CACE,OAAQ,GACR,MAAO,GACP,GAAG,EAAQ,UACZ,CACF,CAAC,OAAO,EAAE,OAGb,EAAQ,EAAY,MAElB,EAAQ,OAAS,IAAM,IAAW,MAAQ,IAAW;IAAS,EAAM,OAAS,SAC/E,EAAQ,EAAQ,OAAS,GAAK,EAAQ,EAAQ,OAAS,GAAG,QACxD,cACA,IACD,CACD,EAAS,IACT,EAAU,GAAM,EAAY,CAC5B,EAAQ,KAAK,EAAQ,KAAK,GAAG,CAAC,EAEhC,EAAQ,KACN,EAAQ,KACN,EAAQ,OAAO,EAAO,EAAQ,EAAS,CACrC,GAAG,EAAQ,SAAS,CACpB,SACA,QACD,CAAC,CACH,CACF,CACD,EAAS,EAAQ,EAAQ,OAAS,GAAG,MAAM,GAAG,CAGhD,OADA,EAAW,KAAK,CACT,EAAQ,KAAK,GAAG,CAEzB,SAAS,GAAW,EAAS,CAC3B,IAAM,EAAS,EAAQ,QAAQ,OAAS,IACxC,GAAI,IAAW,KAAO,IAAW,IAC/B,MAAU,MACR,gCAAkC,EAAS,+CAC5C,CAEH,OAAO,EAGT,IAAM,GAAuC,IAAI,IAAI,CACnD,4BACA,qBACA,gBACD,CAAC,CACI,GAAwC,IAAI,IAAI,CACpD,4BACA,gCACA,qBACA,gBACA,QACA,MACA,OACA,gBACD,CAAC,CACF,SAAS,GAA2B,EAAM,CACxC,OAAOsC,EAAK,QAAQ,uBAAwB,EAAG,IACtC,OAAO,cAAc,OAAO,SAAS,EAAS,GAAG,CAAC,CACzD,CAGJ,IAAMxB,GAAM,EAAE,CAAC,eACT,GAAW,yBAEjB,SAAS,GAAe,EAAS,CAC/B,GAAI,CAAC,EAAQ,UAAW,CACtB,IAAM,GAAU,EAAQ,QAAU,kBAAoB,KAAO,EAAQ,OAAS,MAAQ,EAAQ,OAAS,IAAM,IAC7G,EAAQ,UAAgB,QACrB,EAAS,IAAM,EAAS,IAAM,KAAO,sBAAsB,KAAK,EAAQ,UAAU,CAAG,KAAO,IAAM,EAAQ,WAAa,EAAQ,MAAQ,MAAQ,EAAQ,MAAQ,IAAM,IACtK,IACD,CAEH,OAAO,EAAQ,UAEjB,IAAM,IAAc,EAAO,EAAE,GAAK,CAChC,IAAM,GAAwB,EAAM,CAAE,YAAY,EAAE,IAAO,CACzD,IAAM,EAAU,GAAS,GAAsB,IAAI,EAAK,EAAI,EAAU,SAAS,EAAK,CAC/EQ,EAAK,KAAK,YAGf,EAAK,SAAW,CACd,CACE,KAAMA,EAAK,IAAI,UACf,SAAUA,EAAK,SAAS,OAAQ,GAAU,CAAC,EAAO,EAAM,KAAK,EAC9D,CACD,GAAGA,EAAK,SAAS,OAAQ,GAAU,EAAO,EAAM,KAAK,CAAC,CACvD,GAEG,EAAe,GAAS,CAC5B,IAAM,EAAU,OAAO,QAAQA,EAAK,cAAgB,EAAE,CAAC,CACvD,GAAI,EAAQ,SAAW,EACrB,MAAO,GAET,IAAM,EAAQ,EAAQ,MAAM,CAAC,GAAO,CAAC,KAAU,EAAK,cAAc,EAAK,CAAC,CAAC,QAAQ,EAAK,CAAC,EAAK,KAAY,CACtG,GAAI,GAAK,WAAW,IAAI,EAAI,EAAY,EAAO,CAAE,CAC/C,GAAI,CACF,EAAS,KAAK,MAAM,EAAO,MACrB,EAER,EAAM,EAAI,MAAM,EAAE,CAGpB,MADA,GAAI,GAAO,EACJ,GACN,EAAE,CAAC,CACN,MAAO;GAAQ,GAAM,mBAAqB,GAAwB,EAAM,CAAC,MAAM,CAAG,GAAqB,EAAM,CAAC,MAAM,GAEhH,EAAe,GAAS,CACxB,EAAK,YACP,EAAqBA,EAAM,OAAO,EAAK,YAAe,UAAY,EAAE,CAAG,EAAK,WAAW,EAG3F,SAAS,EAA0B,EAAM,EAAG,EAAS,CAGnD,MAFA,GAAQ,WAAa,EAAQ,MAC7B,EAAYA,EAAK,CACV,IAAIA,EAAK,OAAOuH,EAAWvH,EAAM,EAAQ;EAClDuB,EAAQvB,EAAM,EAAQ,GAAG,MAAM,CAE/B,SAAS,EAAc,EAAM,EAAG,EAAS,CACvC,IAAI,EACJ,EAAQ,WAAa,EAAQ,MAC7B,IAAMkB,EAAO,EAAQ,MAAMlB,EAAK,KAAK,CACrC,GAAIA,EAAK,OAAS,OAChB,EAAQ,IAAIuB,EAAQvB,EAAM,EAAQ,CAAC,GAAGuH,EAAWvH,EAAM,EAAQ,WACtDA,EAAK,OAAS,UAAW,CAClC,IAAM,EAAQA,EAAK,YAAc,EAAE,CACnC,EAAQ,EAAM,aAAe,MAAM,EAAM,MAAM,OAAO,EAAM,aAAa,MAAQ,MAAM,EAAM,MAAM,UAEnG,EAAQ,KAAOA,EAAK,MAAQ,IAAM4B,EAAM5B,EAAM,EAAQ,CAAGuH,EAAWvH,EAAM,EAAQ,CAGpF,OADA,GAAM,CACC,EAET,IAAI,EAAO,EACX,SAASwH,EAAmB,EAAM,EAAG,EAAS,CAC5C,EAAQ,WAAa,EAAQ,MAC7B,IAAM,EAAS,IAAI,SAAmB,EAAK,CAC3C,GAAQ,EACR,IAAMtG,EAAO,EAAQ,MAAMlB,EAAK,KAAK,CACjC,EAAQ,GAAUA,EAAK,MAAQ,IAAM4B,EAAM5B,EAAM,EAAQ,CACvD,EAAsBA,EAAK,SAAS,OAAQ,GAAU,EAAM,OAAS,4BAA4B,CACjG,EAAQA,EAAK,SAAS,OAAQ,GAAU,EAAM,OAAS,4BAA4B,CACzF,EAAK,SAAW,CACd,GAAG,EACH,GAAG,EACJ,CACD,EAAK,aAAeA,EAAK,cAAgB,EAAE,CAC3C,IAAM,EAAiBuH,EAAWvH,EAAM,EAAQ,GAC3C,EAAQ,GAAgB,QAAU,GAAM,qBAAuB,KAAO,OAAO,KAAKA,EAAK,aAAa,CAAC,OAAS,GAAKA,EAAK,UAAU,KAAM,GAAU,EAAM,OAAS,4BAA4B,IAChM,OAAO,OAAOA,EAAK,aAAcA,EAAK,WAAW,CACjD,EAAK,WAAa,EAAE,EAEtB,EAAYA,EAAK,CACjB,GAASuH,EAAWvH,EAAM,EAAQ,CAClC,GAAS,EAAYA,EAAK,CAC1B,IAAI,EAaJ,OAZIA,EAAK,OAAS,uBAChB,EAAWuB,EAAQvB,EAAM,EAAQ,CAC7B,IACF,GAAS;EAAO,GAElB,GAAS;EAAO,EACZ,EAAO,IACT,EAAQ,EAAM,MAAM;EAAK,CAAC,IAAK,GAAS,KAAO,EAAK,CAAC,KAAK;EAAK,GAGnE,IACA,GAAM,CACC,EAET,EAAmB,KAAO,UAAyB,CACjD,MAAO,KAET,SAAS4B,EAAM,EAAM,EAAS,CAC5B,IAAI,EAAS5B,EACb,GAAIA,EAAK,OAAS,qBAAsB,CACtC,GAAI,CAAC,EAAqBA,EAAK,CAC7B,MAAO,GAET,EAASA,EAAK,SAAS,GAEzB,IAAMkB,EAAO,EAAQ,MAAM,QAAQ,CAC7B,EAAU,EAAQ,MAAMlB,EAAK,KAAO,QAAQ,CAC5C,EAAQ,GAAkB,EAAQ,EAAS,CAAE,OAAQ,IAAK,MAAO,IAAK,CAAC,CAG7E,OAFA,GAAS,CACT,GAAM,CACC,EAAQ,IAAM,EAAQ,IAAM,GAErC,IAAM,EAAe,GAAQ,CAC3B,GAAI,CAEF,OADA,KAAK,MAAM,EAAI,CACR,QACD,CACN,MAAO,KAGX,SAASuH,EAAW,EAAM,EAAS,CACjC,IAAM,EAAQ,GAAW,EAAQ,CAC3B,EAASvH,EAAK,OAAS,gBAAkB,CAAC,EAAM,CAAG,CAAC,EAAO;EAAM,KAAK,CACtE,EAAQ,OAAO,YACnB,OAAO,QAAQA,EAAK,YAAc,EAAE,CAAC,CAAC,MAAM,CAAC,GAAO,CAAC,KAAU,EAAK,cAAc,EAAK,CAAC,CACzF,CACK,EAAS,EAAE,CACb,EACA,EAAc,GACd,EAAU,GACV,EACA,EACAtB,EACJ,IAAK,KAAO,EACV,GAAIc,GAAI,KAAK,EAAO,EAAI,EAAI,EAAM,IAAQ,KAExC,GADA,EAAQ,OAAO,EAAM,GAAK,CACtB,IAAQ,KACV,EAAK,GAAS,KAAK,EAAM,CAAG,IAAM,EAAQ,EAAO,KAAM,EAAM,SACpD,IAAQ,SAAW,IAAQ,YAAa,CAMjD,IALA,EAAQ,MAAM,QAAQ,EAAM,GAAK,CAAG,EAAM,GAAK,KAAK,IAAI,CAAG,EAC3D,EAAQ,EAAM,MAAM,cAAc,CAAC,OAAO,QAAQ,CAClD,EAAc,EAAE,CAChB,EAAU,EAAE,CACZ,EAAQ,GACD,EAAEd,EAAQ,EAAM,SACpB,GAAS,KAAK,EAAMA,GAAO,CAAG,EAAU,GAAa,KAAK,EAAMA,GAAO,CAE1E,EAAc,EAAY,OAAS,EAAO,QAAS,EAAY,KAAK,IAAI,CAAC,CAAG,GAC5E,EAAU,EAAQ,OAAS,IAAM,EAAQ,KAAK,IAAI,CAAG,QAC5C,EAAI,WAAW,IAAI,EAAI,IAAU,OAC1C,EAAO,KAAK,EAAI,MAAM,EAAE,CAAC,CAChB,EAAI,WAAW,IAAI,EAAI,EAAY,EAAM,CAClD,EAAO,KAAK,GAAG,EAAI,IAAI,EAAM,QAAQ,WAAY,QAAQ,CAAC,GAAG,CAE7D,EAAO,KAAK,EAAO,EAAK,EAAM,CAAC,CAarC,OATI,GACF,EAAO,QAAQ,EAAY,CAEzB,GACF,EAAO,QAAQ,EAAQ,CAErB,GACF,EAAO,QAAQ,EAAG,CAEb,EAAO,OAAS,IAAM,EAAO,KAAK,IAAI,CAAG,IAAM,GACtD,SAAS,EAAO,EAAM,EAAQ,CAC5B,OAAO,EAAO,IAAM,EAAQ,EAAuB,EAAQ,CAAE,SAAQ,CAAC,CAAG,GAG7E,SAAS6C,EAAQ,EAAM,EAAS,CAC9B,IAAM,EAAW,EAAqBvB,EAAK,CAAG,OAAO,OAAO,EAAE,CAAEA,EAAM,CAAE,SAAUA,EAAK,SAAS,MAAM,EAAE,CAAE,CAAC,CAAGA,EAC1G,EAASA,EAAK,OAAS,gBAAkB,GAAoB,EAAU,EAAQ,CAAG,GAAc,EAAU,EAAQ,CAItH,OAHI,EAAO,SAAS,MAAM,GACxB,EAAS,GAA2B,EAAO,EAEtC,EAET,SAAS,EAAqB,EAAM,CAClC,OAAOA,EAAK,UAAYA,EAAK,SAAS,IAAMA,EAAK,SAAS,GAAG,MAAQA,EAAK,SAAS,GAAG,KAAK,eAE7F,MAAO,CACL,kBACA,OAAQ,CACN,CACE,UAAW,KACX,YAAa,CAAC,qBAAsB,2BACrC,CACD,CACE,UAAW;EACX,YAAa,CAAC,qBAAsB,2BACrC,CACD,CACE,OAAQ,OACR,UAAW,IACX,MAAO,WACP,YAAa,CAAC,YACf,CACD,CAAE,QAAS,GAAM,UAAW,IAAK,MAAO,KACzC,CACD,SAAU,CACR,qBACA,gBACA,4BACA,OAAQ,EAAM,EAAG,EAAO,IACfkE,GAAgB,MAAMlE,EAAM,EAAG,EAAO,EAAK,CAAGuH,EAAWvH,EAAM,EAAM,CAE9E,MAAO,EAAM,EAAG,EAAO,IACdkE,GAAgB,KAAKlE,EAAM,EAAG,EAAO,EAAK,CAAGuH,EAAWvH,EAAM,EAAM,CAE7E,eAAgB,EAAM,EAAG,EAAO,IACvBkE,GAAgB,cAAclE,EAAM,EAAG,EAAO,EAAK,CAAGuH,EAAWvH,EAAM,EAAM,CAEtF,QAAS,EAAM,EAAG,EAAO,IAChBkE,GAAgB,OAAOlE,EAAM,EAAG,EAAO,EAAK,CAAGuH,EAAWvH,EAAM,EAAM,CAE/E,YAAa,EAAM,EAAG,KACpB,EAAM,eAAiB,EAAM,gBAAkB,GACxCkE,GAAgB,WAAWlE,EAAM,EAAG,EAAM,CAAGuH,EAAWvH,EAAM,EAAM,EAE7E,UAAW,EAAM,EAAG,EAAO,IAClBkE,GAAgB,SAASlE,EAAM,EAAG,EAAO,EAAK,CAAGuH,EAAWvH,EAAM,EAAM,EAGpF,EAGG,IAAgB,EAAO,EAAE,GAAK,CAClC,IAAM,EAAiB,CAAC,gBAAgB,CAClC,EAA2B,GAAS,CACxC,IAAM,EAAeA,EAAK,SAAS,GAC/B,GAAgB,EAAa,UAAU,QAAU,EAAa,SAAS,GAAG,OAAS,QAAU,EAAa,SAAS,GAAG,OAAS,QAAU,EAAa,SAAS,GAAG,OAAS,YAC7K,EAAK,QAAU,EAAa,SAAS,GAAG,MACxC,EAAK,IAAMA,EAAK,KAAO,EAAE,CACzB,EAAK,IAAI,eAAiB,GAC1B,EAAa,SAAS,OAAO,EAAG,EAAE,GAGhC,GAAwB,EAAM,CAAE,YAAY,EAAE,IAAO,CACzD,GAAI,CAAC,GAAqB,IAAIA,EAAK,KAAK,CACtC,OAEF,IAAM,EAAkBA,EAAK,SAAS,OAAQ,GAAW,EAAO,OAAS,4BAA4B,CACrG,GAAI,EAAgB,SAAW,EAC7B,OAEF,IAAM,EAAQ,EAAgB,GAC9B,GAAI,GAAsB,IAAI,EAAM,KAAK,EAAI,EAAU,SAAS,EAAM,KAAK,CACzE,OAEF,IAAM,EAAaA,EAAK,SAAS,QAAQ,EAAM,CAC/C,EAAK,SAAS,OAAO,EAAY,EAAG,GAAG,GAAO,UAAY,EAAE,CAAC,CAC7D,EAAK,IAAMA,EAAK,KAAO,EAAE,CACzB,EAAK,IAAI,UAAY,EAAM,MAEvB,EAAe,GAAS,CACxB,EAAK,oBACP,EAAwBA,EAAK,CAE3B,EAAK,YACP,EAAqBA,EAAM,OAAO,EAAK,YAAe,UAAY,EAAE,CAAG,EAAK,WAAW,EAGrF,EAAQ,CACZ,mBAAoB,EACpB,0BAA2B,EAC3B,8BAA+B,EAC/B,6BAA8B,EAC9B,wBAAyB,EACzB,eAAgB,EAChB,cAAe,EACf,wBAAyB,EACzB,cAAe,EACf,SAAU,EACV,wBAAyB,EAC1B,CACKkB,EAAO,CACX,eAAgB,EAChB,+BAAgC,EAChC,cAAe,GACf,YAAa,GACb,SAAU,GACV,0BAA2B,EAC3B,8BAA+B,EAC/B,mBAAoB,EACpB,sCAAuC,GACvC,mCAAoC,EACpC,gCAAiC,GACjC,iCAAkC,EAClC,6BAA8B,GAC9B,wBAAyB,GACzB,yBACA,8CAA+C,CAC7C,IAAMqG,EAAa,KAAK,KAAK,oBAC7B,EAAWA,EAAW,OAAS,GAAG,GAAK,IAEzC,cAAe,GACf,iCAAkC,GAClC,8BAA+B,EAC/B,2BAA4B,GAC5B,4BAA6B,EAC7B,wBAAyB,GACzB,kBAAmB,EACnB,cAAe,GACf,SAAU,GACV,iCAAkC,GAClC,8BAA+B,EAC/B,2BAA4B,GAC5B,4BAA6B,EAC7B,wBAAyB,GACzB,kBAAmB,EACpB,CACD,SAAS,EAAoB,EAAO,CAElC,IAAM,EADQ,4BACO,KAAK,KAAK,eAAe,EAAM,CAAC,CACrD,KAAK,MAAM,CACT,KAAM,gBACN,KAAM,UACN,WAAY,CACV,MAAO,IAAS,IAAI,MAAM,CAC1B,aAAc,IAAS,IAE1B,CAAE,EAAM,CAEX,SAAS,EAAmB,EAAO,CACjC,KAAK,KAAK,EAAM,CAElB,SAAS,EAAe,EAAO,CAC7B,EAAW,KAAK,KAAM,qBAAsB,EAAM,CAEpD,SAAS,EAAc,EAAO,CAC5B,IAAM,EAAY,KAAK,MAAM,KAAK,MAAM,OAAS,GAC7C,EAAU,SAAS,OAAS,IAE9B,EAAU,QADU,EAAU,SAAS,KAAM,GAAU,EAAM,QAAQ,EACpC,SAEnC,EAAY,EAAU,CACtB,EAAU,SAAW,EAAU,SAAS,QAAS,GAC3C,EAAM,QACD,EAAE,CAEP,EAAM,OAAS,WAAa,OAAO,KAAK,EAAM,WAAW,CAAC,SAAW,GAAK,CAAC,EAAM,MAC/E,EAAM,KAAK,YACb,EAAU,IAAM,EAAU,KAAO,EAAE,CACnC,EAAU,IAAI,UAAY,EAAM,KAAK,WAEhC,EAAM,WAEf,EAAM,KAAO,CACX,MAAO,iBACP,YAAa,CACX,GAAG,EAAM,YACR,UAAU,EAAM,QAAS,IAE7B,CACM,GACP,CACF,KAAK,KAAK,EAAM,CAElB,SAAS,EAAsB,EAAO,CACpC,EAAW,KAAK,KAAM,4BAA6B,EAAM,CAE3D,SAAS,EAA0B,EAAO,CACxC,EAAW,KAAK,KAAM,gCAAiC,EAAM,CAE/D,SAAS,EAAqB,EAAO,CACnC,IAAM,EAAU,KAAK,MAAM,KAAK,MAAM,OAAS,GAC/C,GAA8B,KAAK,KAAM,EAAQ,CACjD,EAAY,EAAQ,CACpB,KAAK,KAAK,EAAM,CAElB,SAAS,EAAyB,EAAO,CACvC,IAAI,EAAU,KAAK,MAAM,KAAK,MAAM,OAAS,GAC7C,EAAU,GAA8B,KAAK,KAAM,EAAQ,CACvD,EAAQ,OAAS,kCACnB,EAAQ,QAAU,KAAK,eAAe,EAAM,CAC5C,KAAK,KAAK,EAAM,EAGpB,SAAS,EAA0B,EAAO,CACxC,KAAK,MAAM,KAAK,MAAM,OAAS,GAAG,KAAO,KAAK,eAAe,EAAM,EAAE,MAAM,CAE7E,SAAS,EAAU,EAAO,CACxB,EAAW,KAAK,KAAM,gBAAiB,EAAM,CAE/C,SAAS,EAAc,EAAO,CAC5B,KAAK,MAAM,CAAE,KAAM,gBAAiB,KAAM,OAAQ,WAAY,EAAE,CAAE,SAAU,GAAI,CAAE,EAAM,CAE1F,SAAS,EAAU,EAAO,CACxB,EAAW,KAAK,KAAM,gBAAiB,EAAM,CAE/C,SAAS,EAAW,EAAM,EAAO,CAC/B,KAAK,MAAM,CAAE,OAAM,KAAM,GAAI,WAAY,EAAE,CAAE,SAAU,GAAI,CAAE,EAAM,CAErE,SAAS,EAAuB,EAAO,CACrC,KAAK,MAAM,KAAK,MAAM,OAAS,GAAG,KAAO,EAAU,KAAK,eAAe,EAAM,CAAC,CAEhF,SAAS,EAAS,EAAO,CACvB,KAAK,MAAM,KAAK,MAAM,OAAS,GAAG,KAAO,KAAK,eAAe,EAAM,CAErE,SAAS,EAAoB,EAAO,CAClC,KAAK,MAAM,CAAE,KAAM,YAAa,KAAM,CAAE,eAAgB,GAAM,CAAE,SAAU,GAAI,CAAE,EAAM,CAExF,SAAS,GAAmB,EAAO,CACjC,KAAK,KAAK,EAAM,CAElB,SAAS,GAAkB,CACzB,KAAK,KAAK,oBAAsB,EAAE,CAClC,KAAK,QAAQ,CAEf,SAAS,EAAqB,EAAO,CACnC,KAAK,KAAK,oBAAoB,KAAK,CAAC,KAAM,GAAc,KAAK,eAAe,EAAM,CAAC,CAAC,CAAC,CAEvF,SAAS,GAAwB,EAAO,CACtC,KAAK,KAAK,oBAAoB,KAAK,CAAC,QAAS,GAAc,KAAK,eAAe,EAAM,CAAC,CAAC,CAAC,CAE1F,SAAS,EAAmB,EAAO,CACjC,IAAMA,EAAa,KAAK,KAAK,oBACvB,EAAgBA,EAAWA,EAAW,OAAS,GACrD,EAAc,IAAM,OAAO,EAAc,IAAO,SAAW,EAAc,GAAK,IAAM,GAAc,KAAK,eAAe,EAAM,CAAC,CAE/H,SAAS,GAAkB,EAAO,CAChC,KAAK,KAAK,oBAAoB,KAAK,CAAC,KAAK,eAAe,EAAM,CAAE,GAAK,CAAC,CAExE,SAAS,IAAiB,CACxB,IAAMA,EAAa,KAAK,KAAK,oBACvB,EAAU,EAAE,CACd7I,EAAQ,GACR,EACJ,KAAO,EAAEA,EAAQ6I,EAAW,QAAQ,CAClC,EAAYA,EAAW7I,GACvB,IAAM,EAAO,EAAU,EAAU,GAAG,CAChC,IAAS,SAAW,EAAQ,MAC9B,EAAQ,OAAS,IAAM,EAAU,GAEjC,EAAQ,GAAQ,EAAU,GAG9B,KAAK,KAAK,oBAAsB6I,EAChC,KAAK,QAAQ,CACb,IAAI,EAAW,KAAK,MAAM,KAAK,MAAM,OAAS,GAC9C,GAAI,EAAS,OAAS,iBAAmB,EAAS,OAAS,OACzD,KAAO,CAAC,EAAS,UAAU,KAAO,EAAS,UAAU,OAAS,GAC5D,EAAW,EAAS,SAAS,EAAS,SAAS,OAAS,GAG5D,EAAS,WAAa,EAExB,SAAS,GAAU,EAAO,CACxB,KAAK,KAAK,EAAM,CAElB,SAAS,GAAgB,EAAO,CAC9B,GAAM,CAAC,GAAW,KAAK,WAAW,KAAK,WAAW,OAAS,GACvD,EAAQ,OAAS,EAAM,MACzB,KAAK,KAAK,EAAM,CAGpB,SAAS,GAA8B,EAAS,CAC9C,KAAO,EAAQ,OAAS,YAAc,EAAQ,OAAS,QAAQ,CAC7D,GAAM,CAAC,GAAc,KAAK,WAAW,KAAK,WAAW,OAAS,GAC9D,KAAK,KAAK,EAAW,CACrB,EAAU,KAAK,MAAM,KAAK,MAAM,OAAS,GAE3C,OAAO,EAET,MAAO,CACL,iBACA,QACA,OACD,EAOG,EAAQ,CAIZ,IAAK,KAIL,MAAO,GAIP,cAAe,GAIf,KAAM,GAIN,WAAY,GAIZ,mBAAoB,GAIpB,KAAM,GAIN,KAAM,GAIN,IAAK,GAIL,MAAO,GAIP,SAAU,GAIV,OAAQ,GAIR,YAAa,GAIb,WAAY,GAIZ,qBAAsB,GAItB,UAAW,GAIX,qBAAsB,GAItB,WAAY,GAIZ,SAAU,GAIV,WAAY,IAIZ,oBAAqB,IAIrB,oBAAqB,IACtB,CAED,SAAS,GAAY,EAAS,EAAI,EAAK,EAAM,EAAY,EAAY,EAAa,CAChF,IAAI,EAAO,EACP,EAAU,EACd,OAAO,EACP,SAAS,EAAM,EAAM,CACnB,GAAIvI,IAAS,EAAM,qBACjB,MAAU,MAAM,eAAe,CAMjC,OAJA,EAAQ,MAAM,EAAK,CACnB,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAW,CACjB,EAET,SAAS,EAAW,EAAM,CASxB,OARIA,IAAS,EAAM,sBACjB,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAW,CACxB,EAAQ,KAAK,EAAK,CACX2B,IAET,EAAQ,MAAM,EAAW,CAClB,EAAQ3B,EAAK,EAEtB,SAAS,EAAQ,EAAM,CAiBrB,OAhBIA,IAAS,EAAM,KAAO,EAAO,IACxB,EAAIA,EAAK,CAEdA,IAAS,EAAM,sBAAwB,CAAC,IACnC,EAAeA,EAAK,CAEzB,EAAmBA,EAAK,CACtB,EACK,EAAIA,EAAK,EAElB,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,IAET,EAAQ,MAAM,YAAa,CAAE,YAAa,OAAQ,CAAC,CAC5C4C,EAAM5C,EAAK,EAEpB,SAAS4C,EAAM,EAAM,CAanB,OAZI5C,IAAS,EAAM,KAAO,EAAmBA,EAAK,EAAI,EAAO,KAC3D,EAAQ,KAAK,YAAY,CAClB,EAAQA,EAAK,EAElBA,IAAS,EAAM,sBAAwB,EAAE,EAAU,EAC9C,EAAIA,EAAK,CAEdA,IAAS,EAAM,sBAAwB,CAAC,KAC1C,EAAQ,KAAK,YAAY,CAClB,EAAeA,EAAK,GAE7B,EAAQ,QAAQA,EAAK,CACdA,IAAS,EAAM,UAAY,EAAc4C,GAElD,SAAS,EAAe,EAAM,CAM5B,OALA,EAAQ,KAAK,EAAW,CACxB,EAAQ,MAAM,EAAW,CACzB,EAAQ,QAAQ5C,EAAK,CACrB,EAAQ,KAAK,EAAW,CACxB,EAAQ,KAAK,EAAK,CACX2B,EAET,SAAS,EAAY,EAAM,CAMzB,OALI3B,IAAS,EAAM,sBAAwBA,IAAS,EAAM,WAAaA,IAAS,EAAM,sBACpF,EAAQ,QAAQA,EAAK,CACrB,IACO4C,GAEFA,EAAM5C,EAAK,EAItB,IAAM,GAAU,CAAE,SAAU,GAAiB,QAAS,GAAM,CACtD,GAAW,CAAE,SAAU,GAAsB,QAAS,GAAM,CAC5D,GAAqB,CAAE,SAAU,GAAoB,QAAS,GAAM,CAC1E,SAAS,GAAW,EAAS,EAAI,EAAK,CACpC,IAAMS,EAAO,KACb,OAAO,EACP,SAAS,EAAM,EAAM,CACnB,GAAIT,IAAS,EAAM,qBACjB,MAAU,MAAM,eAAe,CAQjC,OANIS,EAAK,WAAa,EAAM,KAAOA,EAAK,mCAC/B,EAAQ,MAAM,GAAU,EAAK,EAAa,CAACT,EAAK,CAErDS,EAAK,WAAa,EAAM,qBACnB,EAAIT,EAAK,CAEX,EAAQ,MAAM,GAAoB,EAAK,EAAa,CAACA,EAAK,CAEnE,SAAS,EAAa,EAAM,CAE1B,OADA,EAAQ,MAAM,WAAW,CAClB,EAAQ,QAAQ,GAASkC,EAAM,EAAI,CAAClC,EAAK,CAElD,SAASkC,EAAK,EAAM,CAIlB,OAHIlC,IAAS,EAAM,oBAAsBA,IAAS,EAAM,qBAC/C,EAAIA,EAAK,CAEX,EAAOA,EAAK,CAErB,SAAS,EAAO,EAAM,CAEpB,OADA,EAAQ,KAAK,WAAW,CACjB2B,EAAG3B,EAAK,EAGnB,SAAS,GAAgB,EAAS,EAAI,EAAK,CACzC,OAAO,GAAY,EAAS2B,EAAI,EAAK,qBAAsB,2BAA4B,2BAA2B,CAEpH,IAAM,GAAe,CACnB,SAAU,GACX,CACD,SAAS,GAAqB,EAAS,EAAI,EAAK,CAC9C,OAAO,EACP,SAAS,EAAM,EAAM,CAGnB,OAFA,EAAQ,MAAM,sBAAsB,CACpC,EAAQ,QAAQ3B,EAAK,CACd,EAET,SAAS,EAAM,EAAM,CAanB,OAZI,EAAcA,EAAK,EAInBA,IAAS,EAAM,YAAcA,IAAS,EAAM,YAC9C,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,EAAM,sBACjB,EAAQ,KAAK,sBAAsB,CAC5B2B,EAAG3B,EAAK,EAEV,EAAIA,EAAK,EAGpB,SAAS,GAAmB,EAAS,EAAI,EAAK,CAC5C,OAAO,EACP,SAAS,EAAM,EAAM,CAGnB,OAFA,EAAQ,MAAM,gBAAgB,CAC9B,EAAQ,QAAQA,EAAK,CACd,EAET,SAAS,EAAM,EAAM,CAKnB,OAJIA,IAAS,EAAM,sBAGnB,EAAQ,KAAK,gBAAgB,CACtB2B,EAAG3B,EAAK,EAHN,EAAIA,EAAK,EAOtB,SAAS,GAAiB,EAAS,EAAI,EAAK,EAAgB,EAAsB,EAAe,EAAiB,EAAoB,EAAmB,EAA0B,EAA2B,EAAoB,EAAsB,EAAoB,EAAa,CACvR,IAAI,EACA,EACA,EAAkB,GACtB,OAAO,EACP,SAAS,EAAM,EAAM,CAKnB,OAJA,EAAQ,MAAM,EAAe,CAC7B,EAAQ,MAAM,EAAqB,CACnC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAqB,CAC3B,EAET,SAAS,EAAQ,EAAM,CAsBrB,OArBIA,IAAS,EAAM,MACjB,EAAO,EACA,EAAcA,EAAK,EAExBA,IAAS,EAAM,KACjB,EAAO,EACA,EAAcA,EAAK,EAExBA,IAAS,EAAM,OAASA,IAAS,EAAM,YAAc,GAAWA,EAAK,EACvE,EAAQ,MAAM,EAAc,CAC5B,EAAQ,MAAM,EAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAkBA,IAAS,EAAM,MAC1BA,IAAS,EAAM,MAAQ,EAAoB,GAEhD,GAAe,EAAcA,EAAK,CAC7B,EAAa,EAAS,EAAS,aAAa,CAACA,EAAK,CAEvD,CAAC,GAAe,EAA0BA,EAAK,CAC1C,GAAkB,EAAS,EAAQ,CAACA,EAAK,CAE3C,GAAIA,EAAK,CAElB,SAAS,EAAc,EAAM,CAM3B,OALA,EAAQ,MAAM,EAAc,CAC5B,EAAQ,MAAM,EAAK,CACnB,EAAQ,MAAM,EAAO,SAAS,CAC9B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAO,SAAS,CACtB,EAET,SAAS,EAAmB,EAAM,CAMhC,OALIA,IAAS,EAAM,KAAOA,IAAS,EAAM,eAAiBA,IAAS,EAAM,MAAQA,IAAS,EAAM,YAAcA,IAAS,EAAM,KAAOA,IAAS,EAAM,UAAYA,IAAS,EAAM,QAAUA,IAAS,EAAM,aAAeA,IAAS,EAAM,UAAYA,IAAS,EAAM,qBAAuB,EAA0BA,EAAK,CAC7S,EAAIA,EAAK,EAElB,EAAQ,MAAM,EAAO,QAAQ,CAC7B,EAAQ,QAAQA,EAAK,CACdyI,GAET,SAASA,EAAS,EAAM,CAWtB,OAVIzI,IAAS,EAAM,KAAOA,IAAS,EAAM,eAAiBA,IAAS,EAAM,YAAcA,IAAS,EAAM,UAAYA,IAAS,EAAM,QAAUA,IAAS,EAAM,aAAeA,IAAS,EAAM,SAC/K,EAAIA,EAAK,CAEdA,IAAS,EAAM,MAAQA,IAAS,EAAM,KAAOA,IAAS,EAAM,qBAAuB,EAA0BA,EAAK,EACpH,EAAQ,KAAK,EAAO,QAAQ,CAC5B,EAAQ,KAAK,EAAK,CAClB,EAAQ,KAAK,EAAc,CACpB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACdyI,GAET,SAAS,EAAkB,EAAM,CAY/B,OAXIzI,IAAS,EAAM,MAAQ,EAAkBA,EAAK,EAChD,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,EAAkB,CAC3B,GAAe,EAAcA,EAAK,CAC7B,EAAa,EAAS,GAAwB,aAAa,CAACA,EAAK,CAEtE,CAAC,GAAe,EAA0BA,EAAK,CAC1C,GAAkB,EAAS,GAAuB,CAACA,EAAK,CAE1D,GAAuBA,EAAK,EAErC,SAAS,GAAuB,EAAM,CAQpC,OAPIA,IAAS,EAAM,QACjB,EAAQ,MAAM,EAAyB,CACvC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAyB,CAC/B,KAET,EAAQ,KAAK,EAAc,CACpB,EAAIA,EAAK,EAElB,SAAS,EAAK,EAAM,CAYlB,OAXIA,IAAS,EAAM,MAAQA,IAAS,EAAM,KAAOA,IAAS,EAAM,OAASA,IAAS,EAAM,YAAc,EAAkBA,EAAK,EAC3H,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,EAAkB,CAC3B,GAAe,EAAcA,EAAK,CAC7B,EAAa,EAAS,EAAW,aAAa,CAACA,EAAK,CAEzD,CAAC,GAAe,EAA0BA,EAAK,CAC1C,GAAkB,EAAS,EAAU,CAACA,EAAK,CAE7C,EAAUA,EAAK,EAExB,SAAS,EAAU,EAAM,CAQvB,OAPIA,IAAS,EAAM,QACjB,EAAQ,MAAM,EAAyB,CACvC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAyB,CAC/B,KAET,EAAQ,KAAK,EAAc,CACpB,EAAQA,EAAK,EAEtB,SAAS,GAAY,EAAM,CAsBzB,OArBIA,IAAS,EAAM,KAAOA,IAAS,EAAM,UAAYA,IAAS,EAAM,QAAUA,IAAS,EAAM,aAAeA,IAAS,EAAM,UAAYA,IAAS,EAAM,qBAAuB,GAAe,EAAmBA,EAAK,CAC3M,EAAIA,EAAK,CAEdA,IAAS,EAAM,eAAiBA,IAAS,EAAM,YACjD,EAAQ,MAAM,EAA0B,CACxC,EAAQ,MAAM,EAAqB,CACnC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAqB,CAClC,EAASA,EACF,IAEL,GAAe,EAAcA,EAAK,CAC7B,EAAa,EAAS,GAAa,aAAa,CAACA,EAAK,CAE3D,CAAC,GAAe,EAA0BA,EAAK,CAC1C,GAAkB,EAAS,GAAY,CAACA,EAAK,EAEtD,EAAQ,MAAM,EAAmB,CACjC,EAAQ,MAAM,EAAmB,CACjC,EAAQ,QAAQA,EAAK,CACrB,EAAS,IAAK,GACP,GAET,SAAS,EAAc,EAAM,CAW3B,OAVIA,IAAS,EAAM,KAAOA,IAAS,EAAM,eAAiBA,IAAS,EAAM,YAAcA,IAAS,EAAM,UAAYA,IAAS,EAAM,QAAUA,IAAS,EAAM,aAAeA,IAAS,EAAM,SAC/K,EAAIA,EAAK,CAEdA,IAAS,EAAM,qBAAuB,EAA0BA,EAAK,EACvE,EAAQ,KAAK,EAAmB,CAChC,EAAQ,KAAK,EAAmB,CAChC,EAAQ,KAAK,EAAc,CACpB,EAAQA,EAAK,GAEtB,EAAQ,QAAQA,EAAK,CACd,GAET,SAAS,GAAiB,EAAM,CAU9B,OATIA,IAAS,GACX,EAAQ,MAAM,EAAqB,CACnC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAqB,CAClC,EAAQ,KAAK,EAA0B,CACvC,EAAQ,KAAK,EAAc,CACpB,KAET,EAAQ,MAAM,EAAmB,CAC1B,GAAmBA,EAAK,EAEjC,SAAS,GAAmB,EAAM,CAahC,OAZIA,IAAS,GACX,EAAQ,KAAK,EAAmB,CACzB,GAAiBA,EAAK,EAE3BA,IAAS,EAAM,IACV,EAAIA,EAAK,CAEd,EAAmBA,EAAK,CACnB,EAAc,EAAIA,EAAK,CAAG,GAAkB,EAAS,GAAmB,CAACA,EAAK,EAEvF,EAAQ,MAAM,EAAmB,CACjC,EAAQ,QAAQA,EAAK,CACd,IAET,SAAS,GAAY,EAAM,CAgBzB,OAfI,GAAmBA,IAAS,EAAM,WACpC,EAAQ,KAAK,EAAmB,CAChC,EAAQ,KAAK,EAAmB,CAChC,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,kBAAkB,CAC/B,EAAQ,MAAM,EAAmB,CACjC,EAAQ,MAAM,EAAmB,CAC1B,IAELA,IAAS,GAAUA,IAAS,EAAM,KAAO,EAAmBA,EAAK,EACnE,EAAQ,KAAK,EAAmB,CACzB,GAAmBA,EAAK,GAEjC,EAAQ,QAAQA,EAAK,CACd,IAET,SAAS,GAAkB,EAAM,CAE/B,OADA,EAAQ,QAAQA,EAAK,CACd,GAET,SAAS,GAAiB,EAAM,CAC9B,OAAOA,IAAS,EAAM,qBAAuB,EAA0BA,EAAK,CAAG,EAAQA,EAAK,CAAG,GAAIA,EAAK,CAE1G,SAAS,GAAI,EAAM,CAQjB,OAPIA,IAAS,EAAM,qBACjB,EAAQ,MAAM,EAAqB,CACnC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,EAAqB,CAClC,EAAQ,KAAK,EAAe,CACrB2B,GAEF,EAAI3B,EAAK,EAIpB,IAAM,GAAe,CAAE,SAAU,GAAsB,QAAS,GAAM,CAChE,GAAc,CAIlB,WAIA,oBAIA,WAIA,OAIA,QACD,CACD,SAAS,GAAW,EAAS,EAAI,EAAK,CACpC,IAAMS,EAAO,KACb,OAAO,EACP,SAAS,EAAM,EAAM,CACnB,GAAIT,IAAS,EAAM,oBACjB,MAAU,MAAM,eAAe,CAEjC,IAAM,EAAQS,EAAK,OAAOA,EAAK,OAAO,OAAS,GAI/C,OAHI,EAAmBA,EAAK,SAAS,EAAI,CAAC,GAAS,CAAC,GAAY,SAAS,EAAM,GAAG,KAAK,CAC9E,EAAIT,EAAK,CAEX,EAAQ,QAAQ,GAAc2B,EAAI,EAAI,CAAC3B,EAAK,EAGvD,SAAS,GAAqB,EAAS,EAAI,EAAK,CAC9C,OAAO,GACL,EACA2B,EACA,EACA,0BACA,gCACA,yBACA,2BACA,8BACA,6BACA,0CACA,qCACA,8BACA,oCACA,kCACD,CAEH,IAAM,GAAoB,CACxB,SAAU,GACX,CAED,SAAS,GAAY,EAAS,EAAI,EAAK,CACrC,OAAO,EACP,SAAS,EAAM,EAAM,CAOnB,OANI3B,IAAS,EAAM,qBAGnB,EAAQ,KAAK,iBAAiB,CAC9B,EAAQ,MAAM,eAAe,CAC7B,EAAQ,QAAQA,EAAK,CACd,GALE,EAAIA,EAAK,CAOpB,SAAS,EAAc,EAAM,CAM3B,OALIA,IAAS,EAAM,qBAGnB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,eAAe,CACrB2B,GAJE,EAAI3B,EAAK,EAOtB,SAAS,GAAW,EAAS,EAAI,EAAK,CACpC,OAAO,EACP,SAAS,EAAM,EAAM,CACnB,GAAIA,IAAS,EAAM,oBACjB,MAAU,MAAM,eAAe,CAIjC,OAFA,EAAQ,MAAM,eAAe,CAC7B,EAAQ,QAAQA,EAAK,CACd,EAET,SAAS,EAAc,EAAM,CAO3B,OANIA,IAAS,EAAM,qBAGnB,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,eAAe,CAC5B,EAAQ,MAAM,iBAAiB,CACxBuC,GALE,EAAIvC,EAAK,CAOpB,SAASuC,EAAQ,EAAM,CAQrB,OAPIvC,IAAS,EAAM,oBACV,EAAQ,QAAQ,CAAE,SAAU,GAAa,QAAS,GAAM,CAAE,EAAQ,IACvE,EAAQ,QAAQ,EAAM,CACfuC,GACP,CAACvC,EAAK,EAEV,EAAQ,QAAQA,EAAK,CACduC,GAET,SAAS,EAAM,EAAM,CACnB,OAAOZ,EAAG3B,EAAK,EAGnB,IAAM,GAAkB,CACtB,SAAU,GACX,CAED,SAAS,GAAW,EAAS,EAAI,EAAK,EAAU,CAC9C,IAAMS,EAAO,KACb,OAAO,EACP,SAAS,EAAM,EAAM,CAMnB,OALI,GAAWT,EAAK,EAClB,EAAQ,MAAM,EAAS,CACvB,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAElB,SAAS,EAAK,EAAM,CAMlB,OALIA,IAAS,EAAM,MAAQA,IAAS,EAAM,YAAc,EAAkBA,EAAK,EAC7E,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,EAAS,CACfS,EAAK,WAAa,EAAM,WAAa,EAAIT,EAAK,CAAG2B,EAAG3B,EAAK,GAIpE,IAAM,GAAU,CAAE,SAAU,GAAiB,QAAS,GAAM,CACtD,GAAe,CAAE,SAAU,GAAsB,QAAS,GAAM,CACtE,SAAS4B,GAAS,EAAM,CACtB,OAAO5B,IAAS,EAAM,OAAS,KAAK,OAAO,KAAK,OAAO,OAAS,GAAG,GAAG,OAAS,kBAEjF,SAAS,GAAW,EAAS,EAAI,EAAK,CACpC,IAAMS,EAAO,KACb,OAAO,EACP,SAAS,EAAM,EAAM,CACnB,GAAIT,IAAS,EAAM,MACjB,MAAU,MAAM,eAAe,CAEjC,GAAIS,EAAK,WAAa,MAAQ,CAAC,EAA0BA,EAAK,SAAS,EAAI,CAAC,CAAC,EAAM,qBAAsB,EAAM,KAAM,EAAM,WAAY,EAAM,mBAAmB,CAAC,SAASA,EAAK,SAAS,CACtL,OAAO,EAAIT,EAAK,CAElB,GAAI,CAAC4B,GAAS,KAAKnB,EAAMA,EAAK,SAAS,CACrC,MAAU,MAAM,4BAA4B,CAM9C,OAJA,EAAQ,MAAM,gBAAgB,CAC9B,EAAQ,MAAM,sBAAsB,CACpC,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,sBAAsB,CAC5B,GAAW,KAAKS,EAAM,EAAS,EAAW,EAAK,oBAAoB,CAE5E,SAAS,EAAU,EAAM,CAUvB,OATIT,IAAS,EAAM,MACV,EAAIA,EAAK,CAEdA,IAAS,EAAM,qBACV,EAAQ,QAAQ,GAAS,EAAY,EAAW,CAACA,EAAK,CAE3DA,IAAS,EAAM,oBACV,EAAQ,QAAQ,GAAc,EAAiB,EAAgB,CAACA,EAAK,CAEvEkC,EAAKlC,EAAK,CAEnB,SAAS,EAAgB,EAAM,CAI7B,OAHIA,IAAS,EAAM,qBACV,EAAQ,QAAQ,GAAS,EAAY,EAAW,CAACA,EAAK,CAExDkC,EAAKlC,EAAK,CAEnB,SAAS,EAAW,EAAM,CAIxB,OAHIA,IAAS,EAAM,oBACV,EAAQ,QAAQ,GAAckC,EAAMA,EAAK,CAAClC,EAAK,CAEjDkC,EAAKlC,EAAK,CAEnB,SAASkC,EAAK,EAAM,CAElB,OADA,EAAQ,KAAK,gBAAgB,CACtBP,EAAG3B,EAAK,EAGnB,SAAS,GAAgB,EAAS,EAAI,EAAK,CACzC,OAAO,GAAY,EAAS2B,EAAI,EAAK,qBAAsB,2BAA4B,2BAA2B,CAEpH,SAAS,GAAqB,EAAS,EAAI,EAAK,CAC9C,OAAO,GACL,EACAA,EACA,EACA,0BACA,gCACA,yBACA,2BACA,8BACA,6BACA,0CACA,qCACA,8BACA,oCACA,kCACD,CAEH,IAAM,GAAiB,CACrB,SAAU,GACV,YACD,CAED,SAAS,GAAW,EAAQ,CAC1B,IAAIjC,EAAQ,GACR,EAAO,EACX,KAAO,EAAEA,EAAQ,EAAO,QACtB,GAAQ,OAAO,EAAOA,IAAW,SAAW,EAAOA,GAAO,OAAS,EAErE,OAAO,EAET,SAAS,GAAW,EAAQ,EAAM,CAChC,IAAM,EAAO,EAAO,EAAO,OAAS,GAIpC,MAHI,CAAC,GAAQ,EAAK,GAAG,OAAS,EACrB,EAEF,GAAW,EAAK,GAAG,YAAY,EAAK,GAAG,CAAC,CAEjD,SAAS,GAAe,EAAQ,CAC9B,IAAI,EAAO,EACPA,EAAQ,EAAO,OAAS,EACxB,EAAO,EAAOA,GAClB,KAAOA,GAAS,GAAK,GAAQ,EAAK,GAAG,OAAS,cAAgB,EAAK,KAAO,QACxE,GAAQ,GAAW,EAAK,GAAG,YAAY,EAAK,GAAG,CAAC,CAChD,IACA,EAAO,EAAOA,GAEhB,OAAO,EAET,IAAM,GAAiB,GAAc,CACnC,IAAM,EAAQ,CACZ,OAAQ,GAIR,MAAQ,GAAY,CAClB,IAAM,EAAe,EAAM,OAI3B,OAHA,EAAM,KAAK,EAAQ,CACnB,EAAQ,MAAM,EAAU,CACxB,EAAM,OAAS,OACF,CACX,EAAM,OAAS,IAMnB,UAAY,GAAY,CACtB,IAAM,EAAe,EAAM,OAK3B,MAJA,CAEE,EAAM,UADN,EAAQ,MAAM,EAAU,CACT,QAEJ,CACX,EAAM,OAAS,IAMnB,KAAO,GAAY,CACjB,IAAM,EAAe,EAAM,OAK3B,MAJA,CAEE,EAAM,UADN,EAAQ,KAAK,EAAU,CACR,QAEJ,CACX,EAAM,OAAS,IAGpB,CACD,OAAO,GAEH,GAAoB,CAAE,SAAU,GAAiB,QAAS,GAAM,CACtE,SAAS,GAAgB,EAAS,EAAI,EAAK,CACzC,IAAI,EAAgB,EACpB,OAAO,EACP,SAAS,EAAM,EAAM,CAEnB,OADA,EAAQ,MAAM,aAAa,CACpB,EAAMM,EAAK,CAEpB,SAAS,EAAM,EAAM,CAUnB,OATIA,IAAS,EAAM,UACjB,IACA,EAAQ,QAAQA,EAAK,CACd,IAET,EAAQ,KAAK,aAAa,CACtB,GAAiB,EACZ2B,EAAG3B,EAAK,CAEV,EAAIA,EAAK,GAIpB,SAAS,GAAoB,EAAS,EAAI,EAAM,EAAM,EAAe,CACnE,IAAI4B,EACJ,OAAO,EAAQ,QAAQ,CACrB,SAAU,EACV,QAAS,GACV,CAAE,EAAiBnC,EAAK,CACzB,SAAS,EAAoB,EAAU,EAAK,EAAK,CAC/C,IAAMgB,EAAO,KACT,EAAO,EACP,EAAoB,EACxB,OAAO,EACP,SAAS,EAAoB,EAAM,CAOjC,OANI,EAAcT,EAAK,EACrB,EAAS,QAAQA,EAAK,CACtB,GAAqB,EACd,IAET,EAAS,KAAK,QAAQ,CACf,EAAmBA,EAAK,EAEjC,SAAS,EAAmB,EAAM,CAShC,OARI,EAAcA,EAAK,EACrB,EAAS,MAAM,QAAQ,CAChB,EAAoBA,EAAK,GAE9B,IAAsB,IACxB,EAAoB,GAAeS,EAAK,OAAO,EAEjD,EAAS,MAAM,oCAAoC,CAC5C,EAAuBT,EAAK,EAErC,SAAS,EAAuB,EAAM,CAgBpC,OAfIA,IAAS,EAAM,MAAQ,EAAcA,EAAK,EAC5C,EAAS,QAAQA,EAAK,CACtB,IACO,GAEL,KAGA,IAAsB,GAGtB,CAAC,EAAmBA,EAAK,CACpB,EAAIA,EAAK,EAElB,EAAS,KAAK,oCAAoC,CAC3C,EAAa,EAAU,EAAK,aAAa,CAACA,EAAK,GAG1D,SAAS,EAAgB,EAAM,CAE7B,OADA,EAAQ,MAAM,gCAAgC,CACvC,EAAQ,QAAQ,CACrB,SAAU,EACV,QAAS,GACV,CAAE,EAAkB,EAAe,CAACA,EAAK,CAE5C,SAAS,EAAe,EAAM,CAC5B,GAAIA,IAAS,KAGX,OAFA,EAAQ,KAAK,gCAAgC,CAC7C,EAAQ,KAAK,qBAAqB,CAC3B2B,EAAG3B,EAAK,CAEjB,IAAM,EAAQ,EAAQ,MAAM,gBAAiB,CAC3C,YAAa,WACb,WACD,CAAC,CAKF,OAJI4B,IACF,EAAS,KAAO,GAElB,EAAW,EACJ,EAAoB5B,EAAK,CAElC,SAAS,EAAoB,EAAM,CAgBjC,OAfIA,IAAS,MACX,EAAQ,KAAK,gBAAgB,CAC7B,EAAQ,KAAK,gCAAgC,CAC7C,EAAQ,KAAK,qBAAqB,CAC3B2B,EAAG3B,EAAK,EAEb,EAAmBA,EAAK,EAC1B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,gBAAgB,CACtB,EAAQ,QAAQ,CACrB,SAAU,EACV,QAAS,GACV,CAAE,EAAkB,EAAe,GAEtC,EAAQ,QAAQA,EAAK,CACd,GAET,SAAS,EAAiB,EAAM,CAE9B,OADA,EAAQ,KAAK,gCAAgC,CACtC,EAAa,EAASP,EAAM,aAAa,CAACO,EAAK,EAI1D,IAAM,GAAQ,CAAE,SAAU,GAAe,QAAS,GAAM,CAClD,GAAa,CAAE,SAAU,GAAoB,QAAS,GAAM,CAClE,SAAS,GAAW,EAAS,EAAI,EAAK,CACpC,IAAMS,EAAO,KACP,EAAgB,GAAe,KAAK,OAAO,CAC7C,EAAW,EACXmB,EACE,EAA8B,EAAE,CAClC,EAAqB,GACrB,EAAqB,GACnB,EAAU,GAAc,4BAA4B,CAC1D,OAAO,EACP,SAAS,EAAM,EAAM,CACnB,GAAI5B,IAAS,EAAM,MACjB,MAAU,MAAM,eAAe,CAKjC,OAHA,EAAQ,MAAM,qBAAqB,CACnC,EAAQ,MAAM,0BAA0B,CACxC,EAAQ,MAAM,6BAA6B,CACpC,EAAaA,EAAK,CAE3B,SAAS,EAAuB,EAAU,EAAK,EAAM,CACnD,IAAI,EAAO,EACP,EAAoB,EACpB,EACJ,OAAO,EACP,SAAS,EAAmB,EAAM,CAIhC,MAHA,GAAoB,GAAeS,EAAK,OAAO,CAC/C,EAAqB,EAAQ,KAAK,EAAS,CAC3C,EAAS,MAAM,oCAAoC,CAC5C,EAAuBT,EAAK,CAErC,SAAS,EAAuB,EAAM,CAmBpC,OAlBIA,QACF,EAAS,QAAQA,EAAK,CACtB,IACO,GAEL,OAIA,IAAsB,GAItB,CAAC,GAAWA,EAAK,EACnB,GAAoB,CACb,EAAKA,EAAK,GAEnB,EAAS,KAAK,oCAAoC,CAC3C,EAAa,EAAU,EAAK,aAAa,CAACA,EAAK,GAG1D,SAAS,EAAY,EAAM,CAMzB,OALA,EAAQ,MAAM,EAAQ,CAClB,EAAmBA,EAAK,CACnB,EAAa,EAAS,EAAW,aAAa,CAACA,EAAK,EAE7D,EAAQ,MAAM,iCAAiC,CACxC,EAAaA,EAAK,EAE3B,SAAS,EAAa,EAAM,CAmB1B,OAlBIA,IAAS,EAAM,oBACV,EAAQ,MACb,GACC,IACC,EAAQ,KAAK,iCAAiC,CACvC,EAAQ,QAAQ,GAAY,EAAa,EAAS,EAAW,aAAc,EAAE,CAAE,EAAI,CAAC,EAAM,EAElG,IACC,EAAQ,QAAQ,EAAM,CACf,GAEV,CAACA,EAAK,CAEL,EAAmBA,EAAK,EAC1B,EAAQ,KAAK,iCAAiC,CACvC,EAAa,EAAS,EAAW,aAAc,EAAE,CAACA,EAAK,GAEhE,EAAQ,QAAQA,EAAK,CACd,GAET,SAAS,EAAa,EAAM,CAU1B,OATIA,IAAS,EAAM,OACjB,EAAQ,QAAQA,EAAK,CACrB,IACO,GAEL,IACK,EAAIA,EAAK,EAElB,EAAQ,KAAK,6BAA6B,CACnC,GAAW,KAAKS,EAAM,EAAS,EAAW,EAAK,yBAAyB,CAACT,EAAK,EAEvF,SAAS,EAAU,EAAM,CACvB,OAAOA,IAAS,EAAM,qBAAuB,EAAQ,QAAQ,GAAO,EAAY,EAAW,CAACA,EAAK,CAAG,EAAWA,EAAK,CAEtH,SAAS,EAAW,EAAM,CACxB,OAAOA,IAAS,EAAM,oBAAsB,EAAQ,QAAQ,GAAY,EAAiB,EAAgB,CAACA,EAAK,CAAG,EAAgBA,EAAK,CAEzI,SAAS,EAAgB,EAAM,CAC7B,OAAO,EAAa,EAAS,EAAW,aAAa,CAACA,EAAK,CAE7D,SAAS,EAAU,EAAM,CAYvB,OAXA,EAAQ,KAAK,0BAA0B,CACnCA,IAAS,MACX,EAAQ,KAAK,qBAAqB,CAC3B2B,EAAG3B,EAAK,EAEb,EAAmBA,EAAK,EAC1B,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnBS,EAAK,UAAYkB,EAAK,GAExB,EAAI3B,EAAK,CAElB,SAAS,EAAa,EAAM,CAU1B,OATIA,IAAS,MACX,EAAQ,KAAK,qBAAqB,CAC3B2B,EAAG3B,EAAK,EAEb,IAAuBA,IAAS,EAAM,MAAQ,EAAcA,EAAK,GACnE,EAAqB,GACd,GAAoB,EAAS2B,EAAI,EAAK,EAAc,EAAc,CAAC3B,EAAK,GAEjF,EAAQ,MAAM,4BAA4B,CACnC,EAAUA,EAAK,EAExB,SAAS,EAAqB,EAAM,CA+BlC,OA9BIA,IAAS,KACJ,EAAMA,EAAK,CAEhBA,IAAS,EAAM,SACV,EAAQ,MACb,GACC,IACC,EAAqB,CAAC,EACf,EAAW,EAAM,EAE1B,EACD,CAACA,EAAK,CAEL,EACK,EAAWA,EAAK,CAErB,CAAC,EAA4B,SAAWA,QAA8BA,IAAS,EAAM,OAChF,EAAQ,QACb,CAAE,SAAU,EAAwB,QAAS,GAAM,CACnD,EACA,EACD,CAACA,EAAK,CAELA,IAAS,EAAM,MACV,EAAQ,QACb,CAAE,SAAU,EAAsB,QAAS,GAAM,CACjD,EACA,EACD,CAACA,EAAK,CAEF,EAAWA,EAAK,CAEzB,SAAS,EAAU,EAAM,CAIvB,OAHIA,IAAS,KACJ,EAAMA,EAAK,CAEb,EAAgB,EAAa,EAAS,EAAsB,aAAc,EAAgB,EAAE,CAACA,EAAK,CAAG,EAAqBA,EAAK,CAExI,SAAS,EAAW,EAAM,CACxB,GAAIA,IAAS,KACX,OAAO,EAAMA,EAAK,CAEpB,EAAQ,UAAU,EAAQ,CAC1B,IAAM,EAAQ,EAAQ,MAAM,gBAAiB,CAC3C,YAAa,WACb,WACD,CAAC,CAKF,OAJI4B,IACF,EAAS,KAAO,GAElB,EAAW,EACJ,GAAgB5B,EAAK,CAE9B,SAAS,GAAgB,EAAM,CAW7B,OAVIA,IAAS,MACX,EAAQ,KAAK,gBAAgB,CACtB,EAAMA,EAAK,EAEhB,EAAmBA,EAAK,EAC1B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,gBAAgB,CACtB,IAET,EAAQ,QAAQA,EAAK,CACd,IAET,SAAS,EAAM,EAAM,CAInB,OAHA,EAAQ,KAAK,EAAQ,CACrB,EAAQ,KAAK,4BAA4B,CACzC,EAAQ,KAAK,qBAAqB,CAC3B2B,EAAG3B,EAAK,CAEjB,SAAS,EAAqB,EAAU,EAAK,EAAM,CACjD,IAAI,EAAO,EACX,OAAO,EAAa,EAAU,EAAoB,aAAc,EAAE,CAClE,SAAS,EAAmB,EAAM,CAGhC,OAFA,EAAS,MAAM,0BAA0B,CACzC,EAAS,MAAM,6BAA6B,CACrC,EAAgBA,EAAK,CAE9B,SAAS,EAAgB,EAAM,CAgB7B,OAfIA,IAAS,EAAM,OACjB,EAAS,QAAQA,EAAK,CACtB,IACO,GAEL,EAA4B,QAC1B,IAAS,EAA4B,EAA4B,OAAS,IAC5E,EAA4B,KAAK,CAE5B,EAAKA,EAAK,EAEf,IAAS,GAGb,EAAS,KAAK,6BAA6B,CACpC,EAAa,EAAU,EAAoB,aAAa,CAACA,EAAK,EAH5D,EAAKA,EAAK,CAKrB,SAAS,EAAmB,EAAM,CAMhC,OALIA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAS,KAAK,0BAA0B,CACjC,EAAIA,EAAK,GAElB,EAA4B,KAAK,EAAK,CAC/B,EAAKA,EAAK,IAIvB,SAAS,GAAc,EAAS,EAAI,EAAK,CACvC,OAAO,GACL,EACA2B,EACA,EACA,0BACA,gCACA,gCACA,GACD,CAEH,SAAS,GAAmB,EAAS,EAAI,EAAK,CAC5C,OAAO,GACL,EACAA,EACA,EACA,+BACA,qCACA,8BACA,gCACA,mCACA,kCACA,+CACA,0CACA,mCACA,yCACA,uCACA,GACD,CAEH,IAAM,GAAoB,CACxB,SAAU,GACV,SAAU,GACX,CAED,SAAS,GAAW,EAAS,EAAI,EAAK,CACpC,IAAMlB,EAAO,KACb,OAAO,EAAa,EAAS,EAAW,aAAa,CACrD,SAAS,EAAU,EAAM,CACvB,GAAI,GAAWA,EAAK,OAAQ,aAAa,CAAG,EAC1C,OAAO,EAAIT,EAAK,CAElB,OAAQA,EAAR,CACE,KAAK,EAAM,SACT,OAAO,GAAW,SAAS,KAAKS,EAAM,EAASkB,EAAI,EAAI,CAAC3B,EAAK,CAC/D,KAAK,EAAM,MACT,OAAO,GAAkB,SAAS,KAAKS,EAAM,EAASkB,EAAI,EAAI,CAAC3B,EAAK,CACtE,QACE,OAAO,EAAIA,EAAK,GAIxB,IAAM,GAA4B,CAChC,SAAU,GACX,CAED,SAAS,GAAS,EAAS,EAAI,EAAK,CAClC,IAAMS,EAAO,KACP,EAAsB,GAAe,SAAS,KAClDA,EACA,EACA,EAAa,EAASyB,EAAM,aAAa,CACzC,EACD,CACD,OAAO,EAAa,EAAS,EAAW,aAAa,CACrD,SAAS,EAAU,EAAM,CAIvB,OAHIlC,IAAS,EAAM,MACV,EAAoBA,EAAK,CAE3B,EAAIA,EAAK,CAElB,SAASkC,EAAK,EAAM,CAIlB,OAHI,EAAmBlC,EAAK,EAAIA,IAAS,EAAM,IACtC2B,EAAG3B,EAAK,CAEV,EAAIA,EAAK,EAGpB,IAAM,GAAyB,CAC7B,YACD,CAED,SAAS,IAA+B,CACtC,MAAO,CACL,KAAM,EACH,EAAM,OAAQ,IACd,EAAM,sBAAuB,CAAC,GAAa,EAC3C,EAAM,qBAAsB,CAAC,GAAiB,IAChD,CACD,KAAM,EACH,EAAM,OAAQ,CAAC,GAAmB,GAAuB,CAC3D,CACD,YAAa,CACX,KAAM,GACN,KAAM,IACL,EAAM,OAAQ,IAElB,CAGH,IAAM,GAAiB,GAAe;EACpC;KAEI,IAAa,SAAmB,EAAO,EAAE,CAAE,CAC/C,IAAM,EAAO,KAAK,MAAM,CACpB,EAAK,aAAe,IAAK,IAAK,EAAK,cAAc,aACnD,EAAK,WAAa,EAAK,aAAa,WAAa,CAAE,UAAW,EAAE,CAAE,CAAG,IAEnE,EAAK,qBAAuB,IAAK,IAAK,EAAK,cAAc,8BAC3D,EAAK,mBAAqB,EAAK,aAAa,6BAE9C,EAAI,sBAAuB,IAA8B,CAAC,CAC1D,EAAI,yBAA0B,GAAa,EAAK,CAAC,CACjD,EAAI,uBAAwB,GAAW,EAAK,CAAC,CAC7C,SAAS,EAAI,EAAO,EAAO,CACpB,EAAK,KACR,EAAK,GAAS,EAAE,EAElB,EAAK,GAAO,KAAK,EAAM,CAgBzB,OAdI,GAAM,YAAY,OACb,MAAO,EAAM,CAAE,KAAM,KAAY,CACtC,IAAM,EAAO,EAAE,CASf,OARA,EAAM,EAAM,CAAC,gBAAiB,gBAAiB,qBAAqB,CAAG,GAAS,CAC9E,GAASgB,EAAK,CACd,GAAM,CAAE,SAAU,EAAS,WAAY,EAAK,WAAW,KAAM,GAAM,EAAE,OAASA,EAAK,KAAK,EAAI,EAAE,CAC1F,GACF,EAAK,KAAK,EAAQ,EAAQ,CAACA,EAAM,EAAM,CAAC,EAE1C,CACF,MAAM,QAAQ,IAAI,EAAK,CAChB,GAGH,GAAS,CACf,EAAM,EAAM,CAAC,gBAAiB,gBAAiB,qBAAqB,CAAG,GAAS,CAC9E,GAASA,EAAK,EACd,IAGN,SAAS,GAAS,EAAM,CACtB,IAAM,EAAWA,CAAc,CAAK,OAAO,EAAE,CAC7C,EAAK,aAAe,GAAYA,EAAK,CACrC,EAAS,MAAQ,EAAUA,EAAK,KAAK,CACrC,EAAS,YAAc,GACrB,CACE,GAAGA,EAAK,WAER,GAAGA,EAAK,aACT,CACF,CAEH,SAAS,GAAY,EAAM,CACzB,GAAIA,EAAK,QAAS,CAChB,IAAM,EAAOA,EAAK,QAAQ,QAAQ,QAAS,GAAG,CACxC,CAAE,QAAS,GAAiB,GAAc,EAAK,CAAC,CACtD,OAAO,EAET,MAAO,EAAE,CAEX,SAAS,GAAS,EAAM,CACtB,IAAM,EAAU,OAAO,QAAQ,EAAK,CAAC,KAAK,CAAC,EAAK,KAC1C,EAAI,WAAW,IAAI,EAGnB,OAAO,GAAU,SACZ,CAAC,EAAK,EAAM,CAEd,CAAC,IAAI,IAAO,KAAK,UAAU,EAAM,CAAC,CACzC,CACF,OAAO,OAAO,YAAY,EAAQ,CCt9DpC,MAAa,GAAsB,MAAO,EAAW,EAAU,EAAE,GAAK,CACpE,IAAM,EAAQ,OAAO,QAAQ,EAAQ,CAAC,OAAQ,GAAM,EAAE,KAAO,GAAM,CACnE,IAAK,IAAM,KAAU,EAAO,CAC1B,IAAM,EAAW,EAAO,GAAG,UAAY,YAAM,OAE3C,EAAO,wBACP,KAAM,GAAM,EAAE,SAAW,EAAE,CAC7B,EAAU,IAAI,EAAU,EAAO,GAAG,QAAQ,GCM9C,IAAM,GAAc,WAEd,GAAiB,CAAC,WAAY,OAAQ,QAAS,QAAQ,CAS7D,SAAgB,IAAiC,CAC/C,MAAO,CACL,WAAY,CAAC,GAA6B,CAC1C,MAAO,CACL,gBAAiB,GACjB,qBAAsB,GACtB,oBAAqB,GACrB,mBAAoB,GACrB,CACD,KAAM,CACJ,gBAAiB,GACjB,qBAAsB,GACtB,oBAAqB,GACrB,mBAAoB,IAEvB,CAUH,SAAgB,IAA+B,CAC7C,MAAO,CACL,OAAQ,CACN,CACE,UAAW,IACX,OAAQ,aACR,MAAO,YACP,eACA,kBACD,CACD,CACE,UAAW,IACX,OAAQ,OACR,MAAO,YACP,eACA,kBACD,CACD,CACE,UAAW,IACX,OAAQ,OACR,MAAO,MACP,eACA,mBAEH,CACF,CAOH,SAAS,GAAqB,EAAO,CACnC,KAAK,MAAM,CAAC,KAAM,OAAQ,MAAO,KAAM,IAAK,GAAI,SAAU,GAAG,CAAE,EAAM,CAOvE,SAAS,GAA0B,EAAO,CACxC,KAAK,OAAO,MAAM,iBAAiB,KAAK,KAAM,EAAM,CAOtD,SAAS,GAAwB,EAAO,CACtC,KAAK,OAAO,KAAK,iBAAiB,KAAK,KAAM,EAAM,CAOrD,SAAS,GAAuB,EAAO,CACrC,KAAK,OAAO,KAAK,KAAK,KAAK,KAAM,EAAM,CACvC,IAAMA,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GACrCA,EAAK,KACZ,EAAK,IAAM,UAAY,KAAK,eAAe,EAAM,CAOnD,SAAS,GAAyB,EAAO,CACvC,KAAK,OAAO,KAAK,cAAc,KAAK,KAAM,EAAM,CAOlD,SAAS,GAAoB,EAAO,CAClC,KAAK,KAAK,EAAM,CAIlB,SAAS,GAA6B,EAAM,CAC1C,EACE,EACA,CACE,CAAC,kDAAmD,GAAQ,CAC5D,CAAC,0DAA2D,GAAU,CACvE,CACD,CAAC,OAAQ,CAAC,OAAQ,gBAAgB,CAAC,CACpC,CAaH,SAAS,GAAQ,EAAG,EAAU,EAAQ,EAAM,EAAO,CACjD,IAAI,EAAS,GAcb,GAXI,CAAC,GAAS,EAAM,GAKhB,MAAM,KAAK,EAAS,GACtB,EAAS,EAAW0H,EACpB,EAAW,GACX,EAAS,WAGP,CAAC,GAAgBA,EAAO,EAC1B,MAAO,GAGT,IAAM,EAAQ,GAASA,EAAS3I,EAAK,CAErC,GAAI,CAAC,EAAM,GAAI,MAAO,GAGtB,IAAM,EAAS,CACb,KAAM,OACN,MAAO,KACP,IAAK,EAAS,EAAW,EAAM,GAC/B,SAAU,CAAC,CAAC,KAAM,OAAQ,MAAO,EAAW,EAAM,GAAG,EACtD,CAMD,OAJI,EAAM,GACD,CAAC,EAAQ,CAAC,KAAM,OAAQ,MAAO,EAAM,GAAG,CAAC,CAG3C,EAWT,SAAS,GAAU,EAAG,EAAO,EAAO,EAAO,CAUzC,MAPE,CAAC,GAAS,EAAO,GAAK,EAEtB,UAAU,KAAK6C,EAAM,CAEd,GAGF,CACL,KAAM,OACN,MAAO,KACP,IAAK,UAAY,EAAQ,IAAMA,EAC/B,SAAU,CAAC,CAAC,KAAM,OAAQ,MAAO,EAAQ,IAAMA,EAAM,EACtD,CAOH,SAAS,GAAgB,EAAQ,CAC/B,IAAM,EAAQ8F,EAAO,MAAM,IAAI,CAc/B,MAZA,EACE,EAAM,OAAS,GACd,EAAM,EAAM,OAAS,KACnB,IAAI,KAAK,EAAM,EAAM,OAAS,GAAG,EAChC,CAAC,aAAa,KAAK,EAAM,EAAM,OAAS,GAAG,GAC9C,EAAM,EAAM,OAAS,KACnB,IAAI,KAAK,EAAM,EAAM,OAAS,GAAG,EAChC,CAAC,aAAa,KAAK,EAAM,EAAM,OAAS,GAAG,GAYnD,SAAS,GAAS,EAAK,CACrB,IAAM,EAAY,sBAAsB,KAAK,EAAI,CAEjD,GAAI,CAAC,EACH,MAAO,CAAC,EAAK,OAAU,CAGzB,EAAM,EAAI,MAAM,EAAG,EAAU,MAAM,CAEnC,IAAIC,EAAQ,EAAU,GAClB,EAAoBA,EAAM,QAAQ,IAAI,CACpC,EAAgB,EAAO,EAAK,IAAI,CAClC,EAAgB,EAAO,EAAK,IAAI,CAEpC,KAAO,IAAsB,IAAM,EAAgB,GACjD,GAAOA,EAAM,MAAM,EAAG,EAAoB,EAAE,CAC5C,EAAQA,EAAM,MAAM,EAAoB,EAAE,CAC1C,EAAoBA,EAAM,QAAQ,IAAI,CACtC,IAGF,MAAO,CAAC,EAAKA,EAAM,CAQrB,SAAS,GAAS,EAAO,EAAO,CAC9B,IAAM3I,EAAO,EAAM,MAAM,WAAW,EAAM,MAAQ,EAAE,CAEpD,OACG,EAAM,QAAU,GACf,GAAkBA,EAAK,EACvB,GAAmBA,EAAK,IAEzB,CAAC,GAASA,IAAS,ICnQxB,GAAkB,KAAO,GAMzB,SAAS,IAA0B,CACjC,KAAK,QAAQ,CAOf,SAAS,GAAkB,EAAO,CAChC,KAAK,MAAM,CAAC,KAAM,oBAAqB,WAAY,GAAI,MAAO,GAAG,CAAE,EAAM,CAO3E,SAAS,IAAqC,CAC5C,KAAK,QAAQ,CAOf,SAAS,GAAwB,EAAO,CACtC,KAAK,MACH,CAAC,KAAM,qBAAsB,WAAY,GAAI,MAAO,GAAI,SAAU,GAAG,CACrE,EACD,CAOH,SAAS,GAAuB,EAAO,CACrC,IAAM4C,EAAQ,KAAK,QAAQ,CACrB5B,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GACrCA,EAAK,KACZ,EAAK,WAAa,GAChB,KAAK,eAAe,EAAM,CAC3B,CAAC,aAAa,CACf,EAAK,MAAQ4B,EAOf,SAAS,GAAiB,EAAO,CAC/B,KAAK,KAAK,EAAM,CAOlB,SAAS,GAAkC,EAAO,CAChD,IAAMA,EAAQ,KAAK,QAAQ,CACrB5B,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GACrCA,EAAK,KACZ,EAAK,WAAa,GAChB,KAAK,eAAe,EAAM,CAC3B,CAAC,aAAa,CACf,EAAK,MAAQ4B,EAOf,SAAS,GAAuB,EAAO,CACrC,KAAK,KAAK,EAAM,CAIlB,SAAS,IAAwB,CAC/B,MAAO,IAOT,SAAS,GAAkB,EAAM,EAAG,EAAO,EAAM,CAC/C,IAAM,EAAU,EAAM,cAAc,EAAK,CACrC,EAAQ,EAAQ,KAAK,KAAK,CACxBV,EAAO,EAAM,MAAM,oBAAoB,CACvC,EAAU,EAAM,MAAM,YAAY,CAOxC,MANA,IAAS,EAAQ,KACf,EAAM,KAAK,EAAM,cAAclB,EAAK,CAAE,CAAC,MAAO,IAAK,OAAQ,EAAM,CAAC,CACnE,CACD,GAAS,CACT,GAAM,CACN,GAAS,EAAQ,KAAK,IAAI,CACnB,EAUT,SAAgB,IAA0B,CACxC,MAAO,CACL,MAAO,CACL,sBAAuB,GACvB,gBAAiB,GACjB,iCAAkC,GAClC,sBAAuB,GACxB,CACD,KAAM,CACJ,sBAAuB,GACvB,gBAAiB,GACjB,iCAAkC,GAClC,sBAAuB,IAE1B,CAYH,SAAgB,GAAsB,EAAS,CAE7C,IAAI,EAAiB,GAMrB,OAJI,GAAW,EAAQ,iBACrB,EAAiB,IAGZ,CACL,SAAU,CAAC,qBAAoB,qBAAkB,CAEjD,OAAQ,CAAC,CAAC,UAAW,IAAK,YAAa,CAAC,QAAS,WAAY,aAAa,EAC3E,CAMD,SAAS,EAAmB,EAAM,EAAG,EAAO,EAAM,CAChD,IAAM,EAAU,EAAM,cAAc,EAAK,CACrC,EAAQ,EAAQ,KAAK,KAAK,CACxBkB,EAAO,EAAM,MAAM,qBAAqB,CACxC,EAAU,EAAM,MAAM,QAAQ,CAsBpC,MArBA,IAAS,EAAQ,KACf,EAAM,KAAK,EAAM,cAAclB,EAAK,CAAE,CAAC,OAAQ,EAAO,MAAO,IAAI,CAAC,CACnE,CACD,GAAS,CAET,GAAS,EAAQ,KAAK,KAAK,CAEvBA,EAAK,UAAYA,EAAK,SAAS,OAAS,IAC1C,EAAQ,MAAM,EAAE,CAEhB,GAAS,EAAQ,MACd,EAAiB;EAAO,KACvB,EAAM,YACJ,EAAM,cAAcA,EAAM,EAAQ,SAAS,CAAC,CAC5C,EAAiB,GAAS,GAC3B,CACJ,EAGH,GAAM,CAEC,GAKX,SAAS,GAAe,EAAM,EAAO,EAAO,CAC1C,OAAOtB,IAAU,EAAI,EAAO,GAAO,EAAMA,EAAO,EAAM,CAIxD,SAAS,GAAO,EAAM,EAAO,EAAO,CAClC,OAAQ,EAAQ,GAAK,QAAU,EC5LjC,IAAM,GAAiC,CACrC,WACA,qBACA,iBACA,YACA,aACA,kBACD,CAED,GAAa,KAAO,GASpB,SAAgB,IAA+B,CAC7C,MAAO,CACL,eAAgB,CAAC,SAAS,CAC1B,MAAO,CAAC,cAAe,GAAmB,CAC1C,KAAM,CAAC,cAAe,IACvB,CAUH,SAAgB,IAA6B,CAC3C,MAAO,CACL,OAAQ,CACN,CACE,UAAW,IACX,YAAa,WACb,eAAgB,GACjB,CACF,CACD,SAAU,CAAC,OAAQ,IACpB,CAOH,SAAS,GAAmB,EAAO,CACjC,KAAK,MAAM,CAAC,KAAM,SAAU,SAAU,GAAG,CAAE,EAAM,CAOnD,SAAS,GAAkB,EAAO,CAChC,KAAK,KAAK,EAAM,CAOlB,SAAS,GAAa,EAAM,EAAG,EAAO,EAAM,CAC1C,IAAM,EAAU,EAAM,cAAc,EAAK,CACnCwC,EAAO,EAAM,MAAM,gBAAgB,CACrC,EAAQ,EAAQ,KAAK,KAAK,CAQ9B,MAPA,IAAS,EAAM,kBAAkBlB,EAAM,CACrC,GAAG,EAAQ,SAAS,CACpB,OAAQ,EACR,MAAO,IACR,CAAC,CACF,GAAS,EAAQ,KAAK,KAAK,CAC3B,GAAM,CACC,EAIT,SAAS,IAAa,CACpB,MAAO,ICiDT,SAAS,GAAoB,EAAO,CAClC,OAAO,EAAM,OAef,SAAgB,GAAc,EAAO,EAAS,CAC5C,IAAM,EAAW,GAAW,EAAE,CAExB,GAAS,EAAS,OAAS,EAAE,EAAE,QAAQ,CACvC,EAAe,EAAS,cAAgB,GAExC,EAAa,EAAE,CAEf,EAAa,EAAE,CAEf,EAAa,EAAE,CAEf,EAAsB,EAAE,CAC1B,EAAkB,EAClB,EAAW,GAIf,KAAO,EAAE,EAAW4H,EAAM,QAAQ,CAEhC,IAAMC,EAAM,EAAE,CAERC,EAAQ,EAAE,CACZC,EAAc,GAMlB,IAJIH,EAAM,GAAU,OAAS,IAC3B,EAAkBA,EAAM,GAAU,QAG7B,EAAEG,EAAcH,EAAM,GAAU,QAAQ,CAC7C,IAAM,EAAO,GAAUA,EAAM,GAAUG,GAAa,CAEpD,GAAI,EAAS,kBAAoB,GAAO,CACtC,IAAM,EAAO,EAAa,EAAK,CAC/B,EAAMA,GAAe,GAGnB,EAAoBA,KAAiB,QACrC,EAAO,EAAoBA,MAE3B,EAAoBA,GAAe,GAIvC,EAAI,KAAK,EAAK,CAGhB,EAAW,GAAYF,EACvB,EAAW,GAAYC,EAIzB,IAAI,EAAc,GAElB,GAAI,OAAO,GAAU,UAAY,WAAY,EAC3C,KAAO,EAAE,EAAc,GACrB,EAAW,GAAe,GAAY,EAAM,GAAa,KAEtD,CACL,IAAM9I,EAAO,GAAY,EAAM,CAE/B,KAAO,EAAE,EAAc,GACrB,EAAW,GAAeA,EAK9B,EAAc,GAEd,IAAM,EAAM,EAAE,CAER,EAAQ,EAAE,CAEhB,KAAO,EAAE,EAAc,GAAiB,CACtC,IAAMA,EAAO,EAAW,GACpB,EAAS,GACT,EAAQ,GAERA,IAAS,IACX,EAAS,IACT,EAAQ,KACCA,IAAS,IAClB,EAAS,IACAA,IAAS,MAClB,EAAQ,KAIV,IAAI,EACF,EAAS,kBAAoB,GACzB,EACA,KAAK,IACH,EACA,EAAoB,GAAe,EAAO,OAAS,EAAM,OAC1D,CAED,EAAO,EAAS,IAAI,OAAO,EAAK,CAAG,EAErC,EAAS,kBAAoB,KAC/B,EAAO,EAAO,OAAS,EAAO,EAAM,OAEhC,EAAO,EAAoB,KAC7B,EAAoB,GAAe,GAGrC,EAAM,GAAe,GAGvB,EAAI,GAAe,EAIrB,EAAW,OAAO,EAAG,EAAG,EAAI,CAC5B,EAAW,OAAO,EAAG,EAAG,EAAM,CAE9B,EAAW,GAEX,IAAM,EAAQ,EAAE,CAEhB,KAAO,EAAE,EAAW,EAAW,QAAQ,CACrC,IAAM6I,EAAM,EAAW,GACjBC,EAAQ,EAAW,GACzB,EAAc,GAEd,IAAM,EAAO,EAAE,CAEf,KAAO,EAAE,EAAc,GAAiB,CACtC,IAAM,EAAOD,EAAI,IAAgB,GAC7B,EAAS,GACT,EAAQ,GAEZ,GAAI,EAAS,kBAAoB,GAAO,CACtC,IAAM,EACJ,EAAoB,IAAgBC,EAAM,IAAgB,GACtD9I,EAAO,EAAW,GAEpBA,IAAS,IACX,EAAS,IAAI,OAAO,EAAK,CAChBA,IAAS,GACd,EAAO,GACT,EAAS,IAAI,OAAO,EAAO,EAAI,GAAI,CACnC,EAAQ,IAAI,OAAO,EAAO,EAAI,GAAI,GAElC,EAAS,IAAI,OAAO,EAAO,EAAE,CAC7B,EAAQ,GAGV,EAAQ,IAAI,OAAO,EAAK,CAIxB,EAAS,iBAAmB,IAAS,CAAC,GACxC,EAAK,KAAK,IAAI,CAId,EAAS,UAAY,IAGrB,EAAE,EAAS,kBAAoB,IAAS,IAAS,MAChD,EAAS,iBAAmB,IAAS,IAEtC,EAAK,KAAK,IAAI,CAGZ,EAAS,kBAAoB,IAC/B,EAAK,KAAK,EAAO,CAGnB,EAAK,KAAK,EAAK,CAEX,EAAS,kBAAoB,IAC/B,EAAK,KAAK,EAAM,CAGd,EAAS,UAAY,IACvB,EAAK,KAAK,IAAI,EAId,EAAS,eAAiB,IAC1B,IAAgB,EAAkB,IAElC,EAAK,KAAK,IAAI,CAIlB,EAAM,KACJ,EAAS,eAAiB,GACtB,EAAK,KAAK,GAAG,CAAC,QAAQ,MAAO,GAAG,CAChC,EAAK,KAAK,GAAG,CAClB,CAGH,OAAO,EAAM,KAAK;EAAK,CASzB,SAAS,GAAU,EAAO,CACxB,OAAO,GAAU,KAA8B,GAAK,OAAO,EAAM,CASnE,SAAS,GAAY,EAAO,CAC1B,IAAMA,EAAO,OAAO,GAAU,SAAW,EAAM,YAAY,EAAE,CAAG,EAEhE,OAAOA,IAAS,IAAgBA,IAAS,GACrC,GACAA,IAAS,IAAgBA,IAAS,IAChC,IACAA,IAAS,IAAgBA,IAAS,IAChC,IACA,EC7VV,SAAgB,IAAuB,CACrC,MAAO,CACL,MAAO,CACL,MAAO,GACP,UAAW,GACX,YAAa,GACb,SAAU,GACX,CACD,KAAM,CACJ,SAAU,GACV,MAAO,GACP,UAAW,GACX,YAAa,GACb,SAAU,IAEb,CAOH,SAAS,GAAW,EAAO,CACzB,IAAM,EAAQ,EAAM,OAEpB,KAAK,MACH,CACE,KAAM,QACN,MAAO,EAAM,IAAI,SAAU,EAAG,CAC5B,OAAO,IAAM,OAAS,KAAO,GAC7B,CACF,SAAU,GACX,CACD,EACD,CACD,KAAK,KAAK,QAAU,GAOtB,SAAS,GAAU,EAAO,CACxB,KAAK,KAAK,EAAM,CAChB,KAAK,KAAK,QAAU,OAOtB,SAAS,GAAS,EAAO,CACvB,KAAK,MAAM,CAAC,KAAM,WAAY,SAAU,GAAG,CAAE,EAAM,CAOrD,SAAS,GAAK,EAAO,CACnB,KAAK,KAAK,EAAM,CAOlB,SAAS,GAAU,EAAO,CACxB,KAAK,MAAM,CAAC,KAAM,YAAa,SAAU,GAAG,CAAE,EAAM,CAStD,SAAS,GAAa,EAAO,CAC3B,IAAI,EAAQ,KAAK,QAAQ,CAErB,KAAK,KAAK,UACZ,EAAQ,EAAM,QAAQ,aAAc,GAAQ,EAG9C,IAAMgB,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GACrCA,EAAK,KACZ,EAAK,MAAQ,EACb,KAAK,KAAK,EAAM,CAQlB,SAAS,GAAQ,EAAI,EAAI,CAEvB,OAAO,IAAO,IAAM,EAAK,EAY3B,SAAgB,GAAmB,EAAS,CAC1C,IAAM,EAAW,GAAW,EAAE,CACxB,EAAU,EAAS,iBACnB,EAAkB,EAAS,eAC3B,EAAe,EAAS,aACxB,EAAS,EAAU,IAAM,IAE/B,MAAO,CACL,OAAQ,CACN,CAAC,UAAW,KAAM,YAAa,YAAY,CAC3C,CAAC,UAAW;EAAM,YAAa,YAAY,CAG3C,CAAC,QAAS,GAAM,UAAW,IAAK,MAAO,SAAU,CAEjD,CAAC,UAAW,IAAK,YAAa,YAAY,CAG1C,CAAC,QAAS,GAAM,UAAW,IAAK,MAAO,IAAI,CAM3C,CAAC,QAAS,GAAM,UAAW,IAAK,MAAO,SACxC,CACD,SAAU,CACR,WAAY,EACZ,MAAO,EACP,UAAW,EACX,SAAU,GAEb,CAMD,SAAS,EAAY,EAAM,EAAG,EAAO,EAAM,CACzC,OAAO,EAAc,EAAkBA,EAAM,EAAO,EAAK,CAAEA,EAAK,MAAM,CAWxE,SAAS,EAAe,EAAM,EAAG,EAAO,EAAM,CAC5C,IAAM,EAAM,EAAqBA,EAAM,EAAO,EAAK,CAC7C,EAAQ,EAAc,CAAC,EAAI,CAAC,CAElC,OAAO,EAAM,MAAM,EAAG,EAAM,QAAQ;EAAK,CAAC,CAO5C,SAAS,EAAgB,EAAM,EAAG,EAAO,EAAM,CAC7C,IAAMkB,EAAO,EAAM,MAAM,YAAY,CAC/B,EAAU,EAAM,MAAM,WAAW,CACjC,EAAQ,EAAM,kBAAkBlB,EAAM,CAC1C,GAAG,EACH,OAAQ,EACR,MAAO,EACR,CAAC,CAGF,OAFA,GAAS,CACT,GAAM,CACC,EAOT,SAAS,EAAc,EAAQ,EAAO,CACpC,OAAO,GAAc,EAAQ,CAC3B,QAEA,kBAEA,UAEA,eACD,CAAC,CAQJ,SAAS,EAAkB,EAAM,EAAO,EAAM,CAC5C,IAAM,EAAWA,EAAK,SAClBtB,EAAQ,GAEN,EAAS,EAAE,CACX,EAAU,EAAM,MAAM,QAAQ,CAEpC,KAAO,EAAEA,EAAQ,EAAS,QACxB,EAAOA,GAAS,EAAqB,EAASA,GAAQ,EAAO,EAAK,CAKpE,OAFA,GAAS,CAEF,EAQT,SAAS,EAAqB,EAAM,EAAO,EAAM,CAC/C,IAAM,EAAWsB,EAAK,SAClBtB,EAAQ,GAEN,EAAS,EAAE,CACX,EAAU,EAAM,MAAM,WAAW,CAEvC,KAAO,EAAEA,EAAQ,EAAS,QAIxB,EAAOA,GAAS,EAAgB,EAASA,GAAQsB,EAAM,EAAO,EAAK,CAKrE,OAFA,GAAS,CAEF,EAOT,SAAS,EAAoB,EAAM,EAAQ,EAAO,CAChD,IAAI,EAAQkE,GAAgB,WAAWlE,EAAM,EAAQ,EAAM,CAM3D,OAJI,EAAM,MAAM,SAAS,YAAY,GACnC,EAAQ,EAAM,QAAQ,MAAO,OAAO,EAG/B,GCrRX,SAAgB,IAA8B,CAC5C,MAAO,CACL,KAAM,CACJ,0BAA2B,GAC3B,4BAA6B,GAC7B,UAAW,GACZ,CACF,CAUH,SAAgB,IAA4B,CAC1C,MAAO,CACL,OAAQ,CAAC,CAAC,QAAS,GAAM,UAAW,IAAK,MAAO,QAAQ,CAAC,CACzD,SAAU,CAAC,SAAU,IACtB,CAOH,SAAS,GAAU,EAAO,CAExB,IAAMA,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GACrCA,EAAK,KACZ,EAAK,QAAU,EAAM,OAAS,4BAOhC,SAAS,GAA8B,EAAO,CAC5C,IAAM,EAAS,KAAK,MAAM,KAAK,MAAM,OAAS,GAE9C,GACE,GACA,EAAO,OAAS,YAChB,OAAO,EAAO,SAAY,UAC1B,CACA,IAAMA,EAAO,KAAK,MAAM,KAAK,MAAM,OAAS,GACrCA,EAAK,KACZ,IAAM,EAAOA,EAAK,SAAS,GAE3B,GAAI,GAAQ,EAAK,OAAS,OAAQ,CAChC,IAAM,EAAW,EAAO,SACpBtB,EAAQ,GAER,EAEJ,KAAO,EAAEA,EAAQ,EAAS,QAAQ,CAChC,IAAM,EAAU,EAASA,GACzB,GAAI,EAAQ,OAAS,YAAa,CAChC,EAAkB,EAClB,OAIA,IAAoBsB,IAEtB,EAAK,MAAQ,EAAK,MAAM,MAAM,EAAE,CAE5B,EAAK,MAAM,SAAW,EACxB,EAAK,SAAS,OAAO,CAErBA,EAAK,UACL,EAAK,UACL,OAAO,EAAK,SAAS,MAAM,QAAW,WAEtC,EAAK,SAAS,MAAM,SACpB,EAAK,SAAS,MAAM,SACpB,EAAK,SAAS,MAAQ,OAAO,OAAO,EAAE,CAAE,EAAK,SAAS,MAAM,IAMpE,KAAK,KAAK,EAAM,CAOlB,SAAS,GAAyB,EAAM,EAAQ,EAAO,EAAM,CAC3D,IAAM,EAAOA,EAAK,SAAS,GACrB,EACJ,OAAOA,EAAK,SAAY,WAAa,GAAQ,EAAK,OAAS,YACvD,EAAW,KAAOA,EAAK,QAAU,IAAM,KAAO,KAC9C,EAAU,EAAM,cAAc,EAAK,CAErC,GACF,EAAQ,KAAK,EAAS,CAGxB,IAAI,EAAQkE,GAAgB,SAASlE,EAAM,EAAQ,EAAO,CACxD,GAAG,EACH,GAAG,EAAQ,UACZ,CAAC,CAMF,OAJI,IACF,EAAQ,EAAM,QAAQ,kCAAmC,EAAM,EAG1D,EAMP,SAAS,EAAM,EAAI,CACjB,OAAO,EAAK,GC1GhB,SAAgB,IAAkB,CAChC,MAAO,CACL,IAAgC,CAChC,IAAyB,CACzB,IAA8B,CAC9B,IAAsB,CACtB,KACD,CAaH,SAAgB,GAAc,EAAS,CACrC,MAAO,CACL,WAAY,CACV,IAA8B,CAC9B,GAAsB,EAAQ,CAC9B,IAA4B,CAC5B,GAAmB,EAAQ,CAC3B,KACD,CACF,CCxDH,IAAM,GAAY,CAChB,SAAU,GACV,QAAS,GACV,CACK,GAAS,CACb,SAAU,GACV,QAAS,GACV,CACK,GAAO,CACX,SAAU,GACV,QAAS,GACV,CACK,GAAQ,CACZ,SAAU,GACV,QAAS,GACV,CACK,GAAsB,CAC1B,SAAU,GACV,QAAS,GACV,CACK,GAAc,CAClB,KAAM,cACN,SAAU,GACV,SAAU,GACX,CACK,GAAmB,CACvB,KAAM,mBACN,SAAU,GACV,SAAU,GACX,CACK,GAAgB,CACpB,KAAM,gBACN,SAAU,GACV,SAAU,GACX,CAGKgB,GAAO,EAAE,CAUf,SAAgB,IAAqB,CACnC,MAAO,CACL,QACD,CAOH,IAHA,IAAI,GAAO,GAGJ,GAAO,KACZ,GAAK,IAAQ,GACb,KACI,KAAS,GAAI,GAAO,GAAY,KAAS,KAAI,GAAO,IAE1D,GAAK,IAAM,GACX,GAAK,IAAM,GACX,GAAK,IAAM,GACX,GAAK,IAAM,GACX,GAAK,IAAM,CAAC,GAAe,GAAiB,CAC5C,GAAK,KAAO,CAAC,GAAe,GAAiB,CAC7C,GAAK,IAAM,CAAC,GAAe,GAAY,CACvC,GAAK,KAAO,CAAC,GAAe,GAAY,CAmBxC,SAAS,GAAsB,EAAS,EAAI,EAAK,CAC/C,IAAMvB,EAAO,KAET,EAEA,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAMnB,MALI,CAAC,GAAST,EAAK,EAAI,CAAC,GAAc,KAAKS,EAAMA,EAAK,SAAS,EAAI,GAAmBA,EAAK,OAAO,CACzF,EAAIT,EAAK,EAElB,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,MAAM,uBAAuB,CAC9B,EAAMA,EAAK,EAapB,SAAS,EAAM,EAAM,CASnB,OARI,GAASA,EAAK,EAChB,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAiBlB,SAAS,EAAY,EAAM,CAmBzB,OAjBIA,IAAS,GACJ,EAAQ,MAAM,GAAqB,EAAkB,EAAe,CAACA,EAAK,CAI/EA,IAAS,IAAMA,IAAS,IAAM,EAAkBA,EAAK,EACvD,EAAO,GACP,EAAQ,QAAQA,EAAK,CACd,GASF,EAAiBA,EAAK,CAa/B,SAAS,EAAe,EAAM,CAG5B,OAFA,EAAQ,QAAQA,EAAK,CACrB,EAAM,GACC,EAaT,SAAS,EAAiB,EAAM,CAQ9B,OALI,GAAQ,GAAO,GAAWS,EAAK,SAAS,EAC1C,EAAQ,KAAK,uBAAuB,CACpC,EAAQ,KAAK,kBAAkB,CACxBkB,EAAG3B,EAAK,EAEV,EAAIA,EAAK,EAepB,SAAS,GAAoB,EAAS,EAAI,EAAK,CAC7C,IAAMS,EAAO,KACb,OAAO,EAYP,SAAS,EAAS,EAAM,CAQtB,OAPIT,IAAS,IAAMA,IAAS,KAAO,CAAC,GAAY,KAAKS,EAAMA,EAAK,SAAS,EAAI,GAAmBA,EAAK,OAAO,CACnG,EAAIT,EAAK,EAElB,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,MAAM,qBAAqB,CAG5B,EAAQ,MAAM,GAAW,EAAQ,QAAQ,GAAQ,EAAQ,QAAQ,GAAM,EAAS,CAAE,EAAI,CAAE,EAAI,CAACA,EAAK,EAa3G,SAAS,EAAS,EAAM,CAGtB,OAFA,EAAQ,KAAK,qBAAqB,CAClC,EAAQ,KAAK,kBAAkB,CACxB2B,EAAG3B,EAAK,EAenB,SAAS,GAAyB,EAAS,EAAI,EAAK,CAClD,IAAMS,EAAO,KACT,EAAS,GACT,EAAO,GACX,OAAO,EAYP,SAAS,EAAc,EAAM,CAQ3B,OAPKT,IAAS,IAAMA,IAAS,MAAQ,GAAiB,KAAKS,EAAMA,EAAK,SAAS,EAAI,CAAC,GAAmBA,EAAK,OAAO,EACjH,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,MAAM,sBAAsB,CACpC,GAAU,OAAO,cAAcT,EAAK,CACpC,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAqB,EAAM,CAElC,GAAI,GAAWA,EAAK,EAAI,EAAO,OAAS,EAItC,MAFA,IAAU,OAAO,cAAcA,EAAK,CACpC,EAAQ,QAAQA,EAAK,CACd,EAET,GAAIA,IAAS,GAAI,CACf,IAAM,EAAW,EAAO,aAAa,CACrC,GAAI,IAAa,QAAU,IAAa,QAEtC,OADA,EAAQ,QAAQA,EAAK,CACd,EAGX,OAAO,EAAIA,EAAK,CAalB,SAAS,EAAsB,EAAM,CASnC,OARIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACjB,EACK,GAET,EAAO,GACA,IAEF,EAAIA,EAAK,CAalB,SAAS,EAAc,EAAM,CAG3B,OAAOA,IAAS,MAAQ,GAAaA,EAAK,EAAI,EAA0BA,EAAK,EAAI,GAAkBA,EAAK,EAAI,GAAmBA,EAAK,CAAG,EAAIA,EAAK,CAAG,EAAQ,QAAQ,GAAQ,EAAQ,QAAQ,GAAM,EAAc,CAAE,EAAI,CAACA,EAAK,CAa7N,SAAS,EAAc,EAAM,CAG3B,OAFA,EAAQ,KAAK,sBAAsB,CACnC,EAAQ,KAAK,kBAAkB,CACxB2B,EAAG3B,EAAK,EAenB,SAAS,GAAkB,EAAS,EAAI,EAAK,CAC3C,IAAI,EAAO,EACX,OAAO,EAYP,SAAS,EAAgB,EAAM,CAU7B,OATKA,IAAS,IAAMA,IAAS,MAAQ,EAAO,GAC1C,IACA,EAAQ,QAAQA,EAAK,CACd,GAELA,IAAS,IAAM,IAAS,GAC1B,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAe,EAAM,CAE5B,OAAOA,IAAS,KAAO,EAAIA,EAAK,CAAG2B,EAAG3B,EAAK,EAe/C,SAAS,GAAe,EAAS,EAAI,EAAK,CAExC,IAAI,EAEA,EAEA,EACJ,OAAO,EAYP,SAAS,EAAa,EAAM,CAmB1B,OAfIA,IAAS,IAAMA,IAAS,GACnB,EAAQ,MAAM,GAAO,EAAa,EAAoB,CAACA,EAAK,CASjEA,IAAS,MAAQ,EAA0BA,EAAK,EAAI,GAAkBA,EAAK,EAAIA,IAAS,IAAM,GAAmBA,EAAK,CACjH,EAAYA,EAAK,EAE1B,EAAO,GACP,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAoB,EAAM,CAYjC,OAVIA,IAAS,GACX,EAA0B,IAK1B,EAA8B,EAC9B,EAA0B,QAE5B,EAAQ,QAAQA,EAAK,CACd,EAYT,SAAS,EAAY,EAAM,CAMzB,OAHI,GAA+B,GAA2B,CAAC,EACtD,EAAIA,EAAK,CAEX2B,EAAG3B,EAAK,EAenB,SAAS,GAAa,EAAS,EAAI,CACjC,IAAI,EAAW,EACX,EAAY,EAChB,OAAO,EAYP,SAAS,EAAW,EAAM,CAwBxB,OAvBIA,IAAS,IACX,IACA,EAAQ,QAAQA,EAAK,CACd,GAMLA,IAAS,IAAM,EAAY,EACtB,EAAkBA,EAAK,CAM5BA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACtN,EAAQ,MAAM,GAAO2B,EAAI,EAAkB,CAAC3B,EAAK,CAEtDA,IAAS,MAAQ,EAA0BA,EAAK,EAAI,GAAkBA,EAAK,CACtE2B,EAAG3B,EAAK,EAEjB,EAAQ,QAAQA,EAAK,CACd,GAaT,SAAS,EAAkB,EAAM,CAM/B,OAJIA,IAAS,IACX,IAEF,EAAQ,QAAQA,EAAK,CACd,GAmBX,SAAS,GAAc,EAAS,EAAI,EAAK,CACvC,OAAO2I,EAYP,SAASA,EAAM,EAAM,CA6BnB,OA3BI3I,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,KAChL,EAAQ,QAAQA,EAAK,CACd2I,GAML3I,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAMLA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAITA,IAAS,IAETA,IAAS,MAAQ,EAA0BA,EAAK,EAAI,GAAkBA,EAAK,CAClE2B,EAAG3B,EAAK,CAEV,EAAIA,EAAK,CAgBlB,SAAS,EAAkB,EAAM,CAM/B,OAHIA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAM,EAA0BA,EAAK,EAAI,GAAkBA,EAAK,CACpG2B,EAAG3B,EAAK,CAEV2I,EAAM3I,EAAK,CAapB,SAAS,EAA6B,EAAM,CAE1C,OAAO,GAAWA,EAAK,CAAG,EAA8BA,EAAK,CAAG,EAAIA,EAAK,CAa3E,SAAS,EAA8B,EAAM,CAY3C,OAVIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd2I,GAEL,GAAW3I,EAAK,EAClB,EAAQ,QAAQA,EAAK,CACd,GAIF,EAAIA,EAAK,EAmBpB,SAAS,GAA4B,EAAS,EAAI,EAAK,CACrD,OAAO,EAYP,SAAS,EAAM,EAAM,CAGnB,OADA,EAAQ,QAAQA,EAAK,CACd,EAaT,SAAS,EAAM,EAAM,CAEnB,OAAO,EAAkBA,EAAK,CAAG,EAAIA,EAAK,CAAG2B,EAAG3B,EAAK,EAUzD,SAAS,GAAY,EAAM,CACzB,OAAOA,IAAS,MAAQA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,KAAO,EAA0BA,EAAK,CASpJ,SAAS,GAAiB,EAAM,CAC9B,MAAO,CAAC,GAAWA,EAAK,CAO1B,SAAS,GAAc,EAAM,CAK3B,MAAO,EAAEA,IAAS,IAAM,GAASA,EAAK,EAOxC,SAAS,GAAS,EAAM,CACtB,OAAOA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IAAM,EAAkBA,EAAK,CAO5F,SAAS,GAAmB,EAAQ,CAClC,IAAIN,EAAQ,EAAO,OACf,EAAS,GACb,KAAO,KAAS,CACd,IAAM,EAAQ,EAAOA,GAAO,GAC5B,IAAK,EAAM,OAAS,aAAe,EAAM,OAAS,eAAiB,CAAC,EAAM,UAAW,CACnF,EAAS,GACT,MAKF,GAAI,EAAM,8BAA+B,CACvC,EAAS,GACT,OAQJ,OALI,EAAO,OAAS,GAAK,CAAC,IAGxB,EAAO,EAAO,OAAS,GAAG,GAAG,8BAAgC,IAExD,EC50BT,IAAM,GAAS,CACb,SAAU,GACV,QAAS,GACV,CAeD,SAAgB,IAAc,CAE5B,MAAO,CACL,SAAU,CACP,GAAK,CACJ,KAAM,wBACN,SAAU,GACV,aAAc,CACZ,SAAU,GACX,CACD,KAAM,GACP,CACF,CACD,KAAM,CACH,GAAK,CACJ,KAAM,kBACN,SAAU,GACX,CACA,GAAK,CACJ,KAAM,2BACN,IAAK,QACL,SAAU,GACV,UAAW,KAGhB,CAQH,SAAS,GAAiC,EAAS,EAAI,EAAK,CAC1D,IAAMe,EAAO,KACTf,EAAQe,EAAK,OAAO,OAClB,EAAUA,EAAK,OAAO,eAAiB,EAAK,OAAO,aAAe,EAAE,EAEtE,EAGJ,KAAO,KAAS,CACd,IAAM,EAAQA,EAAK,OAAOf,GAAO,GACjC,GAAI,EAAM,OAAS,aAAc,CAC/B,EAAa,EACb,MAIF,GAAI,EAAM,OAAS,mBAAqB,EAAM,OAAS,aAAe,EAAM,OAAS,SAAW,EAAM,OAAS,SAAW,EAAM,OAAS,OACvI,MAGJ,OAAO,EAKP,SAAS,EAAM,EAAM,CACnB,GAAI,CAAC,GAAc,CAAC,EAAW,UAC7B,OAAO,EAAIM,EAAK,CAElB,IAAM,EAAK,GAAoBS,EAAK,eAAe,CACjD,MAAO,EAAW,IAClB,IAAKA,EAAK,MACX,CAAC,CAAC,CAOH,OANI,EAAG,YAAY,EAAE,GAAK,IAAM,CAAC,EAAQ,SAAS,EAAG,MAAM,EAAE,CAAC,CACrD,EAAIT,EAAK,EAElB,EAAQ,MAAM,6BAA6B,CAC3C,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,6BAA6B,CACnC2B,EAAG3B,EAAK,GAMnB,SAAS,GAAkC,EAAQ,EAAS,CAC1D,IAAIN,EAAQ,EAAO,OAKnB,KAAO,KACL,GAAI,EAAOA,GAAO,GAAG,OAAS,cAAgB,EAAOA,GAAO,KAAO,QAAS,CAC7D,EAAOA,GAAO,GAC3B,MAIJ,EAAOA,EAAQ,GAAG,GAAG,KAAO,OAC5B,EAAOA,EAAQ,GAAG,GAAG,KAAO,6BAI5B,IAAM,EAAO,CACX,KAAM,kBACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAOA,EAAQ,GAAG,GAAG,MAAM,CACpD,IAAK,OAAO,OAAO,EAAE,CAAE,EAAO,EAAO,OAAS,GAAG,GAAG,KACrD,CAGK,EAAS,CACb,KAAM,wBACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAOA,EAAQ,GAAG,GAAG,IAAI,CAClD,IAAK,OAAO,OAAO,EAAE,CAAE,EAAOA,EAAQ,GAAG,GAAG,KAC7C,CAED,EAAO,IAAI,SACX,EAAO,IAAI,SACX,EAAO,IAAI,eAEX,IAAMuD,EAAS,CACb,KAAM,wBACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAO,IAAI,CACpC,IAAK,OAAO,OAAO,EAAE,CAAE,EAAO,EAAO,OAAS,GAAG,GAAG,OACrD,CAEK,EAAQ,CACZ,KAAM,cACN,YAAa,SACb,MAAO,OAAO,OAAO,EAAE,CAAEA,EAAO,MAAM,CACtC,IAAK,OAAO,OAAO,EAAE,CAAEA,EAAO,KAC/B,CAGK,EAAc,CAEpB,EAAOvD,EAAQ,GAAI,EAAOA,EAAQ,GAAI,CAAC,QAAS,EAAM,EAAQ,CAE9D,EAAOA,EAAQ,GAAI,EAAOA,EAAQ,GAElC,CAAC,QAAS,EAAQ,EAAQ,CAAE,CAAC,OAAQ,EAAQ,EAAQ,CAErD,CAAC,QAASuD,EAAQ,EAAQ,CAAE,CAAC,QAAS,EAAO,EAAQ,CAAE,CAAC,OAAQ,EAAO,EAAQ,CAAE,CAAC,OAAQA,EAAQ,EAAQ,CAE1G,EAAO,EAAO,OAAS,GAAI,EAAO,EAAO,OAAS,GAAI,CAAC,OAAQ,EAAM,GAAS,CAE9E,OADA,EAAO,OAAOvD,EAAO,EAAO,OAASA,EAAQ,EAAG,GAAG,EAAY,CACxD,EAOT,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,IAAMe,EAAO,KACP,EAAUA,EAAK,OAAO,eAAiB,EAAK,OAAO,aAAe,EAAE,EACtE,EAAO,EAEP,EAOJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAKnB,OAJA,EAAQ,MAAM,kBAAkB,CAChC,EAAQ,MAAM,6BAA6B,CAC3C,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,6BAA6B,CACnC,EAaT,SAAS,EAAU,EAAM,CAOvB,OANIA,IAAS,IACb,EAAQ,MAAM,wBAAwB,CACtC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,wBAAwB,CACrC,EAAQ,MAAM,wBAAwB,CACtC,EAAQ,MAAM,cAAc,CAAC,YAAc,SACpC,GANiB,EAAIA,EAAK,CAmBnC,SAAS,EAAS,EAAM,CACtB,GAEA,EAAO,KAEPA,IAAS,IAAM,CAAC,GAGhBA,IAAS,MAAQA,IAAS,IAAM,EAA0BA,EAAK,CAC7D,OAAO,EAAIA,EAAK,CAElB,GAAIA,IAAS,GAAI,CACf,EAAQ,KAAK,cAAc,CAC3B,IAAM,EAAQ,EAAQ,KAAK,wBAAwB,CAQnD,OAPK,EAAQ,SAAS,GAAoBS,EAAK,eAAe,EAAM,CAAC,CAAC,EAGtE,EAAQ,MAAM,6BAA6B,CAC3C,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,6BAA6B,CAC1C,EAAQ,KAAK,kBAAkB,CACxB2B,GANE,EAAI3B,EAAK,CAapB,OALK,EAA0BA,EAAK,GAClC,EAAO,IAET,IACA,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAa,EAapC,SAAS,EAAW,EAAM,CAMxB,OALIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACzC,EAAQ,QAAQA,EAAK,CACrB,IACO,GAEF,EAASA,EAAK,EAQzB,SAAS,GAAwB,EAAS,EAAI,EAAK,CACjD,IAAMS,EAAO,KACP,EAAUA,EAAK,OAAO,eAAiB,EAAK,OAAO,aAAe,EAAE,EAEtE,EACA,EAAO,EAEP,EACJ,OAAO,EAYP,SAAS,EAAM,EAAM,CAMnB,MALA,GAAQ,MAAM,wBAAwB,CAAC,WAAa,GACpD,EAAQ,MAAM,6BAA6B,CAC3C,EAAQ,MAAM,mCAAmC,CACjD,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,mCAAmC,CACzC,EAaT,SAAS,EAAc,EAAM,CAS3B,OARIA,IAAS,IACX,EAAQ,MAAM,8BAA8B,CAC5C,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,8BAA8B,CAC3C,EAAQ,MAAM,mCAAmC,CACjD,EAAQ,MAAM,cAAc,CAAC,YAAc,SACpC,GAEF,EAAIA,EAAK,CAgBlB,SAAS,EAAY,EAAM,CACzB,GAEA,EAAO,KAEPA,IAAS,IAAM,CAAC,GAGhBA,IAAS,MAAQA,IAAS,IAAM,EAA0BA,EAAK,CAC7D,OAAO,EAAIA,EAAK,CAElB,GAAIA,IAAS,GAAI,CACf,EAAQ,KAAK,cAAc,CAC3B,IAAM,EAAQ,EAAQ,KAAK,mCAAmC,CAM9D,MALA,GAAa,GAAoBS,EAAK,eAAe,EAAM,CAAC,CAC5D,EAAQ,MAAM,mCAAmC,CACjD,EAAQ,QAAQT,EAAK,CACrB,EAAQ,KAAK,mCAAmC,CAChD,EAAQ,KAAK,6BAA6B,CACnC,EAOT,OALK,EAA0BA,EAAK,GAClC,EAAO,IAET,IACA,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAc,EAgBrC,SAAS,EAAY,EAAM,CAMzB,OALIA,IAAS,IAAMA,IAAS,IAAMA,IAAS,IACzC,EAAQ,QAAQA,EAAK,CACrB,IACO,GAEF,EAAYA,EAAK,CAa1B,SAAS,EAAW,EAAM,CAcxB,OAbIA,IAAS,IACX,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CAC3B,EAAQ,SAAS,EAAW,EAC/B,EAAQ,KAAK,EAAW,CAMnB,EAAa,EAAS,EAAiB,kCAAkC,EAE3E,EAAIA,EAAK,CAalB,SAAS,EAAgB,EAAM,CAE7B,OAAO2B,EAAG3B,EAAK,EAQnB,SAAS,GAA+B,EAAS,EAAI,EAAK,CAUxD,OAAO,EAAQ,MAAM,GAAW2B,EAAI,EAAQ,QAAQ,GAAQA,EAAI,EAAI,CAAC,CAIvE,SAAS,GAAyB,EAAS,CACzC,EAAQ,KAAK,wBAAwB,CAOvC,SAAS,GAAe,EAAS,EAAI,EAAK,CACxC,IAAMlB,EAAO,KACb,OAAO,EAAa,EAAS,EAAa,8BAA+B,EAAM,CAK/E,SAAS,EAAY,EAAM,CACzB,IAAM,EAAOA,EAAK,OAAOA,EAAK,OAAO,OAAS,GAC9C,OAAO,GAAQ,EAAK,GAAG,OAAS,+BAAiC,EAAK,GAAG,eAAe,EAAK,GAAI,GAAK,CAAC,SAAW,EAAIkB,EAAG3B,EAAK,CAAG,EAAIA,EAAK,ECjd9I,SAAgB,GAAiB,EAAS,CAExC,IAAI,GADa,GAAW,EAAE,EACR,YAChB,EAAY,CAChB,KAAM,gBACN,SAAU,EACV,WAAY,EACb,CAID,MAHA,CACE,IAAS,GAEJ,CACL,KAAM,CACH,IAAM,EACR,CACD,WAAY,CACV,KAAM,CAAC,EAAU,CAClB,CACD,iBAAkB,CAChB,KAAM,CAAC,IAAI,EAEd,CAOD,SAAS,EAAwB,EAAQ,EAAS,CAChD,IAAIN,EAAQ,GAGZ,KAAO,EAAEA,EAAQ,EAAO,QAEtB,GAAI,EAAOA,GAAO,KAAO,SAAW,EAAOA,GAAO,GAAG,OAAS,kCAAoC,EAAOA,GAAO,GAAG,OAAQ,CACzH,IAAI,EAAOA,EAGX,KAAO,KAEL,GAAI,EAAO,GAAM,KAAO,QAAU,EAAO,GAAM,GAAG,OAAS,kCAAoC,EAAO,GAAM,GAAG,OAE/G,EAAOA,GAAO,GAAG,IAAI,OAAS,EAAOA,GAAO,GAAG,MAAM,SAAW,EAAO,GAAM,GAAG,IAAI,OAAS,EAAO,GAAM,GAAG,MAAM,OAAQ,CACzH,EAAOA,GAAO,GAAG,KAAO,wBACxB,EAAO,GAAM,GAAG,KAAO,wBAGvB,IAAMsJ,EAAgB,CACpB,KAAM,gBACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAO,GAAM,GAAG,MAAM,CAC/C,IAAK,OAAO,OAAO,EAAE,CAAE,EAAOtJ,GAAO,GAAG,KACzC,CAGKsC,EAAO,CACX,KAAM,oBACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAO,GAAM,GAAG,IAAI,CAC7C,IAAK,OAAO,OAAO,EAAE,CAAE,EAAOtC,GAAO,GAAG,OACzC,CAIK,EAAa,CAAC,CAAC,QAASsJ,EAAe,EAAQ,CAAE,CAAC,QAAS,EAAO,GAAM,GAAI,EAAQ,CAAE,CAAC,OAAQ,EAAO,GAAM,GAAI,EAAQ,CAAE,CAAC,QAAShH,EAAM,GAAS,CACnJiH,EAAa,EAAQ,OAAO,WAAW,WAAW,KACpDA,GAEF,GAAO,EAAY,EAAW,OAAQ,EAAG,GAAWA,EAAY,EAAO,MAAM,EAAO,EAAGvJ,EAAM,CAAE,EAAQ,CAAC,CAI1G,GAAO,EAAY,EAAW,OAAQ,EAAG,CAAC,CAAC,OAAQsC,EAAM,EAAQ,CAAE,CAAC,QAAS,EAAOtC,GAAO,GAAI,EAAQ,CAAE,CAAC,OAAQ,EAAOA,GAAO,GAAI,EAAQ,CAAE,CAAC,OAAQsJ,EAAe,GAAS,CAAC,CAChL,GAAO,EAAQ,EAAO,EAAGtJ,EAAQ,EAAO,EAAG,EAAW,CACtD,EAAQ,EAAO,EAAW,OAAS,EACnC,OAMR,IADA,EAAQ,GACD,EAAEA,EAAQ,EAAO,QAClB,EAAOA,GAAO,GAAG,OAAS,mCAC5B,EAAOA,GAAO,GAAG,KAAO,QAG5B,OAAO,EAOT,SAAS,EAAsB,EAAS,EAAI,EAAK,CAC/C,IAAMkC,EAAW,KAAK,SAChB,EAAS,KAAK,OAChB,EAAO,EACX,OAAO,EAGP,SAAS,EAAM,EAAM,CAKnB,OAJIA,IAAa,KAAO,EAAO,EAAO,OAAS,GAAG,GAAG,OAAS,kBACrD,EAAI5B,EAAK,EAElB,EAAQ,MAAM,iCAAiC,CACxC,EAAKA,EAAK,EAInB,SAAS,EAAK,EAAM,CAClB,IAAM,EAAS,GAAkB4B,EAAS,CAC1C,GAAI5B,IAAS,IAKX,OAHI,EAAO,EAAU,EAAIA,EAAK,EAC9B,EAAQ,QAAQA,EAAK,CACrB,IACO,GAET,GAAI,EAAO,GAAK,CAAC,EAAQ,OAAO,EAAIA,EAAK,CACzC,IAAM,EAAQ,EAAQ,KAAK,iCAAiC,CACtD,EAAQ,GAAkBA,EAAK,CAGrC,MAFA,GAAM,MAAQ,CAAC,GAAS,IAAU,GAAK,EAAQ,EAC/C,EAAM,OAAS,CAAC,GAAU,IAAW,GAAK,EAAQ,EAC3C2B,EAAG3B,EAAK,GCjHrB,IAAa,GAAb,KAAqB,CAInB,aAAc,CAMZ,KAAK,IAAM,EAAE,CAWf,IAAI,EAAO,EAAQ,EAAK,CACtB,GAAkB,KAAMN,EAAO,EAAQ,EAAI,CAsB7C,QAAQ,EAAQ,CAMd,GALA,KAAK,IAAI,KAAK,SAAU,EAAG,EAAG,CAC5B,OAAO,EAAE,GAAK,EAAE,IAChB,CAGE,KAAK,IAAI,SAAW,EACtB,OAqBF,IAAIA,EAAQ,KAAK,IAAI,OAEf,EAAO,EAAE,CACf,KAAOA,EAAQ,GACb,IACA,EAAK,KAAK,EAAO,MAAM,KAAK,IAAIA,GAAO,GAAK,KAAK,IAAIA,GAAO,GAAG,CAAE,KAAK,IAAIA,GAAO,GAAG,CAGpF,EAAO,OAAS,KAAK,IAAIA,GAAO,GAElC,EAAK,KAAK,EAAO,OAAO,CAAC,CACzB,EAAO,OAAS,EAChB,IAAI,EAAQ,EAAK,KAAK,CACtB,KAAO,GAAO,CACZ,IAAK,IAAM2B,KAAW,EACpB,EAAO,KAAKA,EAAQ,CAEtB,EAAQ,EAAK,KAAK,CAIpB,KAAK,IAAI,OAAS,IAatB,SAAS,GAAkB,EAAS,EAAI,EAAQ,EAAK,CACnD,IAAI3B,EAAQ,EAGR,SAAW,GAAK,EAAI,SAAW,GAGnC,MAAOA,EAAQ,EAAQ,IAAI,QAAQ,CACjC,GAAI,EAAQ,IAAIA,GAAO,KAAO,EAAI,CAChC,EAAQ,IAAIA,GAAO,IAAM,EAOzB,EAAQ,IAAIA,GAAO,GAAG,KAAK,GAAG,EAAI,CAGlC,OAEF,GAAS,EAEX,EAAQ,IAAI,KAAK,CAAC,EAAI,EAAQ,EAAI,CAAC,ECxIrC,SAAgB,GAAc,EAAQ,EAAO,CAC3C,IAAI,EAAiB,GAEf,EAAQ,EAAE,CAChB,KAAOA,EAAQ,EAAO,QAAQ,CAC5B,IAAM,EAAQ,EAAOA,GACrB,GAAI,MACE,EAAM,KAAO,QAGX,EAAM,GAAG,OAAS,gBACpB,EAAM,KAAK,EAAOA,EAAQ,GAAG,GAAG,OAAS,uBAAyB,OAAS,OAAO,SAM7E,EAAM,GAAG,OAAS,mBACrB,EAAOA,EAAQ,GAAG,GAAG,OAAS,uBAAwB,CACxD,IAAM,EAAa,EAAM,OAAS,EAClC,EAAM,GAAc,EAAM,KAAgB,OAAS,SAAW,iBAIzD,EAAM,GAAG,OAAS,oBACzB,WAEO,EAAM,KAAO,SAAW,EAAM,GAAG,OAAS,sBACnD,EAAiB,IAEnB,GAAS,EAEX,OAAO,EC1BT,SAAgB,IAAW,CACzB,MAAO,CACL,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,SAAU,GACV,WAAY,GACb,CACF,CACF,CAOH,SAAS,GAAc,EAAS,EAAI,EAAK,CACvC,IAAMe,EAAO,KACT,EAAO,EACP,EAAQ,EAER,EACJ,OAAO,EAkBP,SAAS,EAAM,EAAM,CACnB,IAAIf,EAAQe,EAAK,OAAO,OAAS,EACjC,KAAOf,EAAQ,IAAI,CACjB,IAAM,EAAOe,EAAK,OAAOf,GAAO,GAAG,KACnC,GAAI,IAAS,cAEb,IAAS,aAAc,SAAa,MAEtC,IAAM,EAAOA,EAAQ,GAAKe,EAAK,OAAOf,GAAO,GAAG,KAAO,KACjDD,EAAO,IAAS,aAAe,IAAS,WAAa,EAAe,EAM1E,OAHIA,IAAS,GAAgBgB,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,MAChD,EAAIT,EAAK,CAEXP,EAAKO,EAAK,CAenB,SAAS,EAAc,EAAM,CAG3B,OAFA,EAAQ,MAAM,YAAY,CAC1B,EAAQ,MAAM,WAAW,CAClB,EAAaA,EAAK,CAe3B,SAAS,EAAa,EAAM,CAkB1B,OAjBIA,IAAS,IACJ,EAAaA,EAAK,EAa3B,EAAO,GAEP,GAAS,EACF,EAAaA,EAAK,EAiB3B,SAAS,EAAa,EAAM,CA6C1B,OA5CIA,IAAS,KAEJ,EAAIA,EAAK,CAEd,EAAmBA,EAAK,CAEtB,EAAQ,GACV,EAAQ,EAGR,EAAK,UAAY,GACjB,EAAQ,KAAK,WAAW,CACxB,EAAQ,MAAM,aAAa,CAC3B,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,aAAa,CACnB,GAIF,EAAIA,EAAK,CAEd,EAAcA,EAAK,CAId,EAAa,EAAS,EAAc,aAAa,CAACA,EAAK,EAEhE,GAAS,EACL,IACF,EAAO,GAEP,GAAQ,GAENA,IAAS,KACX,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CAEhC,EAAO,GACA,IAIT,EAAQ,MAAM,OAAO,CACd,EAAYA,EAAK,GAe1B,SAAS,EAAY,EAAM,CAMzB,OALIA,IAAS,MAAQA,IAAS,KAAO,EAA0BA,EAAK,EAClE,EAAQ,KAAK,OAAO,CACb,EAAaA,EAAK,GAE3B,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAgB,GAevC,SAAS,EAAc,EAAM,CAK3B,OAJIA,IAAS,IAAMA,IAAS,KAC1B,EAAQ,QAAQA,EAAK,CACd,GAEF,EAAYA,EAAK,CAe1B,SAAS,EAAmB,EAAM,CAchC,MAZA,GAAK,UAAY,GAGbS,EAAK,OAAO,KAAKA,EAAK,KAAK,CAAC,MACvB,EAAIT,EAAK,EAElB,EAAQ,MAAM,oBAAoB,CAElC,EAAO,GACH,EAAcA,EAAK,CACd,EAAa,EAAS,EAAqB,aAAcS,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,eAAe,CAAG,OAAY,EAAE,CAACT,EAAK,CAE9I,EAAoBA,EAAK,EAiBlC,SAAS,EAAoB,EAAM,CAcjC,OAbIA,IAAS,IAAMA,IAAS,GACnB,EAAyBA,EAAK,CAEnCA,IAAS,KACX,EAAO,GAEP,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CACzB,GAIF,EAAiBA,EAAK,CAc/B,SAAS,EAAwB,EAAM,CAIrC,OAHI,EAAcA,EAAK,CACd,EAAa,EAAS,EAA0B,aAAa,CAACA,EAAK,CAErE,EAAyBA,EAAK,CAcvC,SAAS,EAAyB,EAAM,CAoBtC,OAlBIA,IAAS,IACX,GAAS,EACT,EAAO,GACP,EAAQ,MAAM,uBAAuB,CACrC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,uBAAuB,CAC7B,GAILA,IAAS,IACX,GAAS,EAEF,EAAgCA,EAAK,EAE1CA,IAAS,MAAQ,EAAmBA,EAAK,CACpC,EAAuBA,EAAK,CAE9B,EAAiBA,EAAK,CAc/B,SAAS,EAAgC,EAAM,CAO7C,OANIA,IAAS,IACX,EAAQ,MAAM,uBAAuB,CAC9B,EAAoBA,EAAK,EAI3B,EAAiBA,EAAK,CAc/B,SAAS,EAAoB,EAAM,CAgBjC,OAfIA,IAAS,IACX,EAAQ,QAAQA,EAAK,CACd,GAILA,IAAS,IACX,EAAO,GACP,EAAQ,KAAK,uBAAuB,CACpC,EAAQ,MAAM,uBAAuB,CACrC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,uBAAuB,CAC7B,IAET,EAAQ,KAAK,uBAAuB,CAC7B,EAAiCA,EAAK,EAc/C,SAAS,EAAiC,EAAM,CAI9C,OAHI,EAAcA,EAAK,CACd,EAAa,EAAS,EAAwB,aAAa,CAACA,EAAK,CAEnE,EAAuBA,EAAK,CAcrC,SAAS,EAAuB,EAAM,CAoBpC,OAnBIA,IAAS,IACJ,EAAoBA,EAAK,CAE9BA,IAAS,MAAQ,EAAmBA,EAAK,CAKvC,CAAC,GAAQ,IAAS,EACb,EAAiBA,EAAK,EAI/B,EAAQ,KAAK,oBAAoB,CACjC,EAAQ,KAAK,YAAY,CAGlB2B,EAAG3B,EAAK,EAEV,EAAiBA,EAAK,CAc/B,SAAS,EAAiB,EAAM,CAE9B,OAAO,EAAIA,EAAK,CAelB,SAAS,EAAa,EAAM,CAK1B,OADA,EAAQ,MAAM,WAAW,CAClB,EAAaA,EAAK,CAiB3B,SAAS,EAAa,EAAM,CAiB1B,OAhBIA,IAAS,KACX,EAAQ,MAAM,mBAAmB,CACjC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,mBAAmB,CACzB,GAELA,IAAS,MAAQ,EAAmBA,EAAK,EAC3C,EAAQ,KAAK,WAAW,CACjB2B,EAAG3B,EAAK,EAEb,EAAcA,EAAK,CACd,EAAa,EAAS,EAAc,aAAa,CAACA,EAAK,EAIhE,EAAQ,MAAM,OAAO,CACd,GAAYA,EAAK,EAe1B,SAAS,GAAY,EAAM,CAMzB,OALIA,IAAS,MAAQA,IAAS,KAAO,EAA0BA,EAAK,EAClE,EAAQ,KAAK,OAAO,CACb,EAAaA,EAAK,GAE3B,EAAQ,QAAQA,EAAK,CACdA,IAAS,GAAK,EAAgB,IAevC,SAAS,EAAc,EAAM,CAK3B,OAJIA,IAAS,IAAMA,IAAS,KAC1B,EAAQ,QAAQA,EAAK,CACd,IAEF,GAAYA,EAAK,EAM5B,SAAS,GAAa,EAAQ,EAAS,CACrC,IAAIN,EAAQ,GACR,EAA0B,GAE1B,EAAU,EAEV,EAAW,CAAC,EAAG,EAAG,EAAG,EAAE,CAEvB,EAAO,CAAC,EAAG,EAAG,EAAG,EAAE,CACnB,EAAgC,GAChC,EAAe,EAEf,EAEA,EAEA,EACE0D,EAAM,IAAI,GAChB,KAAO,EAAE1D,EAAQ,EAAO,QAAQ,CAC9B,IAAM,EAAQ,EAAOA,GACf,EAAQ,EAAM,GAChB,EAAM,KAAO,QAEX,EAAM,OAAS,aACjB,EAAgC,GAG5B,IAAiB,IACnB,GAAc0D,EAAK,EAAS,EAAc,EAAc,EAAY,CACpE,EAAc,OACd,EAAe,GAIjB,EAAe,CACb,KAAM,QACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAM,MAAM,CAErC,IAAK,OAAO,OAAO,EAAE,CAAE,EAAM,KAC9B,CACD,EAAI,IAAI1D,EAAO,EAAG,CAAC,CAAC,QAAS,EAAc,EAAQ,CAAC,CAAC,EAC5C,EAAM,OAAS,YAAc,EAAM,OAAS,qBACrD,EAA0B,GAC1B,EAAc,OACd,EAAW,CAAC,EAAG,EAAG,EAAG,EAAE,CACvB,EAAO,CAAC,EAAGA,EAAQ,EAAG,EAAG,EAAE,CAGvB,IACF,EAAgC,GAChC,EAAc,CACZ,KAAM,YACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAM,MAAM,CAErC,IAAK,OAAO,OAAO,EAAE,CAAE,EAAM,KAC9B,CACD,EAAI,IAAIA,EAAO,EAAG,CAAC,CAAC,QAAS,EAAa,EAAQ,CAAC,CAAC,EAEtD,EAAU,EAAM,OAAS,oBAAsB,EAAI,EAAc,EAAI,GAG9D,IAAY,EAAM,OAAS,QAAU,EAAM,OAAS,wBAA0B,EAAM,OAAS,yBACpG,EAA0B,GAGtB,EAAK,KAAO,IACV,EAAS,KAAO,IAClB,EAAK,GAAK,EAAK,GACf,EAAc,GAAU0D,EAAK,EAAS,EAAU,EAAS,OAAW,EAAY,CAChF,EAAW,CAAC,EAAG,EAAG,EAAG,EAAE,EAEzB,EAAK,GAAK1D,IAEH,EAAM,OAAS,qBACpB,EACF,EAA0B,IAEtB,EAAS,KAAO,IAClB,EAAK,GAAK,EAAK,GACf,EAAc,GAAU0D,EAAK,EAAS,EAAU,EAAS,OAAW,EAAY,EAElF,EAAW,EACX,EAAO,CAAC,EAAS,GAAI1D,EAAO,EAAG,EAAE,GAK9B,EAAM,OAAS,aACtB,EAAgC,GAChC,EAAeA,GACN,EAAM,OAAS,YAAc,EAAM,OAAS,qBACrD,EAAeA,EACX,EAAS,KAAO,EAGT,EAAK,KAAO,IACrB,EAAc,GAAU0D,EAAK,EAAS,EAAM,EAAS1D,EAAO,EAAY,GAHxE,EAAK,GAAK,EAAK,GACf,EAAc,GAAU0D,EAAK,EAAS,EAAU,EAAS1D,EAAO,EAAY,EAI9E,EAAU,GACD,IAAY,EAAM,OAAS,QAAU,EAAM,OAAS,wBAA0B,EAAM,OAAS,0BACtG,EAAK,GAAKA,GAYd,IATI,IAAiB,GACnB,GAAc0D,EAAK,EAAS,EAAc,EAAc,EAAY,CAEtE,EAAI,QAAQ,EAAQ,OAAO,CAK3B,EAAQ,GACD,EAAE1D,EAAQ,EAAQ,OAAO,QAAQ,CACtC,IAAM,EAAQ,EAAQ,OAAOA,GACzB,EAAM,KAAO,SAAW,EAAM,GAAG,OAAS,UAC5C,EAAM,GAAG,OAAS,GAAc,EAAQ,OAAQA,EAAM,EAG1D,OAAO,EAeT,SAAS,GAAU,EAAK,EAAS,EAAO,EAAS,EAAQ,EAAc,CAGrE,IAAM,EAAY,IAAY,EAAI,cAAgB,IAAY,EAAI,iBAAmB,YAYjF,EAAM,KAAO,IACf,EAAa,IAAM,OAAO,OAAO,EAAE,CAAE,GAAS,EAAQ,OAAQ,EAAM,GAAG,CAAC,CACxE,EAAI,IAAI,EAAM,GAAI,EAAG,CAAC,CAAC,OAAQ,EAAc,EAAQ,CAAC,CAAC,EAUzD,IAAM,EAAM,GAAS,EAAQ,OAAQ,EAAM,GAAG,CAkB9C,GAjBA,EAAe,CACb,KAAM,EACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAI,CAE7B,IAAK,OAAO,OAAO,EAAE,CAAE,GACxB,CACD,EAAI,IAAI,EAAM,GAAI,EAAG,CAAC,CAAC,QAAS,EAAc,EAAQ,CAAC,CAAC,CAWpD,EAAM,KAAO,EAAG,CAClB,IAAM,EAAe,GAAS,EAAQ,OAAQ,EAAM,GAAG,CACjD,EAAa,GAAS,EAAQ,OAAQ,EAAM,GAAG,CAE/C,EAAa,CACjB,KAAM,eACN,MAAO,OAAO,OAAO,EAAE,CAAE,EAAa,CACtC,IAAK,OAAO,OAAO,EAAE,CAAE,GACxB,CAED,GADA,EAAI,IAAI,EAAM,GAAI,EAAG,CAAC,CAAC,QAAS,EAAY,EAAQ,CAAC,CAAC,CAClD,IAAY,EAAG,CAEjB,IAAM,EAAQ,EAAQ,OAAO,EAAM,IAC7B,EAAM,EAAQ,OAAO,EAAM,IAMjC,GALA,EAAM,GAAG,IAAM,OAAO,OAAO,EAAE,CAAE,EAAI,GAAG,IAAI,CAC5C,EAAM,GAAG,KAAO,YAChB,EAAM,GAAG,YAAc,OAGnB,EAAM,GAAK,EAAM,GAAK,EAAG,CAC3B,IAAM,EAAI,EAAM,GAAK,EACf,EAAI,EAAM,GAAK,EAAM,GAAK,EAChC,EAAI,IAAI,EAAG,EAAG,EAAE,CAAC,EAGrB,EAAI,IAAI,EAAM,GAAK,EAAG,EAAG,CAAC,CAAC,OAAQ,EAAY,EAAQ,CAAC,CAAC,CAe3D,OALI,IAAW,SACb,EAAa,IAAM,OAAO,OAAO,EAAE,CAAE,GAAS,EAAQ,OAAQ,EAAO,CAAC,CACtE,EAAI,IAAI,EAAQ,EAAG,CAAC,CAAC,OAAQ,EAAc,EAAQ,CAAC,CAAC,CACrD,EAAe,QAEV,EAaT,SAAS,GAAc,EAAK,EAAS,EAAO,EAAO,EAAW,CAE5D,IAAM,EAAQ,EAAE,CACV,EAAU,GAAS,EAAQ,OAAQA,EAAM,CAC3C,IACF,EAAU,IAAM,OAAO,OAAO,EAAE,CAAE,EAAQ,CAC1C,EAAM,KAAK,CAAC,OAAQ,EAAW,EAAQ,CAAC,EAE1C,EAAM,IAAM,OAAO,OAAO,EAAE,CAAE,EAAQ,CACtC,EAAM,KAAK,CAAC,OAAQkJ,EAAO,EAAQ,CAAC,CACpC,EAAI,IAAIlJ,EAAQ,EAAG,EAAG,EAAM,CAQ9B,SAAS,GAAS,EAAQ,EAAO,CAC/B,IAAM,EAAQ,EAAOA,GACf,EAAO,EAAM,KAAO,QAAU,QAAU,MAC9C,OAAO,EAAM,GAAG,GC3yBlB,IAAM,GAAgB,CACpB,KAAM,gBACN,SAAU,GACX,CAUD,SAAgB,IAAkB,CAChC,MAAO,CACL,KAAM,CACH,GAAK,GACP,CACF,CAOH,SAAS,GAAsB,EAAS,EAAI,EAAK,CAC/C,IAAMe,EAAO,KACb,OAAO,EAYP,SAAS,EAAK,EAAM,CAalB,OAVAA,EAAK,WAAa,MAGlB,CAACA,EAAK,mCACG,EAAIT,EAAK,EAElB,EAAQ,MAAM,gBAAgB,CAC9B,EAAQ,MAAM,sBAAsB,CACpC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,sBAAsB,CAC5B,GAaT,SAAS,EAAO,EAAM,CAgBpB,OAZI,EAA0BA,EAAK,EACjC,EAAQ,MAAM,8BAA8B,CAC5C,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,8BAA8B,CACpC,GAELA,IAAS,IAAMA,IAAS,KAC1B,EAAQ,MAAM,4BAA4B,CAC1C,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,4BAA4B,CAClC,GAEF,EAAIA,EAAK,CAalB,SAAS,EAAM,EAAM,CAQnB,OAPIA,IAAS,IACX,EAAQ,MAAM,sBAAsB,CACpC,EAAQ,QAAQA,EAAK,CACrB,EAAQ,KAAK,sBAAsB,CACnC,EAAQ,KAAK,gBAAgB,CACtB,GAEF,EAAIA,EAAK,CAMlB,SAAS,EAAM,EAAM,CAenB,OAbI,EAAmBA,EAAK,CACnB2B,EAAG3B,EAAK,CAKb,EAAcA,EAAK,CACd,EAAQ,MAAM,CACnB,SAAU,GACX,CAAE2B,EAAI,EAAI,CAAC3B,EAAK,CAIZ,EAAIA,EAAK,EAQpB,SAAS,GAAkB,EAAS,EAAI,EAAK,CAC3C,OAAO,EAAa,EAAS,EAAO,aAAa,CAYjD,SAAS,EAAM,EAAM,CAKnB,OAAOA,IAAS,KAAO,EAAIA,EAAK,CAAG2B,EAAG3B,EAAK,ECrH/C,SAAgB,GAAI,EAAS,CAC3B,OAAO,GAAkB,CACvB,IAAoB,CACpB,IAAa,CACb,GAAiB,EAAQ,CACzB,IAAU,CACV,KACD,CAAC,CCjCJ,IAAMiB,GAAe,EAAE,CAWvB,SAAwB,GAAU,EAAS,CAGzC,IAAMR,EAAuC,KACvC,EAAW,GAAWQ,GACtB,EAAOR,EAAK,MAAM,CAElB,EACJ,CAA6B,CAAK,sBAAsB,EAAE,CACtD,EACJ,CAAgC,CAAK,yBAAyB,EAAE,CAC5D,EACJ,CAA8B,CAAK,uBAAuB,EAAE,CAE9D,EAAoB,KAAK,GAAI,EAAS,CAAC,CACvC,EAAuB,KAAK,IAAiB,CAAC,CAC9C,EAAqB,KAAK,GAAc,EAAS,CAAC,CC4BpD,MAAa,IAqBT,SAAU,EAAS,EAAM,EAAO,EAAQ,EAAS,CAC/C,IAAM,EAAQ,GAAe,EAAK,CAElC,GACEf,GAAU,OAET,OAAOA,GAAU,UAChBA,EAAQ,GACRA,IAAU,KAEZ,MAAU,MAAM,mCAAmC,CAGrD,GACE,GAAW,OAEV,CAAC,EAAO,MAAQ,CAAC,EAAO,UAEzB,MAAU,MAAM,0BAA0B,CAG5C,GACGA,GAAU,OACV,GAAW,MAEZ,MAAU,MAAM,qCAAqC,CAGvD,OAAO,GAAmB2B,EAAQ,CAC9B,EAAM,KAAK,EAASA,EAAS3B,EAAO,EAAO,CAC3C,KAkBG,IAeT,SAAU,EAAM,CACd,GAAI,GAAS,KACX,OAAO2B,GAGT,GAAI,OAAO,GAAS,SAClB,OAAO,GAAe,EAAK,CAI7B,GAAI,OAAO,GAAS,SAClB,OAAO,GAAW,EAAK,CAGzB,GAAI,OAAO,GAAS,WAClB,OAAO,GAAY,EAAK,CAG1B,MAAU,MAAM,gDAAgD,GAUtE,SAAS,GAAW,EAAO,CAEzB,IAAM6H,EAAS,EAAE,CACbxJ,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAM,QACrB,EAAOA,GAAS,GAAe,EAAMA,GAAO,CAG9C,OAAO,GAAY,EAAI,CAMvB,SAAS,EAAI,GAAG,EAAY,CAC1B,IAAIA,EAAQ,GAEZ,KAAO,EAAEA,EAAQwJ,EAAO,QACtB,GAAIA,EAAOxJ,GAAO,MAAM,KAAM,EAAW,CAAE,MAAO,GAGpD,MAAO,IAUX,SAAS,GAAe,EAAO,CAC7B,OAAO,GAAY,EAAQ,CAM3B,SAAS,EAAQ,EAAS,CACxB,OAAO2B,EAAQ,UAAY,GAU/B,SAAS,GAAY,EAAc,CACjC,OAAO,EAMP,SAAS,EAAM,EAAO,EAAO,EAAQ,CACnC,MAAO,GACL,GAAmB,EAAM,EACvB,EAAa,KACX,KACA,EACA,OAAO3B,GAAU,SAAWA,EAAQ,OACpC,GAAU,OACX,GAWT,SAAS2B,GAAQ,EAAS,CACxB,MAAO,GACLA,GACE,OAAOA,GAAY,UACnB,SAAUA,GACVA,EAAQ,OAAS,WACjB,YAAaA,GACb,OAAOA,EAAQ,SAAY,UAQjC,SAAS,GAAmB,EAAO,CACjC,OAEE,OAAO,GAAU,YADjB,GAEA,SAAU,GACV,YAAa,ECjRjB,IAAM,GAAqB,6BAGrB,GAAqB,eAE3B,SAAwB,GAAc,EAAK,CAC1C,GAAI,OAAO,GAAQ,SAClB,MAAU,UAAU,gCAAgC,OAAO,EAAI,IAAI,CAOpE,OAJI,GAAmB,KAAK,EAAI,CACxB,GAGD,GAAmB,KAAK,EAAI,CCwDpC,IAAM,GAAmB,CAAC,OAAQ,QAAQ,CACpC,GAAa,CAAC,WAAW,CAGzBJ,GAAe,EAAE,CAuBvB,SAAwB,GAAoB,EAAS,CACnD,IAAM,EAAW,GAAWA,GACtB,EAAY,EAAS,WAAa,GAClC,EAAK,GAAe,EAAS,KAAK,CAUxC,OAAO,SAAU,EAAM,CACrB,EAAM,EAAM,UAAW,SAAU,EAAM,EAAO,EAAQ,CACpD,GACED,EAAK,UAAY,KACjB,OAAOA,EAAK,WAAW,MAAS,UAChC,EAAGA,EAAMtB,EAAO,EAAO,CACvB,CACA,IAAM,EAAMsB,EAAK,WAAW,KAE5B,GACE,GAAc,EAAI,CACd,EAAU,SAAS,EAAI,MAAM,EAAG,EAAI,QAAQ,IAAI,CAAC,CAAC,CAClD,EAAI,WAAW,KAAK,CACxB,CACA,IAAM,EAAa,GAAe,EAAS,QAASA,EAAK,CACnDuB,EACJ,GAAc,CAAC,MAAM,QAAQ,EAAW,CAAG,CAAC,EAAW,CAAG,EACtD,EAAS,GAAe,EAAS,IAAKvB,EAAK,EAAI,GAC/C,EAAM,OAAO,GAAW,SAAWsC,EAAM,EAAO,CAAG,EACnD,EAAS,GAAe,EAAS,OAAQtC,EAAK,CAE9C,EAAa,GAAe,EAAS,WAAYA,EAAK,CAc5D,GAZI,GACF,OAAO,OAAOA,EAAK,WAAYgE,GAAgB,EAAW,CAAC,CAGzD,EAAI,OAAS,IACf,EAAK,WAAW,IAAM,CAAC,GAAG,EAAI,EAG5B,IACF,EAAK,WAAW,OAAS,GAGvBzC,EAAS,CACX,IAAM4G,EACJ,GAAe,EAAS,kBAAmBnI,EAAK,EAAI,EAAE,CAExD,EAAK,SAAS,KAAK,CACjB,KAAM,UACN,QAAS,OACT,WAAYgE,GAAgBmE,EAAW,CACvC,SAAUnE,GAAgBzC,GAC3B,CAAC,KAIR,EAgBN,SAAS,GAAe,EAAO,EAAS,CACtC,OAAO,OAAO,GAAU,WAAa,EAAMlB,EAAQ,CAAG,EChLxD,MAAa,GAAS,CACpB,OAAQ,QACR,UAAW,KACX,SAAU,KACV,QAAS,SACT,QAAS,CAAC,KAAM,KAAK,CACrB,SAAU,KACV,QAAS,KACT,SAAU,KACV,KAAM,CAAC,IAAK,OAAO,CACnB,IAAK,CAAC,IAAK,OAAQ,OAAO,CAC1B,QAAS,SACT,MAAO,OACR,CCAD,SAAwB,IAA4B,CAOlD,OAAO,SAAU,EAAM,CAGrB,IAAM,EAAS,IAAI,IAGb,EAAS,EAAE,CAEjB,EAAM,EAAM,UAAW,SAAU,EAAM,CAErC,IAAI,EAEJ,IAAK,KAAYL,EAAK,WACpB,GAAI,OAAO,OAAOA,EAAK,WAAY,EAAS,CAAE,CAC5C,IAAM,EAAQA,EAAK,WAAW,GAG5B,OAAO,OAAO,GAAQ,EAAS,EAC/B,GAAUA,EAAM,GAAO,GAAU,EACjC,MAAM,QAAQ,EAAM,EAEpB,EAAI,EAAU,EAAM,GAI1B,CAEF,GAAO,CAUP,SAAS,EAAI,EAAU,EAAQ,CAC7B,IAAItB,EAAQ,GACR,EAAQ,EAAO,IAAI,EAAS,CAOhC,IALK,IACH,EAAQ,IAAI,IACZ,EAAO,IAAI,EAAU,EAAM,EAGtB,EAAEA,EAAQ,EAAO,QAAQ,CAC9B,IAAM,EAAQ,EAAOA,GACrB,EAAM,IAAI,GAAQ,EAAM,IAAI,EAAM,EAAI,GAAK,EAAE,CAG/C,EAAO,KAAK,CAAC,EAAU,EAAO,CAAC,CAOjC,SAAS,GAAQ,CAEf,IAAM,EAAS,IAAI,IAEnB,IAAK,GAAM,CAAC,EAAU,KAAU,EAC9B,EAAO,IACL,EACA,CAAC,GAAG,EAAM,SAAS,CAAC,CACjB,KAAK,SAAU,EAAG,EAAG,CACpB,OAAO,EAAE,GAAK,EAAE,IAAM0J,GAAQ,OAAO,EAAE,GAAG,CAAE,OAAO,EAAE,GAAG,CAAE,EAAE,EAC5D,CACD,IAAI,SAAU,EAAG,CAChB,OAAO,EAAE,IACT,CACL,CAGH,IAAI1J,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAO,QAAQ,CAC9B,IAAM,EAAQ,EAAOA,GACf,EAAQ,EAAO,IAAI,EAAM,GAAG,CAC9B,GACF,EAAM,GAAG,KAAK,SAAU,EAAG,EAAG,CAC5B,OAAO,EAAM,QAAQ,EAAE,CAAG,EAAM,QAAQ,EAAE,EAC1C,IAoBZ,SAAS0J,GAAQ,EAAG,EAAG,EAAO,CAC5B,OACG,EAAE,WAAW1J,EAAM,EAAI,IAAM,EAAE,WAAWA,EAAM,EAAI,IACrD0J,GAAQ,EAAG,EAAG1J,EAAQ,EAAE,CCnH5B,SAAwB,IAAuB,CAO7C,OAAO,SAAU,EAAM,CAGrB,IAAM,EAAS,IAAI,IAEnB,EAAM,EAAM,UAAW,SAAU,EAAM,CACrC,IAAI,EAAQ,EAAO,IAAIsB,EAAK,QAAQ,CAE/B,IACH,EAAQ,IAAI,IACZ,EAAO,IAAIA,EAAK,QAAS,EAAM,EAIjC,IAAI,EAEJ,IAAK,KAAYA,EAAK,WAChB,OAAO,OAAOA,EAAK,WAAY,EAAS,EAC1C,EAAM,IAAI,GAAW,EAAM,IAAI,EAAS,EAAI,GAAK,EAAE,EAGvD,CAEF,IAAM,EAAS,GAAU,CAEzB,EAAM,EAAM,UAAW,SAAU,EAAM,CACrC,IAAM,EAAQ,EAAO,IAAIA,EAAK,QAAQ,CAEtC,GAAI,EAAO,CAET,IAAMyF,EAAO,EAAE,CAET,EAAS,EAAE,CACb/G,EAAQ,GAER,EAEJ,IAAK,KAAYsB,EAAK,WAChB,OAAO,OAAOA,EAAK,WAAY,EAAS,EAC1C,EAAK,KAAK,EAAS,CAQvB,IAJA,EAAK,KAAK,SAAU,EAAG,EAAG,CACxB,OAAO,EAAM,QAAQ,EAAE,CAAG,EAAM,QAAQ,EAAE,EAC1C,CAEK,EAAEtB,EAAQ+G,EAAK,QACpB,EAAOA,EAAK/G,IAAUsB,EAAK,WAAWyF,EAAK/G,IAG7C,EAAK,WAAa,IAEpB,CAMF,SAAS,GAAW,CAGlB,IAAM2J,EAAS,IAAI,IAEnB,IAAK,GAAM,CAAC,EAAM,KAAe,EAAO,SAAS,CAC/C,EAAO,IACL,EACA,CAAC,GAAG,EAAW,SAAS,CAAC,CACtB,KAAK,SAAU,EAAG,EAAG,CACpB,OAAO,EAAE,GAAK,EAAE,IAAM,GAAQ,OAAO,EAAE,GAAG,CAAE,OAAO,EAAE,GAAG,CAAE,EAAE,EAC5D,CACD,IAAI,SAAU,EAAG,CAChB,OAAO,EAAE,IACT,CACL,CAGH,OAAOA,IAkBb,SAAS,GAAQ,EAAG,EAAG,EAAO,CAC5B,OACG,EAAE,WAAW3J,EAAM,EAAI,IAAM,EAAE,WAAWA,EAAM,EAAI,IACrD,GAAQ,EAAG,EAAGA,EAAQ,EAAE,CC7F5B,IAAM+D,GAAS,QAoBf,SAAgB,GAAc,EAAU,EAAgB,CACtD,IAAM,EAAQ,GAAY,GAEpB,EAAQ,EAAE,CACZ,EAAQ,EAER7B,EAEA,EAEJ,KAAO,EAAQ,EAAM,QAAQ,CAC3B,GAAO,UAAY,EACnB,IAAM,EAAQ6B,GAAO,KAAK,EAAM,CAC1B,EAAW,EAAM,MAAM,EAAO,EAAQ,EAAM,MAAQ,EAAM,OAAO,CAEnE,IACG7B,EAEMA,IAAa,IACtB,EAAM,GAAK,EACF,MAAM,QAAQ,EAAM,UAAU,CACvC,EAAM,UAAU,KAAK,EAAS,CAE9B,EAAM,UAAY,CAAC,EAAS,CAN5B,EAAU,EASZ,GAAS,EAAS,QAGhB,IACF,EAAW,EAAM,GACjB,KAIJ,MAAO,CACL,KAAM,UAEN,QAAS,GAAW,GAAkB,MACtC,WAAY,EACZ,SAAU,GACX,CCVH,SAAgB,GAAQ,EAAQ,EAAgB,EAAe,CAC7D,IAAM,EAAS,EAAgB,GAAgB,EAAc,CAAG,OA8BhE,SAAS0H,EAAE,EAAU,EAAY,GAAG,EAAU,CAE5C,IAAItI,EAEJ,GAAI,GAAa,KAAgC,CAC/C,EAAO,CAAC,KAAM,OAAQ,SAAU,GAAG,CAEnC,IAAM,EAA8B,EACpC,EAAS,QAAQ,EAAM,KAClB,CACL,EAAO,GAAc,EAAU,EAAe,CAE9C,IAAM,EAAQA,EAAK,QAAQ,aAAa,CAKxC,GAHA,EAAK,SADY,EAAS,EAAO,IAAI,EAAM,CAAG,SACnB,EAGvB,GAAQ,EAAW,CACrB,EAAS,QAAQ,EAAW,MAE5B,IAAK,GAAM,CAAC,EAAK,KAAU,OAAO,QAAQ,EAAW,CACnD,GAAY2E,EAAQ3E,EAAK,WAAY,EAAK,EAAM,CAMtD,IAAK,IAAM,KAAS,EAClB,GAASA,EAAK,SAAU,EAAM,CAQhC,OALIA,EAAK,OAAS,WAAaA,EAAK,UAAY,aAC9C,EAAK,QAAU,CAAC,KAAM,OAAQ,SAAUA,EAAK,SAAS,CACtD,EAAK,SAAW,EAAE,EAGbA,EAGT,OAAOsI,EAWT,SAAS,GAAQ,EAAO,CAEtB,GAAsB,OAAO,GAAU,WAAnC,GAA+C,MAAM,QAAQ,EAAM,CACrE,MAAO,GAIT,GAAI,OAAO,EAAM,MAAS,SAAU,MAAO,GAI3C,IAAM,EAAiD,EACjD7C,EAAO,OAAO,KAAK,EAAM,CAE/B,IAAK,IAAM,KAAOA,EAAM,CACtB,IAAM5F,EAAQ,EAAO,GAErB,GAAIA,GAAS,OAAOA,GAAU,SAAU,CACtC,GAAI,CAAC,MAAM,QAAQA,EAAM,CAAE,MAAO,GAElC,IAAMU,EAA8CV,EAEpD,IAAK,IAAM,KAAQU,EACjB,GAAI,OAAO,GAAS,UAAY,OAAO,GAAS,SAC9C,MAAO,IAcf,MAPA,GAAI,aAAc,GAAS,MAAM,QAAQ,EAAM,SAAS,EAsB1D,SAAS,GAAY,EAAQ,EAAY,EAAK,EAAO,CACnD,IAAM,EAAOgI,EAAK5D,EAAQ,EAAI,CAE1B,EAGA,MAAU,KAEd,IAAI,OAAO,GAAU,SAAU,CAE7B,GAAI,OAAO,MAAM,EAAM,CAAE,OAEzB,EAAS,OAoBT,EAjBO,OAAO,GAAU,UACf,EAGF,OAAO,GAAU,SACpB,EAAK,eACE6D,EAAY,EAAM,CAClB,EAAK,eACLC,EAAY,EAAM,CAClB,EAAK,sBACLD,EAAYC,EAAY,EAAM,CAAC,KAAK,IAAI,CAAC,CAEzC,GAAe,EAAM,EAAK,SAAU,EAAM,CAE5C,MAAM,QAAQ,EAAM,CACpB,CAAC,GAAG,EAAM,CAEV,EAAK,WAAa,QAAU,GAAM,EAAM,CAAG,OAAO,EAAM,CAGnE,GAAI,MAAM,QAAQ,EAAO,CAAE,CAEzB,IAAM,EAAc,EAAE,CAEtB,IAAK,IAAM,KAAQ,EAEjB,EAAY,KAER,GAAe,EAAM,EAAK,SAAU,EAAK,CAE5C,CAGH,EAAS,EAIP,EAAK,WAAa,aAAe,MAAM,QAAQ,EAAW,UAAU,GAEtE,EAAS,EAAW,UAAU,OAC6B,EAC1D,EAGH,EAAW,EAAK,UAAY,GAW9B,SAAS,GAAS,EAAO,EAAO,CAC9B,GAAI,GAAU,KAA6B,GAEhC,OAAO,GAAU,UAAY,OAAO,GAAU,SACvD,EAAM,KAAK,CAAC,KAAM,OAAQ,MAAO,OAAO,GAAO,CAAC,SACvC,MAAM,QAAQ,EAAM,CAC7B,IAAK,IAAM,KAAS,EAClB,GAAS,EAAO,EAAM,SAEf,OAAO,GAAU,UAAY,SAAU,EAC5C,EAAM,OAAS,OACjB,GAAS,EAAO,EAAM,SAAS,CAE/B,EAAM,KAAK,EAAM,MAGnB,MAAU,MAAM,yCAA2C,EAAQ,IAAI,CAgB3E,SAAS,GAAe,EAAM,EAAM,EAAO,CACzC,GAAI,OAAO,GAAU,SAAU,CAC7B,GAAI,EAAK,QAAU,GAAS,CAAC,OAAO,MAAM,OAAO,EAAM,CAAC,CACtD,OAAO,OAAO,EAAM,CAGtB,IACG,EAAK,SAAW,EAAK,qBACrB,IAAU,IAAMxJ,EAAU,EAAM,GAAKA,EAAU,EAAK,EAErD,MAAO,GAIX,OAAO,EAWT,SAAS,GAAM,EAAQ,CAErB,IAAM,EAAS,EAAE,CAEjB,IAAK,GAAM,CAAC,EAAK,KAAU,OAAO,QAAQ,EAAO,CAC/C,EAAO,KAAK,CAAC,EAAK,EAAM,CAAC,KAAK,KAAK,CAAC,CAGtC,OAAO,EAAO,KAAK,KAAK,CAW1B,SAAS,GAAgB,EAAQ,CAE/B,IAAM,EAAS,IAAI,IAEnB,IAAK,IAAM,KAAS,EAClB,EAAO,IAAI,EAAM,aAAa,CAAE,EAAM,CAGxC,OAAO,ECtWT,MAAa,GAA2B,qeAwCvC,CCvBY,GAAI,GAAQ+D,EAAM,MAAM,CAIxB,GAAI,GAAQ0F,EAAK,IAAK,GAAyB,CCR5D,SAAgB,GAAS,EAAM,CAC7B,IAAM,EAAQ,OAAO,EAAK,CAOpB,EAAU,EAAE,CAElB,MAAO,CAAC,WAAU,UAAQ,CAG1B,SAAS,EAAQ,EAAQ,CACvB,GAAI,OAAO,GAAW,UAAY,EAAS,IAAM,GAAU,EAAM,OAAQ,CACvE,IAAIhK,EAAQ,EAEZ,OAAa,CACX,IAAI,EAAM,EAAQA,GAElB,GAAI,IAAQ,OAAW,CACrB,IAAM,EAAM,GAAK,EAAO,EAAQA,EAAQ,GAAG,CAC3C,EAAM,IAAQ,GAAK,EAAM,OAAS,EAAI,EAAM,EAC5C,EAAQA,GAAS,EAGnB,GAAI,EAAM,EACR,MAAO,CACL,KAAMA,EAAQ,EACd,OAAQ,GAAUA,EAAQ,EAAI,EAAQA,EAAQ,GAAK,GAAK,EACxD,SACD,CAGH,MAMN,SAAS,EAAS,EAAO,CACvB,GACEG,GACA,OAAOA,EAAM,MAAS,UACtB,OAAOA,EAAM,QAAW,UACxB,CAAC,OAAO,MAAMA,EAAM,KAAK,EACzB,CAAC,OAAO,MAAMA,EAAM,OAAO,CAC3B,CACA,KAAO,EAAQ,OAASA,EAAM,MAAM,CAClC,IAAM,EAAO,EAAQ,EAAQ,OAAS,GAChC,EAAM,GAAK,EAAO,EAAK,CACvB,EAAM,IAAQ,GAAK,EAAM,OAAS,EAAI,EAAM,EAClD,GAAI,IAAS,EAAK,MAClB,EAAQ,KAAK,EAAI,CAGnB,IAAM,GACHA,EAAM,KAAO,EAAI,EAAQA,EAAM,KAAO,GAAK,GAAKA,EAAM,OAAS,EAElE,GAAI,EAAS,EAAQA,EAAM,KAAO,GAAI,OAAO,IASnD,SAAS,GAAK,EAAO,EAAM,CACzB,IAAM,EAAK,EAAM,QAAQ,KAAM,EAAK,CAC9B,EAAK,EAAM,QAAQ;EAAM,EAAK,CAGpC,OAFI,IAAO,GAAW,EAClB,IAAO,IAAM,EAAK,IAAM,EAAW,EAChC,EAAK,EAAK,EAAK,ECtFxB,MAAa,GAAgB,CAC3B,KAAM,+BACN,OAAQ,qCACR,IAAK,6BACL,MAAO,+BACP,IAAK,uCACL,MAAO,gCACR,CCgBD,IAAMW,GAAM,EAAE,CAAC,eAGT,GAAQ,OAAO,UAYrB,SAAgB,GAAW,EAAM,EAAS,CACxC,IAAM,EAAW,GAAW,EAAE,CAE9B,OAAOW,GACL,CACE,KAAM,EAAS,MAAQ,OACvB,SAAU,GACV,OAAQ,EAAS,QAAU,MAAQuI,EAAM1F,EACzC,QAAS,EAAS,SAAW,GAC9B,CACD,EACD,CAaH,SAAS7C,GAAI,EAAO,EAAM,CAExB,IAAI,EAEJ,OAAQH,EAAK,SAAb,CACE,IAAK,WAAY,CACf,IAAM,EACJA,EAIF,MAFA,GAAS,CAAC,KAAM,UAAW,MAAO,EAAU,KAAK,CACjD,GAAM,EAAO,EAAW,EAAO,CACxB,EAGT,IAAK,YACL,IAAK,qBAAsB,CACzB,IAAM,EAEFA,EAEE,EACJ,SAAU,EACN,EAAU,OAAS,UAAY,EAAU,OAAS,iBAClD,GAQN,GANA,EAAS,CACP,KAAM,OACN,SAAUI,GAAI,EAAOJ,EAAK,WAAW,CACrC,KAAM,CAAC,cACR,CAEG,EAAM,MAAQ,EAAM,SAAU,CAChC,IAAMa,EAAW,OAAO,EAAM,KAAK,CAC7B,EAAM,GAASA,EAAS,CACxB,EAAQ,EAAI,QAAQ,EAAE,CACtB,EAAM,EAAI,QAAQA,EAAS,OAAO,CAIxC,EAAO,SAAW,CAAC,QAAO,MAAI,CAGhC,OAAO,EAGT,IAAK,gBAAiB,CACpB,IAAM,EACJb,EAIF,MAFA,GAAS,CAAC,KAAM,UAAU,CAC1B,GAAM,EAAO,EAAW,EAAO,CACxB,EAGT,IAAK,QAAS,CACZ,IAAM,EAA8DA,EAGpE,MAFA,GAAS,CAAC,KAAM,OAAQ,MAAO,EAAU,MAAM,CAC/C,GAAM,EAAO,EAAW,EAAO,CACxB,EAIT,QAGE,MADA,GAASK,GAAQ,EADkDL,EACjC,CAC3B,GAeb,SAASI,GAAI,EAAO,EAAO,CACzB,IAAI1B,EAAQ,GAEN,EAAU,EAAE,CAElB,KAAO,EAAEA,EAAQ,EAAM,QAAQ,CAE7B,IAAM,EAAqCyB,GAAI,EAAO,EAAMzB,GAAO,CACnE,EAAQ,KAAK,EAAO,CAGtB,OAAO,EAaT,SAAS2B,GAAQ,EAAO,EAAM,CAC5B,IAAMsE,EAAS,EAAM,OAErB,EAAM,OAAS3E,EAAK,eAAiB,GAAc,IAAM0I,EAAM1F,EAG/D,IAAItE,EAAQ,GAEN,EAAa,EAAE,CAErB,KAAO,EAAEA,EAAQsB,EAAK,MAAM,QAAQ,CAClC,IAAM,EAAYA,EAAK,MAAMtB,GACvB,GACH,EAAU,OAAS,EAAU,OAAS,IAAM,IAAM,EAAU,KAC1Dc,GAAI,KAAK,GAAO,EAAK,GACxB,EAAW,GAAQ,EAAU,OAMjC,IAAM,GADI,EAAM,OAAO,QAAU,MAAQ,GAAI,IAC5BQ,EAAK,QAAS,EAAYI,GAAI,EAAOJ,EAAK,WAAW,CAAC,CAIvE,GAHA,GAAM,EAAOA,EAAM,EAAO,CAGtB,EAAO,UAAY,WAAY,CACjC,IAAM,EAA8DA,EAC9D,EAAM,EAAU,mBAChB2I,EAAW,GAAO,EAAI,UAAY,GAAS,EAAI,SAAS,CACxDC,EAAS,GAAO,EAAI,QAAU,GAAS,EAAI,OAAO,CAGlDrH,EAA+BpB,GAAI,EAAO,EAAU,QAAQ,CAE9DwI,GAAYC,GAAU,EAAM,OAC9B,EAAQ,SAAW,CAAC,MAAOD,EAAS,IAAK,IAAKC,EAAO,MAAM,EAG7D,EAAO,QAAUrH,EAKnB,MAFA,GAAM,OAASoD,EAER,EAeT,SAASP,GAAM,EAAO,EAAM,EAAI,CAC9B,GAAI,uBAAwB,GAAQ,EAAK,oBAAsB,EAAM,KAAM,CACzE,IAAMxF,EAAW,GAAe,EAAO,EAAI,EAAK,mBAAmB,CAE/DA,IACF,EAAM,SAAW,GACjB,EAAG,SAAWA,IAiBpB,SAAS,GAAe,EAAO,EAAM,EAAU,CAC7C,IAAM,EAAS,GAASiK,EAAS,CAEjC,GAAI7I,EAAK,OAAS,UAAW,CAC3B,IAAM,EAAOA,EAAK,SAASA,EAAK,SAAS,OAAS,GAclD,GATE,GACA,CAAC6I,EAAS,QACV,GACA,EAAK,UACL,EAAK,SAAS,MAEd,EAAO,IAAM,OAAO,OAAO,EAAE,CAAE,EAAK,SAAS,IAAI,EAG/C,EAAM,QAAS,CAEjB,IAAM,EAAa,EAAE,CAEjB,EAEJ,GAAIA,EAAS,UACN,KAAOA,EAAS,MACfrJ,GAAI,KAAKqJ,EAAS,MAAO,EAAI,GAC/B,EAAWN,EAAK,EAAM,OAAQ,EAAI,CAAC,UAAY,GAC7CM,EAAS,MAAM,GAChB,EAKAA,EAAS,SAChB,IAAM,EAAU,GAASA,EAAS,SAAS,CACrC,EAAUA,EAAS,OAAS,GAASA,EAAS,OAAO,CAAG,OAExD,EAAO,CAAC,UAAQ,CAClB,IAAS,EAAK,QAAU,GAC5B,EAAK,WAAa,EAElB,EAAK,KAAO,CAAC,SAAU,EAAK,EAIhC,OAAO,EAWT,SAAS,GAAS,EAAK,CACrB,IAAM,EAAQ,GAAM,CAClB,KAAM,EAAI,UACV,OAAQ,EAAI,SACZ,OAAQ,EAAI,YACb,CAAC,CACI,EAAM,GAAM,CAChB,KAAM,EAAI,QACV,OAAQ,EAAI,OACZ,OAAQ,EAAI,UACb,CAAC,CAIF,OAAO,GAAS,EAAM,CAAC,QAAO,MAAI,CAAG,OAWvC,SAAS,GAAM,EAAO,CACpB,OAAOhK,EAAM,MAAQA,EAAM,OAASA,EAAQ,OCzU9C,IAAa,GAAb,KAAoB,CAOlB,YAAY,EAAU,EAAQ,EAAO,CACnC,KAAK,SAAW,EAChB,KAAK,OAAS,EACViK,IACF,KAAK,MAAQA,KAMnB,GAAO,UAAU,SAAW,EAAE,CAE9B,GAAO,UAAU,OAAS,EAAE,CAE5B,GAAO,UAAU,MAAQ,KCfzB,SAAgB,GAAM,EAAa,EAAO,CAExC,IAAM,EAAW,EAAE,CAEb,EAAS,EAAE,CACbpK,EAAQ,GAEZ,KAAO,EAAEA,EAAQ,EAAY,QAC3B,OAAO,OAAO,EAAU,EAAYA,GAAO,SAAS,CACpD,OAAO,OAAO,EAAQ,EAAYA,GAAO,OAAO,CAGlD,OAAO,IAAI,GAAO,EAAU,EAAQoK,EAAM,CCpB5C,SAAgB,GAAU,EAAO,CAC/B,OAAO,EAAM,aAAa,CCL5B,IAAa,GAAb,KAAkB,CAMhB,YAAY,EAAU,EAAW,CAE/B,KAAK,SAAW,EAEhB,KAAK,UAAY,IAKrB,GAAK,UAAU,MAAQ,KACvB,GAAK,UAAU,QAAU,GACzB,GAAK,UAAU,WAAa,GAC5B,GAAK,UAAU,kBAAoB,GACnC,GAAK,UAAU,OAAS,GACxB,GAAK,UAAU,eAAiB,GAChC,GAAK,UAAU,eAAiB,GAChC,GAAK,UAAU,sBAAwB,GACvC,GAAK,UAAU,gBAAkB,GACjC,GAAK,UAAU,QAAU,4JCxBrB,GAAS,EAEb,MAAa,EAAU,IAAW,CACrB,EAAa,IAAW,CACxB,GAAoB,IAAW,CAC/B,EAAS,IAAW,CACpB,EAAiB,IAAW,CAC5B,GAAiB,IAAW,CAC5B,GAAwB,IAAW,CAEhD,SAAS,IAAY,CACnB,MAAO,IAAK,EAAE,GCNhB,IAAM,GAAS,OAAO,KAAKC,GAAM,CAEpB,GAAb,cAAiC,EAAK,CAQpC,YAAY,EAAU,EAAW,EAAM,EAAO,CAC5C,IAAIrK,EAAQ,GAMZ,GAJA,MAAM,EAAU,EAAU,CAE1B,GAAK,KAAM,QAASoK,EAAM,CAEtB,OAAO,GAAS,SAClB,KAAO,EAAEpK,EAAQ,GAAO,QAAQ,CAC9B,IAAM,EAAQ,GAAOA,GACrB,GAAK,KAAM,GAAOA,IAAS,EAAOqK,GAAM,MAAYA,GAAM,GAAO,IAMzE,GAAY,UAAU,QAAU,GAOhC,SAAS,GAAK,EAAQ,EAAK,EAAO,CAC5B,IAEF,EAAO,GAAO,GCvBlB,IAAMvJ,GAAM,EAAE,CAAC,eAMf,SAAgB,GAAO,EAAY,CAEjC,IAAM,EAAW,EAAE,CAEb,EAAS,EAAE,CAEb,EAEJ,IAAK,KAAQiC,EAAW,WACtB,GAAIjC,GAAI,KAAKiC,EAAW,WAAY,EAAK,CAAE,CACzC,IAAM,EAAQA,EAAW,WAAW,GAC9B,EAAO,IAAI,GACf,EACAA,EAAW,UAAUA,EAAW,YAAc,EAAE,CAAE,EAAK,CACvD,EACAA,EAAW,MACZ,CAGCA,EAAW,iBACXA,EAAW,gBAAgB,SAAS,EAAK,GAEzC,EAAK,gBAAkB,IAGzB,EAAS,GAAQ,EAEjB,EAAO,GAAU,EAAK,EAAI,EAC1B,EAAO,GAAU,EAAK,UAAU,EAAI,EAIxC,OAAO,IAAI,GAAO,EAAU,EAAQA,EAAW,MAAM,CCtDvD,MAAa,GAAQ,GAAO,CAC1B,MAAO,QACP,UAAU,EAAG,EAAM,CACjB,MAAO,SAAW,EAAK,MAAM,EAAE,CAAC,aAAa,EAE/C,WAAY,CACV,aAAc,KACd,aAAc,KACd,UAAW,KACX,UAAW,KACX,UAAW,KACX,WAAY,KACZ,UAAW,MAEd,CAAC,CCdW,GAAM,GAAO,CACxB,MAAO,MACP,UAAU,EAAG,EAAM,CACjB,MAAO,OAAS,EAAK,MAAM,EAAE,CAAC,aAAa,EAE7C,WAAY,CAAC,QAAS,KAAM,QAAS,KAAM,SAAU,MACtD,CAAC,CCHF,SAAgB,GAAuB,EAAY,EAAW,CAC5D,OAAO,KAAa8F,EAAaA,EAAW,GAAa,ECC3D,SAAgB,GAAyB,EAAY,EAAU,CAC7D,OAAO,GAAuBA,EAAY,EAAS,aAAa,CAAC,CCLnE,MAAa,GAAQ,GAAO,CAC1B,MAAO,QACP,WAAY,CAAC,WAAY,cAAc,CACvC,UAAW,GACX,WAAY,CAAC,MAAO,KAAM,WAAY,MACvC,CAAC,CCLW,GAAO,GAAO,CACzB,UAAU,EAAG,EAAM,CACjB,OAAO,IAAS,OAAS,EAAO,QAAU,EAAK,MAAM,EAAE,CAAC,aAAa,EAEvE,WAAY,CACV,qBAAsB,KACtB,WAAY,EACZ,iBAAkB,KAClB,SAAU,EACV,YAAa,EACb,aAAc,EACd,aAAc,EACd,YAAa,EACb,aAAc,EACd,YAAa,KACb,gBAAiB,EACjB,YAAa,KACb,aAAc,EACd,eAAgB,EAChB,iBAAkB,KAClB,aAAc,EACd,WAAY,EACZ,YAAa,EACb,aAAc,KACd,WAAY,EACZ,YAAa,KACb,iBAAkB,KAClB,UAAW,KACX,eAAgB,EAChB,UAAW,EACX,SAAU,KACV,UAAW,EACX,cAAe,EACf,oBAAqB,EACrB,gBAAiB,KACjB,SAAU,EACV,gBAAiB,KACjB,aAAc,EACd,YAAa,EACb,aAAc,EACd,aAAc,KACd,aAAc,EACd,oBAAqB,EACrB,aAAc,EACd,aAAc,EACd,YAAa,EACb,aAAc,EACd,YAAa,EACb,SAAU,KACV,aAAc,EACd,aAAc,EACd,aAAc,EACd,cAAe,KACf,KAAM,MAET,CAAC,CC/CWvE,GAAO,GAAO,CACzB,MAAO,OACP,WAAY,CACV,cAAe,iBACf,UAAW,QACX,QAAS,MACT,UAAW,aACZ,CACD,UAAW,GACX,gBAAiB,CAAC,UAAW,WAAY,QAAS,WAAW,CAC7D,WAAY,CAEV,KAAM,KACN,OAAQ,GACR,cAAe,EACf,UAAW,EACX,OAAQ,KACR,MAAO,KACP,gBAAiB,EACjB,oBAAqB,EACrB,eAAgB,EAChB,IAAK,KACL,GAAI,KACJ,MAAO,EACP,eAAgB,KAChB,aAAc,EACd,UAAW,EACX,SAAU,EACV,SAAU,EACV,QAAS,KACT,QAAS,KACT,QAAS,EACT,KAAM,KACN,UAAW,EACX,KAAM,EACN,QAAS,KACT,QAAS,KACT,gBAAiB,EACjB,SAAU,EACV,aAAc,EACd,OAAQ,EAAS,GACjB,YAAa,KACb,KAAM,KACN,SAAU,KACV,SAAU,KACV,QAAS,EACT,MAAO,EACP,IAAK,KACL,QAAS,KACT,SAAU,EACV,SAAU,GACV,UAAW,EACX,QAAS,KACT,aAAc,KACd,cAAe,KACf,KAAM,KACN,WAAY,KACZ,YAAa,KACb,WAAY,KACZ,eAAgB,EAChB,WAAY,KACZ,QAAS,EACT,OAAQ,EACR,OAAQ,EACR,KAAM,EACN,KAAM,KACN,SAAU,KACV,QAAS,EACT,UAAW,EACX,GAAI,KACJ,WAAY,KACZ,YAAa,KACb,MAAO,EACP,UAAW,KACX,UAAW,KACX,GAAI,KACJ,MAAO,EACP,OAAQ,KACR,SAAU,EACV,QAAS,EACT,UAAW,EACX,SAAU,EACV,KAAM,KACN,MAAO,KACP,KAAM,KACN,SAAU,KACV,KAAM,KACN,QAAS,KACT,KAAM,EACN,IAAK,EACL,SAAU,KACV,IAAK,KACL,UAAW,EACX,MAAO,KACP,OAAQ,KACR,IAAK,KACL,UAAW,EACX,SAAU,EACV,MAAO,EACP,KAAM,KACN,MAAO,KACP,SAAU,EACV,WAAY,EACZ,QAAS,KACT,aAAc,KACd,WAAY,KACZ,cAAe,KACf,cAAe,KACf,eAAgB,KAChB,eAAgB,KAChB,OAAQ,KACR,SAAU,KACV,UAAW,KACX,iBAAkB,KAClB,SAAU,KACV,QAAS,KACT,QAAS,KACT,cAAe,KACf,cAAe,KACf,kBAAmB,KACnB,OAAQ,KACR,YAAa,KACb,MAAO,KACP,WAAY,KACZ,OAAQ,KACR,UAAW,KACX,YAAa,KACb,WAAY,KACZ,YAAa,KACb,WAAY,KACZ,YAAa,KACb,OAAQ,KACR,iBAAkB,KAClB,UAAW,KACX,QAAS,KACT,QAAS,KACT,QAAS,KACT,WAAY,KACZ,aAAc,KACd,QAAS,KACT,UAAW,KACX,UAAW,KACX,WAAY,KACZ,QAAS,KACT,iBAAkB,KAClB,OAAQ,KACR,aAAc,KACd,iBAAkB,KAClB,UAAW,KACX,YAAa,KACb,UAAW,KACX,eAAgB,KAChB,YAAa,KACb,aAAc,KACd,aAAc,KACd,YAAa,KACb,WAAY,KACZ,YAAa,KACb,UAAW,KACX,UAAW,KACX,SAAU,KACV,WAAY,KACZ,WAAY,KACZ,QAAS,KACT,QAAS,KACT,OAAQ,KACR,UAAW,KACX,WAAY,KACZ,WAAY,KACZ,aAAc,KACd,mBAAoB,KACpB,QAAS,KACT,SAAU,KACV,SAAU,KACV,YAAa,KACb,0BAA2B,KAC3B,SAAU,KACV,UAAW,KACX,SAAU,KACV,aAAc,KACd,UAAW,KACX,UAAW,KACX,SAAU,KACV,UAAW,KACX,aAAc,KACd,SAAU,KACV,qBAAsB,KACtB,SAAU,KACV,eAAgB,KAChB,UAAW,KACX,QAAS,KACT,KAAM,EACN,QAAS,EACT,QAAS,KACT,KAAM,EACN,YAAa,KACb,YAAa,EACb,QAAS,KACT,cAAe,KACf,oBAAqB,KACrB,OAAQ,KACR,QAAS,KACT,SAAU,EACV,eAAgB,KAChB,IAAK,EACL,SAAU,EACV,SAAU,EACV,KAAM,EACN,QAAS,EACT,QAAS,EACT,MAAO,KACP,OAAQ,EACR,SAAU,EACV,SAAU,EACV,mBAAoB,EACpB,yBAA0B,EAC1B,eAAgB,KAChB,MAAO,KACP,KAAM,EACN,MAAO,KACP,KAAM,KACN,KAAM,EACN,WAAY,EACZ,IAAK,KACL,OAAQ,KACR,QAAS,KACT,OAAQ,KACR,MAAO,EACP,KAAM,KACN,MAAO,KACP,SAAU,EACV,OAAQ,KACR,MAAO,KACP,UAAW,KACX,KAAM,KACN,cAAe,EACf,OAAQ,KACR,MAAO,EACP,MAAO,EACP,KAAM,KACN,mBAAoB,KAIpB,MAAO,KACP,MAAO,KACP,QAAS,EACT,KAAM,KACN,WAAY,KACZ,QAAS,KACT,OAAQ,EACR,YAAa,KACb,aAAc,EACd,YAAa,KACb,YAAa,KACb,KAAM,KACN,QAAS,KACT,QAAS,KACT,MAAO,KACP,KAAM,KACN,SAAU,KACV,SAAU,KACV,MAAO,KACP,QAAS,EACT,QAAS,EACT,MAAO,KACP,KAAM,KACN,MAAO,KACP,YAAa,KACb,OAAQ,EACR,WAAY,EACZ,KAAM,KACN,SAAU,KACV,OAAQ,KACR,aAAc,EACd,YAAa,EACb,SAAU,EACV,OAAQ,EACR,QAAS,EACT,OAAQ,EACR,OAAQ,KACR,QAAS,KACT,OAAQ,KACR,IAAK,KACL,YAAa,EACb,MAAO,KACP,OAAQ,KACR,UAAW,EACX,QAAS,KACT,QAAS,KACT,KAAM,KACN,UAAW,EACX,UAAW,KACX,QAAS,KACT,OAAQ,KACR,MAAO,KACP,OAAQ,EAGR,kBAAmB,KACnB,YAAa,KACb,SAAU,KACV,wBAAyB,EACzB,sBAAuB,EACvB,OAAQ,KACR,SAAU,KACV,QAAS,EACT,SAAU,KACV,aAAc,MAEjB,CAAC,CCvTW0F,GAAM,GAAO,CACxB,MAAO,MACP,WAAY,CACV,aAAc,gBACd,kBAAmB,qBACnB,WAAY,cACZ,cAAe,iBACf,UAAW,aACX,UAAW,QACX,SAAU,YACV,SAAU,YACV,mBAAoB,sBACpB,0BAA2B,8BAC3B,aAAc,gBACd,eAAgB,kBAChB,YAAa,cACb,SAAU,WACV,iBAAkB,oBAClB,iBAAkB,oBAClB,YAAa,eACb,SAAU,YACV,WAAY,cACZ,aAAc,gBACd,WAAY,cACZ,SAAU,YACV,eAAgB,mBAChB,YAAa,eACb,UAAW,aACX,YAAa,eACb,WAAY,cACZ,UAAW,aACX,2BAA4B,+BAC5B,yBAA0B,6BAC1B,SAAU,WACV,UAAW,cACX,aAAc,iBACd,aAAc,iBACd,eAAgB,kBAChB,cAAe,iBACf,cAAe,iBACf,UAAW,aACX,UAAW,aACX,YAAa,eACb,QAAS,WACT,YAAa,gBACb,aAAc,iBACd,QAAS,WACT,QAAS,WACT,QAAS,WACT,SAAU,YACV,MAAO,SACP,UAAW,cACX,WAAY,eACZ,QAAS,UACT,WAAY,aACZ,aAAc,eACd,cAAe,gBACf,QAAS,UACT,SAAU,WACV,UAAW,YACX,iBAAkB,mBAClB,SAAU,WACV,QAAS,UACT,QAAS,UACT,OAAQ,SACR,YAAa,cACb,MAAO,QACP,WAAY,aACZ,OAAQ,SACR,UAAW,YACX,YAAa,cACb,WAAY,aACZ,YAAa,cACb,WAAY,aACZ,YAAa,cACb,OAAQ,SACR,iBAAkB,mBAClB,UAAW,YACX,MAAO,QACP,QAAS,UACT,QAAS,UACT,QAAS,UACT,UAAW,YACX,WAAY,aACZ,aAAc,eACd,QAAS,UACT,UAAW,YACX,UAAW,YACX,WAAY,aACZ,QAAS,UACT,OAAQ,SACR,aAAc,eACd,iBAAkB,mBAClB,YAAa,cACb,UAAW,YACX,YAAa,cACb,aAAc,eACd,aAAc,eACd,YAAa,cACb,WAAY,aACZ,YAAa,cACb,UAAW,YACX,aAAc,eACd,UAAW,YACX,SAAU,WACV,WAAY,aACZ,WAAY,aACZ,QAAS,UACT,QAAS,UACT,OAAQ,SACR,UAAW,YACX,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,SAAU,WACV,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,UAAW,YACX,SAAU,WACV,OAAQ,SACR,UAAW,YACX,UAAW,YACX,SAAU,WACV,UAAW,YACX,aAAc,eACd,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,UAAW,YACX,OAAQ,SACR,iBAAkB,oBAClB,kBAAmB,qBACnB,WAAY,cACZ,QAAS,WACT,cAAe,iBACf,eAAgB,iBAChB,gBAAiB,mBACjB,eAAgB,kBAChB,UAAW,aACX,YAAa,eACb,sBAAuB,yBACvB,uBAAwB,0BACxB,gBAAiB,mBACjB,iBAAkB,oBAClB,cAAe,iBACf,eAAgB,kBAChB,iBAAkB,oBAClB,cAAe,iBACf,YAAa,eACb,SAAU,WACV,WAAY,cACZ,eAAgB,kBAChB,cAAe,iBACf,gBAAiB,mBACjB,OAAQ,SACR,kBAAmB,qBACnB,mBAAoB,sBACpB,YAAa,eACb,aAAc,gBACd,WAAY,eACZ,YAAa,eACb,SAAU,YACV,aAAc,gBACd,cAAe,iBACf,aAAc,gBACd,SAAU,aACV,YAAa,gBACb,YAAa,gBACb,YAAa,eACb,YAAa,eACb,QAAS,WAET,cAAe,gBACf,cAAe,gBAChB,CACD,UAAW,GACX,WAAY,CACV,MAAO,GACP,aAAc,EACd,WAAY,KACZ,SAAU,KACV,kBAAmB,KACnB,WAAY,EACZ,UAAW,EACX,WAAY,KACZ,OAAQ,EACR,cAAe,KACf,cAAe,KACf,QAAS,EACT,UAAW,KACX,cAAe,KACf,cAAe,KACf,YAAa,KACb,KAAM,KACN,MAAO,KACP,KAAM,EACN,GAAI,KACJ,SAAU,KACV,UAAW,EACX,UAAW,EACX,KAAM,KACN,SAAU,KACV,cAAe,KACf,SAAU,KACV,MAAO,KACP,mBAAoB,KACpB,0BAA2B,KAC3B,aAAc,KACd,eAAgB,KAChB,QAAS,KACT,kBAAmB,KACnB,iBAAkB,KAClB,YAAa,KACb,OAAQ,KACR,GAAI,KACJ,GAAI,KACJ,EAAG,KACH,SAAU,KACV,cAAe,KACf,QAAS,EACT,gBAAiB,EACjB,UAAW,KACX,QAAS,KACT,IAAK,KACL,QAAS,EACT,iBAAkB,KAClB,SAAU,EACV,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,SAAU,KACV,UAAW,EACX,iBAAkB,KAClB,IAAK,KACL,MAAO,KACP,SAAU,EACV,0BAA2B,KAC3B,KAAM,KACN,YAAa,EACb,SAAU,KACV,OAAQ,KACR,UAAW,KACX,YAAa,KACb,WAAY,KACZ,aAAc,KACd,UAAW,KACX,eAAgB,KAChB,WAAY,KACZ,SAAU,KACV,eAAgB,KAChB,YAAa,KACb,UAAW,KACX,YAAa,KACb,WAAY,KACZ,OAAQ,KACR,GAAI,KACJ,KAAM,KACN,GAAI,KACJ,GAAI,KACJ,GAAI,GACJ,GAAI,GACJ,UAAW,GACX,2BAA4B,KAC5B,yBAA0B,KAC1B,SAAU,KACV,kBAAmB,KACnB,cAAe,KACf,QAAS,KACT,QAAS,EACT,kBAAmB,KACnB,WAAY,KACZ,OAAQ,KACR,KAAM,KACN,SAAU,KACV,UAAW,EACX,aAAc,EACd,aAAc,EACd,GAAI,KACJ,YAAa,EACb,eAAgB,KAChB,kBAAmB,KACnB,GAAI,KACJ,IAAK,KACL,UAAW,EACX,EAAG,EACH,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,aAAc,GACd,iBAAkB,KAClB,UAAW,KACX,WAAY,KACZ,SAAU,KACV,QAAS,KACT,KAAM,KACN,aAAc,KACd,cAAe,KACf,cAAe,KACf,kBAAmB,EACnB,MAAO,KACP,UAAW,KACX,UAAW,KACX,YAAa,KACb,aAAc,KACd,YAAa,KACb,YAAa,KACb,KAAM,KACN,iBAAkB,KAClB,UAAW,KACX,aAAc,KACd,IAAK,KACL,MAAO,KACP,uBAAwB,KACxB,sBAAuB,KACvB,UAAW,EACX,UAAW,KACX,OAAQ,KACR,IAAK,KACL,KAAM,KACN,KAAM,KACN,QAAS,KACT,YAAa,KACb,aAAc,KACd,QAAS,KACT,QAAS,KACT,QAAS,KACT,SAAU,KACV,MAAO,KACP,UAAW,KACX,WAAY,KACZ,WAAY,KACZ,SAAU,KACV,OAAQ,KACR,QAAS,KACT,WAAY,KACZ,aAAc,KACd,cAAe,KACf,QAAS,KACT,SAAU,KACV,UAAW,KACX,iBAAkB,KAClB,SAAU,KACV,QAAS,KACT,QAAS,KACT,OAAQ,KACR,YAAa,KACb,MAAO,KACP,WAAY,KACZ,OAAQ,KACR,UAAW,KACX,YAAa,KACb,WAAY,KACZ,YAAa,KACb,WAAY,KACZ,YAAa,KACb,OAAQ,KACR,iBAAkB,KAClB,UAAW,KACX,MAAO,KACP,QAAS,KACT,QAAS,KACT,QAAS,KACT,UAAW,KACX,WAAY,KACZ,aAAc,KACd,QAAS,KACT,UAAW,KACX,UAAW,KACX,WAAY,KACZ,QAAS,KACT,OAAQ,KACR,aAAc,KACd,iBAAkB,KAClB,YAAa,KACb,UAAW,KACX,YAAa,KACb,aAAc,KACd,aAAc,KACd,YAAa,KACb,WAAY,KACZ,YAAa,KACb,UAAW,KACX,aAAc,KACd,UAAW,KACX,SAAU,KACV,WAAY,KACZ,WAAY,KACZ,QAAS,KACT,QAAS,KACT,OAAQ,KACR,UAAW,KACX,WAAY,KACZ,WAAY,KACZ,aAAc,KACd,SAAU,KACV,QAAS,KACT,SAAU,KACV,SAAU,KACV,SAAU,KACV,UAAW,KACX,SAAU,KACV,OAAQ,KACR,UAAW,KACX,UAAW,KACX,SAAU,KACV,UAAW,KACX,aAAc,KACd,SAAU,KACV,SAAU,KACV,eAAgB,KAChB,UAAW,KACX,OAAQ,KACR,QAAS,KACT,SAAU,KACV,MAAO,KACP,OAAQ,KACR,YAAa,KACb,OAAQ,KACR,SAAU,KACV,QAAS,KACT,iBAAkB,EAClB,kBAAmB,EACnB,WAAY,KACZ,QAAS,KACT,KAAM,KACN,WAAY,EACZ,oBAAqB,KACrB,iBAAkB,KAClB,aAAc,KACd,MAAO,KACP,KAAM,EACN,MAAO,KACP,cAAe,KACf,cAAe,KACf,OAAQ,KACR,UAAW,EACX,UAAW,EACX,UAAW,EACX,cAAe,KACf,oBAAqB,KACrB,eAAgB,KAChB,UAAW,KACX,SAAU,GACV,EAAG,KACH,OAAQ,KACR,eAAgB,KAChB,KAAM,KACN,KAAM,KACN,IAAK,GACL,IAAK,GACL,gBAAiB,KACjB,YAAa,KACb,UAAW,KACX,mBAAoB,GACpB,iBAAkB,GAClB,cAAe,GACf,gBAAiB,GACjB,SAAU,KACV,QAAS,KACT,OAAQ,KACR,OAAQ,KACR,GAAI,KACJ,GAAI,KACJ,MAAO,KACP,KAAM,KACN,eAAgB,KAChB,KAAM,KACN,MAAO,KACP,aAAc,KACd,iBAAkB,EAClB,iBAAkB,EAClB,aAAc,KACd,QAAS,KACT,YAAa,KACb,aAAc,KACd,MAAO,KACP,MAAO,KACP,YAAa,KACb,UAAW,KACX,YAAa,KACb,sBAAuB,EACvB,uBAAwB,EACxB,OAAQ,KACR,OAAQ,KACR,gBAAiB,GACjB,iBAAkB,KAClB,cAAe,KACf,eAAgB,KAChB,iBAAkB,EAClB,cAAe,EACf,YAAa,KACb,MAAO,KACP,aAAc,EACd,aAAc,KACd,oBAAqB,KACrB,WAAY,KACZ,cAAe,KACf,qBAAsB,KACtB,eAAgB,GAChB,SAAU,EACV,YAAa,KACb,OAAQ,KACR,QAAS,EACT,QAAS,EACT,WAAY,KACZ,eAAgB,KAChB,cAAe,KACf,WAAY,KACZ,cAAe,KACf,MAAO,KACP,kBAAmB,KACnB,KAAM,KACN,OAAQ,GACR,GAAI,KACJ,UAAW,KACX,gBAAiB,KACjB,GAAI,KACJ,GAAI,KACJ,kBAAmB,EACnB,mBAAoB,EACpB,QAAS,KACT,YAAa,KACb,aAAc,KACd,WAAY,EACZ,OAAQ,KACR,YAAa,EACb,cAAe,EACf,aAAc,KACd,SAAU,EACV,aAAc,EACd,QAAS,KACT,SAAU,EACV,YAAa,EACb,YAAa,EACb,QAAS,KACT,WAAY,KACZ,WAAY,KACZ,MAAO,KACP,OAAQ,KACR,YAAa,KACb,YAAa,KACb,EAAG,KACH,GAAI,KACJ,GAAI,KACJ,iBAAkB,KAClB,QAAS,EACT,EAAG,KACH,GAAI,KACJ,GAAI,KACJ,iBAAkB,KAClB,EAAG,KACH,WAAY,MAEf,CAAC,CC9iBF,IAAM,GAAQ,kBACR,GAAO,UACP,GAAM,SAOZ,SAAgB,GAAK,EAAQ,EAAO,CAClC,IAAM,EAAS,GAAU,EAAM,CAC3B,EAAO,EACP,EAAO,GAEX,GAAI,KAAU/D,EAAO,OACnB,OAAOA,EAAO,SAASA,EAAO,OAAO,IAGvC,GAAI,EAAO,OAAS,GAAK,EAAO,MAAM,EAAG,EAAE,GAAK,QAAU,GAAM,KAAK,EAAM,CAAE,CAE3E,GAAI,EAAM,OAAO,EAAE,GAAK,IAAK,CAE3B,IAAM,EAAO,EAAM,MAAM,EAAE,CAAC,QAAQ,GAAM,GAAU,CACpD,EAAO,OAAS,EAAK,OAAO,EAAE,CAAC,aAAa,CAAG,EAAK,MAAM,EAAE,KACvD,CAEL,IAAM,EAAO,EAAM,MAAM,EAAE,CAE3B,GAAI,CAAC,GAAK,KAAK,EAAK,CAAE,CACpB,IAAI,EAAS,EAAK,QAAQ,GAAK,GAAM,CAEjC,EAAO,OAAO,EAAE,GAAK,MACvB,EAAS,IAAM,GAGjB,EAAQ,OAAS,GAIrB,EAAO,GAGT,OAAO,IAAI,EAAK,EAAM,EAAM,CAO9B,SAAS,GAAM,EAAI,CACjB,MAAO,IAAM,EAAG,aAAa,CAO/B,SAAS,GAAU,EAAI,CACrB,OAAO,EAAG,OAAO,EAAE,CAAC,aAAa,CClDnC,MAAa3B,GAAO,GAAM,CAAC,GAAK,GAAO,GAAO,GAAMgG,GAAS,CAAE,OAAO,CACzD,GAAM,GAAM,CAAC,GAAK,GAAO,GAAO,GAAMC,GAAQ,CAAE,MAAM,CC4BnE,IAAM,GAAe,EAAE,CAEjBzJ,GAAM,EAAE,CAAC,eAET,GAAM,EAAO,OAAQ,CAAC,SAAU,CAAC,QAAM,WAAS,QAAM,WAAS,WAAQ,CAAC,CAAC,CAY/E,SAAgB,GAAS,EAAM,EAAS,CAEtC,IAAMsJ,GADW,GAAW,IACL,MACvB,OAAO,GAAI,EAAMA,IAAU,MAAQ,GAAM9F,GAAK,CAWhD,SAASW,GAAK,EAAM,EAAQ,CAE1B,IAAM,EAAS,CACb,SAAU,YAEV,MAAO3D,EAAK,MAAQ,EAAE,EAAE,WAAa,SAAW,YAChD,WAAY,GACb,CAGD,MAFA,GAAO,WAAaI,GAAIJ,EAAK,SAAU,EAAQ2E,EAAO,CACtD,GAAM3E,EAAM,EAAO,CACZ,EAWT,SAAS,GAAS,EAAM,EAAQ,CAE9B,IAAM,EAAS,CAAC,SAAU,qBAAsB,WAAY,GAAG,CAG/D,MAFA,GAAO,WAAaI,GAAIJ,EAAK,SAAU,EAAQ2E,EAAO,CACtD,GAAM3E,EAAM,EAAO,CACZ,EAST,SAASkJ,GAAQ,EAAM,CAErB,IAAM,EAAS,CACb,SAAU,gBACV,KAAM,OACN,SAAU,GACV,SAAU,GACV,WAAY,KACb,CAGD,OADA,GAAMlJ,EAAM,EAAO,CACZ,EAST,SAASgB,GAAK,EAAM,CAElB,IAAM,EAAS,CACb,SAAU,QACV,MAAOhB,EAAK,MACZ,WAAY,KACb,CAED,OADA,GAAMA,EAAM,EAAO,CACZ,EAST,SAAS2B,GAAQ,EAAM,CAErB,IAAM,EAAS,CACb,SAAU,WACV,KAAM3B,EAAK,MACX,WAAY,KACb,CAID,OAFA,GAAMA,EAAM,EAAO,CAEZ,EAWT,SAASK,GAAQ,EAAM,EAAQ,CAC7B,IAAM,EAAesE,EACjB,EAAgB,EAGlB3E,EAAK,OAAS,WACdA,EAAK,QAAQ,aAAa,GAAK,OAC/B,EAAa,QAAU,SAEvB,EAAgB,IAIlB,IAAM,EAAQ,EAAE,CAEZ,EAEJ,GAAIA,EAAK,gBACF,KAAQA,EAAK,WAChB,GAAI,IAAS,YAAcR,GAAI,KAAKQ,EAAK,WAAY,EAAK,CAAE,CAC1D,IAAM4D,EAAS,GACb,EACA,EACA5D,EAAK,WAAW,GACjB,CAEG4D,GACF,EAAM,KAAKA,EAAO,EAM1B,IAAMkF,EAAQ,EAAc,MAKtB,EAAS,CACb,SAAU9I,EAAK,QACf,QAASA,EAAK,QACd,QAEA,aAAc,GAAc8I,GAC5B,WAAY,EAAE,CACd,WAAY,KACb,CASD,MARA,GAAO,WAAa1I,GAAIJ,EAAK,SAAU,EAAQ,EAAc,CAC7D,GAAMA,EAAM,EAAO,CAEfA,EAAK,UAAY,YAAcA,EAAK,UAEtC,EAAO,QAAU,GAASA,EAAK,QAAS,EAAc,EAGjD,EAeT,SAAS,GAAe,EAAQ,EAAM,EAAO,CAC3C,IAAM,EAAO,GAAK2E,EAAQ,EAAK,CAG/B,GACE,IAAU,IACV,GAAU,MAET,OAAO,GAAU,UAAY,OAAO,MAAM,EAAM,EAChD,CAAC,GAAS,EAAK,QAEhB,OAGE,MAAM,QAAQ,EAAM,GAGtB,EAAQ,EAAK,eAAiBwE,EAAO,EAAM,CAAGC,EAAO,EAAM,EAI7D,IAAM,EAAY,CAChB,KAAM,EAAK,UACX,MAAO,IAAU,GAAO,GAAK,OAAO,GACrC,CAED,GAAI,EAAK,OAAS,EAAK,QAAU,QAAU,EAAK,QAAU,MAAO,CAC/D,IAAM1K,EAAQ,EAAU,KAAK,QAAQ,IAAI,CAErCA,EAAQ,EACV,EAAU,OAAS,IAEnB,EAAU,KAAO,EAAU,KAAK,MAAMA,EAAQ,EAAE,CAChD,EAAU,OAAS,EAAK,UAAU,MAAM,EAAGA,EAAM,EAGnD,EAAU,UAAY,GAAc,EAAK,OAG3C,OAAO,EAeT,SAAS0B,GAAI,EAAU,EAAY,EAAQ,CACzC,IAAI1B,EAAQ,GAEN,EAAU,EAAE,CAElB,GAAI,EACF,KAAO,EAAEA,EAAQ,EAAS,QAAQ,CAEhC,IAAM,EAAQ,GAAI,EAASA,GAAQiG,EAAO,CAE1C,EAAM,WAAa,EAEnB,EAAQ,KAAK,EAAM,CAIvB,OAAO,EAaT,SAAS,GAAM,EAAM,EAAI,CACvB,IAAM/F,EAAW,EAAK,SAElBA,GAAYA,EAAS,OAASA,EAAS,MAC3BA,EAAS,MAAM,OACfA,EAAS,IAAI,OAE3B,EAAG,mBAAqB,CACtB,UAAWA,EAAS,MAAM,KAC1B,SAAUA,EAAS,MAAM,OACzB,YAAaA,EAAS,MAAM,OAC5B,QAASA,EAAS,IAAI,KACtB,OAAQA,EAAS,IAAI,OACrB,UAAWA,EAAS,IAAI,OACzB,EC/UL,IAAM,GAAwB,IAAI,IAAI,CAClC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC9E,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACxE,QAAS,QAAS,QACrB,CAAC,CAES,GACV,SAAU,EAAa,CACpB,EAAY,EAAY,IAAS,IAAM,MACvC,EAAY,EAAY,KAAU,GAAK,OACvC,EAAY,EAAY,WAAgB,GAAK,aAC7C,EAAY,EAAY,gBAAqB,IAAM,kBACnD,EAAY,EAAY,UAAe,IAAM,YAC7C,EAAY,EAAY,UAAe,IAAM,YAC7C,EAAY,EAAY,MAAW,IAAM,QACzC,EAAY,EAAY,iBAAsB,IAAM,mBACpD,EAAY,EAAY,eAAoB,IAAM,iBAClD,EAAY,EAAY,UAAe,IAAM,YAC7C,EAAY,EAAY,WAAgB,IAAM,aAC9C,EAAY,EAAY,aAAkB,IAAM,eAChD,EAAY,EAAY,QAAa,IAAM,UAC3C,EAAY,EAAY,QAAa,IAAM,UAC3C,EAAY,EAAY,QAAa,IAAM,UAC3C,EAAY,EAAY,UAAe,IAAM,YAC7C,EAAY,EAAY,eAAoB,IAAM,iBAClD,EAAY,EAAY,YAAiB,IAAM,cAC/C,EAAY,EAAY,kBAAuB,IAAM,oBACrD,EAAY,EAAY,cAAmB,IAAM,gBACjD,EAAY,EAAY,gBAAqB,IAAM,kBACnD,EAAY,EAAY,gBAAqB,IAAM,kBACnD,EAAY,EAAY,qBAA0B,IAAM,uBACxD,EAAY,EAAY,aAAkB,IAAM,eAChD,EAAY,EAAY,cAAmB,IAAM,gBACjD,EAAY,EAAY,cAAmB,KAAO,kBACnD,CAAgB,GAAc,EAAE,CAAE,CACrC,MAAa,GAAY,CACrB,UAAW,KACX,YAAa,UACb,QAAS,UACT,OAAQ,SACR,OAAQ,SACR,OAAQ,SACX,CAED,SAAgB,GAAY,EAAI,CAC5B,OAAO,GAAM,OAAS,GAAM,MAEhC,SAAgB,GAAgB,EAAI,CAChC,OAAO,GAAM,OAAS,GAAM,MAEhC,SAAgB,GAA0B,EAAK,EAAK,CAChD,OAAQ,EAAM,OAAS,KAAO,KAAO,EAGzC,SAAgB,GAAmB,EAAI,CACnC,OAAS,IAAO,IAAQ,IAAO,IAAQ,IAAO,IAAQ,IAAO,GAAQ,IAAO,IAAQ,GAAM,GAAQ,GAAM,IACnG,GAAM,KAAQ,GAAM,IAE7B,SAAgB,GAAqB,EAAI,CACrC,OAAQ,GAAM,OAAS,GAAM,OAAU,GAAsB,IAAI,EAAG,CC5DxE,IAAW,GACV,SAAU,EAAK,CACZ,EAAI,8BAAmC,oCACvC,EAAI,0BAA+B,+BACnC,EAAI,uBAA4B,4BAChC,EAAI,8CAAmD,wDACvD,EAAI,qBAA0B,0BAC9B,EAAI,0BAA+B,gCACnC,EAAI,uBAA4B,4BAChC,EAAI,wBAA6B,4BACjC,EAAI,uCAA4C,+CAChD,EAAI,+BAAoC,sCACxC,EAAI,wCAA6C,+CACjD,EAAI,kBAAuB,uBAC3B,EAAI,mCAAwC,yCAC5C,EAAI,+BAAoC,oCACxC,EAAI,wCAA6C,8CACjD,EAAI,gDAAqD,uDACzD,EAAI,4CAAiD,mDACrD,EAAI,iBAAsB,sBAC1B,EAAI,SAAc,aAClB,EAAI,sBAA2B,0BAC/B,EAAI,mCAAwC,wCAC5C,EAAI,2CAAgD,kDACpD,EAAI,0DAA+D,mEACnE,EAAI,2CAAgD,kDACpD,EAAI,0CAA+C,iDACnD,EAAI,0CAA+C,iDACnD,EAAI,+BAAoC,oCACxC,EAAI,+BAAoC,oCACxC,EAAI,8BAAmC,mCACvC,EAAI,8BAAmC,mCACvC,EAAI,mBAAwB,wBAC5B,EAAI,yBAA8B,6BAClC,EAAI,+BAAoC,uCACxC,EAAI,aAAkB,iBACtB,EAAI,cAAmB,iBACvB,EAAI,4BAAiC,kCACrC,EAAI,aAAkB,iBACtB,EAAI,yBAA8B,6BAClC,EAAI,WAAgB,eACpB,EAAI,2CAAgD,mDACpD,EAAI,uBAA4B,2BAChC,EAAI,4BAAiC,gCACrC,EAAI,sCAA2C,4CAC/C,EAAI,0BAA+B,8BACnC,EAAI,+BAAoC,mCACxC,EAAI,mCAAwC,yCAC5C,EAAI,mBAAwB,uBAC5B,EAAI,yCAA8C,gDAClD,EAAI,mBAAwB,sBAC5B,EAAI,qBAA0B,yBAC9B,EAAI,eAAoB,kBACxB,EAAI,iBAAsB,oBAC1B,EAAI,iCAAsC,wCAC1C,EAAI,sCAA2C,8CAC/C,EAAI,kCAAuC,yCAC3C,EAAI,yBAA8B,+BAClC,EAAI,0BAA+B,+BACnC,EAAI,gCAAqC,uCACzC,EAAI,qBAA0B,0BAC9B,EAAI,mCAAwC,8CAC7C,CAAQ,GAAM,EAAE,CAAE,CC3DrB,IAAM,GAA2B,MAIpB,GAAb,KAA0B,CACtB,YAAY,EAAS,CACjB,KAAK,QAAU,EACf,KAAK,KAAO,GACZ,KAAK,IAAM,GAEX,KAAK,WAAa,GAClB,KAAK,SAAW,EAAE,CAClB,KAAK,gBAAkB,GACvB,KAAK,iBAAmB,GACxB,KAAK,cAAgB,GACrB,KAAK,gBAAkB,GACvB,KAAK,MAAQ,GACb,KAAK,aAAe,EACpB,KAAK,kBAAoB,EACzB,KAAK,KAAO,EAEZ,KAAK,cAAgB,GAGzB,IAAI,KAAM,CACN,OAAO,KAAK,IAAM,KAAK,aAAe,OAAO,KAAK,aAAe,KAAK,IAAI,CAE9E,IAAI,QAAS,CACT,OAAO,KAAK,kBAAoB,KAAK,IAEzC,SAAS,EAAM,EAAU,CACrB,GAAM,CAAE,OAAM,MAAK,UAAW,KACxB,EAAW,EAAM,EACjB,EAAc,EAAS,EAC7B,MAAO,CACH,OACA,UAAW,EACX,QAAS,EACT,WACA,OAAQ,EACR,cACA,UAAW,EACd,CAEL,KAAK,EAAM,CACH,KAAK,QAAQ,cAAgB,KAAK,gBAAkB,KAAK,SACzD,KAAK,cAAgB,KAAK,OAC1B,KAAK,QAAQ,aAAa,KAAK,SAASI,EAAM,EAAE,CAAC,EAGzD,SAAU,CACN,KAAK,SAAS,KAAK,KAAK,WAAW,CACnC,KAAK,WAAa,KAAK,IAE3B,kBAAkB,EAAI,CAElB,GAAI,KAAK,MAAQ,KAAK,KAAK,OAAS,EAAG,CACnC,IAAM,EAAS,KAAK,KAAK,WAAW,KAAK,IAAM,EAAE,CACjD,GAAI,GAAgB,EAAO,CAKvB,MAHA,MAAK,MAEL,KAAK,SAAS,CACP,GAA0B,EAAI,EAAO,SAI3C,CAAC,KAAK,iBAEX,MADA,MAAK,cAAgB,GACd6E,EAAE,IAIb,OADA,KAAK,KAAK,EAAI,uBAAuB,CAC9B,EAEX,qBAAsB,CAClB,OAAO,KAAK,IAAM,KAAK,gBAE3B,iBAAkB,CACV,KAAK,qBAAqB,GAC1B,KAAK,KAAO,KAAK,KAAK,UAAU,KAAK,IAAI,CACzC,KAAK,cAAgB,KAAK,IAC1B,KAAK,mBAAqB,KAAK,IAC/B,KAAK,IAAM,EACX,KAAK,WAAa,GAClB,KAAK,SAAS,OAAS,GAG/B,MAAM,EAAO,EAAa,CAClB,KAAK,KAAK,OAAS,EACnB,KAAK,MAAQ,EAGb,KAAK,KAAO,EAEhB,KAAK,cAAgB,GACrB,KAAK,iBAAmB,EAE5B,uBAAuB,EAAO,CAC1B,KAAK,KAAO,KAAK,KAAK,UAAU,EAAG,KAAK,IAAM,EAAE,CAAG,EAAQ,KAAK,KAAK,UAAU,KAAK,IAAM,EAAE,CAC5F,KAAK,cAAgB,GAEzB,WAAW,EAAS,EAAe,CAE/B,GAAI,KAAK,IAAM,EAAQ,OAAS,KAAK,KAAK,OAEtC,MADA,MAAK,cAAgB,CAAC,KAAK,iBACpB,GAEX,GAAI,EACA,OAAO,KAAK,KAAK,WAAW,EAAS,KAAK,IAAI,CAElD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAEhC,IADW,KAAK,KAAK,WAAW,KAAK,IAAM,EAAE,CAAG,MACrC,EAAQ,WAAW,EAAE,CAC5B,MAAO,GAGf,MAAO,GAEX,KAAK,EAAQ,CACT,IAAM,EAAM,KAAK,IAAM,EACvB,GAAI,GAAO,KAAK,KAAK,OAEjB,MADA,MAAK,cAAgB,CAAC,KAAK,iBACpBA,EAAE,IAEb,IAAM7E,EAAO,KAAK,KAAK,WAAW,EAAI,CACtC,OAAOA,IAAS6E,EAAE,gBAAkBA,EAAE,UAAY7E,EAEtD,SAAU,CAQN,GAPA,KAAK,MAED,KAAK,QACL,KAAK,MAAQ,GACb,KAAK,OACL,KAAK,aAAe,KAAK,KAEzB,KAAK,KAAO,KAAK,KAAK,OAEtB,MADA,MAAK,cAAgB,CAAC,KAAK,iBACpB6E,EAAE,IAEb,IAAI,EAAK,KAAK,KAAK,WAAW,KAAK,IAAI,CAkCvC,OAhCI,IAAOA,EAAE,iBACT,KAAK,MAAQ,GACb,KAAK,gBAAkB,GAChBA,EAAE,WAIT,IAAOA,EAAE,YACT,KAAK,MAAQ,GACT,KAAK,kBAEL,KAAK,OACL,KAAK,gBAAkB,GACvB,KAAK,SAAS,CACP,KAAK,SAAS,GAG7B,KAAK,gBAAkB,GACnB,GAAY,EAAG,GACf,EAAK,KAAK,kBAAkB,EAAG,EAKR,KAAK,QAAQ,eAAiB,MACpD,EAAK,IAAQ,EAAK,KACnB,IAAOA,EAAE,WACT,IAAOA,EAAE,iBACR,EAAK,KAAQ,EAAK,OAEnB,KAAK,+BAA+B,EAAG,CAEpC,GAEX,+BAA+B,EAAI,CAC3B,GAAmB,EAAG,CACtB,KAAK,KAAK,EAAI,8BAA8B,CAEvC,GAAqB,EAAG,EAC7B,KAAK,KAAK,EAAI,0BAA0B,CAGhD,QAAQ,EAAO,CAEX,IADA,KAAK,KAAO,EACL,KAAK,IAAM,KAAK,YACnB,KAAK,WAAa,KAAK,SAAS,KAAK,CACrC,KAAK,MAET,KAAK,MAAQ,KCjMV,GACV,SAAU,EAAW,CAClB,EAAU,EAAU,UAAe,GAAK,YACxC,EAAU,EAAU,eAAoB,GAAK,iBAC7C,EAAU,EAAU,qBAA0B,GAAK,uBACnD,EAAU,EAAU,UAAe,GAAK,YACxC,EAAU,EAAU,QAAa,GAAK,UACtC,EAAU,EAAU,QAAa,GAAK,UACtC,EAAU,EAAU,QAAa,GAAK,UACtC,EAAU,EAAU,IAAS,GAAK,MAClC,EAAU,EAAU,YAAiB,GAAK,gBAC3C,CAAc,GAAY,EAAE,CAAE,CACjC,SAAgB,GAAa,EAAO,EAAU,CAC1C,IAAK,IAAI,EAAI,EAAM,MAAM,OAAS,EAAG,GAAK,EAAG,IACzC,GAAI,EAAM,MAAM,GAAG,OAAS,EACxB,OAAO,EAAM,MAAM,GAAG,MAG9B,OAAO,KCjBX,MAAa,GAAiC,IAAI,YAElC,8keACX,MAAM,GAAG,CACT,IAAK,GAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CCJjC,IACM,GAAY,IAAI,IAAI,CACtB,CAAC,EAAG,MAAM,CAEV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,KACT,CAAC,CAMI,OAAO,cAeb,SAAgB,GAAiB,EAAW,CAMxC,OAJK,GAAa,OAAS,GAAa,OACpC,EAAY,QACL,MAEE,GAAU,IAAI,EAAU,EAAmC,ECxD5E,IAAI,IACH,SAAU,EAAW,CAClB,EAAU,EAAU,IAAS,IAAM,MACnC,EAAU,EAAU,KAAU,IAAM,OACpC,EAAU,EAAU,OAAY,IAAM,SACtC,EAAU,EAAU,KAAU,IAAM,OACpC,EAAU,EAAU,KAAU,IAAM,OACpC,EAAU,EAAU,QAAa,IAAM,UACvC,EAAU,EAAU,QAAa,KAAO,UACxC,EAAU,EAAU,QAAa,KAAO,UACxC,EAAU,EAAU,QAAa,KAAO,UACxC,EAAU,EAAU,QAAa,IAAM,UACvC,EAAU,EAAU,QAAa,IAAM,UACvC,EAAU,EAAU,QAAa,IAAM,YACxC,EAAc,GAAY,EAAE,CAAE,CAGjC,IAAW,IACV,SAAU,EAAc,CACrB,EAAa,EAAa,aAAkB,OAAS,eACrD,EAAa,EAAa,cAAmB,OAAS,gBACtD,EAAa,EAAa,WAAgB,KAAO,eAClD,EAAiB,GAAe,EAAE,CAAE,CACvC,SAAS,GAAS,EAAM,CACpB,OAAO7E,GAAQ,GAAU,MAAQA,GAAQ,GAAU,KAEvD,SAAS,GAAuB,EAAM,CAClC,OAASA,GAAQ,GAAU,SAAWA,GAAQ,GAAU,SACnDA,GAAQ,GAAU,SAAWA,GAAQ,GAAU,QAExD,SAASqK,GAAoB,EAAM,CAC/B,OAASrK,GAAQ,GAAU,SAAWA,GAAQ,GAAU,SACnDA,GAAQ,GAAU,SAAWA,GAAQ,GAAU,SAChD,GAASA,EAAK,CAQtB,SAAS,GAA8B,EAAM,CACzC,OAAOA,IAAS,GAAU,QAAUqK,GAAoBrK,EAAK,CAEjE,IAAI,IACH,SAAU,EAAoB,CAC3B,EAAmB,EAAmB,YAAiB,GAAK,cAC5D,EAAmB,EAAmB,aAAkB,GAAK,eAC7D,EAAmB,EAAmB,eAAoB,GAAK,iBAC/D,EAAmB,EAAmB,WAAgB,GAAK,aAC3D,EAAmB,EAAmB,YAAiB,GAAK,gBAC7D,EAAuB,GAAqB,EAAE,CAAE,CACnD,IAAW,IACV,SAAU,EAAc,CAErB,EAAa,EAAa,OAAY,GAAK,SAE3C,EAAa,EAAa,OAAY,GAAK,SAE3C,EAAa,EAAa,UAAe,GAAK,cAC/C,EAAiB,GAAe,EAAE,CAAE,CAIvC,IAAa,GAAb,KAA2B,CACvB,YAEA,EAUA,EAEA,EAAQ,CACJ,KAAK,WAAa,EAClB,KAAK,cAAgB,EACrB,KAAK,OAAS,EAEd,KAAK,MAAQ,GAAmB,YAEhC,KAAK,SAAW,EAOhB,KAAK,OAAS,EAEd,KAAK,UAAY,EAEjB,KAAK,OAAS,EAEd,KAAK,WAAa,GAAa,OAGnC,YAAY,EAAY,CACpB,KAAK,WAAa,EAClB,KAAK,MAAQ,GAAmB,YAChC,KAAK,OAAS,EACd,KAAK,UAAY,EACjB,KAAK,OAAS,EACd,KAAK,SAAW,EAapB,MAAM,EAAO,EAAQ,CACjB,OAAQ,KAAK,MAAb,CACI,KAAK,GAAmB,YAOpB,OANI,EAAM,WAAW,EAAO,GAAK,GAAU,KACvC,KAAK,MAAQ,GAAmB,aAChC,KAAK,UAAY,EACV,KAAK,kBAAkB,EAAO,EAAS,EAAE,GAEpD,KAAK,MAAQ,GAAmB,YACzB,KAAK,iBAAiB,EAAO,EAAO,EAE/C,KAAK,GAAmB,aACpB,OAAO,KAAK,kBAAkB,EAAO,EAAO,CAEhD,KAAK,GAAmB,eACpB,OAAO,KAAK,oBAAoB,EAAO,EAAO,CAElD,KAAK,GAAmB,WACpB,OAAO,KAAK,gBAAgB,EAAO,EAAO,CAE9C,KAAK,GAAmB,YACpB,OAAO,KAAK,iBAAiB,EAAO,EAAO,EAavD,kBAAkB,EAAO,EAAQ,CAU7B,OATI,GAAU,EAAM,OACT,IAEN,EAAM,WAAW,EAAO,OAAqB,GAAU,SACxD,KAAK,MAAQ,GAAmB,WAChC,KAAK,UAAY,EACV,KAAK,gBAAgB,EAAO,EAAS,EAAE,GAElD,KAAK,MAAQ,GAAmB,eACzB,KAAK,oBAAoB,EAAO,EAAO,EAElD,mBAAmB,EAAO,EAAO,EAAK,EAAM,CACxC,GAAI,IAAU,EAAK,CACf,IAAM,EAAa,EAAM,EACzB,KAAK,OACD,KAAK,OAAkB,IAAM,EACzB,OAAO,SAAS,EAAM,OAAO,EAAO,EAAW,CAAE,EAAK,CAC9D,KAAK,UAAY,GAYzB,gBAAgB,EAAO,EAAQ,CAC3B,IAAM,EAAa,EACnB,KAAO,EAAS,EAAM,QAAQ,CAC1B,IAAM,EAAO,EAAM,WAAW,EAAO,CACrC,GAAI,GAAS,EAAK,EAAI,GAAuB,EAAK,CAC9C,GAAU,OAIV,OADA,KAAK,mBAAmB,EAAO,EAAY,EAAQ,GAAG,CAC/C,KAAK,kBAAkB,EAAM,EAAE,CAI9C,OADA,KAAK,mBAAmB,EAAO,EAAY,EAAQ,GAAG,CAC/C,GAWX,oBAAoB,EAAO,EAAQ,CAC/B,IAAM,EAAa,EACnB,KAAO,EAAS,EAAM,QAAQ,CAC1B,IAAM,EAAO,EAAM,WAAW,EAAO,CACrC,GAAI,GAAS,EAAK,CACd,GAAU,OAIV,OADA,KAAK,mBAAmB,EAAO,EAAY,EAAQ,GAAG,CAC/C,KAAK,kBAAkB,EAAM,EAAE,CAI9C,OADA,KAAK,mBAAmB,EAAO,EAAY,EAAQ,GAAG,CAC/C,GAeX,kBAAkB,EAAQ,EAAgB,CACtC,IAAIsK,EAEJ,GAAI,KAAK,UAAY,EAEjB,OADC,EAAK,KAAK,SAAY,MAAiCA,EAAG,2CAA2C,KAAK,SAAS,CAC7G,EAGX,GAAI,IAAW,GAAU,KACrB,KAAK,UAAY,UAEZ,KAAK,aAAe,GAAa,OACtC,MAAO,GASX,OAPA,KAAK,cAAc,GAAiB,KAAK,OAAO,CAAE,KAAK,SAAS,CAC5D,KAAK,SACD,IAAW,GAAU,MACrB,KAAK,OAAO,yCAAyC,CAEzD,KAAK,OAAO,kCAAkC,KAAK,OAAO,EAEvD,KAAK,SAWhB,iBAAiB,EAAO,EAAQ,CAC5B,GAAM,CAAE,cAAe,KACnB,EAAU,EAAW,KAAK,WAE1B,GAAe,EAAU,GAAa,eAAiB,GAC3D,KAAO,EAAS,EAAM,OAAQ,IAAU,KAAK,SAAU,CACnD,IAAM,EAAO,EAAM,WAAW,EAAO,CAErC,GADA,KAAK,UAAY,GAAgB,EAAY,EAAS,KAAK,UAAY,KAAK,IAAI,EAAG,EAAY,CAAE,EAAK,CAClG,KAAK,UAAY,EACjB,OAAO,KAAK,SAAW,GAElB,KAAK,aAAe,GAAa,YAE7B,IAAgB,GAEb,GAA8B,EAAK,EACzC,EACA,KAAK,8BAA8B,CAK7C,GAHA,EAAU,EAAW,KAAK,WAC1B,GAAe,EAAU,GAAa,eAAiB,GAEnD,IAAgB,EAAG,CAEnB,GAAI,IAAS,GAAU,KACnB,OAAO,KAAK,oBAAoB,KAAK,UAAW,EAAa,KAAK,SAAW,KAAK,OAAO,CAGzF,KAAK,aAAe,GAAa,SACjC,KAAK,OAAS,KAAK,UACnB,KAAK,UAAY,KAAK,OACtB,KAAK,OAAS,IAI1B,MAAO,GAOX,8BAA+B,CAC3B,IAAIA,EACJ,GAAM,CAAE,SAAQ,cAAe,KACzB,GAAe,EAAW,GAAU,GAAa,eAAiB,GAGxE,OAFA,KAAK,oBAAoB,EAAQ,EAAa,KAAK,SAAS,EAC3D,EAAK,KAAK,SAAY,MAAiCA,EAAG,yCAAyC,CAC7F,KAAK,SAWhB,oBAAoB,EAAQ,EAAa,EAAU,CAC/C,GAAM,CAAE,cAAe,KAQvB,OAPA,KAAK,cAAc,IAAgB,EAC7B,EAAW,GAAU,CAAC,GAAa,aACnC,EAAW,EAAS,GAAI,EAAS,CACnC,IAAgB,GAEhB,KAAK,cAAc,EAAW,EAAS,GAAI,EAAS,CAEjD,EASX,KAAM,CACF,IAAIA,EACJ,OAAQ,KAAK,MAAb,CACI,KAAK,GAAmB,YAEpB,OAAO,KAAK,SAAW,IAClB,KAAK,aAAe,GAAa,WAC9B,KAAK,SAAW,KAAK,WACvB,KAAK,8BAA8B,CACnC,EAGV,KAAK,GAAmB,eACpB,OAAO,KAAK,kBAAkB,EAAG,EAAE,CAEvC,KAAK,GAAmB,WACpB,OAAO,KAAK,kBAAkB,EAAG,EAAE,CAEvC,KAAK,GAAmB,aAEpB,OADC,EAAK,KAAK,SAAY,MAAiCA,EAAG,2CAA2C,KAAK,SAAS,CAC7G,EAEX,KAAK,GAAmB,YAEpB,MAAO,MA+CvB,SAAgB,GAAgB,EAAY,EAAS,EAAW,EAAM,CAClE,IAAM,GAAe,EAAU,GAAa,gBAAkB,EACxD,EAAa,EAAU,GAAa,WAE1C,GAAI,IAAgB,EAChB,OAAO,IAAe,GAAK,IAAS,EAAa,EAAY,GAGjE,GAAI,EAAY,CACZ,IAAM,EAAQ,EAAO,EACrB,OAAO,EAAQ,GAAK,GAAS,EACvB,GACA,EAAW,EAAY,GAAS,EAI1C,IAAI,EAAK,EACL,EAAK,EAAK,EAAc,EAC5B,KAAO,GAAM,GAAI,CACb,IAAM,EAAO,EAAK,IAAQ,EACpB,EAAW,EAAW,GAC5B,GAAI,EAAW,EACX,EAAK,EAAM,UAEN,EAAW,EAChB,EAAK,EAAM,OAGX,OAAO,EAAW,EAAM,GAGhC,MAAO,GClcX,IAAW,GACV,SAAU,EAAI,CACX,EAAG,KAAU,+BACb,EAAG,OAAY,qCACf,EAAG,IAAS,6BACZ,EAAG,MAAW,+BACd,EAAG,IAAS,uCACZ,EAAG,MAAW,kCACf,CAAO,GAAK,EAAE,CAAE,CACnB,IAAW,IACV,SAAU,EAAO,CACd,EAAM,KAAU,OAChB,EAAM,OAAY,SAClB,EAAM,SAAc,WACpB,EAAM,OAAY,SAClB,EAAM,KAAU,OAChB,EAAM,MAAW,QACjB,EAAM,KAAU,OAChB,EAAM,KAAU,SACjB,EAAU,GAAQ,EAAE,CAAE,CAMzB,IAAW,IACV,SAAU,EAAe,CACtB,EAAc,UAAe,YAC7B,EAAc,OAAY,SAC1B,EAAc,eAAoB,mBACnC,EAAkB,GAAgB,EAAE,CAAE,CACzC,IAAW,GACV,SAAU,EAAW,CAClB,EAAU,EAAO,IACjB,EAAU,QAAa,UACvB,EAAU,eAAoB,iBAC9B,EAAU,OAAY,SACtB,EAAU,KAAU,OACpB,EAAU,QAAa,UACvB,EAAU,MAAW,QACrB,EAAU,EAAO,IACjB,EAAU,KAAU,OACpB,EAAU,SAAc,WACxB,EAAU,QAAa,UACvB,EAAU,IAAS,MACnB,EAAU,WAAgB,aAC1B,EAAU,KAAU,OACpB,EAAU,GAAQ,KAClB,EAAU,OAAY,SACtB,EAAU,QAAa,UACvB,EAAU,OAAY,SACtB,EAAU,KAAU,OACpB,EAAU,IAAS,MACnB,EAAU,SAAc,WACxB,EAAU,GAAQ,KAClB,EAAU,KAAU,OACpB,EAAU,QAAa,UACvB,EAAU,OAAY,SACtB,EAAU,IAAS,MACnB,EAAU,IAAS,MACnB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,MAAW,QACrB,EAAU,SAAc,WACxB,EAAU,WAAgB,aAC1B,EAAU,OAAY,SACtB,EAAU,KAAU,OACpB,EAAU,OAAY,SACtB,EAAU,eAAoB,gBAC9B,EAAU,KAAU,OACpB,EAAU,MAAW,QACrB,EAAU,SAAc,WACxB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,KAAU,OACpB,EAAU,OAAY,SACtB,EAAU,OAAY,SACtB,EAAU,GAAQ,KAClB,EAAU,KAAU,OACpB,EAAU,EAAO,IACjB,EAAU,IAAS,MACnB,EAAU,MAAW,QACrB,EAAU,MAAW,QACrB,EAAU,OAAY,SACtB,EAAU,OAAY,SACtB,EAAU,MAAW,QACrB,EAAU,GAAQ,KAClB,EAAU,KAAU,OACpB,EAAU,QAAa,UACvB,EAAU,KAAU,OACpB,EAAU,WAAgB,aAC1B,EAAU,QAAa,UACvB,EAAU,KAAU,OACpB,EAAU,KAAU,OACpB,EAAU,KAAU,OACpB,EAAU,OAAY,SACtB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,MAAW,QACrB,EAAU,IAAS,MACnB,EAAU,KAAU,OACpB,EAAU,SAAc,WACxB,EAAU,QAAa,UACvB,EAAU,SAAc,WACxB,EAAU,OAAY,SACtB,EAAU,GAAQ,KAClB,EAAU,SAAc,WACxB,EAAU,OAAY,SACtB,EAAU,EAAO,IACjB,EAAU,MAAW,QACrB,EAAU,UAAe,YACzB,EAAU,IAAS,MACnB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,IAAS,MACnB,EAAU,KAAU,OACpB,EAAU,EAAO,IACjB,EAAU,OAAY,SACtB,EAAU,OAAY,SACtB,EAAU,QAAa,UACvB,EAAU,OAAY,SACtB,EAAU,OAAY,SACtB,EAAU,MAAW,QACrB,EAAU,KAAU,OACpB,EAAU,OAAY,SACtB,EAAU,OAAY,SACtB,EAAU,MAAW,QACrB,EAAU,IAAS,MACnB,EAAU,QAAa,UACvB,EAAU,IAAS,MACnB,EAAU,MAAW,QACrB,EAAU,MAAW,QACrB,EAAU,SAAc,WACxB,EAAU,SAAc,WACxB,EAAU,MAAW,QACrB,EAAU,GAAQ,KAClB,EAAU,GAAQ,KAClB,EAAU,MAAW,QACrB,EAAU,MAAW,QACrB,EAAU,GAAQ,KAClB,EAAU,MAAW,QACrB,EAAU,GAAQ,KAClB,EAAU,EAAO,IACjB,EAAU,GAAQ,KAClB,EAAU,IAAS,MACnB,EAAU,IAAS,MACnB,EAAU,IAAS,MACnB,EAAU,IAAS,QACpB,CAAc,GAAY,EAAE,CAAE,CAMjC,IAAW,GACV,SAAU,EAAQ,CACf,EAAO,EAAO,QAAa,GAAK,UAChC,EAAO,EAAO,EAAO,GAAK,IAC1B,EAAO,EAAO,QAAa,GAAK,UAChC,EAAO,EAAO,eAAoB,GAAK,iBACvC,EAAO,EAAO,OAAY,GAAK,SAC/B,EAAO,EAAO,KAAU,GAAK,OAC7B,EAAO,EAAO,QAAa,GAAK,UAChC,EAAO,EAAO,MAAW,GAAK,QAC9B,EAAO,EAAO,EAAO,GAAK,IAC1B,EAAO,EAAO,KAAU,GAAK,OAC7B,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,WAAgB,IAAM,aACpC,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,WAAgB,IAAM,aACpC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,eAAoB,IAAM,iBACxC,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,EAAO,IAAM,IAC3B,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,WAAgB,IAAM,aACpC,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,SAAc,IAAM,WAClC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,EAAO,IAAM,IAC3B,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,UAAe,IAAM,YACnC,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,GAAQ,IAAM,KAC5B,EAAO,EAAO,IAAS,IAAM,MAC7B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,EAAO,IAAM,IAC3B,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,QAAa,IAAM,UACjC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,OAAY,IAAM,SAChC,EAAO,EAAO,MAAW,IAAM,QAC/B,EAAO,EAAO,KAAU,IAAM,OAC9B,EAAO,EAAO,OAAY,KAAO,SACjC,EAAO,EAAO,OAAY,KAAO,SACjC,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,IAAS,KAAO,MAC9B,EAAO,EAAO,QAAa,KAAO,UAClC,EAAO,EAAO,IAAS,KAAO,MAC9B,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,SAAc,KAAO,WACnC,EAAO,EAAO,SAAc,KAAO,WACnC,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,GAAQ,KAAO,KAC7B,EAAO,EAAO,GAAQ,KAAO,KAC7B,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,GAAQ,KAAO,KAC7B,EAAO,EAAO,MAAW,KAAO,QAChC,EAAO,EAAO,GAAQ,KAAO,KAC7B,EAAO,EAAO,EAAO,KAAO,IAC5B,EAAO,EAAO,GAAQ,KAAO,KAC7B,EAAO,EAAO,IAAS,KAAO,MAC9B,EAAO,EAAO,IAAS,KAAO,MAC9B,EAAO,EAAO,IAAS,KAAO,MAC9B,EAAO,EAAO,IAAS,KAAO,QAC/B,CAAW,GAAS,EAAE,CAAE,CAC3B,IAAM,GAAiB,IAAI,IAAI,CAC3B,CAAC,EAAU,EAAG,EAAO,EAAE,CACvB,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,eAAgB,EAAO,eAAe,CACjD,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,EAAG,EAAO,EAAE,CACvB,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,WAAY,EAAO,WAAW,CACzC,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,WAAY,EAAO,WAAW,CACzC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,eAAgB,EAAO,eAAe,CACjD,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,EAAG,EAAO,EAAE,CACvB,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,WAAY,EAAO,WAAW,CACzC,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,EAAG,EAAO,EAAE,CACvB,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,UAAW,EAAO,UAAU,CACvC,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,EAAG,EAAO,EAAE,CACvB,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,KAAM,EAAO,KAAK,CAC7B,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,OAAQ,EAAO,OAAO,CACjC,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,QAAS,EAAO,QAAQ,CACnC,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,SAAU,EAAO,SAAS,CACrC,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,MAAO,EAAO,MAAM,CAC/B,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,EAAG,EAAO,EAAE,CACvB,CAAC,EAAU,GAAI,EAAO,GAAG,CACzB,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,IAAK,EAAO,IAAI,CAC3B,CAAC,EAAU,IAAK,EAAO,KAC1B,CAAC,CACF,SAAgB,GAAS,EAAS,CAE9B,OAAa,GAAe,IAAI,EAAQ,EAAmC,EAAO,QAEtF,IAAM,EAAI,EACV,MAAa,GAAmB,EAC3B,EAAG,MAAO,IAAI,IAAI,CACfeAAe,CAAC,EACxE,EAAG,KAAM,IAAI,IAAI,CAAC,EAAE,MAAO,EAAE,eAAgB,EAAE,KAAK,CAAC,EACrD,EAAG,OAAQ,IAAI,KACf,EAAG,KAAM,IAAI,KACb,EAAG,OAAQ,IAAI,IACnB,CACY,GAAmB,IAAI,IAAI,CAAC,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAG,CAAC,CACtD,IAAI,IAAI,CAC3B,EAAU,MACV,EAAU,OACV,EAAU,IACV,EAAU,OACV,EAAU,QACV,EAAU,SACV,EAAU,UACb,CAAC,CChgBF,IAAI,GACH,SAAU,EAAO,CACd,EAAM,EAAM,KAAU,GAAK,OAC3B,EAAM,EAAM,OAAY,GAAK,SAC7B,EAAM,EAAM,QAAa,GAAK,UAC9B,EAAM,EAAM,YAAiB,GAAK,cAClC,EAAM,EAAM,UAAe,GAAK,YAChC,EAAM,EAAM,SAAc,GAAK,WAC/B,EAAM,EAAM,aAAkB,GAAK,eACnC,EAAM,EAAM,SAAc,GAAK,WAC/B,EAAM,EAAM,sBAA2B,GAAK,wBAC5C,EAAM,EAAM,oBAAyB,GAAK,sBAC1C,EAAM,EAAM,oBAAyB,IAAM,sBAC3C,EAAM,EAAM,uBAA4B,IAAM,yBAC9C,EAAM,EAAM,qBAA0B,IAAM,uBAC5C,EAAM,EAAM,qBAA0B,IAAM,uBAC5C,EAAM,EAAM,2BAAgC,IAAM,6BAClD,EAAM,EAAM,yBAA8B,IAAM,2BAChD,EAAM,EAAM,yBAA8B,IAAM,2BAChD,EAAM,EAAM,yBAA8B,IAAM,2BAChD,EAAM,EAAM,8BAAmC,IAAM,gCACrD,EAAM,EAAM,oBAAyB,IAAM,sBAC3C,EAAM,EAAM,yBAA8B,IAAM,2BAChD,EAAM,EAAM,8BAAmC,IAAM,gCACrD,EAAM,EAAM,mCAAwC,IAAM,qCAC1D,EAAM,EAAM,iCAAsC,IAAM,mCACxD,EAAM,EAAM,iCAAsC,IAAM,mCACxD,EAAM,EAAM,gCAAqC,IAAM,kCACvD,EAAM,EAAM,2BAAgC,IAAM,6BAClD,EAAM,EAAM,gCAAqC,IAAM,kCACvD,EAAM,EAAM,qCAA0C,IAAM,uCAC5D,EAAM,EAAM,0CAA+C,IAAM,4CACjE,EAAM,EAAM,8BAAmC,IAAM,gCACrD,EAAM,EAAM,sBAA2B,IAAM,wBAC7C,EAAM,EAAM,eAAoB,IAAM,iBACtC,EAAM,EAAM,qBAA0B,IAAM,uBAC5C,EAAM,EAAM,uBAA4B,IAAM,yBAC9C,EAAM,EAAM,8BAAmC,IAAM,gCACrD,EAAM,EAAM,8BAAmC,IAAM,gCACrD,EAAM,EAAM,yBAA8B,IAAM,2BAChD,EAAM,EAAM,6BAAkC,IAAM,+BACpD,EAAM,EAAM,uBAA4B,IAAM,yBAC9C,EAAM,EAAM,cAAmB,IAAM,gBACrC,EAAM,EAAM,wBAA6B,IAAM,0BAC/C,EAAM,EAAM,cAAmB,IAAM,gBACrC,EAAM,EAAM,mBAAwB,IAAM,qBAC1C,EAAM,EAAM,QAAa,IAAM,UAC/B,EAAM,EAAM,uBAA4B,IAAM,yBAC9C,EAAM,EAAM,4BAAiC,IAAM,8BACnD,EAAM,EAAM,iCAAsC,IAAM,mCACxD,EAAM,EAAM,sCAA2C,IAAM,wCAC7D,EAAM,EAAM,iBAAsB,IAAM,mBACxC,EAAM,EAAM,YAAiB,IAAM,cACnC,EAAM,EAAM,iBAAsB,IAAM,mBACxC,EAAM,EAAM,QAAa,IAAM,UAC/B,EAAM,EAAM,oBAAyB,IAAM,sBAC3C,EAAM,EAAM,aAAkB,IAAM,eACpC,EAAM,EAAM,mBAAwB,IAAM,qBAC1C,EAAM,EAAM,6BAAkC,IAAM,+BACpD,EAAM,EAAM,iCAAsC,IAAM,mCACxD,EAAM,EAAM,wCAA6C,IAAM,0CAC/D,EAAM,EAAM,wCAA6C,IAAM,0CAC/D,EAAM,EAAM,gCAAqC,IAAM,kCACvD,EAAM,EAAM,8CAAmD,IAAM,gDACrE,EAAM,EAAM,6BAAkC,IAAM,+BACpD,EAAM,EAAM,iCAAsC,IAAM,mCACxD,EAAM,EAAM,wCAA6C,IAAM,0CAC/D,EAAM,EAAM,wCAA6C,IAAM,0CAC/D,EAAM,EAAM,gCAAqC,IAAM,kCACvD,EAAM,EAAM,cAAmB,IAAM,gBACrC,EAAM,EAAM,cAAmB,IAAM,gBACrC,EAAM,EAAM,sBAA2B,IAAM,wBAC7C,EAAM,EAAM,kBAAuB,IAAM,oBACzC,EAAM,EAAM,oBAAyB,IAAM,sBAC3C,EAAM,EAAM,oBAAyB,IAAM,wBAC5C,CAAU,GAAQ,EAAE,CAAE,CAEzB,MAAa,EAAgB,CACzB,KAAM,EAAM,KACZ,OAAQ,EAAM,OACd,QAAS,EAAM,QACf,YAAa,EAAM,YACnB,UAAW,EAAM,UACjB,cAAe,EAAM,cACxB,CAKD,SAAS,GAAa,EAAI,CACtB,OAAO,GAAMzF,EAAE,SAAW,GAAMA,EAAE,QAEtC,SAAS,GAAa,EAAI,CACtB,OAAO,GAAMA,EAAE,iBAAmB,GAAMA,EAAE,gBAE9C,SAAS,GAAa,EAAI,CACtB,OAAO,GAAMA,EAAE,eAAiB,GAAMA,EAAE,cAE5C,SAAS,GAAc,EAAI,CACvB,OAAO,GAAa,EAAG,EAAI,GAAa,EAAG,CAE/C,SAAS,GAAoB,EAAI,CAC7B,OAAO,GAAc,EAAG,EAAI,GAAa,EAAG,CAEhD,SAAS,GAAa,EAAI,CACtB,OAAO,EAAK,GAEhB,SAAS,GAAa,EAAI,CACtB,OAAO,IAAOA,EAAE,OAAS,IAAOA,EAAE,WAAa,IAAOA,EAAE,YAAc,IAAOA,EAAE,UAEnF,SAAS,GAAoC,EAAI,CAC7C,OAAO,GAAa,EAAG,EAAI,IAAOA,EAAE,SAAW,IAAOA,EAAE,kBAE5D,SAAS,GAAqC,EAAM,CAgBhD,OAfI7E,IAAS6E,EAAE,KACJ,EAAI,uBAEN7E,EAAO,QACL,EAAI,sCAEN,GAAYA,EAAK,CACf,EAAI,4BAEN,GAAqBA,EAAK,CACxB,EAAI,+BAEN,GAAmBA,EAAK,EAAIA,IAAS6E,EAAE,gBACrC,EAAI,0BAER,KAGX,IAAa,GAAb,KAAuB,CACnB,YAAY,EAAS,EAAS,CAC1B,KAAK,QAAU,EACf,KAAK,QAAU,EACf,KAAK,OAAS,GAEd,KAAK,OAAS,GAOd,KAAK,cAAgB,GACrB,KAAK,iBAAmB,GACxB,KAAK,OAAS,GACd,KAAK,MAAQ,EAAM,KACnB,KAAK,YAAc,EAAM,KACzB,KAAK,eAAiB,EACtB,KAAK,sBAAwB,GAC7B,KAAK,sBAAwB,KAC7B,KAAK,aAAe,KACpB,KAAK,YAAc,CAAE,KAAM,GAAI,MAAO,GAAI,CAC1C,KAAK,aAAe,IAAI,GAAa,EAAQ,CAC7C,KAAK,gBAAkB,KAAK,mBAAmB,GAAG,CAClD,KAAK,cAAgB,IAAI,GAAc,IAAiB,EAAI,IAAa,CAGrE,KAAK,aAAa,IAAM,KAAK,eAAiB,EAAW,EACzD,KAAK,4CAA4C,EAAG,EACrD,EAAQ,aACL,CACE,4CAA+C,CAC3C,KAAK,KAAK,EAAI,wCAAyC,EAAE,EAE7D,2CAA6C,GAAa,CACtD,KAAK,KAAK,EAAI,2CAA4C,KAAK,eAAiB,KAAK,aAAa,IAAM,EAAS,EAErH,kCAAoC,GAAS,CACzC,IAAM,EAAQ,GAAqC7E,EAAK,CACpD,GACA,KAAK,KAAK,EAAO,EAAE,EAE9B,CACC,OAAU,CAGpB,KAAK,EAAM,EAAW,EAAG,CACrB,IAAIsK,EAAI,GACP,GAAM,EAAK,KAAK,SAAS,eAAkB,MAAiC,EAAG,KAAKA,EAAI,KAAK,aAAa,SAAStK,EAAM,EAAS,CAAC,CAGxI,mBAAmB,EAAQ,CAIvB,OAHK,KAAK,QAAQ,uBAGX,CACH,UAAW,KAAK,aAAa,KAC7B,SAAU,KAAK,aAAa,IAAM,EAClC,YAAa,KAAK,aAAa,OAAS,EACxC,QAAS,GACT,OAAQ,GACR,UAAW,GACd,CATU,KAWf,iBAAkB,CACV,SAAK,OAGT,KADA,KAAK,OAAS,GACP,KAAK,QAAU,CAAC,KAAK,QAAQ,CAChC,KAAK,sBAAwB,EAC7B,IAAM,EAAK,KAAK,UAAU,CACrB,KAAK,oBAAoB,EAC1B,KAAK,WAAW,EAAG,CAG3B,KAAK,OAAS,IAGlB,OAAQ,CACJ,KAAK,OAAS,GAElB,OAAO,EAAe,CAClB,GAAI,CAAC,KAAK,OACN,MAAU,MAAM,6BAA6B,CAEjD,KAAK,OAAS,GAEV,MAAK,SAET,KAAK,iBAAiB,CACjB,KAAK,QACN,KAA6E,EAGrF,MAAM,EAAO,EAAa,EAAe,CACrC,KAAK,OAAS,GACd,KAAK,aAAa,MAAM,EAAO,EAAY,CAC3C,KAAK,iBAAiB,CACjB,KAAK,QACN,KAA6E,CAGrF,uBAAuB,EAAO,CAC1B,KAAK,OAAS,GACd,KAAK,aAAa,uBAAuB,EAAM,CAC/C,KAAK,iBAAiB,CAG1B,oBAAqB,CAOjB,OANI,KAAK,aAAa,eAClB,KAAK,aAAa,QAAQ,KAAK,sBAAsB,CACrD,KAAK,sBAAwB,EAC7B,KAAK,OAAS,GACP,IAEJ,GAGX,UAAW,CAEP,MADA,MAAK,wBACE,KAAK,aAAa,SAAS,CAEtC,WAAW,EAAO,CACd,KAAK,uBAAyB,EAC9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,IACvB,KAAK,aAAa,SAAS,CAGnC,wBAAwB,EAAS,EAAe,CAM5C,OALI,KAAK,aAAa,WAAW,EAAS,EAAc,EAEpD,KAAK,WAAW,EAAQ,OAAS,EAAE,CAC5B,IAEJ,GAGX,sBAAuB,CACnB,KAAK,aAAe,CAChB,KAAM,EAAU,UAChB,QAAS,GACT,MAAO,EAAO,QACd,YAAa,GACb,eAAgB,GAChB,MAAO,EAAE,CACT,SAAU,KAAK,mBAAmB,GACrC,CAEL,oBAAqB,CACjB,KAAK,aAAe,CAChB,KAAM,EAAU,QAChB,QAAS,GACT,MAAO,EAAO,QACd,YAAa,GACb,eAAgB,GAChB,MAAO,EAAE,CACT,SAAU,KAAK,mBAAmB,GACrC,CAEL,oBAAoB,EAAQ,CACxB,KAAK,aAAe,CAChB,KAAM,EAAU,QAChB,KAAM,GACN,SAAU,KAAK,mBAAmB,GACrC,CAEL,oBAAoB,EAAa,CAC7B,KAAK,aAAe,CAChB,KAAM,EAAU,QAChB,KAAM,EACN,YAAa,GACb,SAAU,KACV,SAAU,KACV,SAAU,KAAK,gBAClB,CAEL,sBAAsB,EAAM,EAAO,CAC/B,KAAK,sBAAwB,CACzB,OACA,QACA,SAAU,KAAK,gBAClB,CAGL,YAAY,EAAiB,CACzB,KAAK,YAAc,CACf,KAAM,EACN,MAAO,GACV,CACD,KAAK,gBAAkB,KAAK,mBAAmB,EAAE,CAErD,gBAAiB,CACb,IACI,EACJ,IAAM,EAAQ,KAAK,aACnB,GAAI,GAAa,EAAO,KAAK,YAAY,KAAK,GAAK,KAE/C,IADA,EAAM,MAAM,KAAK,KAAK,YAAY,CAC9B,EAAM,UAAY,KAAK,gBAAiB,CACxC,IAAM,GAAwB,EAAK,EAAM,UAAU,QAAyC,EAAG,MAAQ,OAAO,OAAO,KAAK,EAC1H,EAAc,KAAK,YAAY,MAAQ,KAAK,gBAE5C,KAAK,iBAAiB,OAI1B,KAAK,KAAK,EAAI,mBAAmB,CAGzC,iBAAkB,CACV,KAAK,kBACL,KAAK,gBAAgB,QAAU,KAAK,aAAa,KACjD,KAAK,gBAAgB,OAAS,KAAK,aAAa,IAChD,KAAK,gBAAgB,UAAY,KAAK,aAAa,QAI3D,aAAa,EAAI,CACb,KAAK,2BAA2B,EAAG,SAAS,CAC5C,KAAK,aAAe,KAChB,EAAG,WACH,EAAG,SAAS,QAAU,KAAK,aAAa,KACxC,EAAG,SAAS,OAAS,KAAK,aAAa,IAAM,EAC7C,EAAG,SAAS,UAAY,KAAK,aAAa,OAAS,GAEvD,KAAK,gBAAkB,KAAK,mBAAmB,GAAG,CAEtD,qBAAsB,CAClB,IAAM,EAAK,KAAK,aAChB,KAAK,aAAa,EAAG,CACrB,EAAG,MAAQ,GAAS,EAAG,QAAQ,CAC3B,EAAG,OAAS,EAAU,WACtB,KAAK,iBAAmB,EAAG,QAC3B,KAAK,QAAQ,WAAW,EAAG,GAGvB,EAAG,MAAM,OAAS,GAClB,KAAK,KAAK,EAAI,qBAAqB,CAEnC,EAAG,aACH,KAAK,KAAK,EAAI,0BAA0B,CAE5C,KAAK,QAAQ,SAAS,EAAG,EAE7B,KAAK,aAAa,iBAAiB,CAEvC,mBAAmB,EAAI,CACnB,KAAK,aAAa,EAAG,CACrB,KAAK,QAAQ,UAAU,EAAG,CAC1B,KAAK,aAAa,iBAAiB,CAEvC,mBAAmB,EAAI,CACnB,KAAK,aAAa,EAAG,CACrB,KAAK,QAAQ,UAAU,EAAG,CAC1B,KAAK,aAAa,iBAAiB,CAEvC,2BAA2B,EAAc,CACrC,GAAI,KAAK,sBAAuB,CAQ5B,OALI,GAAgB,KAAK,sBAAsB,WAC3C,KAAK,sBAAsB,SAAS,QAAU,EAAa,UAC3D,KAAK,sBAAsB,SAAS,OAAS,EAAa,SAC1D,KAAK,sBAAsB,SAAS,UAAY,EAAa,aAEzD,KAAK,sBAAsB,KAAnC,CACI,KAAK,EAAU,UACX,KAAK,QAAQ,YAAY,KAAK,sBAAsB,CACpD,MAEJ,KAAK,EAAU,eACX,KAAK,QAAQ,gBAAgB,KAAK,sBAAsB,CACxD,MAEJ,KAAK,EAAU,qBACX,KAAK,QAAQ,sBAAsB,KAAK,sBAAsB,CAC9D,MAGR,KAAK,sBAAwB,MAGrC,eAAgB,CACZ,IAAM6J,EAAW,KAAK,mBAAmB,EAAE,CACvCA,IACA,EAAS,QAAUA,EAAS,UAC5B,EAAS,OAASA,EAAS,SAC3B,EAAS,UAAYA,EAAS,aAElC,KAAK,2BAA2BA,EAAS,CACzC,KAAK,QAAQ,MAAM,CAAE,KAAM,EAAU,IAAK,WAAU,CAAC,CACrD,KAAK,OAAS,GAWlB,mCAAmC,EAAM,EAAI,CACzC,GAAI,KAAK,sBACL,GAAI,KAAK,sBAAsB,OAAS,EAAM,CAC1C,KAAK,sBAAsB,OAAS,EACpC,YAGA,KAAK,gBAAkB,KAAK,mBAAmB,EAAE,CACjD,KAAK,2BAA2B,KAAK,gBAAgB,CACrD,KAAK,aAAa,iBAAiB,CAG3C,KAAK,sBAAsB,EAAM,EAAG,CAExC,eAAe,EAAI,CACf,IAAM,EAAO,GAAa,EAAG,CACvB,EAAU,qBACV,IAAOhF,EAAE,KACL,EAAU,eACV,EAAU,UACpB,KAAK,mCAAmC,EAAM,OAAO,cAAc,EAAG,CAAC,CAI3E,WAAW,EAAI,CACX,KAAK,mCAAmC,EAAU,UAAW,EAAG,CAGpE,0BAA2B,CACvB,KAAK,YAAc,KAAK,MACxB,KAAK,MAAQ,EAAM,oBACnB,KAAK,eAAiB,KAAK,aAAa,IACxC,KAAK,cAAc,YAAY,KAAK,kCAAkC,CAAG,GAAa,UAAY,GAAa,OAAO,CAE1H,kCAAmC,CAC/B,OAAQ,KAAK,cAAgB,EAAM,+BAC/B,KAAK,cAAgB,EAAM,+BAC3B,KAAK,cAAgB,EAAM,yBAEnC,4CAA4C,EAAI,CACxC,KAAK,kCAAkC,CACvC,KAAK,YAAY,OAAS,OAAO,cAAc,EAAG,CAGlD,KAAK,eAAe,EAAG,CAI/B,WAAW,EAAI,CACX,OAAQ,KAAK,MAAb,CACI,KAAK,EAAM,KACP,KAAK,WAAW,EAAG,CACnB,MAEJ,KAAK,EAAM,OACP,KAAK,aAAa,EAAG,CACrB,MAEJ,KAAK,EAAM,QACP,KAAK,cAAc,EAAG,CACtB,MAEJ,KAAK,EAAM,YACP,KAAK,iBAAiB,EAAG,CACzB,MAEJ,KAAK,EAAM,UACP,KAAK,gBAAgB,EAAG,CACxB,MAEJ,KAAK,EAAM,SACP,KAAK,cAAc,EAAG,CACtB,MAEJ,KAAK,EAAM,aACP,KAAK,iBAAiB,EAAG,CACzB,MAEJ,KAAK,EAAM,SACP,KAAK,cAAc,EAAG,CACtB,MAEJ,KAAK,EAAM,sBACP,KAAK,yBAAyB,EAAG,CACjC,MAEJ,KAAK,EAAM,oBACP,KAAK,uBAAuB,EAAG,CAC/B,MAEJ,KAAK,EAAM,oBACP,KAAK,uBAAuB,EAAG,CAC/B,MAEJ,KAAK,EAAM,uBACP,KAAK,0BAA0B,EAAG,CAClC,MAEJ,KAAK,EAAM,qBACP,KAAK,wBAAwB,EAAG,CAChC,MAEJ,KAAK,EAAM,qBACP,KAAK,wBAAwB,EAAG,CAChC,MAEJ,KAAK,EAAM,2BACP,KAAK,6BAA6B,EAAG,CACrC,MAEJ,KAAK,EAAM,yBACP,KAAK,2BAA2B,EAAG,CACnC,MAEJ,KAAK,EAAM,yBACP,KAAK,2BAA2B,EAAG,CACnC,MAEJ,KAAK,EAAM,yBACP,KAAK,4BAA4B,EAAG,CACpC,MAEJ,KAAK,EAAM,8BACP,KAAK,gCAAgC,EAAG,CACxC,MAEJ,KAAK,EAAM,oBACP,KAAK,wBAAwB,EAAG,CAChC,MAEJ,KAAK,EAAM,yBACP,KAAK,4BAA4B,EAAG,CACpC,MAEJ,KAAK,EAAM,8BACP,KAAK,gCAAgC,EAAG,CACxC,MAEJ,KAAK,EAAM,mCACP,KAAK,oCAAoC,EAAG,CAC5C,MAEJ,KAAK,EAAM,iCACP,KAAK,kCAAkC,EAAG,CAC1C,MAEJ,KAAK,EAAM,iCACP,KAAK,kCAAkC,EAAG,CAC1C,MAEJ,KAAK,EAAM,gCACP,KAAK,kCAAkC,EAAG,CAC1C,MAEJ,KAAK,EAAM,2BACP,KAAK,8BAA8B,EAAG,CACtC,MAEJ,KAAK,EAAM,gCACP,KAAK,kCAAkC,EAAG,CAC1C,MAEJ,KAAK,EAAM,qCACP,KAAK,sCAAsC,EAAG,CAC9C,MAEJ,KAAK,EAAM,0CACP,KAAK,0CAA0C,EAAG,CAClD,MAEJ,KAAK,EAAM,8BACP,KAAK,gCAAgC,EAAG,CACxC,MAEJ,KAAK,EAAM,sBACP,KAAK,0BAA0B,EAAG,CAClC,MAEJ,KAAK,EAAM,eACP,KAAK,oBAAoB,EAAG,CAC5B,MAEJ,KAAK,EAAM,qBACP,KAAK,yBAAyB,EAAG,CACjC,MAEJ,KAAK,EAAM,uBACP,KAAK,2BAA2B,EAAG,CACnC,MAEJ,KAAK,EAAM,8BACP,KAAK,iCAAiC,EAAG,CACzC,MAEJ,KAAK,EAAM,8BACP,KAAK,iCAAiC,EAAG,CACzC,MAEJ,KAAK,EAAM,yBACP,KAAK,6BAA6B,EAAG,CACrC,MAEJ,KAAK,EAAM,6BACP,KAAK,gCAAgC,EAAG,CACxC,MAEJ,KAAK,EAAM,uBACP,KAAK,0BAA0B,EAAG,CAClC,MAEJ,KAAK,EAAM,cACP,KAAK,mBAAmB,EAAG,CAC3B,MAEJ,KAAK,EAAM,wBACP,KAAK,4BAA4B,EAAG,CACpC,MAEJ,KAAK,EAAM,cACP,KAAK,mBAAmB,EAAG,CAC3B,MAEJ,KAAK,EAAM,mBACP,KAAK,uBAAuB,EAAG,CAC/B,MAEJ,KAAK,EAAM,QACP,KAAK,cAAc,EAAG,CACtB,MAEJ,KAAK,EAAM,uBACP,KAAK,0BAA0B,EAAG,CAClC,MAEJ,KAAK,EAAM,4BACP,KAAK,8BAA8B,EAAG,CACtC,MAEJ,KAAK,EAAM,iCACP,KAAK,kCAAkC,EAAG,CAC1C,MAEJ,KAAK,EAAM,sCACP,KAAK,sCAAsC,EAAG,CAC9C,MAEJ,KAAK,EAAM,iBACP,KAAK,qBAAqB,EAAG,CAC7B,MAEJ,KAAK,EAAM,YACP,KAAK,iBAAiB,EAAG,CACzB,MAEJ,KAAK,EAAM,iBACP,KAAK,qBAAqB,EAAG,CAC7B,MAEJ,KAAK,EAAM,QACP,KAAK,cAAc,EAAG,CACtB,MAEJ,KAAK,EAAM,oBACP,KAAK,wBAAwB,EAAG,CAChC,MAEJ,KAAK,EAAM,aACP,KAAK,kBAAkB,EAAG,CAC1B,MAEJ,KAAK,EAAM,mBACP,KAAK,uBAAuB,EAAG,CAC/B,MAEJ,KAAK,EAAM,6BACP,KAAK,gCAAgC,EAAG,CACxC,MAEJ,KAAK,EAAM,iCACP,KAAK,oCAAoC,EAAG,CAC5C,MAEJ,KAAK,EAAM,wCACP,KAAK,0CAA0C,EAAG,CAClD,MAEJ,KAAK,EAAM,wCACP,KAAK,0CAA0C,EAAG,CAClD,MAEJ,KAAK,EAAM,gCACP,KAAK,mCAAmC,EAAG,CAC3C,MAEJ,KAAK,EAAM,8CACP,KAAK,+CAA+C,EAAG,CACvD,MAEJ,KAAK,EAAM,6BACP,KAAK,gCAAgC,EAAG,CACxC,MAEJ,KAAK,EAAM,iCACP,KAAK,oCAAoC,EAAG,CAC5C,MAEJ,KAAK,EAAM,wCACP,KAAK,0CAA0C,EAAG,CAClD,MAEJ,KAAK,EAAM,wCACP,KAAK,0CAA0C,EAAG,CAClD,MAEJ,KAAK,EAAM,gCACP,KAAK,mCAAmC,EAAG,CAC3C,MAEJ,KAAK,EAAM,cACP,KAAK,mBAAmB,EAAG,CAC3B,MAEJ,KAAK,EAAM,cACP,KAAK,mBAAmB,EAAG,CAC3B,MAEJ,KAAK,EAAM,sBACP,KAAK,0BAA0B,EAAG,CAClC,MAEJ,KAAK,EAAM,kBACP,KAAK,sBAAsB,EAAG,CAC9B,MAEJ,KAAK,EAAM,oBACP,KAAK,0BAA0B,CAC/B,MAEJ,KAAK,EAAM,oBACP,KAAK,yBAAyB,EAAG,CACjC,MAEJ,QACI,MAAU,MAAM,gBAAgB,EAO5C,WAAW,EAAI,CACX,OAAQ,EAAR,CACI,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,SACnB,MAEJ,KAAKA,EAAE,UACH,KAAK,0BAA0B,CAC/B,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAe,EAAG,CACvB,MAEJ,KAAKA,EAAE,IACH,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,aAAa,EAAI,CACb,OAAQ,EAAR,CACI,KAAKA,EAAE,UACH,KAAK,0BAA0B,CAC/B,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,sBACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,cAAc,EAAI,CACd,OAAQ,EAAR,CACI,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,iBAAiB,EAAI,CACjB,OAAQ,EAAR,CACI,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,2BACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,gBAAgB,EAAI,CAChB,OAAQ,EAAR,CACI,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,cAAc,EAAI,CACd,GAAI,GAAc,EAAG,CACjB,KAAK,sBAAsB,CAC3B,KAAK,MAAQ,EAAM,SACnB,KAAK,cAAc,EAAG,MAGtB,OAAQ,EAAR,CACI,KAAKA,EAAE,iBACH,KAAK,MAAQ,EAAM,wBACnB,MAEJ,KAAKA,EAAE,QACH,KAAK,MAAQ,EAAM,aACnB,MAEJ,KAAKA,EAAE,cACH,KAAK,KAAK,EAAI,uCAAuC,CACrD,KAAK,oBAAoB,EAAE,CAC3B,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,CAC3B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,iBAAiB,CAC/B,KAAK,WAAW,IAAI,CACpB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,KACnB,KAAK,WAAW,EAAG,EAMnC,iBAAiB,EAAI,CACjB,GAAI,GAAc,EAAG,CACjB,KAAK,oBAAoB,CACzB,KAAK,MAAQ,EAAM,SACnB,KAAK,cAAc,EAAG,MAGtB,OAAQ,EAAR,CACI,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,kBAAkB,CAChC,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,iBAAiB,CAC/B,KAAK,WAAW,KAAK,CACrB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,oBAAoB,EAAE,CAC3B,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAM3C,cAAc,EAAI,CACd,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,MAAQ,EAAM,sBACnB,MAEJ,KAAKA,EAAE,QACH,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,qBAAqB,CAC1B,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,aACN,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,SAAW,OAAO,cAAc,GAAa,EAAG,CAAG,GAAa,EAAG,CAAG,EAAG,EAM3F,yBAAyB,EAAI,CACrB,IAAOA,EAAE,QACT,KAAK,MAAQ,EAAM,qBAGnB,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,OACnB,KAAK,aAAa,EAAG,EAK7B,uBAAuB,EAAI,CACnB,GAAc,EAAG,EACjB,KAAK,MAAQ,EAAM,oBACnB,KAAK,uBAAuB,EAAG,GAG/B,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,OACnB,KAAK,aAAa,EAAG,EAG7B,oBAAoB,EAAK,CACrB,GAAI,CAAC,KAAK,aAAa,WAAW,KAAK,iBAAkB,GAAM,CAC3D,MAAO,CAAC,KAAK,oBAAoB,CAErC,KAAK,oBAAoB,CACzB,IAAM,EAAQ,KAAK,aAGnB,OAFA,EAAM,QAAU,KAAK,iBACV,KAAK,aAAa,KAAK,KAAK,iBAAiB,OAAO,CAC/D,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAGH,OAFA,KAAK,WAAW,KAAK,iBAAiB,OAAO,CAC7C,KAAK,MAAQ,EAAM,sBACZ,GAEX,KAAKA,EAAE,QAGH,OAFA,KAAK,WAAW,KAAK,iBAAiB,OAAO,CAC7C,KAAK,MAAQ,EAAM,uBACZ,GAEX,KAAKA,EAAE,kBAIH,OAHA,KAAK,WAAW,KAAK,iBAAiB,OAAO,CAC7C,KAAK,qBAAqB,CAC1B,KAAK,MAAQ,EAAM,KACZ,GAEX,QACI,MAAO,CAAC,KAAK,oBAAoB,EAM7C,uBAAuB,EAAI,CACnB,KAAK,oBAAoB,EAAG,GAC5B,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,OACnB,KAAK,aAAa,EAAG,EAK7B,0BAA0B,EAAI,CACtB,IAAOA,EAAE,QACT,KAAK,MAAQ,EAAM,sBAGnB,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAK9B,wBAAwB,EAAI,CACpB,GAAc,EAAG,EACjB,KAAK,MAAQ,EAAM,qBACnB,KAAK,wBAAwB,EAAG,GAGhC,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAK9B,wBAAwB,EAAI,CACpB,KAAK,oBAAoB,EAAG,GAC5B,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAK9B,6BAA6B,EAAI,CAC7B,OAAQ,EAAR,CACI,KAAKA,EAAE,QACH,KAAK,MAAQ,EAAM,yBACnB,MAEJ,KAAKA,EAAE,iBACH,KAAK,MAAQ,EAAM,yBACnB,KAAK,WAAW,KAAK,CACrB,MAEJ,QACI,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,YACnB,KAAK,iBAAiB,EAAG,EAMrC,2BAA2B,EAAI,CACvB,GAAc,EAAG,EACjB,KAAK,MAAQ,EAAM,yBACnB,KAAK,2BAA2B,EAAG,GAGnC,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,YACnB,KAAK,iBAAiB,EAAG,EAKjC,2BAA2B,EAAI,CACvB,KAAK,oBAAoB,EAAG,GAC5B,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,YACnB,KAAK,iBAAiB,EAAG,EAKjC,4BAA4B,EAAI,CACxB,IAAOA,EAAE,cACT,KAAK,MAAQ,EAAM,8BACnB,KAAK,WAAW,IAAI,GAGpB,KAAK,MAAQ,EAAM,YACnB,KAAK,iBAAiB,EAAG,EAKjC,gCAAgC,EAAI,CAC5B,IAAOA,EAAE,cACT,KAAK,MAAQ,EAAM,8BACnB,KAAK,WAAW,IAAI,GAGpB,KAAK,MAAQ,EAAM,YACnB,KAAK,iBAAiB,EAAG,EAKjC,wBAAwB,EAAI,CACxB,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,MAAQ,EAAM,yBACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,mCACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,4BAA4B,EAAI,CAC5B,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,MAAQ,EAAM,8BACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,mCACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,MAAQ,EAAM,oBACnB,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,MAAQ,EAAM,oBACnB,KAAK,eAAe,EAAG,EAMnC,gCAAgC,EAAI,CAChC,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,mCACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,YACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,MAAQ,EAAM,oBACnB,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,MAAQ,EAAM,oBACnB,KAAK,eAAe,EAAG,EAMnC,oCAAoC,EAAI,CAChC,IAAOA,EAAE,QACT,KAAK,MAAQ,EAAM,iCAEd,GAAc,EAAG,EACtB,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,gCACnB,KAAK,kCAAkC,EAAG,GAG1C,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,oBACnB,KAAK,wBAAwB,EAAG,EAKxC,kCAAkC,EAAI,CAC9B,GAAc,EAAG,EACjB,KAAK,MAAQ,EAAM,iCACnB,KAAK,kCAAkC,EAAG,GAG1C,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,oBACnB,KAAK,wBAAwB,EAAG,EAKxC,kCAAkC,EAAI,CAC9B,KAAK,oBAAoB,EAAG,GAC5B,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,oBACnB,KAAK,wBAAwB,EAAG,EAKxC,kCAAkC,EAAI,CAClC,GAAI,KAAK,aAAa,WAAW0F,GAAG,OAAQ,GAAM,EAC9C,GAAoC,KAAK,aAAa,KAAKA,GAAG,OAAO,OAAO,CAAC,CAAE,CAC/E,KAAK,eAAe,EAAG,CACvB,IAAK,IAAI,EAAI,EAAG,EAAIA,GAAG,OAAO,OAAQ,IAClC,KAAK,eAAe,KAAK,UAAU,CAAC,CAExC,KAAK,MAAQ,EAAM,gCAEb,KAAK,oBAAoB,GAC/B,KAAK,MAAQ,EAAM,oBACnB,KAAK,wBAAwB,EAAG,EAKxC,8BAA8B,EAAI,CAC9B,OAAQ,EAAR,CACI,KAAK1F,EAAE,aACH,KAAK,MAAQ,EAAM,gCACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,0CACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,kCAAkC,EAAI,CAClC,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,MAAQ,EAAM,qCACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,0CACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,MAAQ,EAAM,2BACnB,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,MAAQ,EAAM,2BACnB,KAAK,eAAe,EAAG,EAMnC,sCAAsC,EAAI,CACtC,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,0CACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,YACnB,KAAK,WAAW,IAAI,CACpB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,MAAQ,EAAM,2BACnB,KAAK,eAAiC,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,MAAQ,EAAM,2BACnB,KAAK,eAAe,EAAG,EAMnC,0CAA0C,EAAI,CACtC,IAAOA,EAAE,SACT,KAAK,MAAQ,EAAM,8BACnB,KAAK,WAAW,IAAI,GAGpB,KAAK,MAAQ,EAAM,2BACnB,KAAK,8BAA8B,EAAG,EAK9C,gCAAgC,EAAI,CAChC,GAAI,KAAK,aAAa,WAAW0F,GAAG,OAAQ,GAAM,EAC9C,GAAoC,KAAK,aAAa,KAAKA,GAAG,OAAO,OAAO,CAAC,CAAE,CAC/E,KAAK,eAAe,EAAG,CACvB,IAAK,IAAI,EAAI,EAAG,EAAIA,GAAG,OAAO,OAAQ,IAClC,KAAK,eAAe,KAAK,UAAU,CAAC,CAExC,KAAK,MAAQ,EAAM,yBAEb,KAAK,oBAAoB,GAC/B,KAAK,MAAQ,EAAM,2BACnB,KAAK,8BAA8B,EAAG,EAK9C,0BAA0B,EAAI,CAC1B,OAAQ,EAAR,CACI,KAAK1F,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,QACP,KAAKA,EAAE,kBACP,KAAKA,EAAE,IACH,KAAK,MAAQ,EAAM,qBACnB,KAAK,yBAAyB,EAAG,CACjC,MAEJ,KAAKA,EAAE,YACH,KAAK,KAAK,EAAI,wCAAwC,CACtD,KAAK,YAAY,IAAI,CACrB,KAAK,MAAQ,EAAM,eACnB,MAEJ,QACI,KAAK,YAAY,GAAG,CACpB,KAAK,MAAQ,EAAM,eACnB,KAAK,oBAAoB,EAAG,EAMxC,oBAAoB,EAAI,CACpB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACP,KAAKA,EAAE,QACP,KAAKA,EAAE,kBACP,KAAKA,EAAE,IACH,KAAK,gBAAgB,CACrB,KAAK,MAAQ,EAAM,qBACnB,KAAK,yBAAyB,EAAG,CACjC,MAEJ,KAAKA,EAAE,YACH,KAAK,gBAAgB,CACrB,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,eACP,KAAKA,EAAE,WACP,KAAKA,EAAE,eACH,KAAK,KAAK,EAAI,mCAAmC,CACjD,KAAK,YAAY,MAAQ,OAAO,cAAc,EAAG,CACjD,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,YAAY,UACjB,MAEJ,QACI,KAAK,YAAY,MAAQ,OAAO,cAAc,GAAa,EAAG,CAAG,GAAa,EAAG,CAAG,EAAG,EAMnG,yBAAyB,EAAI,CACzB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,QACH,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,YACH,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,qBAAqB,CAC1B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,YAAY,GAAG,CACpB,KAAK,MAAQ,EAAM,eACnB,KAAK,oBAAoB,EAAG,EAMxC,2BAA2B,EAAI,CAC3B,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,8BACnB,MAEJ,KAAKA,EAAE,WACH,KAAK,MAAQ,EAAM,8BACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,sBAAsB,CACpC,KAAK,MAAQ,EAAM,KACnB,KAAK,qBAAqB,CAC1B,MAEJ,QACI,KAAK,MAAQ,EAAM,yBACnB,KAAK,6BAA6B,EAAG,EAMjD,iCAAiC,EAAI,CACjC,OAAQ,EAAR,CACI,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,6BACnB,MAEJ,KAAKA,EAAE,UACH,KAAK,0BAA0B,CAC/B,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,YAAY,WACjB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,YAAY,OAAS,OAAO,cAAc,EAAG,EAM9D,iCAAiC,EAAI,CACjC,OAAQ,EAAR,CACI,KAAKA,EAAE,WACH,KAAK,MAAQ,EAAM,6BACnB,MAEJ,KAAKA,EAAE,UACH,KAAK,0BAA0B,CAC/B,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,YAAY,WACjB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,YAAY,OAAS,OAAO,cAAc,EAAG,EAM9D,6BAA6B,EAAI,CAC7B,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,iBAAiB,CACtB,KAAK,MAAQ,EAAM,sBACnB,MAEJ,KAAKA,EAAE,UACH,KAAK,0BAA0B,CAC/B,MAEJ,KAAKA,EAAE,kBACH,KAAK,iBAAiB,CACtB,KAAK,MAAQ,EAAM,KACnB,KAAK,qBAAqB,CAC1B,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,YAAY,WACjB,MAEJ,KAAKA,EAAE,eACP,KAAKA,EAAE,WACP,KAAKA,EAAE,eACP,KAAKA,EAAE,YACP,KAAKA,EAAE,aACH,KAAK,KAAK,EAAI,4CAA4C,CAC1D,KAAK,YAAY,OAAS,OAAO,cAAc,EAAG,CAClD,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,YAAY,OAAS,OAAO,cAAc,EAAG,EAM9D,gCAAgC,EAAI,CAChC,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,iBAAiB,CACtB,KAAK,MAAQ,EAAM,sBACnB,MAEJ,KAAKA,EAAE,QACH,KAAK,iBAAiB,CACtB,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,iBAAiB,CACtB,KAAK,MAAQ,EAAM,KACnB,KAAK,qBAAqB,CAC1B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,mCAAmC,CACjD,KAAK,MAAQ,EAAM,sBACnB,KAAK,0BAA0B,EAAG,EAM9C,0BAA0B,EAAI,CAC1B,OAAQ,EAAR,CACI,KAAKA,EAAE,kBAAmB,CACtB,IAAM,EAAQ,KAAK,aACnB,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,KACnB,KAAK,qBAAqB,CAC1B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,SAAS,CACvB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,uBAAuB,CACrC,KAAK,MAAQ,EAAM,sBACnB,KAAK,0BAA0B,EAAG,EAM9C,mBAAmB,EAAI,CACnB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,UACN,MAEJ,QACI,EAAM,MAAQ,OAAO,cAAc,EAAG,EAMlD,4BAA4B,EAAI,CACxB,KAAK,wBAAwB0F,GAAG,UAAW,GAAK,EAChD,KAAK,oBAAoBA,GAAG,UAAU,OAAS,EAAE,CACjD,KAAK,MAAQ,EAAM,eAEd,KAAK,wBAAwBA,GAAG,QAAS,GAAM,EAEpD,KAAK,gBAAkB,KAAK,mBAAmBA,GAAG,QAAQ,OAAS,EAAE,CACrE,KAAK,MAAQ,EAAM,SAEd,KAAK,wBAAwBA,GAAG,YAAa,GAAK,CACnD,KAAK,cACL,KAAK,MAAQ,EAAM,eAGnB,KAAK,KAAK,EAAI,mBAAmB,CACjC,KAAK,oBAAoBA,GAAG,YAAY,OAAS,EAAE,CACnD,KAAK,aAAa,KAAO,UACzB,KAAK,MAAQ,EAAM,eAKjB,KAAK,oBAAoB,GAC/B,KAAK,KAAK,EAAI,yBAAyB,CACvC,KAAK,oBAAoB,EAAE,CAC3B,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAKnC,mBAAmB,EAAI,CACnB,OAAQ,EAAR,CACI,KAAK1F,EAAE,aACH,KAAK,MAAQ,EAAM,mBACnB,MAEJ,KAAKA,EAAE,kBAAmB,CACtB,KAAK,KAAK,EAAI,4BAA4B,CAC1C,KAAK,MAAQ,EAAM,KACnB,IAAM,EAAQ,KAAK,aACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,QACI,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAMlC,uBAAuB,EAAI,CACvB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,MAAQ,EAAM,YACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,4BAA4B,CAC1C,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,MAAQ,IACd,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAMlC,cAAc,EAAI,CACd,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,MAAQ,EAAM,iBACnB,MAEJ,KAAKA,EAAE,eACH,EAAM,MAAQ,IACd,KAAK,MAAQ,EAAM,uBACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,UACN,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,MAAQ,OAAO,cAAc,EAAG,EAMlD,0BAA0B,EAAI,CAC1B,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,iBACH,EAAM,MAAQ,IACd,KAAK,MAAQ,EAAM,4BACnB,MAEJ,KAAKA,EAAE,eACH,EAAM,MAAQ,IACd,MAEJ,QACI,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAMlC,8BAA8B,EAAI,CAC1B,IAAOA,EAAE,aACT,KAAK,MAAQ,EAAM,kCAGnB,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAK9B,kCAAkC,EAAI,CAC9B,IAAOA,EAAE,aACT,KAAK,MAAQ,EAAM,uCAGnB,KAAK,MAAQ,EAAM,iBACnB,KAAK,qBAAqB,EAAG,EAKrC,sCAAsC,EAAI,CAClC,IAAOA,EAAE,mBAAqB,IAAOA,EAAE,KACvC,KAAK,KAAK,EAAI,cAAc,CAEhC,KAAK,MAAQ,EAAM,YACnB,KAAK,iBAAiB,EAAG,CAI7B,qBAAqB,EAAI,CACrB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,KAAK,MAAQ,EAAM,YACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,MAAQ,IACd,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAMlC,iBAAiB,EAAI,CACjB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,iBACH,KAAK,MAAQ,EAAM,iBACnB,MAEJ,KAAKA,EAAE,aACH,EAAM,MAAQ,IACd,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,MAAQ,KACd,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAMlC,qBAAqB,EAAI,CACrB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,aACH,EAAM,MAAQ,MACd,KAAK,MAAQ,EAAM,iBACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,yBAAyB,CACvC,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,MAAQ,MACd,KAAK,MAAQ,EAAM,QACnB,KAAK,cAAc,EAAG,EAMlC,cAAc,EAAI,CACd,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,MAAQ,EAAM,oBACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,oBACnB,KAAK,wBAAwB,EAAG,CAChC,MAEJ,KAAKA,EAAE,IAAK,CACR,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,oBAAoB,KAAK,CAC9B,IAAM,EAAQ,KAAK,aACnB,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,mCAAmC,CACjD,KAAK,MAAQ,EAAM,oBACnB,KAAK,wBAAwB,EAAG,EAM5C,wBAAwB,EAAI,CACxB,GAAI,GAAa,EAAG,CAChB,KAAK,oBAAoB,OAAO,aAAa,GAAa,EAAG,CAAC,CAAC,CAC/D,KAAK,MAAQ,EAAM,kBAGnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,KAAK,wBAA0C,CAC/C,KAAK,MAAQ,EAAM,aACnB,MAEJ,KAAKA,EAAE,kBAAmB,CACtB,KAAK,KAAK,EAAI,mBAAmB,CACjC,KAAK,oBAAoB,KAAK,CAC9B,IAAM,EAAQ,KAAK,aACnB,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IAAK,CACR,KAAK,KAAK,EAAI,aAAa,CAC3B,KAAK,oBAAoB,KAAK,CAC9B,IAAM,EAAQ,KAAK,aACnB,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,oBAAoB,OAAO,cAAc,EAAG,CAAC,CAClD,KAAK,MAAQ,EAAM,cAMnC,kBAAkB,EAAI,CAClB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,MAAQ,EAAM,mBACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,UACN,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,MAAQ,OAAO,cAAc,GAAa,EAAG,CAAG,GAAa,EAAG,CAAG,EAAG,EAMxF,uBAAuB,EAAI,CACvB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACQ,KAAK,wBAAwB0F,GAAG,OAAQ,GAAM,CAC9C,KAAK,MAAQ,EAAM,6BAEd,KAAK,wBAAwBA,GAAG,OAAQ,GAAM,CACnD,KAAK,MAAQ,EAAM,6BAIb,KAAK,oBAAoB,GAC/B,KAAK,KAAK,EAAI,yCAAyC,CACvD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,GAO3C,gCAAgC,EAAI,CAChC,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAK1F,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,MAAQ,EAAM,iCACnB,MAEJ,KAAKA,EAAE,eACH,KAAK,KAAK,EAAI,2CAA2C,CACzD,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,WACH,KAAK,KAAK,EAAI,2CAA2C,CACzD,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,0CAA0C,CACxD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,oCAAoC,EAAI,CACpC,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,eACH,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,WACH,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,0CAA0C,CACxD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,0CAA0C,EAAI,CAC1C,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,gCACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,cACN,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,8BAA8B,CAC5C,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,UAAY,OAAO,cAAc,EAAG,EAMtD,0CAA0C,EAAI,CAC1C,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,WACH,KAAK,MAAQ,EAAM,gCACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,cACN,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,8BAA8B,CAC5C,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,UAAY,OAAO,cAAc,EAAG,EAMtD,mCAAmC,EAAI,CACnC,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,MAAQ,EAAM,8CACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,eACH,KAAK,KAAK,EAAI,0DAA0D,CACxE,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,WACH,KAAK,KAAK,EAAI,0DAA0D,CACxE,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,0CAA0C,CACxD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,+CAA+C,EAAI,CAC/C,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,kBACH,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,eACH,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,WACH,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,0CAA0C,CACxD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,gCAAgC,EAAI,CAChC,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UACH,KAAK,MAAQ,EAAM,iCACnB,MAEJ,KAAKA,EAAE,eACH,KAAK,KAAK,EAAI,2CAA2C,CACzD,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,WACH,KAAK,KAAK,EAAI,2CAA2C,CACzD,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,0CAA0C,CACxD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,oCAAoC,EAAI,CACpC,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,eACH,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,WACH,EAAM,SAAW,GACjB,KAAK,MAAQ,EAAM,wCACnB,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,+BAA+B,CAC7C,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,KACnB,KAAK,mBAAmB,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,0CAA0C,CACxD,EAAM,YAAc,GACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,0CAA0C,EAAI,CAC1C,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,eACH,KAAK,MAAQ,EAAM,gCACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,cACN,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,8BAA8B,CAC5C,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,UAAY,OAAO,cAAc,EAAG,EAMtD,0CAA0C,EAAI,CAC1C,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,WACH,KAAK,MAAQ,EAAM,gCACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,EAAM,cACN,MAEJ,KAAKA,EAAE,kBACH,KAAK,KAAK,EAAI,8BAA8B,CAC5C,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,EAAM,UAAY,OAAO,cAAc,EAAG,EAMtD,mCAAmC,EAAI,CACnC,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,UACP,KAAKA,EAAE,WACP,KAAKA,EAAE,UAEH,MAEJ,KAAKA,EAAE,kBACH,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,aAAa,CAC3B,EAAM,YAAc,GACpB,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,KAAK,EAAI,gDAAgD,CAC9D,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,mBAAmB,EAAI,CACnB,IAAM,EAAQ,KAAK,aACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,kBACH,KAAK,mBAAmB,EAAM,CAC9B,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,KACH,KAAK,KAAK,EAAI,wBAAwB,CACtC,MAEJ,KAAKA,EAAE,IACH,KAAK,mBAAmB,EAAM,CAC9B,KAAK,eAAe,CACpB,MAEJ,UAMR,mBAAmB,EAAI,CACnB,OAAQ,EAAR,CACI,KAAKA,EAAE,qBACH,KAAK,MAAQ,EAAM,sBACnB,MAEJ,KAAKA,EAAE,IACH,KAAK,KAAK,EAAI,WAAW,CACzB,KAAK,eAAe,CACpB,MAEJ,QACI,KAAK,eAAe,EAAG,EAMnC,0BAA0B,EAAI,CACtB,IAAOA,EAAE,qBACT,KAAK,MAAQ,EAAM,mBAGnB,KAAK,WAAW,IAAI,CACpB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAKnC,sBAAsB,EAAI,CACtB,OAAQ,EAAR,CACI,KAAKA,EAAE,kBACH,KAAK,MAAQ,EAAM,KACnB,MAEJ,KAAKA,EAAE,qBACH,KAAK,WAAW,IAAI,CACpB,MAEJ,QACI,KAAK,WAAW,KAAK,CACrB,KAAK,MAAQ,EAAM,cACnB,KAAK,mBAAmB,EAAG,EAMvC,0BAA2B,CACvB,IAAI,EAAS,KAAK,cAAc,MAAM,KAAK,aAAa,KAAM,KAAK,aAAa,IAAI,CACpF,GAAI,EAAS,EACT,GAAI,KAAK,aAAa,iBAClB,EAAS,KAAK,cAAc,KAAK,KAEhC,CAED,KAAK,OAAS,GAEd,KAAK,aAAa,IAAM,KAAK,aAAa,KAAK,OAAS,EACxD,KAAK,sBAAwB,EAC7B,KAAK,aAAa,cAAgB,GAClC,OAGJ,IAAW,GAGX,KAAK,aAAa,IAAM,KAAK,eAC7B,KAAK,4CAA4CA,EAAE,UAAU,CAC7D,KAAK,MACD,CAAC,KAAK,kCAAkC,EAAI,GAAoB,KAAK,aAAa,KAAK,EAAE,CAAC,CACpF,EAAM,oBACN,KAAK,aAIf,KAAK,MAAQ,KAAK,YAK1B,yBAAyB,EAAI,CACrB,GAAoB,EAAG,CACvB,KAAK,4CAA4C,EAAG,EAGhD,IAAOA,EAAE,WACT,KAAK,KAAK,EAAI,+BAA+B,CAEjD,KAAK,MAAQ,KAAK,YAClB,KAAK,WAAW,EAAG,IChpFzB,GAA4B,IAAI,IAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,SAAUA,EAAE,OAAQA,EAAE,EAAGA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAI,CAAC,CAC3G,GAAuC,IAAI,IAAI,CACjD,GAAG,GACHA,EAAE,QACFA,EAAE,SACFA,EAAE,MACFA,EAAE,GACFA,EAAE,MACFA,EAAE,GACFA,EAAE,MACFA,EAAE,GACL,CAAC,CACI,GAAwB,IAAI,IAAI,CAClCA,EAAE,OACFA,EAAE,QACFA,EAAE,KACFA,EAAE,QACFA,EAAE,OACFA,EAAE,MACFA,EAAE,GACFA,EAAE,SACFA,EAAE,GACL,CAAC,CACI,GAA6B,IAAI,IAAI,CAAC,GAAG,GAAuBA,EAAE,GAAIA,EAAE,GAAG,CAAC,CAC5E,GAA+B,IAAI,IAAI,CAAC,GAAG,GAAuBA,EAAE,OAAO,CAAC,CAC5E,GAA0B,IAAI,IAAI,CAACA,EAAE,eAAgBA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,MAAM,CAAC,CACtF,GAAuB,IAAI,IAAI,CAACA,EAAE,KAAMA,EAAE,eAAgBA,EAAE,MAAM,CAAC,CACnE,GAAoB,IAAI,IAAI,CAACA,EAAE,GAAIA,EAAE,SAAUA,EAAE,KAAK,CAAC,CACvD,GAAqB,IAAI,IAAI,CAACA,EAAE,MAAOA,EAAE,MAAOA,EAAE,MAAOA,EAAE,SAAUA,EAAE,KAAK,CAAC,CAC7E,GAAgB,IAAI,IAAI,CAACA,EAAE,MAAOA,EAAE,SAAUA,EAAE,KAAK,CAAC,CACtD,GAAc,IAAI,IAAI,CAACA,EAAE,GAAIA,EAAE,GAAG,CAAC,CAE5B,GAAb,KAA8B,CAC1B,IAAI,0BAA2B,CAC3B,OAAO,KAAK,eAAe,CAAG,KAAK,YAAY,mBAAmB,KAAK,QAAQ,CAAG,KAAK,QAE3F,YAAY,EAAU,EAAa,EAAS,CACxC,KAAK,YAAc,EACnB,KAAK,QAAU,EACf,KAAK,MAAQ,EAAE,CACf,KAAK,OAAS,EAAE,CAChB,KAAK,SAAW,GAChB,KAAK,UAAY,EACjB,KAAK,aAAeA,EAAE,QACtB,KAAK,QAAUhD,EAGnB,SAAS,EAAS,CACd,OAAO,KAAK,MAAM,YAAYR,EAAS,KAAK,SAAS,CAGzD,eAAgB,CACZ,OAAO,KAAK,eAAiBwD,EAAE,UAAY,KAAK,YAAY,gBAAgB,KAAK,QAAQ,GAAK,EAAG,KAErG,uBAAwB,CACpB,KAAK,QAAU,KAAK,MAAM,KAAK,UAC/B,KAAK,aAAe,KAAK,OAAO,KAAK,UAGzC,KAAK,EAAS,EAAO,CACjB,KAAK,WACL,KAAK,MAAM,KAAK,UAAYxD,EAC5B,KAAK,QAAUA,EACf,KAAK,OAAO,KAAK,UAAY,EAC7B,KAAK,aAAe,EAChB,KAAK,eAAe,EACpB,KAAK,YAET,KAAK,QAAQ,WAAWA,EAAS,EAAO,GAAK,CAEjD,KAAM,CACF,IAAM,EAAS,KAAK,QAChB,KAAK,UAAY,GAAK,KAAK,eAAe,EAC1C,KAAK,YAET,KAAK,WACL,KAAK,uBAAuB,CAC5B,KAAK,QAAQ,UAAU,EAAQ,GAAK,CAExC,QAAQ,EAAY,EAAY,CAC5B,IAAM,EAAM,KAAK,SAAS,EAAW,CACrC,KAAK,MAAM,GAAO,EACd,IAAQ,KAAK,WACb,KAAK,QAAU,GAGvB,YAAY,EAAkB,EAAY,EAAc,CACpD,IAAM,EAAe,KAAK,SAAS,EAAiB,CAAG,EACvD,KAAK,MAAM,OAAO,EAAc,EAAG,EAAW,CAC9C,KAAK,OAAO,OAAO,EAAc,EAAG,EAAa,CACjD,KAAK,WACD,IAAiB,KAAK,UACtB,KAAK,uBAAuB,CAE5B,KAAK,SAAW,KAAK,eAAiB,QACtC,KAAK,QAAQ,WAAW,KAAK,QAAS,KAAK,aAAc,IAAiB,KAAK,SAAS,CAGhG,sBAAsB,EAAS,CAC3B,IAAI,EAAY,KAAK,SAAW,EAChC,EACI,GAAY,KAAK,OAAO,YAAY,EAAS,EAAY,EAAE,OACtD,EAAY,GAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,GAAW,GAAK,EAAG,MACzF,KAAK,gBAAgB,KAAK,IAAI,EAAW,EAAE,CAAC,CAEhD,gBAAgB,EAAK,CACjB,KAAO,KAAK,UAAY,GAAK,CACzB,IAAM,EAAS,KAAK,QAChB,KAAK,UAAY,GAAK,KAAK,eAAe,EAC1C,OAAK,UAET,KAAK,WACL,KAAK,uBAAuB,CAC5B,KAAK,QAAQ,UAAU,EAAQ,KAAK,SAAW,EAAI,EAG3D,sBAAsB,EAAS,CAC3B,IAAM,EAAM,KAAK,SAASA,EAAQ,CAClC,KAAK,gBAAgB,KAAK,IAAI,EAAK,EAAE,CAAC,CAE1C,eAAe,EAAU,EAAU,CAC/B,IAAM,EAAM,KAAK,iBAAiB,EAAU,EAAS,CACrD,KAAK,gBAAgB,KAAK,IAAI,EAAK,EAAE,CAAC,CAE1C,8BAA+B,CAC3B,KAAK,eAAe,GAAkB,EAAG,KAAK,CAElD,yBAA0B,CACtB,KAAK,eAAe,GAAa,EAAG,KAAK,CAE7C,uBAAwB,CAGpB,KAAK,UAAY,EACjB,KAAK,gBAAgB,EAAE,CAE3B,iBAAiB,EAAU,EAAW,CAClC,IAAK,IAAI,EAAI,KAAK,SAAU,GAAK,EAAG,IAChC,GAAI,EAAS,IAAI,KAAK,OAAO,GAAG,EAAI,KAAK,YAAY,gBAAgB,KAAK,MAAM,GAAG,GAAK,EACpF,OAAO,EAGf,MAAO,GAEX,YAAY,EAAU,EAAU,CAC5B,IAAM,EAAM,KAAK,iBAAiB,EAAU,EAAS,CACrD,KAAK,gBAAgB,EAAM,EAAE,CAEjC,yBAA0B,CACtB,KAAK,YAAY,GAAe,EAAG,KAAK,CAE5C,6BAA8B,CAC1B,KAAK,YAAY,GAAoB,EAAG,KAAK,CAEjD,4BAA6B,CACzB,KAAK,YAAY,GAAmB,EAAG,KAAK,CAEhD,OAAO,EAAS,CACZ,IAAM,EAAM,KAAK,SAASA,EAAQ,CAC9B,GAAO,IACH,IAAQ,KAAK,SACb,KAAK,KAAK,EAGV,KAAK,MAAM,OAAO,EAAK,EAAE,CACzB,KAAK,OAAO,OAAO,EAAK,EAAE,CAC1B,KAAK,WACL,KAAK,uBAAuB,CAC5B,KAAK,QAAQ,UAAUA,EAAS,GAAM,GAKlD,kCAAmC,CAE/B,OAAO,KAAK,UAAY,GAAK,KAAK,OAAO,KAAOwD,EAAE,KAAO,KAAK,MAAM,GAAK,KAE7E,SAAS,EAAS,CACd,OAAO,KAAK,SAASxD,EAAQ,CAAG,GAEpC,kBAAkB,EAAS,CACvB,IAAM,EAAa,KAAK,SAASA,EAAQ,CAAG,EAC5C,OAAO,GAAc,EAAI,KAAK,MAAM,GAAc,KAEtD,0BAA2B,CACvB,OAAO,KAAK,WAAa,GAAK,KAAK,OAAO,KAAOwD,EAAE,KAGvD,kBAAkB,EAAS,EAAW,CAClC,IAAK,IAAI,EAAI,KAAK,SAAU,GAAK,EAAG,IAAK,CACrC,IAAM,EAAK,KAAK,OAAO,GACvB,OAAQ,KAAK,YAAY,gBAAgB,KAAK,MAAM,GAAG,CAAvD,CACI,KAAK,EAAG,KACJ,GAAI,IAAO,EACP,MAAO,GACX,GAAI,EAAU,IAAI,EAAG,CACjB,MAAO,GACX,MAEJ,KAAK,EAAG,IACJ,GAAI,GAAqB,IAAI,EAAG,CAC5B,MAAO,GACX,MAEJ,KAAK,EAAG,OACJ,GAAI,GAAwB,IAAI,EAAG,CAC/B,MAAO,GACX,OAIZ,MAAO,GAEX,WAAW,EAAS,CAChB,OAAO,KAAK,kBAAkB,EAAS,GAAsB,CAEjE,mBAAmB,EAAS,CACxB,OAAO,KAAK,kBAAkB,EAAS,GAA2B,CAEtE,iBAAiB,EAAS,CACtB,OAAO,KAAK,kBAAkB,EAAS,GAA6B,CAExE,0BAA2B,CACvB,IAAK,IAAI,EAAI,KAAK,SAAU,GAAK,EAAG,IAAK,CACrC,IAAM,EAAK,KAAK,OAAO,GACvB,OAAQ,KAAK,YAAY,gBAAgB,KAAK,MAAM,GAAG,CAAvD,CACI,KAAK,EAAG,KACJ,GAAI,GAAiB,IAAI,EAAG,CACxB,MAAO,GACX,GAAI,GAAsB,IAAI,EAAG,CAC7B,MAAO,GACX,MAEJ,KAAK,EAAG,IACJ,GAAI,GAAqB,IAAI,EAAG,CAC5B,MAAO,GACX,MAEJ,KAAK,EAAG,OACJ,GAAI,GAAwB,IAAI,EAAG,CAC/B,MAAO,GACX,OAIZ,MAAO,GAEX,gBAAgB,EAAS,CACrB,IAAK,IAAI,EAAI,KAAK,SAAU,GAAK,EAAG,IAC5B,QAAK,YAAY,gBAAgB,KAAK,MAAM,GAAG,GAAK,EAAG,KAG3D,OAAQ,KAAK,OAAO,GAApB,CACI,KAAK,EACD,MAAO,GAEX,KAAKA,EAAE,MACP,KAAKA,EAAE,KACH,MAAO,GAInB,MAAO,GAEX,iCAAkC,CAC9B,IAAK,IAAI,EAAI,KAAK,SAAU,GAAK,EAAG,IAC5B,QAAK,YAAY,gBAAgB,KAAK,MAAM,GAAG,GAAK,EAAG,KAG3D,OAAQ,KAAK,OAAO,GAApB,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACH,MAAO,GAEX,KAAKA,EAAE,MACP,KAAKA,EAAE,KACH,MAAO,GAInB,MAAO,GAEX,iBAAiB,EAAS,CACtB,IAAK,IAAI,EAAI,KAAK,SAAU,GAAK,EAAG,IAC5B,QAAK,YAAY,gBAAgB,KAAK,MAAM,GAAG,GAAK,EAAG,KAG3D,OAAQ,KAAK,OAAO,GAApB,CACI,KAAK,EACD,MAAO,GAEX,KAAKA,EAAE,OACP,KAAKA,EAAE,SACH,MAEJ,QACI,MAAO,GAInB,MAAO,GAGX,wBAAyB,CACrB,KAAO,KAAK,eAAiB,QAAa,GAA0B,IAAI,KAAK,aAAa,EACtF,KAAK,KAAK,CAGlB,kCAAmC,CAC/B,KAAO,KAAK,eAAiB,QAAa,GAAqC,IAAI,KAAK,aAAa,EACjG,KAAK,KAAK,CAGlB,oCAAoC,EAAa,CAC7C,KAAO,KAAK,eAAiB,QACzB,KAAK,eAAiB,GACtB,GAAqC,IAAI,KAAK,aAAa,EAC3D,KAAK,KAAK,GC9TX,IACV,SAAU,EAAW,CAClB,EAAU,EAAU,OAAY,GAAK,SACrC,EAAU,EAAU,QAAa,GAAK,YACvC,EAAc,GAAY,EAAE,CAAE,CACjC,IAAM,GAAS,CAAE,KAAM,GAAU,OAAQ,CAE5B,GAAb,KAAmC,CAC/B,YAAY,EAAa,CACrB,KAAK,YAAc,EACnB,KAAK,QAAU,EAAE,CACjB,KAAK,SAAW,KAKpB,+BAA+B,EAAY,EAAS,CAChD,IAAM,EAAa,EAAE,CACf,EAAgB,EAAQ,OACxB,EAAY,KAAK,YAAY,WAAW,EAAW,CACnD,EAAiB,KAAK,YAAY,gBAAgB,EAAW,CACnE,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,QAAQ,OAAQ,IAAK,CAC1C,IAAM,EAAQ,KAAK,QAAQ,GAC3B,GAAI,EAAM,OAAS,GAAU,OACzB,MAEJ,GAAM,CAAE,WAAY,EACpB,GAAI,KAAK,YAAY,WAAWxD,EAAQ,GAAK,GACzC,KAAK,YAAY,gBAAgBA,EAAQ,GAAK,EAAgB,CAC9D,IAAM,EAAe,KAAK,YAAY,YAAYA,EAAQ,CACtD,EAAa,SAAW,GACxB,EAAW,KAAK,CAAE,IAAK,EAAG,MAAO,EAAc,CAAC,EAI5D,OAAO,EAEX,wBAAwB,EAAY,CAChC,GAAI,KAAK,QAAQ,SACb,OACJ,IAAM,EAAU,KAAK,YAAY,YAAY,EAAW,CAClD,EAAa,KAAK,+BAA+B,EAAY,EAAQ,CAC3E,GAAI,EAAW,SACX,OAEJ,IAAM,EAAa,IAAI,IAAI,EAAQ,IAAK,GAAW,CAAC,EAAO,KAAM,EAAO,MAAM,CAAC,CAAC,CAC5E,EAAkB,EAEtB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACxC,IAAM,EAAY,EAAW,GAEzB,EAAU,MAAM,MAAO,GAAU,EAAW,IAAI,EAAM,KAAK,GAAK,EAAM,MAAM,GAC5E,GAAmB,EACf,MACA,KAAK,QAAQ,OAAO,EAAU,IAAK,EAAE,GAMrD,cAAe,CACX,KAAK,QAAQ,QAAQ,GAAO,CAEhC,YAAY,EAAS,EAAO,CACxB,KAAK,wBAAwBA,EAAQ,CACrC,KAAK,QAAQ,QAAQ,CACjB,KAAM,GAAU,QAChB,UACA,QACH,CAAC,CAEN,2BAA2B,EAAS,EAAO,CACvC,IAAM,EAAc,KAAK,QAAQ,QAAQ,KAAK,SAAS,CACvD,KAAK,QAAQ,OAAO,EAAa,EAAG,CAChC,KAAM,GAAU,QAChB,UACA,QACH,CAAC,CAEN,YAAY,EAAO,CACf,IAAM,EAAa,KAAK,QAAQ,QAAQ,EAAM,CAC1C,IAAe,IACf,KAAK,QAAQ,OAAO,EAAY,EAAE,CAQ1C,mBAAoB,CAChB,IAAM,EAAY,KAAK,QAAQ,QAAQ,GAAO,CAC1C,IAAc,GACd,KAAK,QAAQ,OAAS,EAGtB,KAAK,QAAQ,OAAO,EAAG,EAAY,EAAE,CAI7C,kCAAkC,EAAS,CACvC,IAAM,EAAQ,KAAK,QAAQ,KAAM,GAAUmJ,EAAM,OAAS,GAAU,QAAU,KAAK,YAAY,WAAWA,EAAM,QAAQ,GAAK,EAAQ,CACrI,OAAO,GAAS,EAAM,OAAS,GAAU,QAAU,EAAQ,KAE/D,gBAAgB,EAAS,CACrB,OAAO,KAAK,QAAQ,KAAM,GAAU,EAAM,OAAS,GAAU,SAAW,EAAM,UAAYnJ,EAAQ,GC1G1G,MAAa,GAAqB,CAE9B,gBAAiB,CACb,MAAO,CACH,SAAU,YACV,KAAM,GAAc,UACpB,WAAY,GACf,EAEL,wBAAyB,CACrB,MAAO,CACH,SAAU,qBACV,WAAY,GACf,EAEL,cAAc,EAAS,EAAc,EAAO,CACxC,MAAO,CACH,SAAU,EACV,UACA,QACA,eACA,WAAY,EAAE,CACd,WAAY,KACf,EAEL,kBAAkB,EAAM,CACpB,MAAO,CACH,SAAU,WACV,OACA,WAAY,KACf,EAEL,eAAe,EAAO,CAClB,MAAO,CACH,SAAU,QACV,QACA,WAAY,KACf,EAGL,YAAY,EAAY,EAAS,CAC7B,EAAW,WAAW,KAAK,EAAQ,CACnC,EAAQ,WAAa,GAEzB,aAAa,EAAY,EAAS,EAAe,CAC7C,IAAM,EAAe,EAAW,WAAW,QAAQ,EAAc,CACjE,EAAW,WAAW,OAAO,EAAc,EAAG,EAAQ,CACtD,EAAQ,WAAa,GAEzB,mBAAmB,EAAiB,EAAgB,CAChD,EAAgB,QAAU,GAE9B,mBAAmB,EAAiB,CAChC,OAAO,EAAgB,SAE3B,gBAAgB,EAAU,EAAM,EAAU,EAAU,CAChD,IAAM,EAAcQ,EAAS,WAAW,KAAM,GAASb,EAAK,WAAa,gBAAgB,CACzF,GAAI,EACA,EAAY,KAAO,EACnB,EAAY,SAAW,EACvB,EAAY,SAAW,MAEtB,CACD,IAAMA,EAAO,CACT,SAAU,gBACV,OACA,WACA,WACA,WAAY,KACf,CACD,GAAmB,YAAYa,EAAUb,EAAK,GAGtD,gBAAgB,EAAU,EAAM,CAC5B,EAAS,KAAO,GAEpB,gBAAgB,EAAU,CACtB,OAAOa,EAAS,MAEpB,WAAW,EAAM,CACb,GAAIb,EAAK,WAAY,CACjB,IAAM,EAAMA,EAAK,WAAW,WAAW,QAAQA,EAAK,CACpD,EAAK,WAAW,WAAW,OAAO,EAAK,EAAE,CACzC,EAAK,WAAa,OAG1B,WAAW,EAAY,EAAM,CACzB,GAAI,EAAW,WAAW,OAAS,EAAG,CAClC,IAAM,EAAW,EAAW,WAAW,EAAW,WAAW,OAAS,GACtE,GAAI,GAAmB,WAAW,EAAS,CAAE,CACzC,EAAS,OAASgB,EAClB,QAGR,GAAmB,YAAY,EAAY,GAAmB,eAAeA,EAAK,CAAC,EAEvF,iBAAiB,EAAY,EAAM,EAAe,CAC9C,IAAM,EAAW,EAAW,WAAW,EAAW,WAAW,QAAQ,EAAc,CAAG,GAClF,GAAY,GAAmB,WAAW,EAAS,CACnD,EAAS,OAASA,EAGlB,GAAmB,aAAa,EAAY,GAAmB,eAAeA,EAAK,CAAE,EAAc,EAG3G,gBAAgB,EAAW,EAAO,CAC9B,IAAM,EAAoB,IAAI,IAAI,EAAU,MAAM,IAAK,GAAS,EAAK,KAAK,CAAC,CAC3E,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,IACzB,EAAkB,IAAI,EAAM,GAAG,KAAK,EACrC,EAAU,MAAM,KAAK,EAAM,GAAG,EAK1C,cAAc,EAAM,CAChB,OAAOhB,EAAK,WAAW,IAE3B,cAAc,EAAM,CAChB,OAAOA,EAAK,YAEhB,cAAc,EAAM,CAChB,OAAOA,EAAK,YAEhB,YAAY,EAAS,CACjB,OAAOK,EAAQ,OAGnB,WAAW,EAAS,CAChB,OAAOA,EAAQ,SAEnB,gBAAgB,EAAS,CACrB,OAAOA,EAAQ,cAEnB,mBAAmB,EAAU,CACzB,OAAO,EAAS,OAEpB,sBAAsB,EAAa,CAC/B,OAAO,EAAY,MAEvB,wBAAwB,EAAa,CACjC,OAAO,EAAY,MAEvB,4BAA4B,EAAa,CACrC,OAAO,EAAY,UAEvB,4BAA4B,EAAa,CACrC,OAAO,EAAY,UAGvB,WAAW,EAAM,CACb,OAAOL,EAAK,WAAa,SAE7B,cAAc,EAAM,CAChB,OAAOA,EAAK,WAAa,YAE7B,mBAAmB,EAAM,CACrB,OAAOA,EAAK,WAAa,iBAE7B,cAAc,EAAM,CAChB,OAAO,OAAO,UAAU,eAAe,KAAKA,EAAM,UAAU,EAGhE,0BAA0B,EAAM,EAAU,CACtC,EAAK,mBAAqB6I,GAE9B,0BAA0B,EAAM,CAC5B,OAAO7I,EAAK,oBAEhB,6BAA6B,EAAM,EAAa,CAC5C,EAAK,mBAAqB,CAAE,GAAGA,EAAK,mBAAoB,GAAG,EAAa,EAE/E,CCvKD,IAAM,GAAiC,miEAwDtC,CACK,GAA8C,CAChD,GAAG,GACH,mCACA,uCACH,CACK,GAAyB,IAAI,IAAI,CACnC,uCACA,qCACA,OACH,CAAC,CACI,GAAoC,CAAC,mCAAoC,uCAAuC,CAChH,GAAmD,CACrD,GAAG,GACH,mCACA,uCACH,CAED,SAAS,GAAU,EAAU,EAAU,CACnC,OAAO,EAAS,KAAM,GAAW,EAAS,WAAW,EAAO,CAAC,CAGjE,SAAgB,GAAa,EAAO,CAChC,OAAQ,EAAM,eACV,EAAM,WAAa,OAClB,EAAM,WAAa,MAAQ,EAAM,kCAE1C,SAAgB,GAAgB,EAAO,CACnC,GAAI,EAAM,cACN,OAAO,GAAc,OAEzB,GAAM,CAAE,YAAa,EACrB,GAAI,GAAY,EAAS,aAAa,gEAClC,OAAO,GAAc,OAEzB,GAAI,CAAE,YAAa,EACnB,GAAI,IAAa,KAAM,CAEnB,GADA,EAAW,EAAS,aAAa,CAC7B,GAAuB,IAAI,EAAS,CACpC,OAAO,GAAc,OAEzB,IAAI,EAAW,IAAa,KAAO,GAA8C,GACjF,GAAI,GAAU,EAAU,EAAS,CAC7B,OAAO,GAAc,OAIzB,GAFA,EACI,IAAa,KAAO,GAAoC,GACxD,GAAU,EAAU,EAAS,CAC7B,OAAO,GAAc,eAG7B,OAAO,GAAc,UC9GzB,IAAM,GAAa,CACf,UAAW,YACX,gBAAiB,wBACpB,CAGK,GAA+B,gBAC/B,GAA2B,IAAI,IAAI,ovBA2DxC,CAAC,IAAK,GAAS,CAAC,EAAK,aAAa,CAAE,EAAK,CAAC,CAAC,CACtC,GAA2B,IAAI,IAAI,CACrC,CAAC,gBAAiB,CAAE,OAAQ,QAAS,KAAM,UAAW,UAAW,EAAG,MAAO,CAAC,CAC5E,CAAC,gBAAiB,CAAE,OAAQ,QAAS,KAAM,UAAW,UAAW,EAAG,MAAO,CAAC,CAC5E,CAAC,aAAc,CAAE,OAAQ,QAAS,KAAM,OAAQ,UAAW,EAAG,MAAO,CAAC,CACtE,CAAC,aAAc,CAAE,OAAQ,QAAS,KAAM,OAAQ,UAAW,EAAG,MAAO,CAAC,CACtE,CAAC,aAAc,CAAE,OAAQ,QAAS,KAAM,OAAQ,UAAW,EAAG,MAAO,CAAC,CACtE,CAAC,cAAe,CAAE,OAAQ,QAAS,KAAM,QAAS,UAAW,EAAG,MAAO,CAAC,CACxE,CAAC,aAAc,CAAE,OAAQ,QAAS,KAAM,OAAQ,UAAW,EAAG,MAAO,CAAC,CACtE,CAAC,WAAY,CAAE,OAAQ,MAAO,KAAM,OAAQ,UAAW,EAAG,IAAK,CAAC,CAChE,CAAC,YAAa,CAAE,OAAQ,MAAO,KAAM,QAAS,UAAW,EAAG,IAAK,CAAC,CAClE,CAAC,QAAS,CAAE,OAAQ,GAAI,KAAM,QAAS,UAAW,EAAG,MAAO,CAAC,CAC7D,CAAC,cAAe,CAAE,OAAQ,QAAS,KAAM,QAAS,UAAW,EAAG,MAAO,EAC1E,CAAC,CAEF,MAAa,GAA+B,IAAI,IAAI,ocAqCnD,CAAC,IAAK,GAAO,CAAC,EAAG,aAAa,CAAE,EAAG,CAAC,CAAC,CAEtC,IAAM,GAAwB,IAAI,IAAI,CAClC6D,EAAE,EACFA,EAAE,IACFA,EAAE,WACFA,EAAE,KACFA,EAAE,GACFA,EAAE,OACFA,EAAE,KACFA,EAAE,GACFA,EAAE,IACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,MACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,KACFA,EAAE,GACFA,EAAE,EACFA,EAAE,IACFA,EAAE,GACFA,EAAE,QACFA,EAAE,KACFA,EAAE,KACFA,EAAE,KACFA,EAAE,GACFA,EAAE,EACFA,EAAE,IACFA,EAAE,KACFA,EAAE,EACFA,EAAE,MACFA,EAAE,KACFA,EAAE,OACFA,EAAE,OACFA,EAAE,IACFA,EAAE,IACFA,EAAE,MACFA,EAAE,GACFA,EAAE,EACFA,EAAE,GACFA,EAAE,IACL,CAAC,CAEF,SAAgB,GAAW,EAAe,CACtC,IAAM,EAAK,EAAc,MAGzB,OAFwB,IAAOA,EAAE,MAC7B,EAAc,MAAM,MAAM,CAAE,UAAW,IAAS,GAAM,OAAS,IAAS,GAAM,MAAQ,IAAS,GAAM,KAAK,EACpF,GAAsB,IAAI,EAAG,CAG3D,SAAgB,GAAuB,EAAO,CAC1C,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,OAAQ,IACpC,GAAI,EAAM,MAAM,GAAG,uBAA8B,CAC7C,EAAM,MAAM,GAAG,KAAO,GACtB,OAIZ,SAAgB,GAAoB,EAAO,CACvC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,OAAQ,IAAK,CACzC,IAAM,EAAmB,GAAyB,IAAI,EAAM,MAAM,GAAG,KAAK,CACtE,GAAoB,OACpB,EAAM,MAAM,GAAG,KAAO,IAIlC,SAAgB,GAAoB,EAAO,CACvC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,OAAQ,IAAK,CACzC,IAAM,EAAoB,GAAyB,IAAI,EAAM,MAAM,GAAG,KAAK,CACvE,IACA,EAAM,MAAM,GAAG,OAAS,EAAkB,OAC1C,EAAM,MAAM,GAAG,KAAO,EAAkB,KACxC,EAAM,MAAM,GAAG,UAAY,EAAkB,YAIzD,SAAgB,GAAsB,EAAO,CACzC,IAAM,EAAkB,GAA6B,IAAI,EAAM,QAAQ,CACnE,GAAmB,OACnB,EAAM,QAAU,EAChB,EAAM,MAAQ,GAAS,EAAM,QAAQ,EAI7C,SAAS,GAA6B,EAAI,EAAI,CAC1C,OAAO,IAAO,EAAG,SAAW,IAAOA,EAAE,IAAM,IAAOA,EAAE,IAAM,IAAOA,EAAE,IAAM,IAAOA,EAAE,IAAM,IAAOA,EAAE,OAErG,SAAS,GAAuB,EAAI,EAAI,EAAO,CAC3C,GAAI,IAAO,EAAG,QAAU,IAAOA,EAAE,oBACxB,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,IAC9B,GAAI,EAAM,GAAG,OAAS,GAAM,SAAU,CAClC,IAAM,EAAQ,EAAM,GAAG,MAAM,aAAa,CAC1C,OAAO,IAAU,GAAW,WAAa,IAAU,GAAW,iBAI1E,OAAO,IAAO,EAAG,MAAQ,IAAOA,EAAE,gBAAkB,IAAOA,EAAE,MAAQ,IAAOA,EAAE,OAElF,SAAgB,GAAmB,EAAI,EAAI,EAAO,EAAW,CACzD,OAAU,CAAC,GAAa,IAAc,EAAG,OAAS,GAAuB,EAAI,EAAI,EAAM,GACjF,CAAC,GAAa,IAAc,EAAG,SAAW,GAA6B,EAAI,EAAG,CClNxF,IAAI,GACH,SAAU,EAAe,CACtB,EAAc,EAAc,QAAa,GAAK,UAC9C,EAAc,EAAc,YAAiB,GAAK,cAClD,EAAc,EAAc,YAAiB,GAAK,cAClD,EAAc,EAAc,QAAa,GAAK,UAC9C,EAAc,EAAc,kBAAuB,GAAK,oBACxD,EAAc,EAAc,WAAgB,GAAK,aACjD,EAAc,EAAc,QAAa,GAAK,UAC9C,EAAc,EAAc,KAAU,GAAK,OAC3C,EAAc,EAAc,SAAc,GAAK,WAC/C,EAAc,EAAc,cAAmB,GAAK,gBACpD,EAAc,EAAc,WAAgB,IAAM,aAClD,EAAc,EAAc,gBAAqB,IAAM,kBACvD,EAAc,EAAc,cAAmB,IAAM,gBACrD,EAAc,EAAc,OAAY,IAAM,SAC9C,EAAc,EAAc,QAAa,IAAM,UAC/C,EAAc,EAAc,UAAe,IAAM,YACjD,EAAc,EAAc,mBAAwB,IAAM,qBAC1D,EAAc,EAAc,YAAiB,IAAM,cACnD,EAAc,EAAc,WAAgB,IAAM,aAClD,EAAc,EAAc,YAAiB,IAAM,cACnD,EAAc,EAAc,eAAoB,IAAM,iBACtD,EAAc,EAAc,iBAAsB,IAAM,mBACxD,EAAc,EAAc,qBAA0B,IAAM,yBAC7D,CAAkB,GAAgB,EAAE,CAAE,CACzC,IAAM,GAAW,CACb,UAAW,GACX,SAAU,GACV,YAAa,GACb,QAAS,GACT,OAAQ,GACR,UAAW,GACd,CACK,GAAuB,IAAI,IAAI,CAACA,EAAE,MAAOA,EAAE,MAAOA,EAAE,MAAOA,EAAE,MAAOA,EAAE,GAAG,CAAC,CAC1E,GAAuB,CACzB,iBAAkB,GAClB,uBAAwB,GACxB,YAAa,GACb,aAAc,KACjB,CAEY,GAAb,KAAoB,CAChB,YAAY,EAAS,EAErB,EAAkB,KAElB,EAAgB,KAAM,CAClB,KAAK,gBAAkB,EACvB,KAAK,cAAgB,EACrB,KAAK,aAAe,KACpB,KAAK,QAAU,GAEf,KAAK,cAAgB,EAAc,QAEnC,KAAK,sBAAwB,EAAc,QAE3C,KAAK,YAAc,KAEnB,KAAK,YAAc,KAEnB,KAAK,iBAAmB,GAOxB,KAAK,uBAAyB,EAAE,CAEhC,KAAK,uBAAyB,EAAE,CAEhC,KAAK,sCAAwC,GAE7C,KAAK,WAAa,GAElB,KAAK,gBAAkB,GAEvB,KAAK,uBAAyB,GAC9B,KAAK,QAAU,CACX,GAAG,GACH,GAAG,EACN,CACD,KAAK,YAAc,KAAK,QAAQ,YAChC,KAAK,aAAe,KAAK,QAAQ,aAE7B,KAAK,eACL,KAAK,QAAQ,uBAAyB,IAE1C,KAAK,SAAWhD,GAAsD,KAAK,YAAY,gBAAgB,CACvG,KAAK,UAAY,IAAI,GAAU,KAAK,QAAS,KAAK,CAClD,KAAK,yBAA2B,IAAI,GAAsB,KAAK,YAAY,CAC3E,KAAK,kBAAoB,EAAkB,GAAS,KAAK,YAAY,WAAW,EAAgB,CAAC,CAAGgD,EAAE,QACtG,KAAK,iBAAiB,GAA2E,KAAK,SAAU,KAAK,kBAAkB,CACvI,KAAK,aAAe,IAAI,GAAiB,KAAK,SAAU,KAAK,YAAa,KAAK,CAGnF,OAAO,MAAM,EAAM,EAAS,CACxB,IAAM,EAAS,IAAI,KAAK,EAAQ,CAEhC,OADA,EAAO,UAAU,MAAMb,EAAM,GAAK,CAC3B,EAAO,SAElB,OAAO,kBAAkB,EAAiB,EAAS,CAC/C,IAAM,EAAO,CACT,GAAG,GACH,GAAG,EACN,CAGD,CAA4E,GAAkB,EAAK,YAAY,cAAcyG,EAAG,SAAU,EAAG,KAAM,EAAE,CAAC,CAItJ,IAAM,EAAe,EAAK,YAAY,cAAc,eAAgB,EAAG,KAAM,EAAE,CAAC,CAC1E,EAAS,IAAI,KAAK,EAAM,EAAc,EAAgB,CAQ5D,OAPI,EAAO,oBAAsB5F,EAAE,UAC/B,EAAO,uBAAuB,QAAQ,EAAc,YAAY,CAEpE,EAAO,kCAAkC,CACzC,EAAO,wBAAwB,CAC/B,EAAO,qBAAqB,CAC5B,EAAO,4BAA4B,CAC5B,EAEX,aAAc,CACV,IAAM,EAAc,KAAK,YAAY,cAAc,KAAK,SAAS,CAC3DR,EAAW,KAAK,YAAY,wBAAwB,CAE1D,OADA,KAAK,YAAY,EAAaA,EAAS,CAChCA,EAIX,KAAK,EAAO,EAAM,EAAa,CAE3B,GAAI,CAAC,KAAK,aACN,OACJ,IAAM,EAAY,EAAM,UAA2C,GAC7D,EAAM,CACR,OACA,UAAW,EAAI,UACf,SAAU,EAAI,SACd,YAAa,EAAI,YACjB,QAAS,EAAc,EAAI,UAAY,EAAI,QAC3C,OAAQ,EAAc,EAAI,SAAW,EAAI,OACzC,UAAW,EAAc,EAAI,YAAc,EAAI,UAClD,CACD,KAAK,aAAa,EAAI,CAI1B,WAAW,EAAM,EAAK,EAAO,CACzB,IAAIiG,EAAI,GACP,GAAM,EAAK,KAAK,aAAa,aAAgB,MAAiC,EAAG,KAAKA,EAAItJ,EAAK,CAC5F,GAAS,KAAK,aAAa,SAAW,GACtC,KAAK,iBAAiBA,EAAM,EAAI,CAGxC,UAAU,EAAM,EAAO,CACnB,IAAIsJ,EAAI,EAKR,GAJI,KAAK,QAAQ,wBACb,KAAK,gBAAgBtJ,EAAM,KAAK,aAAa,EAEhD,GAAM,EAAK,KAAK,aAAa,YAAe,MAAiC,EAAG,KAAKsJ,EAAItJ,EAAM,KAAK,aAAa,QAAQ,CACtH,EAAO,CACP,IAAI,EACA,EACA,KAAK,aAAa,WAAa,GAAK,KAAK,iBACzC,EAAU,KAAK,gBACf,EAAe,KAAK,mBAGnB,2BAA4B,KAAK,aAEtC,KAAK,iBAAiB,EAAS,EAAa,EAGpD,iBAAiB,EAAS,EAAK,CAC3B,IAAM,EAAS,IAAY,KAAK,UAAa,GAAW,KAAK,YAAY,gBAAgB,EAAQ,GAAK,EAAG,KACzG,KAAK,iBAAmB,CAAC,EACzB,KAAK,UAAU,cACX,CAAC,GAAU,IAAY,QAAa,IAAQ,QAAa,CAAC,KAAK,oBAAoB,EAAK,EAAQ,CAGxG,qBAAqB,EAAc,EAAoB,CACnD,KAAK,eAAe,EAAc,EAAG,KAAK,CAC1C,KAAK,UAAU,MAAQ,EACvB,KAAK,sBAAwB,KAAK,cAClC,KAAK,cAAgB,EAAc,KAEvC,0BAA2B,CACvB,KAAK,cAAgB,EAAc,KACnC,KAAK,sBAAwB,EAAc,QAC3C,KAAK,UAAU,MAAQ,EAAc,UAIzC,4BAA6B,CACzB,OAAO,KAAK,aAAa,WAAa,GAAK,KAAK,gBAC1C,KAAK,gBACL,KAAK,aAAa,QAG5B,4BAA6B,CACzB,IAAIA,EAAO,KAAK,gBAChB,KAAOA,GAAM,CACT,GAAI,KAAK,YAAY,WAAWA,EAAK,GAAKyJ,EAAG,KAAM,CAC/C,KAAK,YAAczJ,EACnB,MAEJ,EAAO,KAAK,YAAY,cAAcA,EAAK,EAGnD,kCAAmC,CAC3B,MAAC,KAAK,iBAAmB,KAAK,YAAY,gBAAgB,KAAK,gBAAgB,GAAK,EAAG,MAG3F,OAAQ,KAAK,kBAAb,CACI,KAAK6D,EAAE,MACP,KAAKA,EAAE,SACH,KAAK,UAAU,MAAQ,EAAc,OACrC,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,IACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACP,KAAKA,EAAE,SACP,KAAKA,EAAE,SACH,KAAK,UAAU,MAAQ,EAAc,QACrC,MAEJ,KAAKA,EAAE,OACH,KAAK,UAAU,MAAQ,EAAc,YACrC,MAEJ,KAAKA,EAAE,UACH,KAAK,UAAU,MAAQ,EAAc,UACrC,MAEJ,UAMR,iBAAiB,EAAO,CACpB,IAAM,EAAO,EAAM,MAAQ,GACrB,EAAW,EAAM,UAAY,GAC7B,EAAW,EAAM,UAAY,GAEnC,GADA,KAAK,YAAY,gBAAgB,KAAK,SAAU,EAAM,EAAU,EAAS,CACrE,EAAM,SAAU,CAEhB,IAAM,EADmB,KAAK,YAAY,cAAc,KAAK,SAAS,CACjC,KAAM,GAAS,KAAK,YAAY,mBAAmB7D,EAAK,CAAC,CAC1F,GACA,KAAK,YAAY,0BAA0B,EAAa,EAAM,SAAS,EAKnF,qBAAqB,EAAS,EAAU,CACpC,GAAI,KAAK,QAAQ,uBAAwB,CACrC,IAAM,EAAM6I,GAAY,CACpB,GAAGA,EACH,SAAUA,EACb,CACD,KAAK,YAAY,0BAA0BxI,EAAS,EAAI,CAE5D,GAAI,KAAK,gCAAgC,CACrC,KAAK,qBAAqBA,EAAQ,KAEjC,CACD,IAAM,EAAS,KAAK,aAAa,yBACjC,KAAK,YAAY,YAAY,GAAgD,KAAK,SAAUA,EAAQ,EAQ5G,eAAe,EAAO,EAAc,CAChC,IAAMA,EAAU,KAAK,YAAY,cAAc,EAAM,QAAS,EAAc,EAAM,MAAM,CACxF,KAAK,qBAAqBA,EAAS,EAAM,SAAS,CAGtD,eAAe,EAAO,EAAc,CAChC,IAAMA,EAAU,KAAK,YAAY,cAAc,EAAM,QAAS,EAAc,EAAM,MAAM,CACxF,KAAK,qBAAqBA,EAAS,EAAM,SAAS,CAClD,KAAK,aAAa,KAAKA,EAAS,EAAM,MAAM,CAGhD,mBAAmB,EAAS,EAAO,CAC/B,IAAMA,EAAU,KAAK,YAAY,cAAc,EAAS,EAAG,KAAM,EAAE,CAAC,CACpE,KAAK,qBAAqBA,EAAS,KAAK,CACxC,KAAK,aAAa,KAAKA,EAAS,EAAM,CAG1C,gBAAgB,EAAO,CACnB,IAAM,EAAO,KAAK,YAAY,cAAc,EAAM,QAAS,EAAG,KAAM,EAAM,MAAM,CAC1EkB,EAAU,KAAK,YAAY,wBAAwB,CACzD,KAAK,YAAY,mBAAmB,EAAMA,EAAQ,CAClD,KAAK,qBAAqB,EAAM,EAAM,SAAS,CAC/C,KAAK,aAAa,KAAK,EAAM,EAAM,MAAM,CACrC,KAAK,QAAQ,wBACb,KAAK,YAAY,0BAA0BA,EAAS,KAAK,CAGjE,wBAAyB,CACrB,IAAMlB,EAAU,KAAK,YAAY,cAAcoJ,EAAG,KAAM,EAAG,KAAM,EAAE,CAAC,CAChE,KAAK,QAAQ,wBACb,KAAK,YAAY,0BAA0BpJ,EAAS,KAAK,CAC7D,KAAK,YAAY,YAAY,KAAK,aAAa,QAASA,EAAQ,CAChE,KAAK,aAAa,KAAKA,EAASwD,EAAE,KAAK,CAG3C,mBAAmB,EAAO,EAAQ,CAC9B,IAAM,EAAc,KAAK,YAAY,kBAAkB,EAAM,KAAK,CAClE,KAAK,YAAY,YAAY,EAAQ,EAAY,CAC7C,KAAK,QAAQ,wBACb,KAAK,YAAY,0BAA0B,EAAa,EAAM,SAAS,CAI/E,kBAAkB,EAAO,CACrB,IAAI,EACA,EAcJ,GAbI,KAAK,gCAAgC,EACpC,2BAA4B,KAAK,8BAA8B,CAC5D,EACA,KAAK,YAAY,iBAAiB,EAAQ,EAAM,MAAO,EAAc,CAGrE,KAAK,YAAY,WAAW,EAAQ,EAAM,MAAM,GAIpD,EAAS,KAAK,aAAa,yBAC3B,KAAK,YAAY,WAAW,EAAQ,EAAM,MAAM,EAEhD,CAAC,EAAM,SACP,OACJ,IAAM,EAAW,KAAK,YAAY,cAAc,EAAO,CACjD,EAAc,EAAgB,EAAS,YAAY,EAAc,CAAG,EAAS,OAC7E,EAAW,EAAS,EAAc,GAGxC,GADc,KAAK,YAAY,0BAA0B,EAAS,CACvD,CACP,GAAM,CAAE,UAAS,SAAQ,aAAc,EAAM,SAC7C,KAAK,YAAY,6BAA6B,EAAU,CAAE,UAAS,SAAQ,YAAW,CAAC,MAElF,KAAK,QAAQ,wBAClB,KAAK,YAAY,0BAA0B,EAAU,EAAM,SAAS,CAI5E,YAAY,EAAO,EAAW,CAC1B,IAAK,IAAI,EAAQ,KAAK,YAAY,cAAc,EAAM,CAAE,EAAO,EAAQ,KAAK,YAAY,cAAc,EAAM,CACxG,KAAK,YAAY,WAAW,EAAM,CAClC,KAAK,YAAY,YAAY,EAAW,EAAM,CAItD,gBAAgB,EAAS,EAAc,CACnC,GAAI,KAAK,YAAY,0BAA0BxD,EAAQ,EAAI,EAAa,SAAU,CAC9E,IAAM,EAAQ,EAAa,SACrB,EAAK,KAAK,YAAY,WAAWA,EAAQ,CACzC,EAGN,EAAa,OAAS,EAAU,SAAW,IAAO,EAAa,QACzD,CACE,OAAQ,CAAE,GAAG,EAAO,CACpB,QAAS,EAAM,QACf,OAAQ,EAAM,OACd,UAAW,EAAM,UACpB,CACC,CACE,QAAS,EAAM,UACf,OAAQ,EAAM,SACd,UAAW,EAAM,YACpB,CACL,KAAK,YAAY,6BAA6BA,EAAS,EAAO,EAItE,2CAA2C,EAAO,CAE9C,GAAI,CAAC,KAAK,iBACN,MAAO,GACX,IAAI,EACA,EAaJ,OAZI,KAAK,aAAa,WAAa,GAAK,KAAK,iBACzC,EAAU,KAAK,gBACf,EAAe,KAAK,mBAGnB,2BAA4B,KAAK,aAElC,EAAM,QAAUwD,EAAE,KAClB,KAAK,YAAY,WAAW,EAAQ,GAAK4F,EAAG,gBAC5C,KAAK,YAAY,gBAAgB,EAAQ,GAAK,EAAG,OAC1C,GAIX,KAAK,UAAU,gBAGT,EAAM,QAAU5F,EAAE,QAAU,EAAM,QAAUA,EAAE,aAC5C,IAAiB,QACjB,CAAC,KAAK,oBAAoB,EAAc,EAAS,EAAG,KAAK,CAGrE,cAAc,EAAO,CACjB,OAAQ,EAAM,KAAd,CACI,KAAK,EAAU,UACX,KAAK,YAAY,EAAM,CACvB,MAEJ,KAAK,EAAU,eACX,KAAK,gBAAgB,EAAM,CAC3B,MAEJ,KAAK,EAAU,QACX,KAAK,UAAU,EAAM,CACrB,MAEJ,KAAK,EAAU,QACX,KAAK,UAAU,EAAM,CACrB,MAEJ,KAAK,EAAU,UACX,KAAK,iBAAiB,EAAM,CAC5B,MAEJ,KAAK,EAAU,QACX,KAAK,SAAS,EAAM,CACpB,MAEJ,KAAK,EAAU,IACX,KAAK,MAAM,EAAM,CACjB,MAEJ,KAAK,EAAU,qBACX,KAAK,sBAAsB,EAAM,CACjC,OAMZ,oBAAoB,EAAK,EAAS,EAAW,CACzC,IAAM,EAAK,KAAK,YAAY,gBAAgBxD,EAAQ,CAC9C,EAAQ,KAAK,YAAY,YAAYA,EAAQ,CACnD,OAAOqJ,GAAkC,EAAK,EAAI,EAAO,EAAU,CAIvE,sCAAuC,CACnC,IAAM,EAAa,KAAK,yBAAyB,QAAQ,OACzD,GAAI,EAAY,CACZ,IAAM,EAAW,KAAK,yBAAyB,QAAQ,UAAW,GAAU,EAAM,OAAS,GAAU,QAAU,KAAK,aAAa,SAAS,EAAM,QAAQ,CAAC,CACnJ,EAAY,IAAa,GAAK,EAAa,EAAI,EAAW,EAChE,IAAK,IAAI,EAAI,EAAW,GAAK,EAAG,IAAK,CACjC,IAAM,EAAQ,KAAK,yBAAyB,QAAQ,GACpD,KAAK,eAAe,EAAM,MAAO,KAAK,YAAY,gBAAgB,EAAM,QAAQ,CAAC,CACjF,EAAM,QAAU,KAAK,aAAa,UAM9C,iBAAkB,CACd,KAAK,aAAa,wBAAwB,CAC1C,KAAK,aAAa,yBAAyB,CAC3C,KAAK,yBAAyB,mBAAmB,CACjD,KAAK,cAAgB,EAAc,OAGvC,gBAAiB,CACb,KAAK,aAAa,oCAAoC7F,EAAE,EAAE,CAC1D,KAAK,aAAa,sBAAsBA,EAAE,EAAE,CAIhD,qBAAsB,CAClB,IAAK,IAAI,EAAI,KAAK,aAAa,SAAU,GAAK,EAAG,IAE7C,OAAQ,IAAM,GAAK,KAAK,gBAAkB,KAAK,kBAAoB,KAAK,aAAa,OAAO,GAA5F,CACI,KAAKA,EAAE,GACH,KAAK,cAAgB,EAAc,OACnC,OAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACH,KAAK,cAAgB,EAAc,cACnC,OAEJ,KAAKA,EAAE,QACH,KAAK,cAAgB,EAAc,WACnC,OAEJ,KAAKA,EAAE,SACH,KAAK,cAAgB,EAAc,gBACnC,OAEJ,KAAKA,EAAE,MACH,KAAK,cAAgB,EAAc,SACnC,OAEJ,KAAKA,EAAE,KACH,KAAK,cAAgB,EAAc,QACnC,OAEJ,KAAKA,EAAE,SACH,KAAK,cAAgB,EAAc,YACnC,OAEJ,KAAKA,EAAE,OACH,KAAK,6BAA6B,EAAE,CACpC,OAEJ,KAAKA,EAAE,SACH,KAAK,cAAgB,KAAK,uBAAuB,GACjD,OAEJ,KAAKA,EAAE,KACH,KAAK,cAAgB,KAAK,YAAc,EAAc,WAAa,EAAc,YACjF,OAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAAI,EAAI,EAAG,CACP,KAAK,cAAgB,EAAc,QACnC,OAEJ,MAEJ,KAAKA,EAAE,KACH,GAAI,EAAI,EAAG,CACP,KAAK,cAAgB,EAAc,QACnC,OAEJ,MAIZ,KAAK,cAAgB,EAAc,QAGvC,6BAA6B,EAAW,CACpC,GAAI,EAAY,EACZ,IAAK,IAAI,EAAI,EAAY,EAAG,EAAI,EAAG,IAAK,CACpC,IAAM,EAAK,KAAK,aAAa,OAAO,GACpC,GAAI,IAAOA,EAAE,SACT,SAEK,IAAOA,EAAE,MAAO,CACrB,KAAK,cAAgB,EAAc,mBACnC,QAIZ,KAAK,cAAgB,EAAc,UAIvC,gCAAgC,EAAI,CAChC,OAAO,GAAqB,IAAI,EAAG,CAGvC,gCAAiC,CAC7B,OAAQ,KAAK,wBACT,KAAK,aAAa,eAAiB,QACnC,KAAK,gCAAgC,KAAK,aAAa,aAAa,CAG5E,8BAA+B,CAC3B,IAAK,IAAI,EAAI,KAAK,aAAa,SAAU,GAAK,EAAG,IAAK,CAClD,IAAM,EAAc,KAAK,aAAa,MAAM,GAC5C,OAAQ,KAAK,aAAa,OAAO,GAAjC,CACI,KAAKA,EAAE,SACH,GAAI,KAAK,YAAY,gBAAgB,EAAY,GAAK,EAAG,KACrD,MAAO,CAAE,OAAQ,KAAK,YAAY,mBAAmB,EAAY,CAAE,cAAe,KAAM,CAE5F,MAEJ,KAAKA,EAAE,MAAO,CACV,IAAM,EAAS,KAAK,YAAY,cAAc,EAAY,CAI1D,OAHI,EACO,CAAE,SAAQ,cAAe,EAAa,CAE1C,CAAE,OAAQ,KAAK,aAAa,MAAM,EAAI,GAAI,cAAe,KAAM,CAE1E,UAIR,MAAO,CAAE,OAAQ,KAAK,aAAa,MAAM,GAAI,cAAe,KAAM,CAGtE,qBAAqB,EAAS,CAC1B,IAAMgF,EAAW,KAAK,8BAA8B,CAChDA,EAAS,cACT,KAAK,YAAY,aAAaA,EAAS,OAAQxI,EAASwI,EAAS,cAAc,CAG/E,KAAK,YAAY,YAAYA,EAAS,OAAQxI,EAAQ,CAK9D,kBAAkB,EAAS,EAAI,CAC3B,IAAM,EAAK,KAAK,YAAY,gBAAgBA,EAAQ,CACpD,OAAO,GAAiB,GAAI,IAAI,EAAG,CAGvC,YAAY,EAAO,CAEf,GADA,KAAK,gBAAkB,GACnB,KAAK,UAAU,cAAe,CAC9B,GAA0B,KAAM,EAAM,CACtC,OAEJ,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,QACf,GAAY,KAAM,EAAM,CACxB,MAEJ,KAAK,EAAc,kBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,KAAK,EAAc,WACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,QACnB,KAAK,EAAc,WACnB,KAAK,EAAc,QACnB,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,KACnB,KAAK,EAAc,UACnB,KAAK,EAAc,mBACf,KAAK,kBAAkB,EAAM,CAC7B,MAEJ,KAAK,EAAc,SACnB,KAAK,EAAc,cACnB,KAAK,EAAc,OACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,cACf,GAAqB,KAAM,EAAM,CACjC,MAEJ,KAAK,EAAc,gBACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,WACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,iBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,UAKR,gBAAgB,EAAO,CAEnB,GADA,KAAK,gBAAkB,GACnB,KAAK,UAAU,cAAe,CAC9B,GAA8B,KAAM,EAAM,CAC1C,OAEJ,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,QACf,GAAY,KAAM,EAAM,CACxB,MAEJ,KAAK,EAAc,kBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,KAAK,EAAc,WACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,KACf,KAAK,kBAAkB,EAAM,CAC7B,MAEJ,KAAK,EAAc,SACnB,KAAK,EAAc,cACnB,KAAK,EAAc,OACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,gBACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,WACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,iBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,UAKR,UAAU,EAAO,CAEb,GADA,KAAK,gBAAkB,GACnB,KAAK,iBAAkB,CACvB,GAAc,KAAM,EAAM,CAC1B,OAEJ,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACnB,KAAK,EAAc,YACnB,KAAK,EAAc,YACnB,KAAK,EAAc,QACnB,KAAK,EAAc,kBACnB,KAAK,EAAc,WACnB,KAAK,EAAc,QACnB,KAAK,EAAc,SACnB,KAAK,EAAc,WACnB,KAAK,EAAc,gBACnB,KAAK,EAAc,cACnB,KAAK,EAAc,OACnB,KAAK,EAAc,QACnB,KAAK,EAAc,UACnB,KAAK,EAAc,mBACnB,KAAK,EAAc,YACnB,KAAK,EAAc,YACnB,KAAK,EAAc,eACf,GAAc,KAAM,EAAM,CAC1B,MAEJ,KAAK,EAAc,cACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,WACf,GAA+B,KAAM,EAAM,CAC3C,MAEJ,KAAK,EAAc,iBACnB,KAAK,EAAc,qBACf,GAAwB,KAAM,EAAM,CACpC,MAEJ,UAKR,UAAU,EAAO,CAEb,OADA,KAAK,gBAAkB,GACf,KAAK,cAAb,CACI,KAAK,EAAc,QACf,GAAqB,KAAM,EAAM,CACjC,MAEJ,KAAK,EAAc,YACnB,KAAK,EAAc,QACnB,KAAK,EAAc,kBACnB,KAAK,EAAc,WACf,KAAK,KAAK,EAAO,EAAI,iBAAiB,CACtC,MAEJ,KAAK,EAAc,cACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,UAKR,WAAW,EAAO,CACd,KAAK,gBAAkB,GACvB,KAAK,aAAe,EACpB,KAAK,iBAAiB,EAAM,CACxB,EAAM,aAAe,CAAC,EAAM,gBAC5B,KAAK,KAAK,EAAO,EAAI,8CAA8C,CAc3E,iBAAiB,EAAO,CAChB,KAAK,2CAA2C,EAAM,CACtD,GAAyB,KAAM,EAAM,CAGrC,KAAK,+BAA+B,EAAM,CAIlD,+BAA+B,EAAO,CAClC,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,YACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,YACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,QACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,kBACf,GAAuB,KAAM,EAAM,CACnC,MAEJ,KAAK,EAAc,WACf,GAAkB,KAAM,EAAM,CAC9B,MAEJ,KAAK,EAAc,QACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,SACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,cACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,WACf,GAAkB,KAAM,EAAM,CAC9B,MAEJ,KAAK,EAAc,gBACf,GAAsB,KAAM,EAAM,CAClC,MAEJ,KAAK,EAAc,cACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,KAAK,EAAc,OACf,GAAc,KAAM,EAAM,CAC1B,MAEJ,KAAK,EAAc,QACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,UACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,mBACf,GAAwB,KAAM,EAAM,CACpC,MAEJ,KAAK,EAAc,YACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,WACf,GAAkB,KAAM,EAAM,CAC9B,MAEJ,KAAK,EAAc,YACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,eACf,GAAsB,KAAM,EAAM,CAClC,MAEJ,KAAK,EAAc,iBACf,GAAuB,KAAM,EAAM,CACnC,MAEJ,KAAK,EAAc,qBACf,GAA2B,KAAM,EAAM,CACvC,MAEJ,UAKR,SAAS,EAAO,CACZ,KAAK,gBAAkB,GACvB,KAAK,aAAe,EAChB,KAAK,iBACL,GAAuB,KAAM,EAAM,CAGnC,KAAK,6BAA6B,EAAM,CAIhD,6BAA6B,EAAO,CAChC,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,YACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,YACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,QACf,GAAa,KAAM,EAAM,CACzB,MAEJ,KAAK,EAAc,kBACf,GAAqB,KAAM,EAAM,CACjC,MAEJ,KAAK,EAAc,WACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,QACf,GAAa,KAAM,EAAM,CACzB,MAEJ,KAAK,EAAc,KACf,GAAa,KAAM,EAAM,CACzB,MAEJ,KAAK,EAAc,SACf,GAAc,KAAM,EAAM,CAC1B,MAEJ,KAAK,EAAc,cACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,WACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,gBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,KAAK,EAAc,cACf,GAAkB,KAAM,EAAM,CAC9B,MAEJ,KAAK,EAAc,OACf,GAAY,KAAM,EAAM,CACxB,MAEJ,KAAK,EAAc,QACf,GAAa,KAAM,EAAM,CACzB,MAEJ,KAAK,EAAc,UACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,mBACf,GAAsB,KAAM,EAAM,CAClC,MAEJ,KAAK,EAAc,YACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,WACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,YACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,eACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,KAAK,EAAc,iBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,UAKR,MAAM,EAAO,CACT,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACf,GAAmB,KAAM,EAAM,CAC/B,MAEJ,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,YACf,GAAgB,KAAM,EAAM,CAC5B,MAEJ,KAAK,EAAc,QACf,GAAY,KAAM,EAAM,CACxB,MAEJ,KAAK,EAAc,kBACf,GAAoB,KAAM,EAAM,CAChC,MAEJ,KAAK,EAAc,WACf,GAAe,KAAM,EAAM,CAC3B,MAEJ,KAAK,EAAc,QACnB,KAAK,EAAc,SACnB,KAAK,EAAc,WACnB,KAAK,EAAc,gBACnB,KAAK,EAAc,cACnB,KAAK,EAAc,OACnB,KAAK,EAAc,QACnB,KAAK,EAAc,UACnB,KAAK,EAAc,mBACf,GAAU,KAAM,EAAM,CACtB,MAEJ,KAAK,EAAc,KACf,GAAU,KAAM,EAAM,CACtB,MAEJ,KAAK,EAAc,cACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,YACf,GAAc,KAAM,EAAM,CAC1B,MAEJ,KAAK,EAAc,WACnB,KAAK,EAAc,YACnB,KAAK,EAAc,eACnB,KAAK,EAAc,iBACnB,KAAK,EAAc,qBACf,GAAY,KAAM,EAAM,CACxB,MAEJ,UAKR,sBAAsB,EAAO,CACzB,GAAI,KAAK,kBACL,KAAK,gBAAkB,GACnB,EAAM,MAAM,WAAW,EAAE,KAAyB,WAAW,CAC7D,GAAI,EAAM,MAAM,SAAW,EACvB,OAEJ,EAAM,MAAQ,EAAM,MAAM,OAAO,EAAE,CAG3C,GAAI,KAAK,UAAU,cAAe,CAC9B,KAAK,kBAAkB,EAAM,CAC7B,OAEJ,OAAQ,KAAK,cAAb,CACI,KAAK,EAAc,QACnB,KAAK,EAAc,kBACnB,KAAK,EAAc,WACnB,KAAK,EAAc,KACnB,KAAK,EAAc,gBACnB,KAAK,EAAc,UACnB,KAAK,EAAc,mBACnB,KAAK,EAAc,YACnB,KAAK,EAAc,eACf,KAAK,kBAAkB,EAAM,CAC7B,MAEJ,KAAK,EAAc,QACnB,KAAK,EAAc,WACnB,KAAK,EAAc,QACnB,KAAK,EAAc,YACnB,KAAK,EAAc,WACnB,KAAK,EAAc,iBACnB,KAAK,EAAc,qBACf,GAA0B,KAAM,EAAM,CACtC,MAEJ,KAAK,EAAc,SACnB,KAAK,EAAc,cACnB,KAAK,EAAc,OACf,GAAiB,KAAM,EAAM,CAC7B,MAEJ,KAAK,EAAc,cACf,GAA+B,KAAM,EAAM,CAC3C,MAEJ,YASZ,SAAS,GAA+B,EAAG,EAAO,CAC9C,IAAI,EAAyB,EAAE,yBAAyB,kCAAkC,EAAM,QAAQ,CAaxG,OAZI,EACK,EAAE,aAAa,SAAS,EAAuB,QAAQ,CAIlD,EAAE,aAAa,WAAW,EAAM,MAAM,GAC5C,EAAyB,OAJzB,EAAE,yBAAyB,YAAY,EAAuB,CAC9D,EAAyB,MAO7B,GAAoB,EAAG,EAAM,CAE1B,EAGX,SAAS,GAAsB,EAAG,EAAwB,CACtD,IAAI,EAAgB,KAChB,EAAM,EAAE,aAAa,SACzB,KAAO,GAAO,EAAG,IAAO,CACpB,IAAMA,EAAU,EAAE,aAAa,MAAM,GACrC,GAAIA,IAAY,EAAuB,QACnC,MAEA,EAAE,kBAAkBA,EAAS,EAAE,aAAa,OAAO,GAAK,GACxD,EAAgBA,GAOxB,OAJK,IACD,EAAE,aAAa,gBAAgB,KAAK,IAAI,EAAK,EAAE,CAAC,CAChD,EAAE,yBAAyB,YAAY,EAAuB,EAE3D,EAGX,SAAS,GAAY,EAAG,EAAe,EAAmB,CACtD,IAAI,EAAc,EACd,EAAc,EAAE,aAAa,kBAAkB,EAAc,CACjE,IAAK,IAAI,EAAI,EAAGA,EAAU,EAAaA,IAAY,EAAmB,IAAK,EAAU,EAAa,CAE9F,EAAc,EAAE,aAAa,kBAAkBA,EAAQ,CACvD,IAAM,EAAe,EAAE,yBAAyB,gBAAgBA,EAAQ,CAClE,EAAkB,GAAgB,KACH,CAAC,GAAgB,GAE9C,GACA,EAAE,yBAAyB,YAAY,EAAa,CAExD,EAAE,aAAa,OAAOA,EAAQ,GAG9B,EAAU,GAA2B,EAAG,EAAa,CACjD,IAAgB,IAChB,EAAE,yBAAyB,SAAW,GAE1C,EAAE,YAAY,WAAW,EAAY,CACrC,EAAE,YAAY,YAAYA,EAAS,EAAY,CAC/C,EAAcA,GAGtB,OAAO,EAGX,SAAS,GAA2B,EAAG,EAAc,CACjD,IAAM,EAAK,EAAE,YAAY,gBAAgB,EAAa,QAAQ,CACxD,EAAa,EAAE,YAAY,cAAc,EAAa,MAAM,QAAS,EAAI,EAAa,MAAM,MAAM,CAGxG,OAFA,EAAE,aAAa,QAAQ,EAAa,QAAS,EAAW,CACxD,EAAa,QAAU,EAChB,EAGX,SAAS,GAAiC,EAAG,EAAgB,EAAa,CACtE,IAAM,EAAK,EAAE,YAAY,WAAW,EAAe,CAC7C,EAAM,GAAS,EAAG,CACxB,GAAI,EAAE,gCAAgC,EAAI,CACtC,EAAE,qBAAqB,EAAY,KAElC,CACD,IAAM,EAAK,EAAE,YAAY,gBAAgB,EAAe,CACpD,IAAQwD,EAAE,UAAY,IAAO,EAAG,OAChC,EAAiB,EAAE,YAAY,mBAAmB,EAAe,EAErE,EAAE,YAAY,YAAY,EAAgB,EAAY,EAI9D,SAAS,GAA2B,EAAG,EAAe,EAAwB,CAC1E,IAAM,EAAK,EAAE,YAAY,gBAAgB,EAAuB,QAAQ,CAClE,CAAE,SAAU,EACZ,EAAa,EAAE,YAAY,cAAc,EAAM,QAAS,EAAI,EAAM,MAAM,CAC9E,EAAE,YAAY,EAAe,EAAW,CACxC,EAAE,YAAY,YAAY,EAAe,EAAW,CACpD,EAAE,yBAAyB,2BAA2B,EAAY,EAAM,CACxE,EAAE,yBAAyB,YAAY,EAAuB,CAC9D,EAAE,aAAa,OAAO,EAAuB,QAAQ,CACrD,EAAE,aAAa,YAAY,EAAe,EAAY,EAAM,MAAM,CAGtE,SAAS,GAAmB,EAAG,EAAO,CAClC,IAAK,IAAI,EAAI,EAAG,IAAwB,IAAK,CACzC,IAAM,EAAyB,GAA+B,EAAG,EAAM,CACvE,GAAI,CAAC,EACD,MAEJ,IAAM,EAAgB,GAAsB,EAAG,EAAuB,CACtE,GAAI,CAAC,EACD,MAEJ,EAAE,yBAAyB,SAAW,EACtC,IAAM,EAAc,GAAY,EAAG,EAAe,EAAuB,QAAQ,CAC3E,EAAiB,EAAE,aAAa,kBAAkB,EAAuB,QAAQ,CACvF,EAAE,YAAY,WAAW,EAAY,CACjC,GACA,GAAiC,EAAG,EAAgB,EAAY,CACpE,GAA2B,EAAG,EAAe,EAAuB,EAK5E,SAAS,GAAc,EAAG,EAAO,CAC7B,EAAE,mBAAmB,EAAO,EAAE,aAAa,yBAAyB,CAExE,SAAS,GAA+B,EAAG,EAAO,CAC9C,EAAE,mBAAmB,EAAO,EAAE,aAAa,MAAM,GAAG,CAExD,SAAS,GAAwB,EAAG,EAAO,CACvC,EAAE,mBAAmB,EAAO,EAAE,SAAS,CAE3C,SAAS,GAAY,EAAG,EAAO,CAG3B,GAFA,EAAE,QAAU,GAER,EAAM,SAAU,CAGhB,IAAM,EAAS,EAAE,gBAAkB,EAAI,EACvC,IAAK,IAAI,EAAI,EAAE,aAAa,SAAU,GAAK,EAAQ,IAC/C,EAAE,gBAAgB,EAAE,aAAa,MAAM,GAAI,EAAM,CAGrD,GAAI,CAAC,EAAE,iBAAmB,EAAE,aAAa,UAAY,EAAG,CACpD,IAAM,EAAc,EAAE,aAAa,MAAM,GACnC,EAAe,EAAE,YAAY,0BAA0B,EAAY,CACzE,GAAI,GAAgB,CAAC,EAAa,SAC9B,EAAE,gBAAgB,EAAa,EAAM,CACjC,EAAE,aAAa,UAAY,GAAG,CAC9B,IAAM,EAAc,EAAE,aAAa,MAAM,GACnC,EAAe,EAAE,YAAY,0BAA0B,EAAY,CACrE,GAAgB,CAAC,EAAa,QAC9B,EAAE,gBAAgB,EAAa,EAAM,IAS7D,SAAS,GAAqB,EAAG,EAAO,CACpC,EAAE,iBAAiB,EAAM,CACzB,IAAM,EAAO,EAAM,YAAc,GAAc,OAAS8F,GAAwB,EAAM,CACjFC,GAAqB,EAAM,EAC5B,EAAE,KAAK,EAAO,EAAI,qBAAqB,CAE3C,EAAE,YAAY,gBAAgB,EAAE,SAAU,EAAK,CAC/C,EAAE,cAAgB,EAAc,YAEpC,SAAS,GAAmB,EAAG,EAAO,CAClC,EAAE,KAAK,EAAO,EAAI,eAAgB,GAAK,CACvC,EAAE,YAAY,gBAAgB,EAAE,SAAU,GAAc,OAAO,CAC/D,EAAE,cAAgB,EAAc,YAChC,EAAE,cAAc,EAAM,CAI1B,SAAS,GAAmB,EAAG,EAAO,CAC9B,EAAM,QAAU/F,EAAE,MAClB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,aAGhC,GAAgB,EAAG,EAAM,CAGjC,SAAS,GAAiB,EAAG,EAAO,CAChC,IAAM,EAAK,EAAM,OACb,IAAOA,EAAE,MAAQ,IAAOA,EAAE,MAAQ,IAAOA,EAAE,MAAQ,IAAOA,EAAE,KAC5D,GAAgB,EAAG,EAAM,CAGjC,SAAS,GAAgB,EAAG,EAAO,CAC/B,EAAE,wBAAwB,CAC1B,EAAE,cAAgB,EAAc,YAChC,EAAE,cAAc,EAAM,CAI1B,SAAS,GAAmB,EAAG,EAAO,CAClC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,KACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,YAAc,EAAE,aAAa,QAC/B,EAAE,cAAgB,EAAc,QAChC,MAEJ,QACI,GAAgB,EAAG,EAAM,EAIrC,SAAS,GAAiB,EAAG,EAAO,CAChC,IAAM,EAAK,EAAM,MACb,IAAOA,EAAE,MAAQ,IAAOA,EAAE,MAAQ,IAAOA,EAAE,MAAQ,IAAOA,EAAE,GAC5D,GAAgB,EAAG,EAAM,CAGzB,EAAE,KAAK,EAAO,EAAI,iCAAiC,CAG3D,SAAS,GAAgB,EAAG,EAAO,CAC/B,EAAE,mBAAmB4F,EAAG,KAAM5F,EAAE,KAAK,CACrC,EAAE,YAAc,EAAE,aAAa,QAC/B,EAAE,cAAgB,EAAc,QAChC,EAAE,cAAc,EAAM,CAI1B,SAAS,GAAe,EAAG,EAAO,CAC9B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,SACP,KAAKA,EAAE,QACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAM,eAAiB,GACvB,MAEJ,KAAKA,EAAE,MACH,EAAE,qBAAqB,EAAO,EAAc,OAAO,CACnD,MAEJ,KAAKA,EAAE,SACC,EAAE,QAAQ,iBACV,EAAE,qBAAqB,EAAO,EAAc,QAAQ,EAGpD,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,mBAEpC,MAEJ,KAAKA,EAAE,SACP,KAAKA,EAAE,MACH,EAAE,qBAAqB,EAAO,EAAc,QAAQ,CACpD,MAEJ,KAAKA,EAAE,OACH,EAAE,qBAAqB,EAAO,EAAc,YAAY,CACxD,MAEJ,KAAKA,EAAE,SACH,EAAE,gBAAgB,EAAM,CACxB,EAAE,yBAAyB,cAAc,CACzC,EAAE,WAAa,GACf,EAAE,cAAgB,EAAc,YAChC,EAAE,uBAAuB,QAAQ,EAAc,YAAY,CAC3D,MAEJ,KAAKA,EAAE,KACH,EAAE,KAAK,EAAO,EAAI,gCAAgC,CAClD,MAEJ,QACI,GAAY,EAAG,EAAM,EAIjC,SAAS,GAAa,EAAG,EAAO,CAC5B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,WAChC,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,GACP,KAAKA,EAAE,KACH,GAAY,EAAG,EAAM,CACrB,MAEJ,KAAKA,EAAE,SACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,QACI,EAAE,KAAK,EAAO,EAAI,iCAAiC,EAI/D,SAAS,GAAqB,EAAG,EAAO,CAChC,EAAE,aAAa,UAAY,GAC3B,EAAE,aAAa,kCAAkC,CAC7C,EAAE,aAAa,eAAiBA,EAAE,UAClC,EAAE,KAAK,EAAO,EAAI,sCAAsC,CAE5D,EAAE,aAAa,sBAAsBA,EAAE,SAAS,CAChD,EAAE,yBAAyB,mBAAmB,CAC9C,EAAE,uBAAuB,OAAO,CAChC,EAAE,qBAAqB,EAGvB,EAAE,KAAK,EAAO,EAAI,iCAAiC,CAG3D,SAAS,GAAY,EAAG,EAAO,CAC3B,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,WAChC,EAAE,cAAc,EAAM,CAI1B,SAAS,GAAuB,EAAG,EAAO,CACtC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,SACP,KAAKA,EAAE,QACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,SACP,KAAKA,EAAE,MACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,SACH,EAAE,KAAK,EAAO,EAAI,qBAAqB,CACvC,MAEJ,QACI,GAAoB,EAAG,EAAM,EAIzC,SAAS,GAAqB,EAAG,EAAO,CACpC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,SACH,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,QAChC,MAEJ,KAAKA,EAAE,GACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,QACI,EAAE,KAAK,EAAO,EAAI,iCAAiC,EAI/D,SAAS,GAAoB,EAAG,EAAO,CACnC,IAAM,EAAU,EAAM,OAAS,EAAU,IAAM,EAAI,yBAA2B,EAAI,kCAClF,EAAE,KAAK,EAAO,EAAQ,CACtB,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,QAChC,EAAE,cAAc,EAAM,CAI1B,SAAS,GAAkB,EAAG,EAAO,CACjC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,KACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,WAAa,GACf,EAAE,cAAgB,EAAc,QAChC,MAEJ,KAAKA,EAAE,SACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,YAChC,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,SACP,KAAKA,EAAE,QACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,SACP,KAAKA,EAAE,OACP,KAAKA,EAAE,MACP,KAAKA,EAAE,SACP,KAAKA,EAAE,MACH,EAAE,KAAK,EAAO,EAAI,0BAA0B,CAC5C,EAAE,aAAa,KAAK,EAAE,YAAaA,EAAE,KAAK,CAC1C,GAAe,EAAG,EAAM,CACxB,EAAE,aAAa,OAAO,EAAE,YAAY,CACpC,MAEJ,KAAKA,EAAE,KACH,EAAE,KAAK,EAAO,EAAI,gCAAgC,CAClD,MAEJ,QACI,GAAe,EAAG,EAAM,EAIpC,SAAS,GAAgB,EAAG,EAAO,CAC/B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,GACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,SACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,QACI,EAAE,KAAK,EAAO,EAAI,iCAAiC,EAI/D,SAAS,GAAe,EAAG,EAAO,CAC9B,EAAE,mBAAmB4F,EAAG,KAAM5F,EAAE,KAAK,CACrC,EAAE,cAAgB,EAAc,QAChC,GAAW,EAAG,EAAM,CAIxB,SAAS,GAAW,EAAG,EAAO,CAC1B,OAAQ,EAAM,KAAd,CACI,KAAK,EAAU,UACX,GAAgB,EAAG,EAAM,CACzB,MAEJ,KAAK,EAAU,qBACX,GAA0B,EAAG,EAAM,CACnC,MAEJ,KAAK,EAAU,QACX,GAAc,EAAG,EAAM,CACvB,MAEJ,KAAK,EAAU,UACX,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAK,EAAU,QACX,GAAa,EAAG,EAAM,CACtB,MAEJ,KAAK,EAAU,IACX,GAAU,EAAG,EAAM,CACnB,MAEJ,UAIR,SAAS,GAA0B,EAAG,EAAO,CACzC,EAAE,sCAAsC,CACxC,EAAE,kBAAkB,EAAM,CAE9B,SAAS,GAAgB,EAAG,EAAO,CAC/B,EAAE,sCAAsC,CACxC,EAAE,kBAAkB,EAAM,CAC1B,EAAE,WAAa,GAEnB,SAAS,GAAmB,EAAG,EAAO,CAC9B,EAAE,aAAa,YAAc,GAC7B,EAAE,YAAY,gBAAgB,EAAE,aAAa,MAAM,GAAI,EAAM,MAAM,CAG3E,SAAS,GAAmB,EAAG,EAAO,CAClC,IAAM,EAAc,EAAE,aAAa,kCAAkC,CACjE,GAAe,EAAE,aAAa,YAAc,IAC5C,EAAE,WAAa,GACf,EAAE,YAAY,gBAAgB,EAAa,EAAM,MAAM,EAG/D,SAAS,GAAuB,EAAG,EAAO,CACtC,IAAM,EAAc,EAAE,aAAa,kCAAkC,CACjE,EAAE,YAAc,IAChB,EAAE,YAAY,WAAW,EAAY,CACrC,EAAE,aAAa,uBAAuB,CACtC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,aAGxC,SAAS,GAAsB,EAAG,EAAO,CACjC,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAA6B,EAAG,EAAO,CACxC,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAElB,EAAE,aAAa,eAAiB,QAAa,GAAiB,IAAI,EAAE,aAAa,aAAa,EAC9F,EAAE,aAAa,KAAK,CAExB,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAAkB,EAAG,EAAO,CAC7B,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAGhC,EAAE,gBAAkB,GACpB,EAAE,WAAa,GAEnB,SAAS,GAAmB,EAAG,EAAO,CAClC,IAAM,EAAa,EAAE,aAAa,UAAY,GAC1C,CAAC,EAAE,aAAe,KACd,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAC3B,IACD,EAAE,YAAc,EAAE,aAAa,UAI3C,SAAS,GAAuB,EAAG,EAAO,CACtC,EAAE,WAAa,GACf,IAAM,EAAK,EAAM,MACjB,IAAK,IAAI,EAAI,EAAE,aAAa,SAAU,GAAK,EAAG,IAAK,CAC/C,IAAM,EAAY,EAAE,aAAa,OAAO,GACxC,GAAK,IAAOA,EAAE,IAAM,IAAcA,EAAE,KAC9B,IAAOA,EAAE,IAAM,IAAOA,EAAE,MAAQ,IAAcA,EAAE,IAAM,IAAcA,EAAE,IAAM,CAC9E,EAAE,aAAa,oCAAoC,EAAU,CAC7D,EAAE,aAAa,sBAAsB,EAAU,CAC/C,MAEJ,GAAI,IAAcA,EAAE,SAChB,IAAcA,EAAE,KAChB,IAAcA,EAAE,GAChB,EAAE,kBAAkB,EAAE,aAAa,MAAM,GAAI,EAAU,CACvD,MAGJ,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAAwB,EAAG,EAAO,CACnC,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,UAAU,MAAQ,EAAc,UAEtC,SAAS,GAAqB,EAAG,EAAO,CAChC,EAAE,aAAa,WAAWA,EAAE,OAAO,GACnC,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,sBAAsBA,EAAE,OAAO,EAElD,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,WAAa,GAEnB,SAAS,GAAgB,EAAG,EAAO,CAC/B,IAAM,EAAqB,EAAE,yBAAyB,kCAAkC4F,EAAG,EAAE,CACzF,IACA,GAAmB,EAAG,EAAM,CAC5B,EAAE,aAAa,OAAO,EAAmB,QAAQ,CACjD,EAAE,yBAAyB,YAAY,EAAmB,EAE9D,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,yBAAyB,YAAY,EAAE,aAAa,QAAS,EAAM,CAEzE,SAAS,GAAgB,EAAG,EAAO,CAC/B,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,yBAAyB,YAAY,EAAE,aAAa,QAAS,EAAM,CAEzE,SAAS,GAAmB,EAAG,EAAO,CAClC,EAAE,sCAAsC,CACpC,EAAE,aAAa,WAAW5F,EAAE,KAAK,GACjC,GAAmB,EAAG,EAAM,CAC5B,EAAE,sCAAsC,EAE5C,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,yBAAyB,YAAY,EAAE,aAAa,QAAS,EAAM,CAEzE,SAAS,GAAqB,EAAG,EAAO,CACpC,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,yBAAyB,cAAc,CACzC,EAAE,WAAa,GAEnB,SAAS,GAAoB,EAAG,EAAO,CAC/B,EAAE,YAAY,gBAAgB,EAAE,SAAS,GAAK,GAAc,QAAU,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EAC1G,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,WAAa,GACf,EAAE,cAAgB,EAAc,SAEpC,SAAS,GAAmB,EAAG,EAAO,CAClC,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,WAAa,GACf,EAAM,eAAiB,GAE3B,SAAS,GAAc,EAAO,CAC1B,IAAM,EAAY,GAAa,EAAO,GAAM,KAAK,CACjD,OAAO,GAAa,MAAQ,EAAU,aAAa,YAEvD,SAAS,GAAoB,EAAG,EAAO,CACnC,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAC3B,GAAc,EAAM,GACrB,EAAE,WAAa,IAEnB,EAAM,eAAiB,GAE3B,SAAS,GAAoB,EAAG,EAAO,CACnC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAM,eAAiB,GAE3B,SAAS,GAAiB,EAAG,EAAO,CAC5B,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,WAAa,GACf,EAAM,eAAiB,GAE3B,SAAS,GAAoB,EAAG,EAAO,CACnC,EAAM,QAAU4F,EAAG,IACnB,EAAM,MAAQ5F,EAAE,IAChB,GAAmB,EAAG,EAAM,CAEhC,SAAS,GAAuB,EAAG,EAAO,CACtC,EAAE,eAAe,EAAO,EAAG,KAAK,CAGhC,EAAE,gBAAkB,GACpB,EAAE,UAAU,MAAQ,EAAc,OAClC,EAAE,sBAAwB,EAAE,cAC5B,EAAE,WAAa,GACf,EAAE,cAAgB,EAAc,KAEpC,SAAS,GAAkB,EAAG,EAAO,CAC7B,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACpC,EAAE,gBAAgB,CAEtB,EAAE,sCAAsC,CACxC,EAAE,WAAa,GACf,EAAE,qBAAqB,EAAO,EAAc,QAAQ,CAExD,SAAS,GAAqB,EAAG,EAAO,CACpC,EAAE,WAAa,GACf,EAAE,qBAAqB,EAAO,EAAc,QAAQ,CAIxD,SAAS,GAAsB,EAAG,EAAO,CACrC,EAAE,qBAAqB,EAAO,EAAc,QAAQ,CAExD,SAAS,GAAqB,EAAG,EAAO,CACpC,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,WAAa,GACf,EAAE,cACE,EAAE,gBAAkB,EAAc,UAC9B,EAAE,gBAAkB,EAAc,YAClC,EAAE,gBAAkB,EAAc,eAClC,EAAE,gBAAkB,EAAc,QAClC,EAAE,gBAAkB,EAAc,QAChC,EAAc,mBACd,EAAc,UAE5B,SAAS,GAAuB,EAAG,EAAO,CAClC,EAAE,aAAa,eAAiBA,EAAE,QAClC,EAAE,aAAa,KAAK,CAExB,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAAiB,EAAG,EAAO,CAC5B,EAAE,aAAa,WAAWA,EAAE,KAAK,EACjC,EAAE,aAAa,wBAAwB,CAE3C,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAAiB,EAAG,EAAO,CAC5B,EAAE,aAAa,WAAWA,EAAE,KAAK,EACjC,EAAE,aAAa,oCAAoCA,EAAE,IAAI,CAE7D,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAAmB,EAAG,EAAO,CAClC,EAAE,sCAAsC,CACxC,GAAsC,EAAM,CAC5C,GAAmC,EAAM,CACrC,EAAM,YACN,EAAE,eAAe,EAAO,EAAG,OAAO,CAGlC,EAAE,eAAe,EAAO,EAAG,OAAO,CAEtC,EAAM,eAAiB,GAE3B,SAAS,GAAkB,EAAG,EAAO,CACjC,EAAE,sCAAsC,CACxC,GAAmC,EAAM,CACzC,GAAmC,EAAM,CACrC,EAAM,YACN,EAAE,eAAe,EAAO,EAAG,IAAI,CAG/B,EAAE,eAAe,EAAO,EAAG,IAAI,CAEnC,EAAM,eAAiB,GAE3B,SAAS,GAAsB,EAAG,EAAO,CACrC,EAAE,sCAAsC,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAEpC,SAAS,GAAe,EAAG,EAAO,CAC9B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,IACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACH,GAAgB,EAAG,EAAM,CACzB,MAEJ,KAAKA,EAAE,EACH,GAAgB,EAAG,EAAM,CACzB,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAA6B,EAAG,EAAM,CACtC,MAEJ,KAAKA,EAAE,EACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,IACP,KAAKA,EAAE,IACP,KAAKA,EAAE,IACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,SACP,KAAKA,EAAE,WACP,KAAKA,EAAE,WACH,GAAsB,EAAG,EAAM,CAC/B,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAAuB,EAAG,EAAM,CAChC,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,IACP,KAAKA,EAAE,IACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,GACH,GAAiB,EAAG,EAAM,CAC1B,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,IACH,GAAiB,EAAG,EAAM,CAC1B,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAAiB,EAAG,EAAM,CAC1B,MAEJ,KAAKA,EAAE,IACP,KAAKA,EAAE,QACH,GAAkB,EAAG,EAAM,CAC3B,MAEJ,KAAKA,EAAE,IACH,GAAkB,EAAG,EAAM,CAC3B,MAEJ,KAAKA,EAAE,IACH,GAAkB,EAAG,EAAM,CAC3B,MAEJ,KAAKA,EAAE,KACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACP,KAAKA,EAAE,SACP,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,KACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,KACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,KACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,KACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,MACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,MACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,MACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,OACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,OACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,OACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,OACP,KAAKA,EAAE,SACH,GAAuB,EAAG,EAAM,CAChC,MAEJ,KAAKA,EAAE,QACP,KAAKA,EAAE,SACH,GAAsB,EAAG,EAAM,CAC/B,MAEJ,KAAKA,EAAE,SACH,GAAuB,EAAG,EAAM,CAChC,MAEJ,KAAKA,EAAE,SACH,GAAuB,EAAG,EAAM,CAChC,MAEJ,KAAKA,EAAE,SACC,EAAE,QAAQ,iBACV,GAAsB,EAAG,EAAM,CAG/B,GAAsB,EAAG,EAAM,CAEnC,MAEJ,KAAKA,EAAE,UACH,GAAwB,EAAG,EAAM,CACjC,MAEJ,KAAKA,EAAE,IACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,QACP,KAAKA,EAAE,SAEH,MAEJ,QACI,GAAsB,EAAG,EAAM,EAI3C,SAAS,GAAiB,EAAG,EAAO,CAChC,GAAI,EAAE,aAAa,WAAWA,EAAE,KAAK,GACjC,EAAE,cAAgB,EAAc,WAG5B,EAAE,QAAQ,wBAAwB,CAClC,IAAM,EAAc,EAAE,aAAa,kCAAkC,CACjE,GACA,EAAE,gBAAgB,EAAa,EAAM,EAKrD,SAAS,GAAiB,EAAG,EAAO,CAC5B,EAAE,aAAa,WAAWA,EAAE,KAAK,GACjC,EAAE,cAAgB,EAAc,WAChC,GAAgB,EAAG,EAAM,EAGjC,SAAS,GAAoB,EAAG,EAAO,CACnC,IAAM,EAAK,EAAM,MACb,EAAE,aAAa,WAAW,EAAG,GAC7B,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,sBAAsB,EAAG,EAGhD,SAAS,GAAiB,EAAG,CACzB,IAAM,EAAa,EAAE,aAAa,UAAY,EACxC,CAAE,eAAgB,EACnB,IACD,EAAE,YAAc,OAEf,GAAe,IAAe,EAAE,aAAa,WAAWA,EAAE,KAAK,GAChE,EAAE,aAAa,wBAAwB,CACnC,EACA,EAAE,aAAa,sBAAsBA,EAAE,KAAK,CAEvC,GACL,EAAE,aAAa,OAAO,EAAY,EAI9C,SAAS,GAAc,EAAG,CACjB,EAAE,aAAa,iBAAiBA,EAAE,EAAE,EACrC,EAAE,mBAAmB4F,EAAG,EAAG5F,EAAE,EAAE,CAEnC,EAAE,gBAAgB,CAEtB,SAAS,GAAe,EAAG,CACnB,EAAE,aAAa,mBAAmBA,EAAE,GAAG,GACvC,EAAE,aAAa,oCAAoCA,EAAE,GAAG,CACxD,EAAE,aAAa,sBAAsBA,EAAE,GAAG,EAGlD,SAAS,GAAe,EAAG,EAAO,CAC9B,IAAM,EAAK,EAAM,MACb,EAAE,aAAa,WAAW,EAAG,GAC7B,EAAE,aAAa,oCAAoC,EAAG,CACtD,EAAE,aAAa,sBAAsB,EAAG,EAGhD,SAAS,GAA2B,EAAG,CAC/B,EAAE,aAAa,0BAA0B,GACzC,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,8BAA8B,EAGrD,SAAS,GAAmB,EAAG,EAAO,CAClC,IAAM,EAAK,EAAM,MACb,EAAE,aAAa,WAAW,EAAG,GAC7B,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,sBAAsB,EAAG,CACxC,EAAE,yBAAyB,mBAAmB,EAGtD,SAAS,GAAe,EAAG,CACvB,EAAE,sCAAsC,CACxC,EAAE,mBAAmB4F,EAAG,GAAI5F,EAAE,GAAG,CACjC,EAAE,aAAa,KAAK,CACpB,EAAE,WAAa,GAEnB,SAAS,GAAoB,EAAG,EAAO,CACnC,IAAM,EAAK,EAAM,QACX,EAAM,EAAM,MAClB,IAAK,IAAI,EAAI,EAAE,aAAa,SAAU,EAAI,EAAG,IAAK,CAC9C,IAAMxD,EAAU,EAAE,aAAa,MAAM,GAC/B,EAAY,EAAE,aAAa,OAAO,GAExC,GAAI,IAAQ,IAAc,IAAQwD,EAAE,SAAW,EAAE,YAAY,WAAWxD,EAAQ,GAAK,GAAK,CACtF,EAAE,aAAa,oCAAoC,EAAI,CACnD,EAAE,aAAa,UAAY,GAC3B,EAAE,aAAa,gBAAgB,EAAE,CACrC,MAEJ,GAAI,EAAE,kBAAkBA,EAAS,EAAU,CACvC,OAIZ,SAAS,GAAa,EAAG,EAAO,CAC5B,OAAQ,EAAM,MAAd,CACI,KAAKwD,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,EACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,IACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,EACH,GAAc,EAAE,CAChB,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,IACP,KAAKA,EAAE,IACP,KAAKA,EAAE,IACP,KAAKA,EAAE,IACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,QACP,KAAKA,EAAE,SACP,KAAKA,EAAE,WACP,KAAKA,EAAE,WACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,GACH,GAAe,EAAE,CACjB,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAA2B,EAAE,CAC7B,MAEJ,KAAKA,EAAE,GACH,GAAe,EAAE,CACjB,MAEJ,KAAKA,EAAE,KACH,GAAiB,EAAG,EAAM,CAC1B,MAEJ,KAAKA,EAAE,KACH,GAAiB,EAAG,EAAM,CAC1B,MAEJ,KAAKA,EAAE,KACH,GAAiB,EAAE,CACnB,MAEJ,KAAKA,EAAE,OACP,KAAKA,EAAE,OACP,KAAKA,EAAE,QACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,SACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,QACI,GAAoB,EAAG,EAAM,EAIzC,SAAS,GAAU,EAAG,EAAO,CACrB,EAAE,uBAAuB,OAAS,EAClC,GAAc,EAAG,EAAM,CAGvB,GAAY,EAAG,EAAM,CAK7B,SAAS,GAAa,EAAG,EAAO,CAC5B,IAAIyF,EACA,EAAM,QAAUzF,EAAE,UACjB,EAAK,EAAE,gBAAmB,MAAiCyF,EAAG,KAAK,EAAG,EAAE,aAAa,QAAQ,EAElG,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAE,sBAExB,SAAS,GAAU,EAAG,EAAO,CACzB,EAAE,KAAK,EAAO,EAAI,mCAAmC,CACrD,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAE,sBACpB,EAAE,MAAM,EAAM,CAIlB,SAAS,GAAiB,EAAG,EAAO,CAChC,GAAI,EAAE,aAAa,eAAiB,QAAa,GAAqB,IAAI,EAAE,aAAa,aAAa,CAKlG,OAJA,EAAE,uBAAuB,OAAS,EAClC,EAAE,sCAAwC,GAC1C,EAAE,sBAAwB,EAAE,cAC5B,EAAE,cAAgB,EAAc,cACxB,EAAM,KAAd,CACI,KAAK,EAAU,UACX,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAK,EAAU,qBACX,GAA+B,EAAG,EAAM,CACxC,WAMR,GAAa,EAAG,EAAM,CAG9B,SAAS,GAAuB,EAAG,EAAO,CACtC,EAAE,aAAa,yBAAyB,CACxC,EAAE,yBAAyB,cAAc,CACzC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,WAEpC,SAAS,GAAwB,EAAG,EAAO,CACvC,EAAE,aAAa,yBAAyB,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,gBAEpC,SAAS,GAAmB,EAAG,EAAO,CAClC,EAAE,aAAa,yBAAyB,CACxC,EAAE,mBAAmBG,EAAG,SAAU5F,EAAE,SAAS,CAC7C,EAAE,cAAgB,EAAc,gBAChC,GAAsB,EAAG,EAAM,CAEnC,SAAS,GAAqB,EAAG,EAAO,CACpC,EAAE,aAAa,yBAAyB,CACxC,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,cAEpC,SAAS,GAAkB,EAAG,EAAO,CACjC,EAAE,aAAa,yBAAyB,CACxC,EAAE,mBAAmB4F,EAAG,MAAO5F,EAAE,MAAM,CACvC,EAAE,cAAgB,EAAc,cAChC,GAAoB,EAAG,EAAM,CAEjC,SAAS,GAAqB,EAAG,EAAO,CAChC,EAAE,aAAa,gBAAgBA,EAAE,MAAM,GACvC,EAAE,aAAa,sBAAsBA,EAAE,MAAM,CAC7C,EAAE,qBAAqB,CACvB,EAAE,iBAAiB,EAAM,EAGjC,SAAS,GAAqB,EAAG,EAAO,CAChC,GAAc,EAAM,CACpB,EAAE,eAAe,EAAO,EAAG,KAAK,CAGhC,GAAa,EAAG,EAAM,CAE1B,EAAM,eAAiB,GAE3B,SAAS,GAAoB,EAAG,EAAO,CAC/B,CAAC,EAAE,aAAe,EAAE,aAAa,YAAc,IAC/C,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,YAAc,EAAE,aAAa,QAC/B,EAAE,aAAa,KAAK,EAG5B,SAAS,GAAgB,EAAG,EAAO,CAC/B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,GAAkB,EAAG,EAAM,CAC3B,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,IACH,GAAmB,EAAG,EAAM,CAC5B,MAEJ,KAAKA,EAAE,KACH,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,MACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,MACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,QACH,GAAuB,EAAG,EAAM,CAChC,MAEJ,KAAKA,EAAE,SACH,GAAwB,EAAG,EAAM,CACjC,MAEJ,QACI,GAAa,EAAG,EAAM,EAIlC,SAAS,GAAc,EAAG,EAAO,CAC7B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,MACC,EAAE,aAAa,gBAAgBA,EAAE,MAAM,GACvC,EAAE,aAAa,sBAAsBA,EAAE,MAAM,CAC7C,EAAE,qBAAqB,EAE3B,MAEJ,KAAKA,EAAE,SACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,QACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GAEH,MAEJ,QACI,GAAa,EAAG,EAAM,EAIlC,SAAS,GAAa,EAAG,EAAO,CAC5B,IAAM,EAA4B,EAAE,uBACpC,EAAE,uBAAyB,GAE3B,GAAW,EAAG,EAAM,CACpB,EAAE,uBAAyB,EAI/B,SAAS,GAA+B,EAAG,EAAO,CAC9C,EAAE,uBAAuB,KAAK,EAAM,CAExC,SAAS,GAAqB,EAAG,EAAO,CACpC,EAAE,uBAAuB,KAAK,EAAM,CACpC,EAAE,sCAAwC,GAE9C,SAAS,GAAiB,EAAG,EAAO,CAChC,IAAI,EAAI,EACR,GAAI,EAAE,sCACF,KAAO,EAAI,EAAE,uBAAuB,OAAQ,IACxC,GAAa,EAAG,EAAE,uBAAuB,GAAG,MAIhD,KAAO,EAAI,EAAE,uBAAuB,OAAQ,IACxC,EAAE,kBAAkB,EAAE,uBAAuB,GAAG,CAGxD,EAAE,cAAgB,EAAE,sBACpB,EAAE,cAAc,EAAM,CAI1B,IAAM,GAAsB,IAAI,IAAI,CAACA,EAAE,QAASA,EAAE,IAAKA,EAAE,SAAUA,EAAE,MAAOA,EAAE,GAAIA,EAAE,MAAOA,EAAE,GAAIA,EAAE,MAAOA,EAAE,GAAG,CAAC,CAChH,SAAS,GAAkB,EAAG,EAAO,CACjC,IAAM,EAAK,EAAM,MACb,GAAoB,IAAI,EAAG,CACvB,EAAE,aAAa,gBAAgBA,EAAE,QAAQ,GACzC,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,sBAAsBA,EAAE,QAAQ,CAC/C,EAAE,yBAAyB,mBAAmB,CAC9C,EAAE,cAAgB,EAAc,SAChC,GAAgB,EAAG,EAAM,EAI7B,GAAe,EAAG,EAAM,CAGhC,SAAS,GAAgB,EAAG,EAAO,CAC/B,IAAM,EAAK,EAAM,MACjB,OAAQ,EAAR,CACI,KAAKA,EAAE,QACP,KAAKA,EAAE,MACC,EAAE,aAAa,gBAAgBA,EAAE,QAAQ,GACzC,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,sBAAsBA,EAAE,QAAQ,CAC/C,EAAE,yBAAyB,mBAAmB,CAC9C,EAAE,cAAgB,EAAc,SAC5B,IAAOA,EAAE,OACT,GAAc,EAAG,EAAM,EAG/B,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,KACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GAEH,MAEJ,QACI,GAAa,EAAG,EAAM,EAMlC,SAAS,GAAsB,EAAG,EAAO,CACrC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,IACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAM,eAAiB,GACvB,MAEJ,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,QACI,GAAmB,EAAG,EAAM,EAIxC,SAAS,GAAoB,EAAG,EAAO,CACnC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,SACC,EAAE,aAAa,eAAiBA,EAAE,WAClC,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,UAEpC,MAEJ,KAAKA,EAAE,SACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,KAAKA,EAAE,IAEH,MAEJ,QACI,GAAmB,EAAG,EAAM,EAIxC,SAAS,GAAmB,EAAG,EAAO,CAC9B,EAAE,aAAa,eAAiBA,EAAE,WAClC,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,SAChC,EAAE,cAAc,EAAM,EAK9B,SAAS,GAAoB,EAAG,EAAO,CACnC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,GACH,EAAE,aAAa,6BAA6B,CAC5C,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,OAChC,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,EAAE,aAAa,6BAA6B,CAC5C,EAAE,mBAAmB4F,EAAG,GAAI5F,EAAE,GAAG,CACjC,EAAE,cAAgB,EAAc,OAChC,GAAc,EAAG,EAAM,CACvB,MAEJ,KAAKA,EAAE,QACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACC,EAAE,aAAa,iCAAiC,GAChD,EAAE,aAAa,6BAA6B,CAC5C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,SAChC,GAAgB,EAAG,EAAM,EAE7B,MAEJ,QACI,GAAgB,EAAG,EAAM,EAIrC,SAAS,GAAkB,EAAG,EAAO,CACjC,IAAM,EAAK,EAAM,MACjB,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACC,EAAE,aAAa,gBAAgB,EAAG,GAClC,EAAE,aAAa,6BAA6B,CAC5C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,UAEpC,MAEJ,KAAKA,EAAE,MACC,EAAE,aAAa,iCAAiC,GAChD,EAAE,aAAa,6BAA6B,CAC5C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,SAChC,GAAc,EAAG,EAAM,EAE3B,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,QACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,KACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GAEH,MAEJ,QACI,GAAc,EAAG,EAAM,EAMnC,SAAS,GAAc,EAAG,EAAO,CAC7B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,EAAE,aAAa,4BAA4B,CAC3C,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAE,cAAgB,EAAc,QAChC,EAAE,yBAAyB,cAAc,CACzC,MAEJ,KAAKA,EAAE,QACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GACC,EAAE,aAAa,gBAAgBA,EAAE,GAAG,GACpC,EAAE,aAAa,4BAA4B,CAC3C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,cAChC,GAAoB,EAAG,EAAM,EAEjC,MAEJ,QACI,GAAgB,EAAG,EAAM,EAIrC,SAAS,GAAY,EAAG,EAAO,CAC3B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,GACC,EAAE,aAAa,gBAAgBA,EAAE,GAAG,GACpC,EAAE,aAAa,4BAA4B,CAC3C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,eAEpC,MAEJ,KAAKA,EAAE,MACC,EAAE,aAAa,gBAAgBA,EAAE,GAAG,GACpC,EAAE,aAAa,4BAA4B,CAC3C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,cAChC,GAAkB,EAAG,EAAM,EAE/B,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,OACC,EAAE,aAAa,gBAAgB,EAAM,MAAM,EAAI,EAAE,aAAa,gBAAgBA,EAAE,GAAG,IACnF,EAAE,aAAa,4BAA4B,CAC3C,EAAE,aAAa,KAAK,CACpB,EAAE,cAAgB,EAAc,cAChC,GAAkB,EAAG,EAAM,EAE/B,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,QACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,KACP,KAAKA,EAAE,GACP,KAAKA,EAAE,GAEH,MAEJ,QACI,GAAc,EAAG,EAAM,EAMnC,SAAS,GAAe,EAAG,EAAO,CAC9B,IAAM,EAAK,EAAM,MACb,GAAoB,IAAI,EAAG,EACvB,EAAE,aAAa,gBAAgBA,EAAE,GAAG,EAAI,EAAE,aAAa,gBAAgBA,EAAE,GAAG,IAC5E,EAAE,iBAAiB,CACnB,GAAc,EAAG,EAAM,EAI3B,GAAe,EAAG,EAAM,CAGhC,SAAS,GAAa,EAAG,EAAO,CAC5B,IAAM,EAAK,EAAM,MACjB,OAAQ,EAAR,CACI,KAAKA,EAAE,GACP,KAAKA,EAAE,GACC,EAAE,aAAa,gBAAgB,EAAG,GAClC,EAAE,aAAa,wBAAwB,CACvC,EAAE,aAAa,sBAAsB,EAAG,CACxC,EAAE,yBAAyB,mBAAmB,CAC9C,EAAE,cAAgB,EAAc,QAEpC,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,GACC,EAAE,aAAa,gBAAgB,EAAG,GAClC,EAAE,iBAAiB,CACnB,GAAY,EAAG,EAAM,EAEzB,MAEJ,KAAKA,EAAE,KACP,KAAKA,EAAE,QACP,KAAKA,EAAE,IACP,KAAKA,EAAE,SACP,KAAKA,EAAE,KAEH,MAEJ,QACI,GAAa,EAAG,EAAM,EAMlC,SAAS,GAAiB,EAAG,EAAO,CAChC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,OACC,EAAE,aAAa,eAAiBA,EAAE,QAClC,EAAE,aAAa,KAAK,CAExB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,MAEJ,KAAKA,EAAE,SACC,EAAE,aAAa,eAAiBA,EAAE,QAClC,EAAE,aAAa,KAAK,CAEpB,EAAE,aAAa,eAAiBA,EAAE,UAClC,EAAE,aAAa,KAAK,CAExB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,MAEJ,KAAKA,EAAE,GACC,EAAE,aAAa,eAAiBA,EAAE,QAClC,EAAE,aAAa,KAAK,CAEpB,EAAE,aAAa,eAAiBA,EAAE,UAClC,EAAE,aAAa,KAAK,CAExB,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAM,eAAiB,GACvB,MAEJ,KAAKA,EAAE,MACP,KAAKA,EAAE,OACP,KAAKA,EAAE,SACP,KAAKA,EAAE,OACC,EAAE,aAAa,iBAAiBA,EAAE,OAAO,GACzC,EAAE,aAAa,sBAAsBA,EAAE,OAAO,CAC9C,EAAE,qBAAqB,CACnB,EAAM,QAAUA,EAAE,QAClB,EAAE,iBAAiB,EAAM,EAGjC,MAEJ,KAAKA,EAAE,OACP,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,UAIR,SAAS,GAAe,EAAG,EAAO,CAC9B,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,SACC,EAAE,aAAa,SAAW,GAC1B,EAAE,aAAa,eAAiBA,EAAE,QAClC,EAAE,aAAa,OAAO,EAAE,aAAa,SAAW,KAAOA,EAAE,UACzD,EAAE,aAAa,KAAK,CAEpB,EAAE,aAAa,eAAiBA,EAAE,UAClC,EAAE,aAAa,KAAK,CAExB,MAEJ,KAAKA,EAAE,OACC,EAAE,aAAa,eAAiBA,EAAE,QAClC,EAAE,aAAa,KAAK,CAExB,MAEJ,KAAKA,EAAE,OACC,EAAE,aAAa,iBAAiBA,EAAE,OAAO,GACzC,EAAE,aAAa,sBAAsBA,EAAE,OAAO,CAC9C,EAAE,qBAAqB,EAE3B,MAEJ,KAAKA,EAAE,SACH,GAAqB,EAAG,EAAM,CAC9B,MAEJ,UAMR,SAAS,GAAwB,EAAG,EAAO,CACvC,IAAM,EAAK,EAAM,MACb,IAAOA,EAAE,SACT,IAAOA,EAAE,OACT,IAAOA,EAAE,OACT,IAAOA,EAAE,OACT,IAAOA,EAAE,OACT,IAAOA,EAAE,IACT,IAAOA,EAAE,IACT,IAAOA,EAAE,IACT,EAAE,aAAa,sBAAsBA,EAAE,OAAO,CAC9C,EAAE,qBAAqB,CACvB,EAAE,iBAAiB,EAAM,EAGzB,GAAiB,EAAG,EAAM,CAGlC,SAAS,GAAsB,EAAG,EAAO,CACrC,IAAM,EAAK,EAAM,MACb,IAAOA,EAAE,SACT,IAAOA,EAAE,OACT,IAAOA,EAAE,OACT,IAAOA,EAAE,OACT,IAAOA,EAAE,OACT,IAAOA,EAAE,IACT,IAAOA,EAAE,IACT,IAAOA,EAAE,GACL,EAAE,aAAa,gBAAgB,EAAG,GAClC,EAAE,aAAa,sBAAsBA,EAAE,OAAO,CAC9C,EAAE,qBAAqB,CACvB,EAAE,SAAS,EAAM,EAIrB,GAAe,EAAG,EAAM,CAKhC,SAAS,GAAmB,EAAG,EAAO,CAClC,OAAQ,EAAM,MAAd,CAEI,KAAKA,EAAE,KACP,KAAKA,EAAE,SACP,KAAKA,EAAE,QACP,KAAKA,EAAE,KACP,KAAKA,EAAE,KACP,KAAKA,EAAE,SACP,KAAKA,EAAE,OACP,KAAKA,EAAE,MACP,KAAKA,EAAE,SACP,KAAKA,EAAE,MACH,GAAe,EAAG,EAAM,CACxB,MAGJ,KAAKA,EAAE,QACP,KAAKA,EAAE,SACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACP,KAAKA,EAAE,MACH,EAAE,uBAAuB,GAAK,EAAc,SAC5C,EAAE,cAAgB,EAAc,SAChC,GAAgB,EAAG,EAAM,CACzB,MAEJ,KAAKA,EAAE,IACH,EAAE,uBAAuB,GAAK,EAAc,gBAC5C,EAAE,cAAgB,EAAc,gBAChC,GAAsB,EAAG,EAAM,CAC/B,MAEJ,KAAKA,EAAE,GACH,EAAE,uBAAuB,GAAK,EAAc,cAC5C,EAAE,cAAgB,EAAc,cAChC,GAAoB,EAAG,EAAM,CAC7B,MAEJ,KAAKA,EAAE,GACP,KAAKA,EAAE,GACH,EAAE,uBAAuB,GAAK,EAAc,OAC5C,EAAE,cAAgB,EAAc,OAChC,GAAc,EAAG,EAAM,CACvB,MAEJ,QACI,EAAE,uBAAuB,GAAK,EAAc,QAC5C,EAAE,cAAgB,EAAc,QAChC,GAAe,EAAG,EAAM,EAIpC,SAAS,GAAiB,EAAG,EAAO,CAC5B,EAAM,QAAUA,EAAE,UAClB,GAAqB,EAAG,EAAM,CAGtC,SAAS,GAAc,EAAG,EAAO,CACzB,EAAE,aAAa,UAAY,GAC3B,EAAE,aAAa,sBAAsBA,EAAE,SAAS,CAChD,EAAE,yBAAyB,mBAAmB,CAC9C,EAAE,uBAAuB,OAAO,CAChC,EAAE,qBAAqB,CACvB,EAAE,MAAM,EAAM,EAGd,GAAY,EAAG,EAAM,CAK7B,SAAS,GAAkB,EAAG,EAAO,CAC7B,EAAM,QAAUA,EAAE,KAClB,GAAe,EAAG,EAAM,CAGxB,GAAe,EAAG,EAAM,CAGhC,SAAS,GAAgB,EAAG,EAAO,CAE/B,GAAI,EAAM,QAAUA,EAAE,KAMlB,IALK,EAAE,kBACH,EAAE,cAAgB,EAAc,kBAIhC,EAAE,QAAQ,wBAA0B,EAAE,aAAa,OAAO,KAAOA,EAAE,KAAM,CACzE,EAAE,gBAAgB,EAAE,aAAa,MAAM,GAAI,EAAM,CAEjD,IAAM,EAAc,EAAE,aAAa,MAAM,GACrC,GAAe,CAAQ,EAAE,YAAY,0BAA0B,EAAY,EAA0C,QACrH,EAAE,gBAAgB,EAAa,EAAM,OAK7C,GAAe,EAAG,EAAM,CAGhC,SAAS,GAAe,EAAG,EAAO,CAC9B,EAAE,cAAgB,EAAc,QAChC,GAAW,EAAG,EAAM,CAIxB,SAAS,GAAmB,EAAG,EAAO,CAClC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,SACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,MAEJ,KAAKA,EAAE,MACH,EAAE,eAAe,EAAO,EAAG,KAAK,CAChC,EAAM,eAAiB,GACvB,MAEJ,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,UAIR,SAAS,GAAiB,EAAG,EAAO,CAC5B,EAAM,QAAUA,EAAE,UAAY,CAAC,EAAE,aAAa,0BAA0B,GACxE,EAAE,aAAa,KAAK,CAChB,CAAC,EAAE,iBAAmB,EAAE,aAAa,eAAiBA,EAAE,WACxD,EAAE,cAAgB,EAAc,iBAM5C,SAAS,GAAsB,EAAG,EAAO,CACrC,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,UAIR,SAAS,GAAoB,EAAG,EAAO,CAC/B,EAAM,QAAUA,EAAE,OAClB,EAAE,cAAgB,EAAc,sBAKxC,SAAS,GAAuB,EAAG,EAAO,CAClC,EAAM,QAAUA,EAAE,KAClB,GAAe,EAAG,EAAM,CAGxB,GAAoB,EAAG,EAAM,CAGrC,SAAS,GAAoB,EAAG,EAAO,CACnC,EAAE,cAAgB,EAAc,QAChC,GAAW,EAAG,EAAM,CAIxB,SAAS,GAA2B,EAAG,EAAO,CAC1C,OAAQ,EAAM,MAAd,CACI,KAAKA,EAAE,KACH,GAAe,EAAG,EAAM,CACxB,MAEJ,KAAKA,EAAE,SACH,GAAe,EAAG,EAAM,CACxB,MAEJ,UAMR,SAAS,GAA8B,EAAG,EAAO,CAC7C,EAAM,MAAQ,IACd,EAAE,kBAAkB,EAAM,CAE9B,SAAS,GAA0B,EAAG,EAAO,CACzC,EAAE,kBAAkB,EAAM,CAC1B,EAAE,WAAa,GAEnB,SAAS,GAA+B,EAAG,CACvC,KAAO,EAAE,YAAY,gBAAgB,EAAE,aAAa,QAAQ,GAAK,EAAG,MAChE,EAAE,aAAa,eAAiB,QAChC,CAAC,EAAE,oBAAoB,EAAE,aAAa,aAAc,EAAE,aAAa,QAAQ,EAC3E,EAAE,aAAa,KAAK,CAG5B,SAAS,GAAyB,EAAG,EAAO,CACxC,GAAIgG,GAA0B,EAAM,CAChC,GAA+B,EAAE,CACjC,EAAE,+BAA+B,EAAM,KAEtC,CACD,IAAM,EAAU,EAAE,4BAA4B,CACxC,EAAY,EAAE,YAAY,gBAAgB,EAAQ,CACpD,IAAc,EAAG,OACjB,GAAsC,EAAM,CAEvC,IAAc,EAAG,MACtB,GAAqC,EAAM,CAC3C,GAAmC,EAAM,EAE7C,GAAmC,EAAM,CACrC,EAAM,YACN,EAAE,eAAe,EAAO,EAAU,CAGlC,EAAE,eAAe,EAAO,EAAU,CAEtC,EAAM,eAAiB,IAG/B,SAAS,GAAuB,EAAG,EAAO,CACtC,GAAI,EAAM,QAAUhG,EAAE,GAAK,EAAM,QAAUA,EAAE,GAAI,CAC7C,GAA+B,EAAE,CACjC,EAAE,6BAA6B,EAAM,CACrC,OAEJ,IAAK,IAAI,EAAI,EAAE,aAAa,SAAU,EAAI,EAAG,IAAK,CAC9C,IAAMxD,EAAU,EAAE,aAAa,MAAM,GACrC,GAAI,EAAE,YAAY,gBAAgBA,EAAQ,GAAK,EAAG,KAAM,CACpD,EAAE,6BAA6B,EAAM,CACrC,MAEJ,IAAM,EAAU,EAAE,YAAY,WAAWA,EAAQ,CACjD,GAAI,EAAQ,aAAa,GAAK,EAAM,QAAS,CAEzC,EAAM,QAAU,EAChB,EAAE,aAAa,gBAAgB,EAAE,CACjC,QCrqGU,IAAI,IAAI,CAC1BwD,EAAE,KACFA,EAAE,KACFA,EAAE,SACFA,EAAE,QACFA,EAAE,GACFA,EAAE,IACFA,EAAE,MACFA,EAAE,MACFA,EAAE,GACFA,EAAE,IACFA,EAAE,MACFA,EAAE,OACFA,EAAE,KACFA,EAAE,KACFA,EAAE,MACFA,EAAE,OACFA,EAAE,MACFA,EAAE,IACL,CAAC,CCkBF,IAAM,GACJ,+FAII,GAAgB,IAAI,IAAI,CAC5B,oBACA,oBACA,oBACA,oBACA,WACD,CAAC,CAGI,GAAe,CAAC,uBAAwB,GAAM,iBAAkB,GAAM,CAa5E,SAAgB,GAAI,EAAM,EAAS,CACjC,IAAMhD,EAAW,GAAa,EAAK,CAE7BV,EAAM,EAAO,OAAQ,CACzB,SAAU,CAAC,QAAM,WAAS,QAAM,WAAS,WAAS,IAAK,GAAU,CACjE,WACD,CAAC,CAGI,EAAQ,CACZ,OAAQU,EACJ,IAAI,GAAO,GAAa,CACxB,GAAO,kBAAkB,OAAW,GAAa,CACrD,OAAO,EAAM,CACX,EAAIb,EAAM,EAAM,EAElB,SAAU,GACV,QAAS,GAAW,GACrB,CAED,EAAI,EAAM,EAAM,CAChB,GAAe,EAAO,IAAY,CAAC,CAEnC,IAAM,EAAKa,EAAW,EAAM,OAAO,SAAW,EAAM,OAAO,aAAa,CAClE,EAAS,GAAW,EAAI,CAE5B,KAAM,EAAM,QAAQ,KACrB,CAAC,CAwBF,OAtBI,EAAM,UACR,EAAM,EAAQ,UAAW,SAAU,EAAM,EAAO,EAAQ,CACtD,IAAMiJ,EAAwD9J,EAC9D,GAAI8J,EAAO,MAAM,QAAU,GAAUpL,IAAU,OAAW,CAExD,IAAM,EAAW,EAAO,SAGxB,MADA,GAASA,GAASoL,EAAO,MAAM,OACxBpL,IAET,CAKF,EAAO,OAAS,QAChB,EAAO,SAAS,SAAW,GAC3B,EAAO,SAAS,GAAG,OAAS,EAAK,KAE1B,EAAO,SAAS,GAGlB,EAaT,SAAS,GAAI,EAAO,EAAO,CACzB,IAAIA,EAAQ,GAGZ,GAAI,EACF,KAAO,EAAEA,EAAQ,EAAM,QACrB,EAAM,OAAO,EAAMA,GAAO,CAehC,SAAS,GAAK,EAAM,EAAO,CACzB,GAAIsB,EAAK,SAAU,EAAM,CAa3B,SAAS,GAAQ,EAAM,EAAO,CAC5B,GAASA,EAAM,EAAM,CAErB,GAAIA,EAAK,SAAU,EAAM,CAEzB,GAAOA,EAAM,EAAM,CAarB,SAAS,GAAK,EAAM,EAAO,CAMrB,EAAM,OAAO,UAAU,MAAQ,IACjC,EAAM,OAAO,UAAU,MAAQ,GAIjC,IAAM,EAAQ,CACZ,OAAsB,UACtB,MAAOA,EAAK,MACZ,SAAU,GAAqBA,GAChC,CAED,GAAe,EAAO,GAAWA,EAAK,CAAC,CAEvC,EAAM,OAAO,aAAe,EAE5B,EAAM,OAAO,cAAc,EAAM,OAAO,aAAa,CAavD,SAAS,GAAQ,EAAM,EAAO,CAE5B,IAAM,EAAQ,CACZ,OAAsB,QACtB,KAAM,OACN,YAAa,GACb,SAAU,GACV,SAAU,GACV,SAAU,GAAqBA,GAChC,CAED,GAAe,EAAO,GAAWA,EAAK,CAAC,CAEvC,EAAM,OAAO,aAAe,EAE5B,EAAM,OAAO,cAAc,EAAM,OAAO,aAAa,CAavD,SAAS,GAAO,EAAM,EAAO,CAE3B,EAAM,SAAW,GAGjB,IAAM,EAAQ,GAAqBA,EAAK,CAIpC,aAAcA,GAAQ,aAAc,IAKtC,EAAM,SAFJ,GAAI,CAAC,KAAM,OAAQ,SAAUA,EAAK,SAAS,CAAE,EAAM,QAAQ,CAEnC,UAM5B,GAAQ,CAAC,KAAM,UAAW,MAAO,CAAC,OAAQ,GAAO,CAAE,EAAM,CAa3D,SAAS,GAAQ,EAAM,EAAO,CAG5B,IAAM,EAAOA,EAAK,MAGZ,EAAQ,CACZ,OAAsB,QACtB,OACA,SAAU,GAAqBA,GAChC,CACD,GAAe,EAAO,GAAWA,EAAK,CAAC,CAEvC,EAAM,OAAO,aAAe,EAE5B,EAAM,OAAO,cAAc,EAAM,OAAO,aAAa,CAavD,SAAS,GAAU,EAAM,EAAO,CA4C9B,GAzCA,EAAM,OAAO,UAAU,aAAa,KAAO,GAC3C,EAAM,OAAO,UAAU,aAAa,IAAM,GAG1C,EAAM,OAAO,UAAU,aAAa,WAAa,GAGjD,EAAM,OAAO,UAAU,aAAa,SAAW,EAAE,CAGjD,EAAM,OAAO,UAAU,aAAa,gBAAkB,GACtD,EAAM,OAAO,UAAU,aAAa,iBAAmB,GACvD,EAAM,OAAO,UAAU,aAAa,cAAgB,GAGpD,EAAM,OAAO,UAAU,aAAa,MAAQ,GAG5C,GAAS,EAAO,GAAWA,EAAK,CAAC,CAEjC,EAAM,OAAO,UAAU,MACrB,EAAM,QAAQ,UACVA,EAAK,MAAM,QAAQ,GAAwB,WAAW,CACtDA,EAAK,MACT,GACD,CAED,EAAM,OAAO,UAAU,iBAAiB,CAetC,EAAM,OAAO,UAAU,QAAU,IAEjC,EAAM,OAAO,UAAU,QAAU,GACjC,CACA,EAAM,OAAO,UAAU,aAAa,iBAAmB,GAGvD,IAAM,EAAK,EAAM,OAAO,UAAU,UAAU,CAE5C,EAAM,OAAO,UAAU,WAAW,EAAG,EAczC,SAAS,GAAQ,EAAO,EAAO,CAC7B,IAAMA,EAA6B,EAEnC,GACE,EAAM,QAAQ,aACd,EAAM,QAAQ,YAAY,SAASA,EAAK,KAAK,CAE7C,GAAOA,EAAM,EAAM,KACd,CACL,IAAI,EAAQ,GAOZ,MALI,GAAc,IAAIA,EAAK,KAAK,GAC9B,EACE,0cAGM,MAAM,mBAAqBA,EAAK,KAAO,SAAW,EAAM,EActE,SAAS,GAAe,EAAO,EAAO,CACpC,GAAS,EAAOnB,EAAM,CAKtB,IAAM,EAAQ,EAAM,OAAO,UAAU,sBAEjC,GAAS,EAAM,WACjB,EAAM,SAAS,QAAU,EAAM,OAAO,UAAU,aAAa,KAC7D,EAAM,SAAS,OAAS,EAAM,OAAO,UAAU,aAAa,IAAM,EAClE,EAAM,SAAS,UAAY,EAAM,OAAO,UAAU,aAAa,OAAS,EAExE,EAAM,OAAO,aAAe,EAE5B,EAAM,OAAO,cAAc,EAAM,OAAO,aAAa,EAWvD,EAAM,OAAO,UAAU,OAAS,GAEhC,EAAM,OAAO,UAAU,OAAS,GAIhC,EAAM,OAAO,UAAU,OAAS,GAEhC,EAAM,OAAO,UAAU,YAAc,EAAc,KAEnD,EAAM,OAAO,UAAU,YAAc,GAErC,EAAM,OAAO,UAAU,sBAAwB,GAE/C,EAAM,OAAO,UAAU,gBAAkB,KAEzC,EAAM,OAAO,UAAU,sBAAwB,KAE/C,EAAM,OAAO,UAAU,aAAe,KAEtC,EAAM,OAAO,UAAU,YAAc,CAAC,KAAM,GAAI,MAAO,GAAG,CAa5D,SAAS,GAAS,EAAO,EAAO,CAC9B,GAAIA,GAASA,EAAM,SAAW,OAAW,CAEvC,IAAMgK,EAAW,CACf,UAAWhK,EAAM,KACjB,SAAUA,EAAM,OAChB,YAAaA,EAAM,OACnB,QAAS,GACT,OAAQ,GACR,UAAW,GACZ,CAID,EAAM,OAAO,UAAU,aAAa,aAAe,CAACA,EAAM,OAAS,EACnE,EAAM,OAAO,UAAU,aAAa,kBAAoBA,EAAM,OAC9D,EAAM,OAAO,UAAU,aAAa,KAAOA,EAAM,KAEjD,EAAM,OAAO,UAAU,gBAAkBgK,GAc7C,SAAS,GAAS,EAAM,EAAO,CAC7B,IAAM,EAAU7I,EAAK,QAAQ,aAAa,CAG1C,GAAI,EAAM,OAAO,UAAU,QAAU,EAAc,UAAW,OAE9D,GAAe,EAAO,GAAWA,EAAK,CAAC,CAEvC,IAAM,EAAU,EAAM,OAAO,aAAa,QACtC,EAAK,iBAAkB,EAAU,EAAQ,aAAe,GAAc,KAEtE,IAAO,GAAc,MAAQ,IAAY,QAC3C,EAAK,GAAc,KAGrB,IAAM,EAAS,GAEb,CAAC,GAAGA,EAAM,SAAU,GAAG,CACvB,CAAC,MAAO,IAAO,GAAc,IAAM,MAAQ,OAAO,CACnD,CAGK,EAAM,CACV,OAAsB,UACtB,UACA,MAAO+J,GAAc,EAAQ,CAE7B,YAAa,GACb,eAAgB,GAGhB,MAAO,UAAW,EAAS,EAAO,MAAQ,EAAE,CAC5C,SAAU,GAAqB/J,GAChC,CAQD,EAAM,OAAO,aAAe,EAE5B,EAAM,OAAO,cAAc,EAAM,OAAO,aAAa,CAMrD,EAAM,OAAO,UAAU,iBAAmB,EAe5C,SAAS,GAAO,EAAM,EAAO,CAC3B,IAAM,EAAUA,EAAK,QAAQ,aAAa,CAU1C,GAPE,CAAC,EAAM,OAAO,UAAU,eACxB,GAAiB,SAAS,EAAQ,EAMhC,EAAM,OAAO,UAAU,QAAU,EAAc,UAAW,OAE9D,GAAe,EAAO,GAASA,EAAK,CAAC,CAGrC,IAAM,EAAM,CACV,OAAsB,QACtB,UACA,MAAO+J,GAAc,EAAQ,CAC7B,YAAa,GACb,eAAgB,GAChB,MAAO,EAAE,CACT,SAAU,GAAqB/J,GAChC,CAQD,EAAM,OAAO,aAAe,EAE5B,EAAM,OAAO,cAAc,EAAM,OAAO,aAAa,CASnD,IAAY,EAAM,OAAO,UAAU,mBAElC,EAAM,OAAO,UAAU,QAAU,EAAc,QAE9C,EAAM,OAAO,UAAU,QAAU,EAAc,SAE/C,EAAM,OAAO,UAAU,QAAU,EAAc,eAGjD,EAAM,OAAO,UAAU,MAAQ,EAAc,MAYjD,SAAS,GAAa,EAAM,CAC1B,IAAM,EAAOA,EAAK,OAAS,OAASA,EAAK,SAAS,GAAKA,EACvD,MAAO,GACL,IACG,EAAK,OAAS,WACZ,EAAK,OAAS,WAAa,EAAK,QAAQ,aAAa,GAAK,SAYnE,SAAS,GAAqB,EAAM,CAClC,IAAM,EAAQ,GAAWA,EAAK,EAAI,CAChC,KAAM,OACN,OAAQ,OACR,OAAQ,OACT,CACK,EAAM,GAASA,EAAK,EAAI,CAC5B,KAAM,OACN,OAAQ,OACR,OAAQ,OACT,CAcD,MAXiB,CACf,UAAW,EAAM,KACjB,SAAU,EAAM,OAChB,YAAa,EAAM,OACnB,QAAS,EAAI,KACb,OAAQ,EAAI,OACZ,UAAW,EAAI,OAChB,CAeH,SAAS,GAAqB,EAAM,CAClC,MAAO,aAAcA,EACjBgE,GAAgB,CAAC,GAAGhE,EAAM,SAAU,GAAG,CAAC,CACxCgE,GAAgBhE,EAAK,CCnpB3B,SAAwB,GAAU,EAAS,CASzC,OAAO,SAAU,EAAM,EAAM,CAG3B,OADoC,GAAI,EAAM,CAAC,GAAG,EAAS,OAAK,CAAC,EChCrE,SAAwB,GAAS,EAAO,EAAM,CAC5C,IAAM,EAAS,CACb,KAAM,UACN,QAAS,KACT,WAAYA,EAAK,YAAc,EAAE,CACjC,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCRtC,IAAM,GAAS,YAaf,SAAgB,GAAM,EAAO,EAAU,EAAG,CAExC,IAAM,EAAS,EAAE,CACb,EAAQ,EACRtB,EAAQ,EACR,EAAS,GAEb,GAAI,OAAO,GAAU,SACnB,MAAU,UAAU,wBAAwB,CAG9C,KAAOA,EAAQ,EAAM,QAAQ,CAC3B,GAAO,UAAYA,EACnB,IAAM,EAAQ,GAAO,KAAK,EAAM,CAC1B,EAAM,EAAQ,EAAM,MAAQ,EAAM,OAExC,GAAI,EAAM,YAAY,EAAI,GAAK,EAAG,CAChC,IAAM,EAAM,GAAY,EAAS,EAAMA,EAAQ,GAAK,EACpD,EAAO,KAAK,EAAM,MAAM,EAAO,EAAI,CAAE,IAAI,OAAO,EAAI,CAAC,CACrD,GAAU,EAAMA,EAAQ,EACxB,EAAQ,EAAM,OAEd,EAAS,GAGX,EAAQ,EAAM,EAKhB,OAFA,EAAO,KAAK,EAAM,MAAM,EAAM,CAAC,CAExB,EAAO,KAAK,GAAG,CC3CxB,SAAgB,GAAmB,EAAM,CACvC,GAAI,CAAC,GAAM,MAAM,CACf,MAAO,CACL,SAAU,IAAK,GACf,WAAY,IAAK,GACjB,SAAU,IAAK,GACf,KAAM,IAAK,GACZ,CAEH,IAAM,EAAkB,EAAK,QAAQ,YAAa,GAAG,CAAC,MAAM,sBAAsB,CAC5E,EAAyB,EAAK,MAAM,cAAc,CAClD,EAAkB,EAAK,MAAM,WAAW,CACxC,EAAO,EAAK,QAAQ,IAAkB,IAAM,GAAI,GAAG,CAAC,QAAQ,IAAyB,IAAM,GAAI,GAAG,CAAC,QAAQ,IAAkB,IAAM,GAAI,GAAG,CAAC,MAAM,CACnJ,EAIJ,OAHI,IAAkB,KACpB,EAAW,EAAgB,GAAG,QAAQ,wBAAyB,KAAK,EAE/D,CACL,SAAU,IAAkB,IAAM,IAAK,GACvC,WAAY,GAAsB,IAAyB,IAAM,IAAK,GAAE,CAExE,WACA,OACD,CAEH,SAAS,GAAsB,EAAO,CACpC,IAAM,EAAY,OAAO,GAAS,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,QAAQ,CAAC,QAAS,GAAS,CACjF,GAAM,CAAC,EAAO,GAAO,EAAK,MAAM,CAAC,MAAM,IAAI,CAAC,IAAK,GAAM,OAAO,EAAE,MAAM,CAAC,CAAC,CACxE,OAAO,MAAM,KAAK,CAAE,QAAS,GAAO,GAAS,IAAM,GAAS,GAAK,EAAG,CAAC,CAAC,KAAK,EAAG,KAAO,GAAS,GAAK,EAAE,EACrG,CACF,OAAO,EAAU,OAAS,EAAY,IAAK,GAE7C,IAAM,GAAkB,+BACxB,SAAgB,GAAW,EAAO,CAChC,IAAM,EAAS,OAAO,EAAM,CAAC,MAAM,GAAgB,CACnD,OAAO,GAAU,EAAO,GCjC1B,QAAgB,EAAO,IAAS,CAC9B,IAAM,GAAQsB,EAAK,MAAQ,IAAM,KAAOA,EAAK,MAAQ,IAC/C,CAAE,WAAW,OAAQ,aAAY,WAAU,QAAS,GAAmB,EAAK,CAC5E,EAAQA,EAAK,MAAQ,GAAMA,EAAK,MAAQ;EAAK,CAAG,GAClD,EAAS,CACX,KAAM,UACN,QAAS,OACT,WAAY,CAAE,YAAa,GAAI,CAC/B,SAAU,CAAC,CAAE,KAAM,OAAQ,QAAO,EACnC,CACG,IACF,EAAO,KAAO,CACZ,OACD,EAEH,EAAM,MAAMA,EAAM,EAAO,CACzB,EAAS,EAAM,UAAUA,EAAM,EAAO,CACtC,IAAM,EAAa,CACjB,SAAU,GAAY,OACtB,WACA,aACA,OACA,KAAM,EACP,CAMD,OALI,IACF,EAAW,UAAY,CAAC,YAAc,EAAS,EAEjD,EAAS,CAAE,KAAM,UAAW,QAAS,MAAO,aAAY,SAAU,CAAC,GAAS,CAC5E,EAAM,MAAMA,EAAM,EAAO,CAClB,GC7BT,SAAwB,GAAK,EAAO,EAAM,CACxC,IAAM,EAAU,GAAWA,EAAK,MAAM,CAItC,GAHI,GAAW,QAAQ,KAAK,EAAQ,GAClC,EAAK,MAAQA,EAAK,MAAM,QAAQ,EAAS,EAAU,EAAQ,CAAC,EAE1D,EAAM,WAAa,EAAM,SAAS,mBAAoB,CACxD,IAAM,EAAS,CAAE,KAAM,MAAO,MAAOA,EAAK,MAAO,CAEjD,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,ECTxC,SAAwB,GAAK,EAAO,EAAM,CACxC,IAAM,EAAa,CACjB,GAAGA,EAAK,YAAc,EAAE,CACxB,KAAM,GAAaA,EAAK,KACzB,CACGA,EAAK,QAAU,MAAQA,EAAK,QAAU,IAAK,KAC7C,EAAW,MAAQA,EAAK,OAE1B,IAAM,EAAS,CACb,KAAM,UACN,QAAS,IACT,aACA,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CChBtC,SAAwB,GAAK,EAAO,EAAM,CACxC,IAAM,EAAa,EAAE,CACf,EAAU,EAAM,IAAIA,EAAK,CAC3BtB,EAAQ,GAIZ,IAHI,OAAOsB,EAAK,OAAU,UAAYA,EAAK,QAAU,IACnD,EAAW,MAAQA,EAAK,OAEnB,EAAEtB,EAAQ,EAAQ,QAAQ,CAC/B,IAAM,EAAQ,EAAQA,GACtB,GAAI,GAAS,EAAM,OAAS,WAAa,EAAM,UAAY,MAAQ,EAAM,YAAc,MAAM,QAAQ,EAAM,WAAW,UAAU,EAAI,EAAM,WAAW,UAAU,SAAS,iBAAiB,CAAE,CACzL,EAAW,UAAY,CAAC,qBAAqB,CAC7C,QAGCsB,EAAK,UAAY,EAAE,EAAE,KAAM,GAAU,OAAO,EAAM,SAAY,UAAU,GAC3E,EAAW,UAAY,CAAC,qBAAqB,EAE/C,IAAM,EAAS,CACb,KAAM,UACN,QAASA,EAAK,QAAU,KAAO,KAC/B,aACA,SAAU,EAAM,KAAK,EAAS,IAC/B,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCrBtC,SAAwB,GAAU,EAAO,EAAM,CAC7C,GAAIA,EAAK,UAAYA,EAAK,SAAS,IAAMA,EAAK,SAAS,GAAG,OAAS,OAAQ,CACzE,IAAM,EAAU,EAAU,GAAWA,EAAK,SAAS,GAAG,MAAM,EAAI,MAAM,CACtE,GAAI,CAACgK,EAAS,SAAS,EAAQ,CAC7B,OAAO,EAAM,IAAIhK,EAAK,CAG1B,IAAM,EAAS,CACb,KAAM,UACN,QAAS,IACT,WAAY,EAAE,CACd,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CChBtC,SAAwB,GAAM,EAAO,EAAM,CACzC,IAAM,EAAa,CAAE,GAAGA,EAAK,WAAY,IAAK,GAAaA,EAAK,KAAM,CAClEA,EAAK,MAAQ,MAAQA,EAAK,MAAQ,IAAK,KACzC,EAAW,IAAMA,EAAK,KAEpBA,EAAK,QAAU,MAAQA,EAAK,QAAU,IAAK,KAC7C,EAAW,MAAQA,EAAK,OAE1B,IAAM,EAAS,CAAE,KAAM,UAAW,QAAS,MAAO,aAAY,SAAU,GAAI,CAE5E,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCXtC,SAAwB,GAAO,EAAO,EAAM,CAC1C,IAAM,EAAS,CACb,KAAM,UACN,QAAS,SACT,WAAYA,EAAK,YAAc,EAAE,CACjC,SAAU,EAAM,IAAIA,GACrB,CAED,OADA,EAAM,MAAMA,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCRtC,SAAwB,GAAW,EAAO,EAAM,CAC9C,IAAM,EAAWA,EAAK,YAAY,UAAYA,EAAK,YAAY,KACzDgB,EAAO,CAAE,KAAM,OAAQ,MAAOhB,EAAK,MAAM,QAAQ,YAAa,KAAM,CAC1E,EAAM,MAAMA,EAAMgB,EAAK,CACvB,IAAM,EAAS,CACb,KAAM,UACN,QAAS,OACT,WAAYhB,EAAK,YAAc,EAAE,CACjC,SAAU,CAACgB,GACZ,CACK,GAAW,EAAO,WAAW,OAAS,IAAI,MAAM,IAAI,CAS1D,OARA,OAAO,EAAO,WAAW,MACrB,IACF,EAAO,WAAW,SAAW,EAC7B,OAAO,EAAO,WAAW,KACzB,EAAQ,KAAK,YAAc,EAAS,EAEtC,EAAO,WAAW,UAAY,EAAQ,KAAK,IAAI,CAC/C,EAAM,MAAMhB,EAAM,EAAO,CAClB,EAAM,UAAUA,EAAM,EAAO,CCnBtC,SAAwB,GAAmB,EAAO,EAAM,CACtD,IAAM,EAAS,CACb,KAAM,UACN,QAASA,EAAK,KACd,WAAY,CACV,GAAGA,EAAK,WACR,GAAGA,EAAK,MAAM,YACf,CACD,SAAU,EAAM,IAAIA,GACrB,CAID,OAHA,EAAM,MAAMA,EAAM,EAAO,CACzB,EAAO,WAAaA,EAAK,WACzB,EAAO,aAAeA,EAAK,aACpB,ECHT,OAAe,CACb,YACA,QACA,QACA,aACA,QACA,QACA,SACA,UACA,cACA,sBACD,CCdD,MAAa,GAAW,CACtB,OAAQ,CACN,QAAS,CACP,aAAc,CACZ,SAAU,GACX,CACD,aAAc,CACZ,SAAUiK,IAEb,CACF,CACD,OAAQ,CACN,QAAS,CACP,YACA,mBAAoB,GACrB,CACD,QAAS,CACP,wBAAyB,CACvB,SAAU,GACX,CACD,+BAAgC,CAC9B,SAAU,GACX,CACD,yBAA0B,CACxB,SAAU,GACX,CACD,aAAc,CACZ,SAAU,GACV,QAAS,CACP,YAAa,CAAC,UAAU,IAI/B,CACD,UAAW,GACX,IAAK,CACH,YAAa,EACb,MAAO,GAEV,CC9CD,SAAgB,GAAgB,EAAM,CAOlC,OANEjK,EAAK,OAAS,UACT,GAELA,EAAK,OAAS,OACTA,EAAK,OAAS,IAEbA,EAAK,UAAY,EAAE,EAAE,QAAQ,EAAM,IAClCgB,EAAK,OAAO,GAAgB,EAAM,CAAC,CACzC,GAAG,CAGV,SAAgB,GAAY,EAAM,EAAW,EAAG,EAAS,EAAG,CAI1D,MAHI,CAAC,MAAM,QAAQhB,EAAK,SAAS,EAAI,IAAW,EACvC,CAACA,EAAK,CAER,CACLA,EACA,GAAGA,EAAK,SAAS,QAAQ,EAAK,IAAU,EAAI,OAAO,GAAY,EAAO,EAAU,EAAS,EAAE,CAAC,CAAE,EAAE,CAAC,CAClG,CClBH,IAAM,GAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAK,CACzC,GAAiB,GAAS,QAAQ,EAAM,KAC5C,EAAK,GAAO,OAAO,EAAI,OAAO,EAAI,OAAS,EAAE,CAAC,CACvC,GACN,EAAE,CAAC,CACA,GAAkB,GAAS,GAAeA,EAAK,KAC/C,GAAc,KACd,EAAQ,GAAK,EAAQ,KACvB,QAAQ,IAAI,2BAA2B,EAAM,2CAA2C,CACxF,EAAQ,GAEH,GAAS,MAAM,EAAG,EAAM,EAEjC,SAAS,GAAY,EAAS,CAC5B,GAAI,EAAQ,QAAU,EACpB,OAAO,EAET,IAAM,EAAM,EAAE,CACV,EAiBJ,OAhBA,EAAQ,QAAS,GAAW,CACtB,CAAC,GAAU,EAAO,OAAS,EAAO,OACpC,EAAO,SAAW,EAAE,CACpB,EAAS,EACT,EAAI,KAAK,EAAO,EAEhB,EAAO,SAAS,KAAK,EAAO,EAE9B,CACF,EAAI,QAAS,GAAW,CAClB,EAAO,UAAU,OACnB,EAAO,SAAW,GAAY,EAAO,SAAS,CAE9C,OAAO,EAAO,UAEhB,CACK,EAET,SAAgB,GAAgB,EAAM,EAAS,CAC7C,GAAM,CAAE,cAAa,QAAO,QAAQ,IAAO,EACrC,EAAO,GAAW,EAAM,CAExB,EADU,GAAY,EAAM,EAAY,CAAC,OAAQ,GAAS,EAAK,SAASA,EAAK,KAAO,GAAG,CAAC,CACxE,IAAK,IAAU,CACnC,GAAIA,EAAK,OAAO,GAChB,MAAO,GAAeA,EAAK,CAC3B,KAAM,GAAgBA,GACvB,EAAE,CACH,MAAO,CACL,QACA,cACA,QACA,QACD,CAEH,SAAgB,GAAY,EAAM,EAAS,CACzC,IAAM,EAAM,GAAgB,EAAM,EAAQ,CAE1C,MADA,GAAI,MAAQ,GAAY,EAAI,MAAM,CAC3B,ECvDT,MAAa,GAAQ,0+PCArB,IAAM,GAAM,OAAO,eAKE,GAArB,KAAgC,CAI9B,aAAe,CAGb,KAAK,YAEL,KAAK,OAAO,CAiBd,KAAM,EAAO,EAAc,CACzB,IAAMP,EAAO,KACT,EAAS,GAAK,EAAO,IAAiB,GAAK,CACzC,EAAe,EAErB,KAAO,GAAI,KAAKA,EAAK,YAAa,EAAO,EACvC,EAAK,YAAY,KACjB,EAAS,EAAe,IAAMA,EAAK,YAAY,GAKjD,MAFA,GAAK,YAAY,GAAU,EAEpB,EAQT,OAAS,CACP,KAAK,YAAc,OAAO,OAAO,KAAK,GAkB1C,SAAgB,GAAM,EAAO,EAAc,CAGzC,OAFI,OAAO,GAAU,UAChB,IAAc,EAAQ,EAAM,aAAa,EACvC,EAAM,QAAQ,GAAO,GAAG,CAAC,QAAQ,KAAM,IAAI,EAFZ,GCzExC,MAAa,GAAa,CACxB,SACD,CACY,GAAmB,CAC9B,SACA,aACD,CACY,GAAmB,CAC9B,cACA,iBACA,YACA,uBACA,qBACA,gBACA,kBACA,gBACD,CACD,SAAS,GAAoB,EAAO,CAElC,IAAM,EADa,mBAAmB,EAAM,CACZ,QAAQ,qBAAsB,GAAG,CAAC,QAAQ,aAAc,GAAG,CAAC,QAAQ,cAAe,GAAG,CACtH,GAAI,CACF,IAAM,EAAM,IAAI,IAAI,EAAc,qBAAqB,CACvD,GAAI,EAAI,SAAW,qBACjB,MAAO,GAET,GAAI,GAAiB,KAAM,GAAW,EAAI,SAAS,aAAa,CAAC,WAAW,EAAO,CAAC,CAClF,MAAO,QAEH,CACN,MAAO,GAET,MAAO,GAET,MAAa,IAAgB,EAAW,KACtC,EAAY,EAAU,aAAa,CAC/B,EAAU,WAAW,KAAK,EAAI,GAAiB,SAAS,EAAU,CAC7D,GAEL,IAAc,QAAU,IAAc,MACjC,GAAoB,EAAM,CAE5B,IAEI,IAAiB,EAAM,IAC9B,GAAW,SAAS,EAAK,EAGzB,CAAC,EACI,EAAE,EAEX,EAAQ,OAAO,YACb,OAAO,QAAQ,EAAM,CAAC,QAAQ,CAAC,EAAM,KAAW,CAC9C,IAAM,EAAU,GAAa,EAAM,EAAM,CAIzC,OAHK,GACH,QAAQ,KAAK,4CAA4C,EAAK,IAAI,EAAM,GAAG,CAEtE,GACP,CACH,CACG,IAAS,OACP,OAAO,EAAM,YAAe,WAC9B,EAAM,WAAa,EAAM,WAAW,MAAM,IAAI,CAAC,IAAK,GAAM,OAAO,SAAS,EAAE,CAAC,EAG1E,GC7DT,SAAgB,GAAY,EAAU,EAAE,CAAE,CACxC,IAAM,EAAQ,IAAIyK,GAClB,SAAS,EAAc,EAAM,EAAQ,CACnC,GAAIlK,EAAK,OAAS,OAChB,MAAO,CACL,KAAM,OACN,SAAUA,EAAK,SAAS,IAAK,GAAU,EAAc,EAAOA,EAAK,CAAC,CAAC,OAAO,SAC3E,CAEH,IAAMpB,EAAWoB,EAAK,UAAU,OAAO,QAAUA,EAAK,UAAU,KAAK,OAAS,CAC5E,MAAOA,EAAK,SAAS,MAAM,OAC3B,IAAKA,EAAK,SAAS,IAAI,OACxB,CAAG,IAAK,GACT,GAAIA,EAAK,OAAS,UAAW,CAC3B,GAAIA,EAAK,UAAY,KAAOA,EAAK,SAAS,MAAO,GAAU,EAAM,OAAS,QAAU,QAAQ,KAAK,EAAM,MAAM,CAAC,CAC5G,OAAO,KAET,GAAIA,EAAK,UAAY,KAAM,CACzB,IAAI,EAAuB,GAC3B,EAAK,SAAWA,EAAK,UAAU,QAAS,GAClC,EAAM,OAAS,WAAa,EAAM,UAAY,KAC5C,GACF,EAAM,SAAS,QAAQ,CACrB,KAAM,UACN,QAAS,KACT,WAAY,EAAE,CACd,SAAU,GACX,CAAC,CAEJ,EAAuB,GAChB,EAAM,UAER,EACP,CAEAA,EAAK,SAAS,MAAM,QAAQ,GAC9B,EAAK,WAAaA,EAAK,YAAc,EAAE,CACvC,EAAK,WAAW,GAAK,OAAOA,EAAK,YAAY,IAAM,EAAM,KAAK,EAASA,EAAK,CAAC,CAAC,CAAC,QAAQ,MAAO,IAAI,CAAC,QAAQ,SAAU,GAAG,CAAC,QAAQ,QAAS,MAAM,EAE9IA,EAAK,UAAY,mBACnB,EAAK,QAAU,YAEjB,IAAM,GAAYA,EAAK,UAAY,YAAcA,EAAK,SAAS,SAAS,OAASA,EAAK,QAAQ,SAAWA,EAAK,UAAU,IAAK,GAAU,EAAc,EAAOA,EAAK,CAAC,CAAC,OAAO,QAAQ,CAC5K,EAAS,CACb,KAAM,UACN,IAAKA,EAAK,QACV,MAAO,GAAcA,EAAK,QAASA,EAAK,WAAW,CACnD,WACD,CAID,OAHI,EAAQ,eACV,EAAO,SAAWpB,GAEb,EAUT,OARIoB,EAAK,OAAS,SACZ,CAAC,QAAQ,KAAKA,EAAK,OAAS,GAAG,EAAI,GAAQ,YAAY,sBAClD,EAAQ,aAAe,CAAE,KAAM,OAAQ,MAAOA,EAAK,MAAO,WAAU,CAAG,CAAE,KAAM,OAAQ,MAAOA,EAAK,MAAO,CAGjH,EAAQ,cAAgBA,EAAK,OAAS,UACjC,EAAQ,aAAe,CAAE,KAAM,UAAW,MAAOA,EAAK,MAAO,WAAU,CAAG,CAAE,KAAM,UAAW,MAAOA,EAAK,MAAO,CAElH,KAET,KAAK,SAAY,GAAS,CACxB,IAAM,EAAO,EAAc,EAAK,CAC5B,EACE,EAAe,EAAK,SAAS,UAAW,GAASA,EAAK,OAAS,WAAaA,EAAK,OAAO,MAAM,GAAK,OAAO,CAChH,GAAI,IAAiB,KACnB,EAAU,EAAc,CACtB,KAAM,OACN,SAAU,EAAK,SAAS,MAAM,EAAG,GAClC,CAAC,CACE,EAAQ,SAAS,KAAM,GAASA,EAAK,OAAS,WAAaA,EAAK,MAAQ,MAAM,EAAE,CAClF,IAAM,EAAY,EAAK,SAAS,EAAK,SAAS,OAAS,GACnD,GAAa,EAAU,OAAS,WAAa,EAAU,MAAQ,SACjE,EAAQ,SAAS,KAAK,EAAU,CAKtC,MADA,GAAK,UAAY,EAAK,UAAY,EAAE,EAAE,OAAQ,GAAU,EAAM,OAAS,OAAO,CACvE,CACL,OACA,UACD,EC7EL,IAAI,GACA,GACJ,MAAa,GAAuB,MAAO,EAAgB,EAAE,GAAK,CAChE,EACE,GAAgB,YAAM,OACpB,+DAEA,WAAa,EAAE,EAAE,CAErB,EACE,GAAsB,YAAM,OAC1B,6DAEA,KAAM,GAAM,EAAE,eAAe,CAAC,CAAC,UAAY,EAAE,CAAC,CAElD,IAAM,EAAa,CACjB,GAAG,IAAuB,EAAE,CAC5B,GAAG,EAAc,SAAW,EAAE,CAC/B,CACG,EAAc,WAAa,MAAQ,EAAc,WAAa,GAAS,EAAc,UAAU,cAAgB,IAAK,IAAK,OAAO,EAAc,UAAU,aAAgB,aAG1K,EAAgB,CACd,GAAG,EACH,UAAW,CACT,GAAG,EAAc,WAEpB,CACD,OAAO,EAAc,UAAU,aAEjC,IAAM,EAAU,EAAK,EAAe,CAClC,OAAQ,CAAE,QAAS,IAAe,cAAe,CACjD,OAAQ,CAAE,QAAS,IAAe,cAAe,CACjD,UAAW,IAAe,UAC3B,CAAE,GAAS,CACR,EAAQ,QAAQ,SAAS,YACvB,EAAc,YAAc,GAC9B,OAAO,EAAQ,OAAO,QAAQ,UAE9B,EAAQ,OAAO,QAAQ,UAAU,QAAU,EAAK,EAAE,CAAE,EAAQ,OAAO,QAAQ,UAAU,QAAS,EAAQ,WAAa,EAAE,CAAC,EAG1H,IAAI,EAAY,IAAS,CACzB,IAAK,IAAM,KAAU,EACnB,EAAY,MAAM,EAAO,SAAS,MAAM,EAAU,EAAI,EAExD,EAAU,IAAI,GAAY,CAC1B,IAAK,IAAM,KAAU,EACnB,EAAY,MAAM,EAAO,SAAS,SAAS,EAAU,EAAI,EAE3D,MAAM,GAAoB,EAAW,EAAQ,QAAQ,QAAQ,CAC7D,EAAU,IAAImK,GAAe,EAAQ,QAAQ,QAAQ,CACrD,IAAK,IAAM,KAAU,EACnB,EAAY,MAAM,EAAO,SAAS,SAAS,EAAU,EAAI,EAE3D,MAAM,GAAoB,EAAW,EAAQ,QAAQ,QAAQ,CAC7D,EAAU,IAAI,GAAa,EAAQ,CACnC,IAAK,IAAM,KAAU,EACnB,EAAY,MAAM,EAAO,SAAS,OAAO,EAAU,EAAI,EAEzD,OAAO,GAEI,GAAuB,MAAO,EAAgB,EAAE,GAAK,CAChE,IAAM,EAAY,MAAM,GAAqB,EAAc,CAC3D,OAAO,eAAqB,EAAI,CAAE,eAAgB,EAAE,CAAE,CACpD,GAAM,CAAE,UAAS,KAAM,GAAgB,MAAM,GAAiB,EAAG,CAC3DC,EAAM,OAAO,QAAY,KAAe,OAAO,QAAQ,KAAQ,WAAa,QAAQ,KAAK,CAAG,OAC5F,EAAgB,MAAM,IAAI,SAAS,EAAS,IAAW,CAC3D,EAAU,QAAQ,CAAE,MAAK,GAAG,EAAa,MAAO7I,EAAS,KAAM,EAAa,EAAG,EAAK,IAAS,CACvF,EACF,EAAO,EAAI,CAEX,EAAQ,EAAK,EAEf,EACF,CACI,EAAgB,GAAe,OAC/B,EAAO,OAAO,OAClB,EAAc,iBAAmB,GAA6C,EAAE,CAAvC,GAAe,EAAc,KAAK,CAC3E,EACA,GAAe,MAAQ,EAAE,CAC1B,CACK,EAAe,CAAE,OAAM,KAAM,EAAc,KAAM,CACjD,EAAgB,EAAK,KAAO,EAAc,IAChD,GAAI,IAAkB,GAAO,CAC3B,IAAM,EAAY,EAAK,EAAE,CAAE,EAAe,GAAS,IAAI,CACvD,EAAa,IAAM,GAAY,EAAc,KAAM,EAAU,CAK/D,OAHI,EAAc,UAChB,EAAa,QAAU,EAAc,SAEhC,IAGE,GAAgB,MAAO,EAAI,EAAwB,EAAE,CAAE,EAAe,EAAE,IACpE,MAAM,GAAqB,EAAsB,EAClD,EAAG,QAAQ,QAAS;EAAK,CAAEuF,EAAa,CAExD,SAAgB,GAAe,EAAM,CACnC,IAAI,EAAQ,GACR,EAAc,GACZ,EAAW,EAAK,SAAS,OAAQ,GAAS9G,EAAK,OAAS,WAAaA,EAAK,MAAQ,KAAK,CAC7F,GAAI,EAAS,QAAU,EAAS,GAAG,MAAQ,KAAM,CAC/C,IAAMA,EAAO,EAAS,OAAO,CAC7B,EAAQ,EAAgBA,EAAK,CAE/B,GAAI,EAAS,QAAU,EAAS,GAAG,MAAQ,IAAK,CAC9C,IAAMA,EAAO,EAAS,OAAO,CAC7B,EAAc,EAAgBA,EAAK,CAErC,MAAO,CACL,QACA,cACD","names":["isPlainObject","extend","next","index","wrap","position","point","extname","path","code","normalize","assertPath","isUint8Array","field","basename","dirname","proto","own","self","file","tree","compiler","value","parameters","isPlainObj","node","emptyOptions","toString","one","all","element","characterReference","list","extension","regex","replace","ok","previous","document","tokenizeContainer","constructs","text","attentionMarkers","exit","start","effects","nok","furtherStart","content","raw","definition","titleBefore","comment","label","thematicBreak","tokenizeIndent","heading","paragraph","string","flow","resolveText","map","from","parse","defaultConstructs","create","search","fromMarkdown","link","blockQuote","codeText","emphasis","hardBreak","html","image","listItem","strong","data","fragment","blockquote","footnoteReference","imageReference","inlineCode","linkReference","root","result","$","set","serialize","structuredClone","handlers","defaultHandlers","handle","patch","SCALAR","BREAK","SKIP","REMOVE","visit","res","schema","indent","i","end","isBlock","stringify","merge","str","seq","intIdentify","intResolve","intStringify","s","pairs","keys","omap","floatNaN","floatExp","float","n","intOct","int","intHex","schema$1","schema$2","tags","Schema","tab","composeNode","composeEmptyNode","isMap","CN","tag","ch","Parser","parseOptions","target","isEmpty","isArray","checkQuote","subexit","style","following","flat.unflatten","attributes","containerComponent","shortcut","domain","trail","table","row","sizes","columnIndex","strikethrough","insideSpan","checks","properties","compare","caches","h","find","parseSpaces","parseCommas","svg","startTag","endTag","location","space","types","htmlBase","svgBase","doctype","commas","spaces","isAsciiAlphaNumeric","_a","$$","entry","TN","foreignContent.isIntegrationPoint","doctype.getDocumentMode","doctype.isConforming","foreignContent.causesExit","stitch","html.getTagID","htmlTags","remarkGFM","Slugger","remark2rehype","cwd"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"sources":["../../node_modules/.cache/.pnpm/bail@2.0.2/node_modules/bail/index.js","../../node_modules/.cache/.pnpm/extend@3.0.2/node_modules/extend/index.js","../../node_modules/.cache/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","../../node_modules/.cache/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","../../node_modules/.cache/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/.cache/.pnpm/vfile-message@4.0.3/node_modules/vfile-message/lib/index.js","../../node_modules/.cache/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js","../../node_modules/.cache/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js","../../node_modules/.cache/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js","../../node_modules/.cache/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js","../../node_modules/.cache/.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js","../../node_modules/.cache/.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js","../../node_modules/.cache/.pnpm/unified@11.0.5/node_modules/unified/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js","../../node_modules/.cache/.pnpm/decode-named-character-reference@1.2.0/node_modules/decode-named-character-reference/index.dom.js","../../node_modules/.cache/.pnpm/micromark-util-chunked@2.0.1/node_modules/micromark-util-chunked/index.js","../../node_modules/.cache/.pnpm/micromark-util-combine-extensions@2.0.1/node_modules/micromark-util-combine-extensions/index.js","../../node_modules/.cache/.pnpm/micromark-util-decode-numeric-character-reference@2.0.2/node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/.cache/.pnpm/micromark-util-normalize-identifier@2.0.1/node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/.cache/.pnpm/micromark-util-character@2.1.1/node_modules/micromark-util-character/index.js","../../node_modules/.cache/.pnpm/micromark-util-sanitize-uri@2.0.1/node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/.cache/.pnpm/micromark-factory-space@2.0.1/node_modules/micromark-factory-space/index.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/content.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/document.js","../../node_modules/.cache/.pnpm/micromark-util-classify-character@2.0.1/node_modules/micromark-util-classify-character/index.js","../../node_modules/.cache/.pnpm/micromark-util-resolve-all@2.0.1/node_modules/micromark-util-resolve-all/index.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/.cache/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../../node_modules/.cache/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/index.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/.cache/.pnpm/micromark-factory-destination@2.0.1/node_modules/micromark-factory-destination/index.js","../../node_modules/.cache/.pnpm/micromark-factory-label@2.0.1/node_modules/micromark-factory-label/index.js","../../node_modules/.cache/.pnpm/micromark-factory-title@2.0.1/node_modules/micromark-factory-title/index.js","../../node_modules/.cache/.pnpm/micromark-factory-whitespace@2.0.1/node_modules/micromark-factory-whitespace/index.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/.cache/.pnpm/micromark-util-html-tag-name@2.0.1/node_modules/micromark-util-html-tag-name/index.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/.cache/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/flow.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/text.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/constructs.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/create-tokenizer.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/parse.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/postprocess.js","../../node_modules/.cache/.pnpm/micromark@4.0.2/node_modules/micromark/lib/preprocess.js","../../node_modules/.cache/.pnpm/micromark-util-decode-string@2.0.1/node_modules/micromark-util-decode-string/index.js","../../node_modules/.cache/.pnpm/mdast-util-from-markdown@2.0.2/node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/.cache/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/.cache/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/.cache/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/.cache/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/deserialize.js","../../node_modules/.cache/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/serialize.js","../../node_modules/.cache/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/.cache/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/.cache/.pnpm/remark-rehype@11.1.2/node_modules/remark-rehype/lib/index.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/identity.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/visit.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/directives.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/anchors.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/applyReviver.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/toJS.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Node.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Alias.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Scalar.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/createNode.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Collection.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyComment.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyString.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringify.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyPair.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/log.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Pair.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/YAMLMap.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/map.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/seq.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/string.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/null.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/bool.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/float.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/int.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/schema.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/json/schema.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/tags.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/Schema.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/Document.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/errors.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-props.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-contains-newline.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-map-includes.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-block-map.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-end.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-collection.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-scalar.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-node.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-doc.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/composer.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/cst-visit.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/cst.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/lexer.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/line-counter.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/parser.js","../../node_modules/.cache/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/public-api.js","../../node_modules/.cache/.pnpm/flat@6.0.1/node_modules/flat/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/.cache/.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/.cache/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/.cache/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/.cache/.pnpm/character-reference-invalid@2.0.1/node_modules/character-reference-invalid/index.js","../../node_modules/.cache/.pnpm/is-decimal@2.0.1/node_modules/is-decimal/index.js","../../node_modules/.cache/.pnpm/is-hexadecimal@2.0.1/node_modules/is-hexadecimal/index.js","../../node_modules/.cache/.pnpm/is-alphabetical@2.0.1/node_modules/is-alphabetical/index.js","../../node_modules/.cache/.pnpm/is-alphanumerical@2.0.1/node_modules/is-alphanumerical/index.js","../../node_modules/.cache/.pnpm/parse-entities@4.0.2/node_modules/parse-entities/lib/index.js","../../node_modules/.cache/.pnpm/remark-mdc@3.6.0/node_modules/remark-mdc/dist/index.mjs","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/utils/plugins.js","../../node_modules/.cache/.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-gfm-footnote@2.1.0/node_modules/mdast-util-gfm-footnote/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../node_modules/.cache/.pnpm/markdown-table@3.0.4/node_modules/markdown-table/index.js","../../node_modules/.cache/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../node_modules/.cache/.pnpm/mdast-util-gfm@3.1.0/node_modules/mdast-util-gfm/lib/index.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/edit-map.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/infer.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/.cache/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","../../node_modules/.cache/.pnpm/remark-gfm@4.0.1/node_modules/remark-gfm/lib/index.js","../../node_modules/.cache/.pnpm/hast-util-is-element@3.0.0/node_modules/hast-util-is-element/lib/index.js","../../node_modules/.cache/.pnpm/is-absolute-url@4.0.1/node_modules/is-absolute-url/index.js","../../node_modules/.cache/.pnpm/rehype-external-links@3.0.0/node_modules/rehype-external-links/lib/index.js","../../node_modules/.cache/.pnpm/rehype-sort-attribute-values@5.0.1/node_modules/rehype-sort-attribute-values/lib/schema.js","../../node_modules/.cache/.pnpm/rehype-sort-attribute-values@5.0.1/node_modules/rehype-sort-attribute-values/lib/index.js","../../node_modules/.cache/.pnpm/rehype-sort-attributes@5.0.1/node_modules/rehype-sort-attributes/lib/index.js","../../node_modules/.cache/.pnpm/hast-util-parse-selector@4.0.0/node_modules/hast-util-parse-selector/lib/index.js","../../node_modules/.cache/.pnpm/hastscript@9.0.1/node_modules/hastscript/lib/create-h.js","../../node_modules/.cache/.pnpm/hastscript@9.0.1/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/.cache/.pnpm/hastscript@9.0.1/node_modules/hastscript/lib/index.js","../../node_modules/.cache/.pnpm/vfile-location@5.0.3/node_modules/vfile-location/lib/index.js","../../node_modules/.cache/.pnpm/web-namespaces@2.0.1/node_modules/web-namespaces/index.js","../../node_modules/.cache/.pnpm/hast-util-from-parse5@8.0.3/node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/schema.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/merge.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/normalize.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/info.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/types.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/defined-info.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/create.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xlink.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xml.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xmlns.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/aria.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/html.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/svg.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js","../../node_modules/.cache/.pnpm/property-information@6.5.0/node_modules/property-information/index.js","../../node_modules/.cache/.pnpm/hast-util-to-parse5@8.0.0/node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/common/unicode.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/common/error-codes.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/tokenizer/preprocessor.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/common/token.js","../../node_modules/.cache/.pnpm/entities@6.0.1/node_modules/entities/dist/esm/generated/decode-data-html.js","../../node_modules/.cache/.pnpm/entities@6.0.1/node_modules/entities/dist/esm/decode-codepoint.js","../../node_modules/.cache/.pnpm/entities@6.0.1/node_modules/entities/dist/esm/decode.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/common/html.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/tokenizer/index.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/parser/open-element-stack.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/parser/formatting-element-list.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/tree-adapters/default.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/common/doctype.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/common/foreign-content.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/parser/index.js","../../node_modules/.cache/.pnpm/parse5@7.3.0/node_modules/parse5/dist/serializer/index.js","../../node_modules/.cache/.pnpm/hast-util-raw@9.1.0/node_modules/hast-util-raw/lib/index.js","../../node_modules/.cache/.pnpm/rehype-raw@7.0.0/node_modules/rehype-raw/lib/index.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/emphasis.js","../../node_modules/.cache/.pnpm/detab@3.0.2/node_modules/detab/index.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/utils.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/code.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/html.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/link.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/list.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/paragraph.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/image.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/strong.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/inlineCode.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/containerComponent.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/handlers/index.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/options.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/utils/ast.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/toc.js","../../node_modules/.cache/.pnpm/github-slugger@2.0.0/node_modules/github-slugger/regex.js","../../node_modules/.cache/.pnpm/github-slugger@2.0.0/node_modules/github-slugger/index.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/utils/props.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/compiler.js","../../node_modules/.cache/.pnpm/@nuxtjs+mdc@0.17.4_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/index.js"],"sourcesContent":["/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            prevAnchors ?? (prevAnchors = anchorNames(doc));\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair, hasAnchor } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc, ctx) {\n        let nodes;\n        if (ctx?.aliasResolveCache) {\n            nodes = ctx.aliasResolveCache;\n        }\n        else {\n            nodes = [];\n            visit(doc, {\n                Node: (_key, node) => {\n                    if (isAlias(node) || hasAnchor(node))\n                        nodes.push(node);\n                }\n            });\n            if (ctx)\n                ctx.aliasResolveCache = nodes;\n        }\n        let found = undefined;\n        for (const node of nodes) {\n            if (node === this)\n                break;\n            if (node.anchor === this.source)\n                found = node;\n        }\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc, ctx);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            ref.anchor ?? (ref.anchor = onAnchor(value));\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_FLOW, FOLD_QUOTED, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (/^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? (obj === null ? 'null' : typeof obj);\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ?? (tagObj.default ? null : tagObj.tag);\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    tagObj ?? (tagObj = getTagObject(ctx.doc.schema.tags, node));\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { MAP, isPair, isScalar } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        if (!value)\n            return '';\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        type ?? (type = Scalar.BLOCK_LITERAL);\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value?.toISOString().replace(/(T00:00:00)?\\.000Z$/, '') ?? ''\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { floatNaN, floatExp, float } from './core/float.js';\nimport { intOct, intHex, int } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, intTime, floatTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else if (!found || indicator !== 'seq-item-ind')\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection ?? 'scalar'}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        pos ?? (pos = before.length);\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (bv.type === 'block-seq') {\n                            if (!it.explicitKey &&\n                                it.sep &&\n                                !includesToken(it.sep, 'newline')) {\n                                yield* this.pop({\n                                    type: 'error',\n                                    offset: this.offset,\n                                    message: 'Unexpected block-seq-ind on same line with key',\n                                    source: this.source\n                                });\n                                return;\n                            }\n                        }\n                        else if (atMapIndent) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","function isBuffer (obj) {\n  return obj &&\n    obj.constructor &&\n    (typeof obj.constructor.isBuffer === 'function') &&\n    obj.constructor.isBuffer(obj)\n}\n\nfunction keyIdentity (key) {\n  return key\n}\n\nexport function flatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const maxDepth = opts.maxDepth\n  const transformKey = opts.transformKey || keyIdentity\n  const output = {}\n\n  function step (object, prev, currentDepth) {\n    currentDepth = currentDepth || 1\n    Object.keys(object).forEach(function (key) {\n      const value = object[key]\n      const isarray = opts.safe && Array.isArray(value)\n      const type = Object.prototype.toString.call(value)\n      const isbuffer = isBuffer(value)\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      const newKey = prev\n        ? prev + delimiter + transformKey(key)\n        : transformKey(key)\n\n      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&\n        (!opts.maxDepth || currentDepth < maxDepth)) {\n        return step(value, newKey, currentDepth + 1)\n      }\n\n      output[newKey] = value\n    })\n  }\n\n  step(target)\n\n  return output\n}\n\nexport function unflatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const overwrite = opts.overwrite || false\n  const transformKey = opts.transformKey || keyIdentity\n  const result = {}\n\n  const isbuffer = isBuffer(target)\n  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\n    return target\n  }\n\n  // safely ensure that the key is\n  // an integer.\n  function getkey (key) {\n    const parsedKey = Number(key)\n\n    return (\n      isNaN(parsedKey) ||\n      key.indexOf('.') !== -1 ||\n      opts.object\n    )\n      ? key\n      : parsedKey\n  }\n\n  function addKeys (keyPrefix, recipient, target) {\n    return Object.keys(target).reduce(function (result, key) {\n      result[keyPrefix + delimiter + key] = target[key]\n\n      return result\n    }, recipient)\n  }\n\n  function isEmpty (val) {\n    const type = Object.prototype.toString.call(val)\n    const isArray = type === '[object Array]'\n    const isObject = type === '[object Object]'\n\n    if (!val) {\n      return true\n    } else if (isArray) {\n      return !val.length\n    } else if (isObject) {\n      return !Object.keys(val).length\n    }\n  }\n\n  target = Object.keys(target).reduce(function (result, key) {\n    const type = Object.prototype.toString.call(target[key])\n    const isObject = (type === '[object Object]' || type === '[object Array]')\n    if (!isObject || isEmpty(target[key])) {\n      result[key] = target[key]\n      return result\n    } else {\n      return addKeys(\n        key,\n        result,\n        flatten(target[key], opts)\n      )\n    }\n  }, {})\n\n  Object.keys(target).forEach(function (key) {\n    const split = key.split(delimiter).map(transformKey)\n    let key1 = getkey(split.shift())\n    let key2 = getkey(split[0])\n    let recipient = result\n\n    while (key2 !== undefined) {\n      if (key1 === '__proto__') {\n        return\n      }\n\n      const type = Object.prototype.toString.call(recipient[key1])\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      // do not write over falsey, non-undefined values if overwrite is false\n      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {\n        return\n      }\n\n      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {\n        recipient[key1] = (\n          typeof key2 === 'number' &&\n          !opts.object\n            ? []\n            : {}\n        )\n      }\n\n      recipient = recipient[key1]\n      if (split.length > 0) {\n        key1 = getkey(split.shift())\n        key2 = getkey(split[0])\n      }\n    }\n\n    // unflatten again for 'messy objects'\n    recipient[key1] = unflatten(target[key], opts)\n  })\n\n  return result\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * @import {Point} from 'unist'\n * @import {Options} from '../index.js'\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {Readonly<Options> | null | undefined} [options]\n */\nexport function parseEntities(value, options) {\n  const settings = options || {}\n  const additional =\n    typeof settings.additional === 'string'\n      ? settings.additional.charCodeAt(0)\n      : settings.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point | undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (settings.position) {\n    if ('start' in settings.position || 'indent' in settings.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = settings.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = settings.position.start\n    } else {\n      point = settings.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += String.fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n            ? isDecimal\n            : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += String.fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && settings.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (settings.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = String.fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += String.fromCharCode(\n              (referenceCode >>> (10 & 0x3ff)) | 0xd800\n            )\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + String.fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (settings.reference) {\n          settings.reference.call(\n            settings.referenceContext || undefined,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += String.fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (settings.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      settings.warning.call(\n        settings.warningContext || undefined,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (settings.text) {\n        settings.text.call(settings.textContext || undefined, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","import { kebabCase } from 'scule';\nimport { visit } from 'unist-util-visit';\nimport { stringify, parse } from 'yaml';\nimport * as flat from 'flat';\nimport { stringifyEntitiesLight } from 'stringify-entities';\nimport { defaultHandlers } from 'mdast-util-to-markdown';\nimport { parseEntities } from 'parse-entities';\nimport { markdownLineEnding, markdownSpace, asciiAlpha, markdownLineEndingOrSpace, asciiAlphanumeric } from 'micromark-util-character';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { codeFenced } from 'micromark-core-commonmark';\n\nconst FRONTMATTER_DELIMITER_DEFAULT = \"---\";\nconst FRONTMATTER_DELIMITER_CODEBLOCK_STYLE = \"```yaml [props]\";\nconst LF = \"\\n\";\nconst CR = \"\\r\";\nfunction stringifyFrontMatter(data, content = \"\") {\n  if (!Object.keys(data).length) {\n    return content.trim();\n  }\n  data = flat.unflatten(data || {}, {});\n  const frontmatter = [\n    FRONTMATTER_DELIMITER_DEFAULT,\n    stringify(data).trim(),\n    FRONTMATTER_DELIMITER_DEFAULT,\n    \"\"\n  ].join(\"\\n\");\n  if (content) {\n    return [frontmatter, content.trim(), \"\"].join(\"\\n\");\n  }\n  return frontmatter;\n}\nfunction stringifyCodeBlockProps(data, content = \"\") {\n  if (!Object.keys(data).length) {\n    return \"\";\n  }\n  data = flat.unflatten(data || {}, {});\n  return [\n    FRONTMATTER_DELIMITER_CODEBLOCK_STYLE,\n    stringify(data).trim(),\n    \"```\",\n    content\n  ].join(\"\\n\");\n}\nfunction parseFrontMatter(content) {\n  let data = {};\n  if (content.startsWith(FRONTMATTER_DELIMITER_DEFAULT)) {\n    const idx = content.indexOf(LF + FRONTMATTER_DELIMITER_DEFAULT);\n    if (idx !== -1) {\n      const hasCarriageReturn = content[idx - 1] === CR;\n      const frontmatter = content.slice(4, idx - (hasCarriageReturn ? 1 : 0));\n      if (frontmatter) {\n        data = parse(frontmatter);\n        content = content.slice(idx + 4 + (hasCarriageReturn ? 1 : 0));\n      }\n    }\n  }\n  return {\n    content,\n    // unflatten frontmatter data. convert `parent.child` keys into `parent: { child: ... }`\n    data: flat.unflatten(data || {}, {})\n  };\n}\n\nfunction track(options_) {\n  const options = options_ || {};\n  const now = options.now || {};\n  let lineShift = options.lineShift || 0;\n  let line = now.line || 1;\n  let column = now.column || 1;\n  return { move, current, shift };\n  function current() {\n    return { now: { line, column }, lineShift };\n  }\n  function shift(value) {\n    lineShift += value;\n  }\n  function move(value = \"\") {\n    const chunks = value.split(/\\r?\\n|\\r/g);\n    const tail = chunks[chunks.length - 1];\n    line += chunks.length - 1;\n    column = chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift;\n    return value;\n  }\n}\nfunction inlineContainerFlow(parent, context, safeOptions = {}) {\n  const indexStack = context.indexStack;\n  const children = parent.children || [];\n  const tracker = track(safeOptions);\n  const results = [];\n  let index = -1;\n  indexStack.push(-1);\n  while (++index < children.length) {\n    const child = children[index];\n    indexStack[indexStack.length - 1] = index;\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: \"\",\n          after: \"\",\n          ...tracker.current()\n        })\n      )\n    );\n  }\n  indexStack.pop();\n  return results.join(\"\");\n}\nfunction containerFlow(parent, context, safeOptions = {}) {\n  const indexStack = context.indexStack;\n  const children = parent.children || [];\n  const tracker = track(safeOptions);\n  const results = [];\n  let index = -1;\n  indexStack.push(-1);\n  while (++index < children.length) {\n    const child = children[index];\n    indexStack[indexStack.length - 1] = index;\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: \"\\n\",\n          after: \"\\n\",\n          ...tracker.current()\n        })\n      )\n    );\n    if (child.type !== \"list\") {\n      context.bulletLastUsed = void 0;\n    }\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])));\n    }\n  }\n  indexStack.pop();\n  return results.join(\"\");\n  function between(left, right) {\n    let index2 = context.join.length;\n    while (index2--) {\n      const result = context.join[index2](left, right, parent, context);\n      if (result === true || result === 1) {\n        break;\n      }\n      if (typeof result === \"number\") {\n        return \"\\n\".repeat(1 + result);\n      }\n      if (result === false) {\n        return \"\\n\\n<!---->\\n\\n\";\n      }\n    }\n    return \"\\n\\n\";\n  }\n}\nfunction containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack;\n  const children = parent.children || [];\n  const results = [];\n  let index = -1;\n  let before = safeOptions.before;\n  indexStack.push(-1);\n  let tracker = track(safeOptions);\n  while (++index < children.length) {\n    const child = children[index];\n    let after;\n    indexStack[indexStack.length - 1] = index;\n    if (index + 1 < children.length) {\n      let handle = context.handle.handlers[children[index + 1].type];\n      if (handle && handle.peek) {\n        handle = handle.peek;\n      }\n      after = \"\";\n      if (handle) {\n        after = handle(\n          children[index + 1],\n          parent,\n          context,\n          {\n            before: \"\",\n            after: \"\",\n            ...tracker.current()\n          }\n        ).charAt(0);\n      }\n    } else {\n      after = safeOptions.after;\n    }\n    if (results.length > 0 && (before === \"\\r\" || before === \"\\n\") && child.type === \"html\") {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        \" \"\n      );\n      before = \" \";\n      tracker = track(safeOptions);\n      tracker.move(results.join(\"\"));\n    }\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    );\n    before = results[results.length - 1].slice(-1);\n  }\n  indexStack.pop();\n  return results.join(\"\");\n}\nfunction checkQuote(context) {\n  const marker = context.options.quote || '\"';\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      \"Cannot serialize title with `\" + marker + \"` for `options.quote`, expected `\\\"`, or `'`\"\n    );\n  }\n  return marker;\n}\n\nconst CONTAINER_NODE_TYPES = /* @__PURE__ */ new Set([\n  \"componentContainerSection\",\n  \"containerComponent\",\n  \"leafComponent\"\n]);\nconst NON_UNWRAPPABLE_TYPES = /* @__PURE__ */ new Set([\n  \"componentContainerSection\",\n  \"componentContainerDataSection\",\n  \"containerComponent\",\n  \"leafComponent\",\n  \"table\",\n  \"pre\",\n  \"code\",\n  \"textComponent\"\n]);\nfunction convertHtmlEntitiesToChars(text) {\n  return text.replace(/&#x([0-9A-Fa-f]+);/g, (_, hexCode) => {\n    return String.fromCodePoint(Number.parseInt(hexCode, 16));\n  });\n}\n\nconst own = {}.hasOwnProperty;\nconst shortcut = /^[^\\t\\n\\r \"#'.<=>`}]+$/;\nconst baseFence = 2;\nfunction compilePattern(pattern) {\n  if (!pattern._compiled) {\n    const before = (pattern.atBreak ? \"[\\\\r\\\\n][\\\\t ]*\" : \"\") + (pattern.before ? \"(?:\" + pattern.before + \")\" : \"\");\n    pattern._compiled = new RegExp(\n      (before ? \"(\" + before + \")\" : \"\") + (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? \"\\\\\" : \"\") + pattern.character + (pattern.after ? \"(?:\" + pattern.after + \")\" : \"\"),\n      \"g\"\n    );\n  }\n  return pattern._compiled;\n}\nconst toMarkdown = (opts = {}) => {\n  const applyAutomaticUnwrap = (node, { safeTypes = [] }) => {\n    const isSafe = (type) => NON_UNWRAPPABLE_TYPES.has(type) || safeTypes.includes(type);\n    if (!node.mdc?.unwrapped) {\n      return;\n    }\n    node.children = [\n      {\n        type: node.mdc.unwrapped,\n        children: node.children.filter((child) => !isSafe(child.type))\n      },\n      ...node.children.filter((child) => isSafe(child.type))\n    ];\n  };\n  const frontmatter = (node) => {\n    const entries = Object.entries(node.fmAttributes || {});\n    if (entries.length === 0) {\n      return \"\";\n    }\n    const attrs = entries.sort(([key1], [key2]) => key1.localeCompare(key2)).reduce((acc, [key, value2]) => {\n      if (key?.startsWith(\":\") && isValidJSON(value2)) {\n        try {\n          value2 = JSON.parse(value2);\n        } catch {\n        }\n        key = key.slice(1);\n      }\n      acc[key] = value2;\n      return acc;\n    }, {});\n    return \"\\n\" + (opts?.yamlCodeBlockProps ? stringifyCodeBlockProps(attrs).trim() : stringifyFrontMatter(attrs).trim());\n  };\n  const processNode = (node) => {\n    if (opts.autoUnwrap) {\n      applyAutomaticUnwrap(node, typeof opts.autoUnwrap === \"boolean\" ? {} : opts.autoUnwrap);\n    }\n  };\n  function componentContainerSection(node, _, context) {\n    context.indexStack = context.stack;\n    processNode(node);\n    return `#${node.name}${attributes(node, context)}\n${content(node, context)}`.trim();\n  }\n  function textComponent(node, _, context) {\n    let value;\n    context.indexStack = context.stack;\n    const exit = context.enter(node.type);\n    if (node.name === \"span\") {\n      value = `[${content(node, context)}]${attributes(node, context)}`;\n    } else if (node.name === \"binding\") {\n      const attrs = node.attributes || {};\n      value = attrs.defaultValue ? `{{ ${attrs.value} || '${attrs.defaultValue}' }}` : `{{ ${attrs.value} }}`;\n    } else {\n      value = \":\" + (node.name || \"\") + label(node, context) + attributes(node, context);\n    }\n    exit();\n    return value;\n  }\n  let nest = 0;\n  function containerComponent(node, _, context) {\n    context.indexStack = context.stack;\n    const prefix = \":\".repeat(baseFence + nest);\n    nest += 1;\n    const exit = context.enter(node.type);\n    let value = prefix + (node.name || \"\") + label(node, context);\n    const defaultSlotChildren = node.children.filter((child) => child.type !== \"componentContainerSection\");\n    const slots = node.children.filter((child) => child.type === \"componentContainerSection\");\n    node.children = [\n      ...defaultSlotChildren,\n      ...slots\n    ];\n    node.fmAttributes = node.fmAttributes || {};\n    const attributesText = attributes(node, context);\n    if ((value + attributesText).length > (opts?.maxAttributesLength || 80) || Object.keys(node.fmAttributes).length > 0 || node.children?.some((child) => child.type === \"componentContainerSection\")) {\n      Object.assign(node.fmAttributes, node.attributes);\n      node.attributes = [];\n    }\n    processNode(node);\n    value += attributes(node, context);\n    value += frontmatter(node);\n    let subvalue;\n    if (node.type === \"containerComponent\") {\n      subvalue = content(node, context);\n      if (subvalue) {\n        value += \"\\n\" + subvalue;\n      }\n      value += \"\\n\" + prefix;\n      if (nest > 1) {\n        value = value.split(\"\\n\").map((line) => \"  \" + line).join(\"\\n\");\n      }\n    }\n    nest -= 1;\n    exit();\n    return value;\n  }\n  containerComponent.peek = function peekComponent() {\n    return \":\";\n  };\n  function label(node, context) {\n    let label2 = node;\n    if (node.type === \"containerComponent\") {\n      if (!inlineComponentLabel(node)) {\n        return \"\";\n      }\n      label2 = node.children[0];\n    }\n    const exit = context.enter(\"label\");\n    const subexit = context.enter(node.type + \"Label\");\n    const value = containerPhrasing(label2, context, { before: \"[\", after: \"]\" });\n    subexit();\n    exit();\n    return value ? \"[\" + value + \"]\" : \"\";\n  }\n  const isValidJSON = (str) => {\n    try {\n      JSON.parse(str);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n  function attributes(node, context) {\n    const quote = checkQuote(context);\n    const subset = node.type === \"textComponent\" ? [quote] : [quote, \"\\n\", \"\\r\"];\n    const attrs = Object.fromEntries(\n      Object.entries(node.attributes || {}).sort(([key1], [key2]) => key1.localeCompare(key2))\n    );\n    const values = [];\n    let id;\n    let classesFull = \"\";\n    let classes = \"\";\n    let value;\n    let key;\n    let index;\n    for (key in attrs) {\n      if (own.call(attrs, key) && attrs[key] != null) {\n        value = String(attrs[key]);\n        if (key === \"id\") {\n          id = shortcut.test(value) ? \"#\" + value : quoted(\"id\", value);\n        } else if (key === \"class\" || key === \"className\") {\n          value = Array.isArray(attrs[key]) ? attrs[key].join(\" \") : value;\n          value = value.split(/[\\t\\n\\r ]+/g).filter(Boolean);\n          classesFull = [];\n          classes = [];\n          index = -1;\n          while (++index < value.length) {\n            (shortcut.test(value[index]) ? classes : classesFull).push(value[index]);\n          }\n          classesFull = classesFull.length ? quoted(\"class\", classesFull.join(\" \")) : \"\";\n          classes = classes.length ? \".\" + classes.join(\".\") : \"\";\n        } else if (key.startsWith(\":\") && value === \"true\") {\n          values.push(key.slice(1));\n        } else if (key.startsWith(\":\") && isValidJSON(value)) {\n          values.push(`${key}='${value.replace(/([^/])'/g, \"$1\\\\'\")}'`);\n        } else {\n          values.push(quoted(key, value));\n        }\n      }\n    }\n    if (classesFull) {\n      values.unshift(classesFull);\n    }\n    if (classes) {\n      values.unshift(classes);\n    }\n    if (id) {\n      values.unshift(id);\n    }\n    return values.length ? \"{\" + values.join(\" \") + \"}\" : \"\";\n    function quoted(key2, value2) {\n      return key2 + \"=\" + quote + stringifyEntitiesLight(value2, { subset }) + quote;\n    }\n  }\n  function content(node, context) {\n    const content2 = inlineComponentLabel(node) ? Object.assign({}, node, { children: node.children.slice(1) }) : node;\n    let result = node.type === \"textComponent\" ? inlineContainerFlow(content2, context) : containerFlow(content2, context);\n    if (result.includes(\"&#x\")) {\n      result = convertHtmlEntitiesToChars(result);\n    }\n    return result;\n  }\n  function inlineComponentLabel(node) {\n    return node.children && node.children[0] && node.children[0].data && node.children[0].data.componentLabel;\n  }\n  return {\n    compilePattern,\n    unsafe: [\n      {\n        character: \"\\r\",\n        inConstruct: [\"leafComponentLabel\", \"containerComponentLabel\"]\n      },\n      {\n        character: \"\\n\",\n        inConstruct: [\"leafComponentLabel\", \"containerComponentLabel\"]\n      },\n      {\n        before: \"[^:]\",\n        character: \":\",\n        after: \"[A-Za-z]\",\n        inConstruct: [\"phrasing\"]\n      },\n      { atBreak: true, character: \":\", after: \":\" }\n    ],\n    handlers: {\n      containerComponent,\n      textComponent,\n      componentContainerSection,\n      image: (node, _, state, info) => {\n        return defaultHandlers.image(node, _, state, info) + attributes(node, state);\n      },\n      link: (node, _, state, info) => {\n        return defaultHandlers.link(node, _, state, info) + attributes(node, state);\n      },\n      linkReference: (node, _, state, info) => {\n        return defaultHandlers.linkReference(node, _, state, info) + attributes(node, state);\n      },\n      strong: (node, _, state, info) => {\n        return defaultHandlers.strong(node, _, state, info) + attributes(node, state);\n      },\n      inlineCode: (node, _, state) => {\n        state.compilePattern = state.compilePattern || compilePattern;\n        return defaultHandlers.inlineCode(node, _, state) + attributes(node, state);\n      },\n      emphasis: (node, _, state, info) => {\n        return defaultHandlers.emphasis(node, _, state, info) + attributes(node, state);\n      }\n    }\n  };\n};\n\nconst fromMarkdown = (opts = {}) => {\n  const canContainEols = [\"textComponent\"];\n  const applyYamlCodeBlockProps = (node) => {\n    const firstSection = node.children[0];\n    if (firstSection && firstSection.children?.length && firstSection.children[0].type === \"code\" && firstSection.children[0].lang === \"yaml\" && firstSection.children[0].meta === \"[props]\") {\n      node.rawData = firstSection.children[0].value;\n      node.mdc = node.mdc || {};\n      node.mdc.codeBlockProps = true;\n      firstSection.children.splice(0, 1);\n    }\n  };\n  const applyAutomaticUnwrap = (node, { safeTypes = [] }) => {\n    if (!CONTAINER_NODE_TYPES.has(node.type)) {\n      return;\n    }\n    const nonSlotChildren = node.children.filter((child2) => child2.type !== \"componentContainerSection\");\n    if (nonSlotChildren.length !== 1) {\n      return;\n    }\n    const child = nonSlotChildren[0];\n    if (NON_UNWRAPPABLE_TYPES.has(child.type) || safeTypes.includes(child.type)) {\n      return;\n    }\n    const childIndex = node.children.indexOf(child);\n    node.children.splice(childIndex, 1, ...child?.children || []);\n    node.mdc = node.mdc || {};\n    node.mdc.unwrapped = child.type;\n  };\n  const processNode = (node) => {\n    if (opts.yamlCodeBlockProps) {\n      applyYamlCodeBlockProps(node);\n    }\n    if (opts.autoUnwrap) {\n      applyAutomaticUnwrap(node, typeof opts.autoUnwrap === \"boolean\" ? {} : opts.autoUnwrap);\n    }\n  };\n  const enter = {\n    componentContainer: enterContainer,\n    componentContainerSection: enterContainerSection,\n    componentContainerDataSection: enterContainerDataSection,\n    componentContainerAttributes: enterAttributes,\n    componentContainerLabel: enterContainerLabel,\n    bindingContent: enterBindingContent,\n    componentLeaf: enterLeaf,\n    componentLeafAttributes: enterAttributes,\n    componentText: enterText,\n    textSpan: enterTextSpan,\n    componentTextAttributes: enterAttributes\n  };\n  const exit = {\n    bindingContent: exitBindingContent,\n    componentContainerSectionTitle: exitContainerSectionTitle,\n    listUnordered: conditionalExit,\n    listOrdered: conditionalExit,\n    listItem: conditionalExit,\n    componentContainerSection: exitContainerSection,\n    componentContainerDataSection: exitContainerDataSection,\n    componentContainer: exitContainer,\n    componentContainerAttributeClassValue: exitAttributeClassValue,\n    componentContainerAttributeIdValue: exitAttributeIdValue,\n    componentContainerAttributeName: exitAttributeName,\n    componentContainerAttributeValue: exitAttributeValue,\n    componentContainerAttributes: exitAttributes,\n    componentContainerLabel: exitContainerLabel,\n    componentContainerName,\n    componentContainerAttributeInitializerMarker() {\n      const attributes = this.data.componentAttributes;\n      attributes[attributes.length - 1][1] = \"\";\n    },\n    componentLeaf: exitToken,\n    componentLeafAttributeClassValue: exitAttributeClassValue,\n    componentLeafAttributeIdValue: exitAttributeIdValue,\n    componentLeafAttributeName: exitAttributeName,\n    componentLeafAttributeValue: exitAttributeValue,\n    componentLeafAttributes: exitAttributes,\n    componentLeafName: exitName,\n    componentText: exitToken,\n    textSpan: exitToken,\n    componentTextAttributeClassValue: exitAttributeClassValue,\n    componentTextAttributeIdValue: exitAttributeIdValue,\n    componentTextAttributeName: exitAttributeName,\n    componentTextAttributeValue: exitAttributeValue,\n    componentTextAttributes: exitAttributes,\n    componentTextName: componentContainerName\n  };\n  function enterBindingContent(token) {\n    const regex = /([^|]*)(?:\\|\\|\\s*'(.*)')?/;\n    const values = regex.exec(this.sliceSerialize(token));\n    this.enter({\n      type: \"textComponent\",\n      name: \"binding\",\n      attributes: {\n        value: values?.[1]?.trim(),\n        defaultValue: values?.[2]\n      }\n    }, token);\n  }\n  function exitBindingContent(token) {\n    this.exit(token);\n  }\n  function enterContainer(token) {\n    enterToken.call(this, \"containerComponent\", token);\n  }\n  function exitContainer(token) {\n    const container = this.stack[this.stack.length - 1];\n    if (container.children.length > 1) {\n      const dataSection = container.children.find((child) => child.rawData);\n      container.rawData = dataSection?.rawData;\n    }\n    processNode(container);\n    container.children = container.children.flatMap((child) => {\n      if (child.rawData) {\n        return [];\n      }\n      if (child.name === \"default\" && Object.keys(child.attributes).length === 0 || !child.name) {\n        if (child.mdc?.unwrapped) {\n          container.mdc = container.mdc || {};\n          container.mdc.unwrapped = child.mdc?.unwrapped;\n        }\n        return child.children;\n      }\n      child.data = {\n        hName: \"component-slot\",\n        hProperties: {\n          ...child.attributes,\n          [`v-slot:${child.name}`]: \"\"\n        }\n      };\n      return child;\n    });\n    this.exit(token);\n  }\n  function enterContainerSection(token) {\n    enterToken.call(this, \"componentContainerSection\", token);\n  }\n  function enterContainerDataSection(token) {\n    enterToken.call(this, \"componentContainerDataSection\", token);\n  }\n  function exitContainerSection(token) {\n    const section = this.stack[this.stack.length - 1];\n    attemptClosingOpenListSection.call(this, section);\n    processNode(section);\n    this.exit(token);\n  }\n  function exitContainerDataSection(token) {\n    let section = this.stack[this.stack.length - 1];\n    section = attemptClosingOpenListSection.call(this, section);\n    if (section.type === \"componentContainerDataSection\") {\n      section.rawData = this.sliceSerialize(token);\n      this.exit(token);\n    }\n  }\n  function exitContainerSectionTitle(token) {\n    this.stack[this.stack.length - 1].name = this.sliceSerialize(token)?.trim();\n  }\n  function enterLeaf(token) {\n    enterToken.call(this, \"leafComponent\", token);\n  }\n  function enterTextSpan(token) {\n    this.enter({ type: \"textComponent\", name: \"span\", attributes: {}, children: [] }, token);\n  }\n  function enterText(token) {\n    enterToken.call(this, \"textComponent\", token);\n  }\n  function enterToken(type, token) {\n    this.enter({ type, name: \"\", attributes: {}, children: [] }, token);\n  }\n  function componentContainerName(token) {\n    this.stack[this.stack.length - 1].name = kebabCase(this.sliceSerialize(token));\n  }\n  function exitName(token) {\n    this.stack[this.stack.length - 1].name = this.sliceSerialize(token);\n  }\n  function enterContainerLabel(token) {\n    this.enter({ type: \"paragraph\", data: { componentLabel: true }, children: [] }, token);\n  }\n  function exitContainerLabel(token) {\n    this.exit(token);\n  }\n  function enterAttributes() {\n    this.data.componentAttributes = [];\n    this.buffer();\n  }\n  function exitAttributeIdValue(token) {\n    this.data.componentAttributes.push([\"id\", parseEntities(this.sliceSerialize(token))]);\n  }\n  function exitAttributeClassValue(token) {\n    this.data.componentAttributes.push([\"class\", parseEntities(this.sliceSerialize(token))]);\n  }\n  function exitAttributeValue(token) {\n    const attributes = this.data.componentAttributes;\n    const lastAttribute = attributes[attributes.length - 1];\n    lastAttribute[1] = (typeof lastAttribute[1] === \"string\" ? lastAttribute[1] : \"\") + parseEntities(this.sliceSerialize(token));\n  }\n  function exitAttributeName(token) {\n    this.data.componentAttributes.push([this.sliceSerialize(token), true]);\n  }\n  function exitAttributes() {\n    const attributes = this.data.componentAttributes;\n    const cleaned = {};\n    let index = -1;\n    let attribute;\n    while (++index < attributes.length) {\n      attribute = attributes[index];\n      const name = kebabCase(attribute[0]);\n      if (name === \"class\" && cleaned.class) {\n        cleaned.class += \" \" + attribute[1];\n      } else {\n        cleaned[name] = attribute[1];\n      }\n    }\n    this.data.componentAttributes = attributes;\n    this.resume();\n    let stackTop = this.stack[this.stack.length - 1];\n    if (stackTop.type !== \"textComponent\" || stackTop.name === \"span\") {\n      while (!stackTop.position?.end && stackTop.children?.length > 0) {\n        stackTop = stackTop.children[stackTop.children.length - 1];\n      }\n    }\n    stackTop.attributes = cleaned;\n  }\n  function exitToken(token) {\n    this.exit(token);\n  }\n  function conditionalExit(token) {\n    const [section] = this.tokenStack[this.tokenStack.length - 1];\n    if (section.type === token.type) {\n      this.exit(token);\n    }\n  }\n  function attemptClosingOpenListSection(section) {\n    while (section.type === \"listItem\" || section.type === \"list\") {\n      const [stackToken] = this.tokenStack[this.tokenStack.length - 1];\n      this.exit(stackToken);\n      section = this.stack[this.stack.length - 1];\n    }\n    return section;\n  }\n  return {\n    canContainEols,\n    enter,\n    exit\n  };\n};\n\nconst ContainerSequenceSize = 2;\nconst SectionSequenceSize = 3;\nconst slotSeparatorCode = 35;\nconst slotSeparatorLength = 1;\nconst Codes = {\n  /**\n   * null\n   */\n  EOF: null,\n  /**\n   * ' '\n   */\n  space: 32,\n  /**\n   * '\"'\n   */\n  quotationMark: 34,\n  /**\n   * '#'\n   */\n  hash: 35,\n  /**\n   * ' ' '\n   */\n  apostrophe: 39,\n  /**\n   * '('\n   */\n  openingParentheses: 40,\n  /**\n   * '*'\n   */\n  star: 42,\n  /**\n   * '-'\n   */\n  dash: 45,\n  /**\n   * '.'\n   */\n  dot: 46,\n  /**\n   * ':'\n   */\n  colon: 58,\n  /**\n   * '<'\n   */\n  LessThan: 60,\n  /**\n   * '='\n   */\n  equals: 61,\n  /**\n   * '>'\n   */\n  greaterThan: 62,\n  /**\n   * 'X'\n   */\n  uppercaseX: 88,\n  /**\n   * '['\n   */\n  openingSquareBracket: 91,\n  /**\n   * '\\'\n   */\n  backSlash: 92,\n  /**\n   * ']'\n   */\n  closingSquareBracket: 93,\n  /**\n   * '_'\n   */\n  underscore: 95,\n  /**\n   * '`'\n   */\n  backTick: 96,\n  /**\n   * 'x'\n   */\n  lowercaseX: 120,\n  /**\n   * '{'\n   */\n  openingCurlyBracket: 123,\n  /**\n   * '}'\n   */\n  closingCurlyBracket: 125\n};\n\nfunction createLabel(effects, ok, nok, type, markerType, stringType, disallowEol) {\n  let size = 0;\n  let balance = 0;\n  return start;\n  function start(code) {\n    if (code !== Codes.openingSquareBracket) {\n      throw new Error(\"expected `[`\");\n    }\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    return afterStart;\n  }\n  function afterStart(code) {\n    if (code === Codes.closingSquareBracket) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n  function atBreak(code) {\n    if (code === Codes.EOF || size > 999) {\n      return nok(code);\n    }\n    if (code === Codes.closingSquareBracket && !balance--) {\n      return atClosingBrace(code);\n    }\n    if (markdownLineEnding(code)) {\n      if (disallowEol) {\n        return nok(code);\n      }\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkText\", { contentType: \"text\" });\n    return label(code);\n  }\n  function label(code) {\n    if (code === Codes.EOF || markdownLineEnding(code) || size > 999) {\n      effects.exit(\"chunkText\");\n      return atBreak(code);\n    }\n    if (code === Codes.openingSquareBracket && ++balance > 3) {\n      return nok(code);\n    }\n    if (code === Codes.closingSquareBracket && !balance--) {\n      effects.exit(\"chunkText\");\n      return atClosingBrace(code);\n    }\n    effects.consume(code);\n    return code === Codes.backSlash ? labelEscape : label;\n  }\n  function atClosingBrace(code) {\n    effects.exit(stringType);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.exit(type);\n    return ok;\n  }\n  function labelEscape(code) {\n    if (code === Codes.openingSquareBracket || code === Codes.backSlash || code === Codes.closingSquareBracket) {\n      effects.consume(code);\n      size++;\n      return label;\n    }\n    return label(code);\n  }\n}\n\nconst label$2 = { tokenize: tokenizeLabel$2, partial: true };\nconst gfmCheck = { tokenize: checkGfmTaskCheckbox, partial: true };\nconst doubleBracketCheck = { tokenize: checkDoubleBracket, partial: true };\nfunction tokenize$6(effects, ok, nok) {\n  const self = this;\n  return start;\n  function start(code) {\n    if (code !== Codes.openingSquareBracket) {\n      throw new Error(\"expected `[`\");\n    }\n    if (self.previous === Codes.EOF && self._gfmTasklistFirstContentOfListItem) {\n      return effects.check(gfmCheck, nok, attemptLabel)(code);\n    }\n    if (self.previous === Codes.openingSquareBracket) {\n      return nok(code);\n    }\n    return effects.check(doubleBracketCheck, nok, attemptLabel)(code);\n  }\n  function attemptLabel(code) {\n    effects.enter(\"textSpan\");\n    return effects.attempt(label$2, exit, nok)(code);\n  }\n  function exit(code) {\n    if (code === Codes.openingParentheses || code === Codes.openingSquareBracket) {\n      return nok(code);\n    }\n    return exitOK(code);\n  }\n  function exitOK(code) {\n    effects.exit(\"textSpan\");\n    return ok(code);\n  }\n}\nfunction tokenizeLabel$2(effects, ok, nok) {\n  return createLabel(effects, ok, nok, \"componentTextLabel\", \"componentTextLabelMarker\", \"componentTextLabelString\");\n}\nconst tokenizeSpan = {\n  tokenize: tokenize$6\n};\nfunction checkGfmTaskCheckbox(effects, ok, nok) {\n  return enter;\n  function enter(code) {\n    effects.enter(\"formGfmTaskCheckbox\");\n    effects.consume(code);\n    return check;\n  }\n  function check(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return check;\n    }\n    if (code === Codes.uppercaseX || code === Codes.lowercaseX) {\n      effects.consume(code);\n      return check;\n    }\n    if (code === Codes.closingSquareBracket) {\n      effects.exit(\"formGfmTaskCheckbox\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\nfunction checkDoubleBracket(effects, ok, nok) {\n  return enter;\n  function enter(code) {\n    effects.enter(\"doubleBracket\");\n    effects.consume(code);\n    return check;\n  }\n  function check(code) {\n    if (code !== Codes.openingSquareBracket) {\n      return nok(code);\n    }\n    effects.exit(\"doubleBracket\");\n    return ok(code);\n  }\n}\n\nfunction createAttributes(effects, ok, nok, attributesType, attributesMarkerType, attributeType, attributeIdType, attributeClassType, attributeNameType, attributeInitializerType, attributeValueLiteralType, attributeValueType, attributeValueMarker, attributeValueData, disallowEol) {\n  let type;\n  let marker;\n  let isBindAttribute = false;\n  return start;\n  function start(code) {\n    effects.enter(attributesType);\n    effects.enter(attributesMarkerType);\n    effects.consume(code);\n    effects.exit(attributesMarkerType);\n    return between;\n  }\n  function between(code) {\n    if (code === Codes.hash) {\n      type = attributeIdType;\n      return shortcutStart(code);\n    }\n    if (code === Codes.dot) {\n      type = attributeClassType;\n      return shortcutStart(code);\n    }\n    if (code === Codes.colon || code === Codes.underscore || asciiAlpha(code)) {\n      effects.enter(attributeType);\n      effects.enter(attributeNameType);\n      effects.consume(code);\n      isBindAttribute = code === Codes.colon;\n      return code === Codes.colon ? bindAttributeName : name;\n    }\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, between, \"whitespace\")(code);\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, between)(code);\n    }\n    return end(code);\n  }\n  function shortcutStart(code) {\n    effects.enter(attributeType);\n    effects.enter(type);\n    effects.enter(type + \"Marker\");\n    effects.consume(code);\n    effects.exit(type + \"Marker\");\n    return shortcutStartAfter;\n  }\n  function shortcutStartAfter(code) {\n    if (code === Codes.EOF || code === Codes.quotationMark || code === Codes.hash || code === Codes.apostrophe || code === Codes.dot || code === Codes.LessThan || code === Codes.equals || code === Codes.greaterThan || code === Codes.backTick || code === Codes.closingCurlyBracket || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    effects.enter(type + \"Value\");\n    effects.consume(code);\n    return shortcut;\n  }\n  function shortcut(code) {\n    if (code === Codes.EOF || code === Codes.quotationMark || code === Codes.apostrophe || code === Codes.LessThan || code === Codes.equals || code === Codes.greaterThan || code === Codes.backTick) {\n      return nok(code);\n    }\n    if (code === Codes.hash || code === Codes.dot || code === Codes.closingCurlyBracket || markdownLineEndingOrSpace(code)) {\n      effects.exit(type + \"Value\");\n      effects.exit(type);\n      effects.exit(attributeType);\n      return between(code);\n    }\n    effects.consume(code);\n    return shortcut;\n  }\n  function bindAttributeName(code) {\n    if (code === Codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return bindAttributeName;\n    }\n    effects.exit(attributeNameType);\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, bindAttributeNameAfter, \"whitespace\")(code);\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, bindAttributeNameAfter)(code);\n    }\n    return bindAttributeNameAfter(code);\n  }\n  function bindAttributeNameAfter(code) {\n    if (code === Codes.equals) {\n      effects.enter(attributeInitializerType);\n      effects.consume(code);\n      effects.exit(attributeInitializerType);\n      return valueBefore;\n    }\n    effects.exit(attributeType);\n    return nok(code);\n  }\n  function name(code) {\n    if (code === Codes.dash || code === Codes.dot || code === Codes.colon || code === Codes.underscore || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return name;\n    }\n    effects.exit(attributeNameType);\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, nameAfter, \"whitespace\")(code);\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, nameAfter)(code);\n    }\n    return nameAfter(code);\n  }\n  function nameAfter(code) {\n    if (code === Codes.equals) {\n      effects.enter(attributeInitializerType);\n      effects.consume(code);\n      effects.exit(attributeInitializerType);\n      return valueBefore;\n    }\n    effects.exit(attributeType);\n    return between(code);\n  }\n  function valueBefore(code) {\n    if (code === Codes.EOF || code === Codes.LessThan || code === Codes.equals || code === Codes.greaterThan || code === Codes.backTick || code === Codes.closingCurlyBracket || disallowEol && markdownLineEnding(code)) {\n      return nok(code);\n    }\n    if (code === Codes.quotationMark || code === Codes.apostrophe) {\n      effects.enter(attributeValueLiteralType);\n      effects.enter(attributeValueMarker);\n      effects.consume(code);\n      effects.exit(attributeValueMarker);\n      marker = code;\n      return valueQuotedStart;\n    }\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, valueBefore, \"whitespace\")(code);\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, valueBefore)(code);\n    }\n    effects.enter(attributeValueType);\n    effects.enter(attributeValueData);\n    effects.consume(code);\n    marker = void 0;\n    return valueUnquoted;\n  }\n  function valueUnquoted(code) {\n    if (code === Codes.EOF || code === Codes.quotationMark || code === Codes.apostrophe || code === Codes.LessThan || code === Codes.equals || code === Codes.greaterThan || code === Codes.backTick) {\n      return nok(code);\n    }\n    if (code === Codes.closingCurlyBracket || markdownLineEndingOrSpace(code)) {\n      effects.exit(attributeValueData);\n      effects.exit(attributeValueType);\n      effects.exit(attributeType);\n      return between(code);\n    }\n    effects.consume(code);\n    return valueUnquoted;\n  }\n  function valueQuotedStart(code) {\n    if (code === marker) {\n      effects.enter(attributeValueMarker);\n      effects.consume(code);\n      effects.exit(attributeValueMarker);\n      effects.exit(attributeValueLiteralType);\n      effects.exit(attributeType);\n      return valueQuotedAfter;\n    }\n    effects.enter(attributeValueType);\n    return valueQuotedBetween(code);\n  }\n  function valueQuotedBetween(code) {\n    if (code === marker) {\n      effects.exit(attributeValueType);\n      return valueQuotedStart(code);\n    }\n    if (code === Codes.EOF) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      return disallowEol ? nok(code) : factoryWhitespace(effects, valueQuotedBetween)(code);\n    }\n    effects.enter(attributeValueData);\n    effects.consume(code);\n    return valueQuoted;\n  }\n  function valueQuoted(code) {\n    if (isBindAttribute && code === Codes.backSlash) {\n      effects.exit(attributeValueData);\n      effects.exit(attributeValueType);\n      effects.enter(\"escapeCharacter\");\n      effects.consume(code);\n      effects.exit(\"escapeCharacter\");\n      effects.enter(attributeValueType);\n      effects.enter(attributeValueData);\n      return valueQuotedEscape;\n    }\n    if (code === marker || code === Codes.EOF || markdownLineEnding(code)) {\n      effects.exit(attributeValueData);\n      return valueQuotedBetween(code);\n    }\n    effects.consume(code);\n    return valueQuoted;\n  }\n  function valueQuotedEscape(code) {\n    effects.consume(code);\n    return valueQuoted;\n  }\n  function valueQuotedAfter(code) {\n    return code === Codes.closingCurlyBracket || markdownLineEndingOrSpace(code) ? between(code) : end(code);\n  }\n  function end(code) {\n    if (code === Codes.closingCurlyBracket) {\n      effects.enter(attributesMarkerType);\n      effects.consume(code);\n      effects.exit(attributesMarkerType);\n      effects.exit(attributesType);\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\nconst attributes$2 = { tokenize: tokenizeAttributes$2, partial: true };\nconst validEvents = [\n  /**\n   * Span\n   */\n  \"textSpan\",\n  /**\n   * Bold & Italic\n   */\n  \"attentionSequence\",\n  /**\n   * Inline Code\n   */\n  \"codeText\",\n  /**\n   * Link\n   */\n  \"link\",\n  /**\n   * Image\n   */\n  \"image\"\n];\nfunction tokenize$5(effects, ok, nok) {\n  const self = this;\n  return start;\n  function start(code) {\n    if (code !== Codes.openingCurlyBracket) {\n      throw new Error(\"expected `{`\");\n    }\n    const event = self.events[self.events.length - 1];\n    if (markdownLineEnding(self.previous) || !event || !validEvents.includes(event[1].type)) {\n      return nok(code);\n    }\n    return effects.attempt(attributes$2, ok, nok)(code);\n  }\n}\nfunction tokenizeAttributes$2(effects, ok, nok) {\n  return createAttributes(\n    effects,\n    ok,\n    nok,\n    \"componentTextAttributes\",\n    \"componentTextAttributesMarker\",\n    \"componentTextAttribute\",\n    \"componentTextAttributeId\",\n    \"componentTextAttributeClass\",\n    \"componentTextAttributeName\",\n    \"componentTextAttributeInitializerMarker\",\n    \"componentTextAttributeValueLiteral\",\n    \"componentTextAttributeValue\",\n    \"componentTextAttributeValueMarker\",\n    \"componentTextAttributeValueData\"\n  );\n}\nconst tokenizeAttribute = {\n  tokenize: tokenize$5\n};\n\nfunction attempClose(effects, ok, nok) {\n  return start;\n  function start(code) {\n    if (code !== Codes.closingCurlyBracket) {\n      return nok(code);\n    }\n    effects.exit(\"bindingContent\");\n    effects.enter(\"bindingFence\");\n    effects.consume(code);\n    return secondBracket;\n  }\n  function secondBracket(code) {\n    if (code !== Codes.closingCurlyBracket) {\n      return nok(code);\n    }\n    effects.consume(code);\n    effects.exit(\"bindingFence\");\n    return ok;\n  }\n}\nfunction tokenize$4(effects, ok, nok) {\n  return start;\n  function start(code) {\n    if (code !== Codes.openingCurlyBracket) {\n      throw new Error(\"expected `{`\");\n    }\n    effects.enter(\"bindingFence\");\n    effects.consume(code);\n    return secondBracket;\n  }\n  function secondBracket(code) {\n    if (code !== Codes.openingCurlyBracket) {\n      return nok(code);\n    }\n    effects.consume(code);\n    effects.exit(\"bindingFence\");\n    effects.enter(\"bindingContent\");\n    return content;\n  }\n  function content(code) {\n    if (code === Codes.closingCurlyBracket) {\n      return effects.attempt({ tokenize: attempClose, partial: true }, close, (code2) => {\n        effects.consume(code2);\n        return content;\n      })(code);\n    }\n    effects.consume(code);\n    return content;\n  }\n  function close(code) {\n    return ok(code);\n  }\n}\nconst tokenizeBinding = {\n  tokenize: tokenize$4\n};\n\nfunction createName(effects, ok, nok, nameType) {\n  const self = this;\n  return start;\n  function start(code) {\n    if (asciiAlpha(code)) {\n      effects.enter(nameType);\n      effects.consume(code);\n      return name;\n    }\n    return nok(code);\n  }\n  function name(code) {\n    if (code === Codes.dash || code === Codes.underscore || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return name;\n    }\n    effects.exit(nameType);\n    return self.previous === Codes.underscore ? nok(code) : ok(code);\n  }\n}\n\nconst label$1 = { tokenize: tokenizeLabel$1, partial: true };\nconst attributes$1 = { tokenize: tokenizeAttributes$1, partial: true };\nfunction previous(code) {\n  return code !== Codes.colon || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\nfunction tokenize$3(effects, ok, nok) {\n  const self = this;\n  return start;\n  function start(code) {\n    if (code !== Codes.colon) {\n      throw new Error(\"expected `:`\");\n    }\n    if (self.previous !== null && !markdownLineEndingOrSpace(self.previous) && ![Codes.openingSquareBracket, Codes.star, Codes.underscore, Codes.openingParentheses].includes(self.previous)) {\n      return nok(code);\n    }\n    if (!previous.call(self, self.previous)) {\n      throw new Error(\"expected correct previous\");\n    }\n    effects.enter(\"componentText\");\n    effects.enter(\"componentTextMarker\");\n    effects.consume(code);\n    effects.exit(\"componentTextMarker\");\n    return createName.call(self, effects, afterName, nok, \"componentTextName\");\n  }\n  function afterName(code) {\n    if (code === Codes.colon) {\n      return nok(code);\n    }\n    if (code === Codes.openingSquareBracket) {\n      return effects.attempt(label$1, afterLabel, afterLabel)(code);\n    }\n    if (code === Codes.openingCurlyBracket) {\n      return effects.attempt(attributes$1, afterAttributes, afterAttributes)(code);\n    }\n    return exit(code);\n  }\n  function afterAttributes(code) {\n    if (code === Codes.openingSquareBracket) {\n      return effects.attempt(label$1, afterLabel, afterLabel)(code);\n    }\n    return exit(code);\n  }\n  function afterLabel(code) {\n    if (code === Codes.openingCurlyBracket) {\n      return effects.attempt(attributes$1, exit, exit)(code);\n    }\n    return exit(code);\n  }\n  function exit(code) {\n    effects.exit(\"componentText\");\n    return ok(code);\n  }\n}\nfunction tokenizeLabel$1(effects, ok, nok) {\n  return createLabel(effects, ok, nok, \"componentTextLabel\", \"componentTextLabelMarker\", \"componentTextLabelString\");\n}\nfunction tokenizeAttributes$1(effects, ok, nok) {\n  return createAttributes(\n    effects,\n    ok,\n    nok,\n    \"componentTextAttributes\",\n    \"componentTextAttributesMarker\",\n    \"componentTextAttribute\",\n    \"componentTextAttributeId\",\n    \"componentTextAttributeClass\",\n    \"componentTextAttributeName\",\n    \"componentTextAttributeInitializerMarker\",\n    \"componentTextAttributeValueLiteral\",\n    \"componentTextAttributeValue\",\n    \"componentTextAttributeValueMarker\",\n    \"componentTextAttributeValueData\"\n  );\n}\nconst tokenizeInline = {\n  tokenize: tokenize$3,\n  previous\n};\n\nfunction sizeChunks(chunks) {\n  let index = -1;\n  let size = 0;\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === \"string\" ? chunks[index].length : 1;\n  }\n  return size;\n}\nfunction prefixSize(events, type) {\n  const tail = events[events.length - 1];\n  if (!tail || tail[1].type !== type) {\n    return 0;\n  }\n  return sizeChunks(tail[2].sliceStream(tail[1]));\n}\nfunction linePrefixSize(events) {\n  let size = 0;\n  let index = events.length - 1;\n  let tail = events[index];\n  while (index >= 0 && tail && tail[1].type === \"linePrefix\" && tail[0] === \"exit\") {\n    size += sizeChunks(tail[2].sliceStream(tail[1]));\n    index -= 1;\n    tail = events[index];\n  }\n  return size;\n}\nconst useTokenState = (tokenName) => {\n  const token = {\n    isOpen: false,\n    /**\n     * Enter into token, close previous open token if any\n     */\n    enter: (effects) => {\n      const initialState = token.isOpen;\n      token.exit(effects);\n      effects.enter(tokenName);\n      token.isOpen = true;\n      return () => {\n        token.isOpen = initialState;\n      };\n    },\n    /**\n     * Enter into token only once, if token is already open, do nothing\n     */\n    enterOnce: (effects) => {\n      const initialState = token.isOpen;\n      if (!token.isOpen) {\n        effects.enter(tokenName);\n        token.isOpen = true;\n      }\n      return () => {\n        token.isOpen = initialState;\n      };\n    },\n    /**\n     * Exit from token if it is open\n     */\n    exit: (effects) => {\n      const initialState = token.isOpen;\n      if (token.isOpen) {\n        effects.exit(tokenName);\n        token.isOpen = false;\n      }\n      return () => {\n        token.isOpen = initialState;\n      };\n    }\n  };\n  return token;\n};\nconst tokenizeCodeFence = { tokenize: checkCodeFenced, partial: true };\nfunction checkCodeFenced(effects, ok, nok) {\n  let backTickCount = 0;\n  return start;\n  function start(code) {\n    effects.enter(\"codeFenced\");\n    return after(code);\n  }\n  function after(code) {\n    if (code === Codes.backTick) {\n      backTickCount++;\n      effects.consume(code);\n      return after;\n    }\n    effects.exit(\"codeFenced\");\n    if (backTickCount >= 3) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\nfunction tokenizeFrontMatter(effects, ok, _nok, next, initialPrefix) {\n  let previous;\n  return effects.attempt({\n    tokenize: tokenizeDataSection,\n    partial: true\n  }, dataSectionOpen, next);\n  function tokenizeDataSection(effects2, ok2, nok) {\n    const self = this;\n    let size = 0;\n    let sectionIndentSize = 0;\n    return closingPrefixAfter;\n    function dataLineFirstSpaces(code) {\n      if (markdownSpace(code)) {\n        effects2.consume(code);\n        sectionIndentSize += 1;\n        return dataLineFirstSpaces;\n      }\n      effects2.exit(\"space\");\n      return closingPrefixAfter(code);\n    }\n    function closingPrefixAfter(code) {\n      if (markdownSpace(code)) {\n        effects2.enter(\"space\");\n        return dataLineFirstSpaces(code);\n      }\n      if (sectionIndentSize === 0) {\n        sectionIndentSize = linePrefixSize(self.events);\n      }\n      effects2.enter(\"componentContainerSectionSequence\");\n      return closingSectionSequence(code);\n    }\n    function closingSectionSequence(code) {\n      if (code === Codes.dash || markdownSpace(code)) {\n        effects2.consume(code);\n        size++;\n        return closingSectionSequence;\n      }\n      if (size < SectionSequenceSize) {\n        return nok(code);\n      }\n      if (sectionIndentSize !== initialPrefix) {\n        return nok(code);\n      }\n      if (!markdownLineEnding(code)) {\n        return nok(code);\n      }\n      effects2.exit(\"componentContainerSectionSequence\");\n      return factorySpace(effects2, ok2, \"whitespace\")(code);\n    }\n  }\n  function dataSectionOpen(code) {\n    effects.enter(\"componentContainerDataSection\");\n    return effects.attempt({\n      tokenize: tokenizeDataSection,\n      partial: true\n    }, dataSectionClose, dataChunkStart)(code);\n  }\n  function dataChunkStart(code) {\n    if (code === null) {\n      effects.exit(\"componentContainerDataSection\");\n      effects.exit(\"componentContainer\");\n      return ok(code);\n    }\n    const token = effects.enter(\"chunkDocument\", {\n      contentType: \"document\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return dataContentContinue(code);\n  }\n  function dataContentContinue(code) {\n    if (code === null) {\n      effects.exit(\"chunkDocument\");\n      effects.exit(\"componentContainerDataSection\");\n      effects.exit(\"componentContainer\");\n      return ok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkDocument\");\n      return effects.attempt({\n        tokenize: tokenizeDataSection,\n        partial: true\n      }, dataSectionClose, dataChunkStart);\n    }\n    effects.consume(code);\n    return dataContentContinue;\n  }\n  function dataSectionClose(code) {\n    effects.exit(\"componentContainerDataSection\");\n    return factorySpace(effects, next, \"whitespace\")(code);\n  }\n}\n\nconst label = { tokenize: tokenizeLabel, partial: true };\nconst attributes = { tokenize: tokenizeAttributes, partial: true };\nfunction tokenize$2(effects, ok, nok) {\n  const self = this;\n  const initialPrefix = linePrefixSize(this.events);\n  let sizeOpen = 0;\n  let previous;\n  const childContainersSequenceSize = [];\n  let containerFirstLine = true;\n  let visitingCodeFenced = false;\n  const section = useTokenState(\"componentContainerSection\");\n  return start;\n  function start(code) {\n    if (code !== Codes.colon) {\n      throw new Error(\"expected `:`\");\n    }\n    effects.enter(\"componentContainer\");\n    effects.enter(\"componentContainerFence\");\n    effects.enter(\"componentContainerSequence\");\n    return sequenceOpen(code);\n  }\n  function tokenizeSectionClosing(effects2, ok2, nok2) {\n    let size = 0;\n    let sectionIndentSize = 0;\n    let revertSectionState;\n    return closingPrefixAfter;\n    function closingPrefixAfter(code) {\n      sectionIndentSize = linePrefixSize(self.events);\n      revertSectionState = section.exit(effects2);\n      effects2.enter(\"componentContainerSectionSequence\");\n      return closingSectionSequence(code);\n    }\n    function closingSectionSequence(code) {\n      if (code === slotSeparatorCode) {\n        effects2.consume(code);\n        size++;\n        return closingSectionSequence;\n      }\n      if (size !== slotSeparatorLength) {\n        revertSectionState();\n        return nok2(code);\n      }\n      if (sectionIndentSize !== initialPrefix) {\n        revertSectionState();\n        return nok2(code);\n      }\n      if (!asciiAlpha(code)) {\n        revertSectionState();\n        return nok2(code);\n      }\n      effects2.exit(\"componentContainerSectionSequence\");\n      return factorySpace(effects2, ok2, \"whitespace\")(code);\n    }\n  }\n  function sectionOpen(code) {\n    section.enter(effects);\n    if (markdownLineEnding(code)) {\n      return factorySpace(effects, lineStart, \"whitespace\")(code);\n    }\n    effects.enter(\"componentContainerSectionTitle\");\n    return sectionTitle(code);\n  }\n  function sectionTitle(code) {\n    if (code === Codes.openingCurlyBracket) {\n      return effects.check(\n        attributes,\n        (code2) => {\n          effects.exit(\"componentContainerSectionTitle\");\n          return effects.attempt(attributes, factorySpace(effects, lineStart, \"linePrefix\", 4), nok)(code2);\n        },\n        (code2) => {\n          effects.consume(code2);\n          return sectionTitle;\n        }\n      )(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.exit(\"componentContainerSectionTitle\");\n      return factorySpace(effects, lineStart, \"linePrefix\", 4)(code);\n    }\n    effects.consume(code);\n    return sectionTitle;\n  }\n  function sequenceOpen(code) {\n    if (code === Codes.colon) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    if (sizeOpen < ContainerSequenceSize) {\n      return nok(code);\n    }\n    effects.exit(\"componentContainerSequence\");\n    return createName.call(self, effects, afterName, nok, \"componentContainerName\")(code);\n  }\n  function afterName(code) {\n    return code === Codes.openingSquareBracket ? effects.attempt(label, afterLabel, afterLabel)(code) : afterLabel(code);\n  }\n  function afterLabel(code) {\n    return code === Codes.openingCurlyBracket ? effects.attempt(attributes, afterAttributes, afterAttributes)(code) : afterAttributes(code);\n  }\n  function afterAttributes(code) {\n    return factorySpace(effects, openAfter, \"whitespace\")(code);\n  }\n  function openAfter(code) {\n    effects.exit(\"componentContainerFence\");\n    if (code === null) {\n      effects.exit(\"componentContainer\");\n      return ok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return self.interrupt ? ok : contentStart;\n    }\n    return nok(code);\n  }\n  function contentStart(code) {\n    if (code === null) {\n      effects.exit(\"componentContainer\");\n      return ok(code);\n    }\n    if (containerFirstLine && (code === Codes.dash || markdownSpace(code))) {\n      containerFirstLine = false;\n      return tokenizeFrontMatter(effects, ok, nok, contentStart, initialPrefix)(code);\n    }\n    effects.enter(\"componentContainerContent\");\n    return lineStart(code);\n  }\n  function lineStartAfterPrefix(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (code === Codes.backTick) {\n      return effects.check(\n        tokenizeCodeFence,\n        (code2) => {\n          visitingCodeFenced = !visitingCodeFenced;\n          return chunkStart(code2);\n        },\n        chunkStart\n      )(code);\n    }\n    if (visitingCodeFenced) {\n      return chunkStart(code);\n    }\n    if (!childContainersSequenceSize.length && (code === slotSeparatorCode || code === Codes.space)) {\n      return effects.attempt(\n        { tokenize: tokenizeSectionClosing, partial: true },\n        sectionOpen,\n        chunkStart\n      )(code);\n    }\n    if (code === Codes.colon) {\n      return effects.attempt(\n        { tokenize: tokenizeClosingFence, partial: true },\n        after,\n        chunkStart\n      )(code);\n    }\n    return chunkStart(code);\n  }\n  function lineStart(code) {\n    if (code === null) {\n      return after(code);\n    }\n    return initialPrefix ? factorySpace(effects, lineStartAfterPrefix, \"linePrefix\", initialPrefix + 1)(code) : lineStartAfterPrefix(code);\n  }\n  function chunkStart(code) {\n    if (code === null) {\n      return after(code);\n    }\n    section.enterOnce(effects);\n    const token = effects.enter(\"chunkDocument\", {\n      contentType: \"document\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return contentContinue(code);\n  }\n  function contentContinue(code) {\n    if (code === null) {\n      effects.exit(\"chunkDocument\");\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkDocument\");\n      return lineStart;\n    }\n    effects.consume(code);\n    return contentContinue;\n  }\n  function after(code) {\n    section.exit(effects);\n    effects.exit(\"componentContainerContent\");\n    effects.exit(\"componentContainer\");\n    return ok(code);\n  }\n  function tokenizeClosingFence(effects2, ok2, nok2) {\n    let size = 0;\n    return factorySpace(effects2, closingPrefixAfter, \"linePrefix\", 4);\n    function closingPrefixAfter(code) {\n      effects2.enter(\"componentContainerFence\");\n      effects2.enter(\"componentContainerSequence\");\n      return closingSequence(code);\n    }\n    function closingSequence(code) {\n      if (code === Codes.colon) {\n        effects2.consume(code);\n        size++;\n        return closingSequence;\n      }\n      if (childContainersSequenceSize.length) {\n        if (size === childContainersSequenceSize[childContainersSequenceSize.length - 1]) {\n          childContainersSequenceSize.pop();\n        }\n        return nok2(code);\n      }\n      if (size !== sizeOpen) {\n        return nok2(code);\n      }\n      effects2.exit(\"componentContainerSequence\");\n      return factorySpace(effects2, closingSequenceEnd, \"whitespace\")(code);\n    }\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects2.exit(\"componentContainerFence\");\n        return ok2(code);\n      }\n      childContainersSequenceSize.push(size);\n      return nok2(code);\n    }\n  }\n}\nfunction tokenizeLabel(effects, ok, nok) {\n  return createLabel(\n    effects,\n    ok,\n    nok,\n    \"componentContainerLabel\",\n    \"componentContainerLabelMarker\",\n    \"componentContainerLabelString\",\n    true\n  );\n}\nfunction tokenizeAttributes(effects, ok, nok) {\n  return createAttributes(\n    effects,\n    ok,\n    nok,\n    \"componentContainerAttributes\",\n    \"componentContainerAttributesMarker\",\n    \"componentContainerAttribute\",\n    \"componentContainerAttributeId\",\n    \"componentContainerAttributeClass\",\n    \"componentContainerAttributeName\",\n    \"componentContainerAttributeInitializerMarker\",\n    \"componentContainerAttributeValueLiteral\",\n    \"componentContainerAttributeValue\",\n    \"componentContainerAttributeValueMarker\",\n    \"componentContainerAttributeValueData\",\n    true\n  );\n}\nconst tokenizeContainer = {\n  tokenize: tokenize$2,\n  concrete: true\n};\n\nfunction tokenize$1(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, lineStart, \"linePrefix\");\n  function lineStart(code) {\n    if (prefixSize(self.events, \"linePrefix\") < 4) {\n      return nok(code);\n    }\n    switch (code) {\n      case Codes.backTick:\n        return codeFenced.tokenize.call(self, effects, ok, nok)(code);\n      case Codes.colon:\n        return tokenizeContainer.tokenize.call(self, effects, ok, nok)(code);\n      default:\n        return nok(code);\n    }\n  }\n}\nconst tokenizeContainerIndented = {\n  tokenize: tokenize$1\n};\n\nfunction tokenize(effects, ok, nok) {\n  const self = this;\n  const tokenizeSugerSyntax = tokenizeInline.tokenize.call(\n    self,\n    effects,\n    factorySpace(effects, exit, \"linePrefix\"),\n    nok\n  );\n  return factorySpace(effects, lineStart, \"linePrefix\");\n  function lineStart(code) {\n    if (code === Codes.colon) {\n      return tokenizeSugerSyntax(code);\n    }\n    return nok(code);\n  }\n  function exit(code) {\n    if (markdownLineEnding(code) || code === Codes.EOF) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\nconst tokenizeContainerSuger = {\n  tokenize\n};\n\nfunction micromarkComponentsExtension() {\n  return {\n    text: {\n      [Codes.colon]: tokenizeInline,\n      [Codes.openingSquareBracket]: [tokenizeSpan],\n      [Codes.openingCurlyBracket]: [tokenizeBinding, tokenizeAttribute]\n    },\n    flow: {\n      [Codes.colon]: [tokenizeContainer, tokenizeContainerSuger]\n    },\n    flowInitial: {\n      \"-2\": tokenizeContainerIndented,\n      \"-1\": tokenizeContainerIndented,\n      [Codes.space]: tokenizeContainerIndented\n    }\n  };\n}\n\nconst toFrontMatter = (yamlString) => `---\n${yamlString}\n---`;\nconst remarkMDC = (function remarkMDC(opts = {}) {\n  const data = this.data();\n  if (opts.autoUnwrap === void 0 && opts.experimental?.autoUnwrap) {\n    opts.autoUnwrap = opts.experimental.autoUnwrap ? { safeTypes: [] } : false;\n  }\n  if (opts.yamlCodeBlockProps === void 0 && opts.experimental?.componentCodeBlockYamlProps) {\n    opts.yamlCodeBlockProps = opts.experimental.componentCodeBlockYamlProps;\n  }\n  add(\"micromarkExtensions\", micromarkComponentsExtension());\n  add(\"fromMarkdownExtensions\", fromMarkdown(opts));\n  add(\"toMarkdownExtensions\", toMarkdown(opts));\n  function add(field, value) {\n    if (!data[field]) {\n      data[field] = [];\n    }\n    data[field].push(value);\n  }\n  if (opts?.components?.length) {\n    return async (tree, { data: data2 }) => {\n      const jobs = [];\n      visit(tree, [\"textComponent\", \"leafComponent\", \"containerComponent\"], (node) => {\n        bindNode(node);\n        const { instance: handler, options } = opts.components.find((c) => c.name === node.name) || {};\n        if (handler) {\n          jobs.push(handler(options)(node, data2));\n        }\n      });\n      await Promise.all(jobs);\n      return tree;\n    };\n  }\n  return (tree) => {\n    visit(tree, [\"textComponent\", \"leafComponent\", \"containerComponent\"], (node) => {\n      bindNode(node);\n    });\n  };\n});\nfunction bindNode(node) {\n  const nodeData = node.data || (node.data = {});\n  node.fmAttributes = getNodeData(node);\n  nodeData.hName = kebabCase(node.name);\n  nodeData.hProperties = bindData(\n    {\n      ...node.attributes,\n      // Parse data slots and retrieve data\n      ...node.fmAttributes\n    }\n  );\n}\nfunction getNodeData(node) {\n  if (node.rawData) {\n    const yaml = node.rawData.replace(/\\s-+$/, \"\");\n    const { data } = parseFrontMatter(toFrontMatter(yaml));\n    return data;\n  }\n  return {};\n}\nfunction bindData(data) {\n  const entries = Object.entries(data).map(([key, value]) => {\n    if (key.startsWith(\":\")) {\n      return [key, value];\n    }\n    if (typeof value === \"string\") {\n      return [key, value];\n    }\n    return [`:${key}`, JSON.stringify(value)];\n  });\n  return Object.fromEntries(entries);\n}\n\nexport { convertHtmlEntitiesToChars, remarkMDC as default, micromarkComponentsExtension as micromarkExtension, parseFrontMatter, stringifyFrontMatter };\n","export const useProcessorPlugins = async (processor, plugins = {}) => {\n  const toUse = Object.entries(plugins).filter((p) => p[1] !== false);\n  for (const plugin of toUse) {\n    const instance = plugin[1].instance || await import(\n      /* @vite-ignore */\n      plugin[0]\n    ).then((m) => m.default || m);\n    processor.use(instance, plugin[1].options);\n  }\n};\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @callback CreateContent\n *   Create a target for the element.\n * @param {Element} element\n *   Element to check.\n * @returns {Array<ElementContent> | ElementContent | null | undefined}\n *   Content to add.\n *\n * @callback CreateProperties\n *   Create properties for an element.\n * @param {Element} element\n *   Element to check.\n * @returns {Properties | null | undefined}\n *   Properties to add.\n *\n * @callback CreateRel\n *   Create a `rel` for the element.\n * @param {Element} element\n *   Element to check.\n * @returns {Array<string> | string | null | undefined}\n *   `rel` to use.\n *\n * @callback CreateTarget\n *   Create a `target` for the element.\n * @param {Element} element\n *   Element to check.\n * @returns {Target | null | undefined}\n *   `target` to use.\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<ElementContent> | CreateContent | ElementContent | null | undefined} [content]\n *   Content to insert at the end of external links (optional); will be\n *   inserted in a `<span>` element; useful for improving accessibility by\n *   giving users advanced warning when opening a new window.\n * @property {CreateProperties | Properties | null | undefined} [contentProperties]\n *   Properties to add to the `span` wrapping `content` (optional).\n * @property {CreateProperties | Properties | null | undefined} [properties]\n *   Properties to add to the link itself (optional).\n * @property {Array<string> | null | undefined} [protocols=['http', 'https']]\n *   Protocols to check, such as `mailto` or `tel` (default: `['http',\n *   'https']`).\n * @property {Array<string> | CreateRel | string | null | undefined} [rel=['nofollow']]\n *   Link types to hint about the referenced documents (default:\n *   `['nofollow']`); pass an empty array (`[]`) to not set `rel`s on links;\n *   when using a `target`, add `noopener` and `noreferrer` to avoid\n *   exploitation of the `window.opener` API.\n * @property {CreateTarget | Target | null | undefined} [target]\n *   How to display referenced documents; the default (nothing) is to not set\n *   `target`s on links.\n * @property {Test | null | undefined} [test]\n *   Extra test to define which external link elements are modified (optional);\n *   any test that can be given to `hast-util-is-element` is supported.\n *\n * @typedef {'_blank' | '_parent' | '_self' | '_top'} Target\n *   Target.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {convertElement} from 'hast-util-is-element'\nimport isAbsoluteUrl from 'is-absolute-url'\nimport {parse} from 'space-separated-tokens'\nimport {visit} from 'unist-util-visit'\n\nconst defaultProtocols = ['http', 'https']\nconst defaultRel = ['nofollow']\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Automatically add `rel` (and `target`?) to external links.\n *\n * ###### Notes\n *\n * You should [likely not configure `target`][css-tricks].\n *\n * You should at least set `rel` to `['nofollow']`.\n * When using a `target`, add `noopener` and `noreferrer` to avoid exploitation\n * of the `window.opener` API.\n *\n * When using a `target`, you should set `content` to adhere to accessibility\n * guidelines by giving users advanced warning when opening a new window.\n *\n * [css-tricks]: https://css-tricks.com/use-target_blank/\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeExternalLinks(options) {\n  const settings = options || emptyOptions\n  const protocols = settings.protocols || defaultProtocols\n  const is = convertElement(settings.test)\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (\n        node.tagName === 'a' &&\n        typeof node.properties.href === 'string' &&\n        is(node, index, parent)\n      ) {\n        const url = node.properties.href\n\n        if (\n          isAbsoluteUrl(url)\n            ? protocols.includes(url.slice(0, url.indexOf(':')))\n            : url.startsWith('//')\n        ) {\n          const contentRaw = createIfNeeded(settings.content, node)\n          const content =\n            contentRaw && !Array.isArray(contentRaw) ? [contentRaw] : contentRaw\n          const relRaw = createIfNeeded(settings.rel, node) || defaultRel\n          const rel = typeof relRaw === 'string' ? parse(relRaw) : relRaw\n          const target = createIfNeeded(settings.target, node)\n\n          const properties = createIfNeeded(settings.properties, node)\n\n          if (properties) {\n            Object.assign(node.properties, structuredClone(properties))\n          }\n\n          if (rel.length > 0) {\n            node.properties.rel = [...rel]\n          }\n\n          if (target) {\n            node.properties.target = target\n          }\n\n          if (content) {\n            const properties =\n              createIfNeeded(settings.contentProperties, node) || {}\n\n            node.children.push({\n              type: 'element',\n              tagName: 'span',\n              properties: structuredClone(properties),\n              children: structuredClone(content)\n            })\n          }\n        }\n      }\n    })\n  }\n}\n\n/**\n * Call a function to get a return value or use the value.\n *\n * @template T\n *   Type of value.\n * @param {T} value\n *   Value.\n * @param {Element} element\n *   Element.\n * @returns {T extends Function ? ReturnType<T> : T}\n *   Result.\n */\nfunction createIfNeeded(value, element) {\n  return typeof value === 'function' ? value(element) : value\n}\n","/** @type {Record<string, Array<string> | string | null>} */\nexport const schema = {\n  accept: 'input',\n  className: null,\n  dropzone: null,\n  htmlFor: 'output',\n  headers: ['td', 'th'],\n  itemProp: null,\n  itemRef: null,\n  itemType: null,\n  ping: ['a', 'area'],\n  rel: ['a', 'area', 'link'],\n  sandbox: 'iframe',\n  sizes: 'link'\n}\n","/**\n * @import {Root} from 'hast'\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {visit} from 'unist-util-visit'\nimport {schema} from './schema.js'\n\n/**\n * Sort attribute values.\n *\n * @returns\n *   Transform.\n */\nexport default function rehypeSortAttributeValues() {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    // Map of properties to property values to counts.\n    /** @type {Map<string, Map<number | string, number>>} */\n    const counts = new Map()\n    // List of all arrays, with their property names, so we don’t walk twice.\n    /** @type {Array<[string, Array<number | string>]>} */\n    const queues = []\n\n    visit(tree, 'element', function (node) {\n      /** @type {string} */\n      let property\n\n      for (property in node.properties) {\n        if (Object.hasOwn(node.properties, property)) {\n          const value = node.properties[property]\n\n          if (\n            Object.hasOwn(schema, property) &&\n            isElement(node, schema[property]) &&\n            Array.isArray(value)\n          ) {\n            add(property, value)\n          }\n        }\n      }\n    })\n\n    flush()\n\n    /**\n     * @param {string} property\n     *   Property name.\n     * @param {Array<number | string>} values\n     *   Values.\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function add(property, values) {\n      let index = -1\n      let cache = counts.get(property)\n\n      if (!cache) {\n        cache = new Map()\n        counts.set(property, cache)\n      }\n\n      while (++index < values.length) {\n        const value = values[index]\n        cache.set(value, (cache.get(value) || 0) + 1)\n      }\n\n      queues.push([property, values])\n    }\n\n    /**\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function flush() {\n      /** @type {Map<string, Array<number | string>>} */\n      const caches = new Map()\n\n      for (const [property, cache] of counts) {\n        caches.set(\n          property,\n          [...cache.entries()]\n            .sort(function (a, b) {\n              return b[1] - a[1] || compare(String(a[0]), String(b[0]), 0)\n            })\n            .map(function (d) {\n              return d[0]\n            })\n        )\n      }\n\n      let index = -1\n\n      while (++index < queues.length) {\n        const queue = queues[index]\n        const cache = caches.get(queue[0])\n        if (cache) {\n          queue[1].sort(function (a, b) {\n            return cache.indexOf(a) - cache.indexOf(b)\n          })\n        }\n      }\n    }\n  }\n}\n\n/**\n * This would create an infinite loop if `a` and `b` could be equal, but the\n * list we operate on only has unique values.\n *\n * @param {string} a\n *   Left value.\n * @param {string} b\n *   Right value.\n * @param {number} index\n *   Current index in values.\n * @returns {number}\n *   Order.\n */\nfunction compare(a, b, index) {\n  return (\n    (a.charCodeAt(index) || 0) - (b.charCodeAt(index) || 0) ||\n    compare(a, b, index + 1)\n  )\n}\n","/**\n * @import {Properties, Root} from 'hast'\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * Sort attributes.\n *\n * @returns\n *   Transform.\n */\nexport default function rehypeSortAttributes() {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    // Map of tag names to property names to counts.\n    /** @type {Map<string, Map<string, number>>} */\n    const counts = new Map()\n\n    visit(tree, 'element', function (node) {\n      let cache = counts.get(node.tagName)\n\n      if (!cache) {\n        cache = new Map()\n        counts.set(node.tagName, cache)\n      }\n\n      /** @type {string} */\n      let property\n\n      for (property in node.properties) {\n        if (Object.hasOwn(node.properties, property)) {\n          cache.set(property, (cache.get(property) || 0) + 1)\n        }\n      }\n    })\n\n    const caches = optimize()\n\n    visit(tree, 'element', function (node) {\n      const cache = caches.get(node.tagName)\n\n      if (cache) {\n        /** @type {Array<string>} */\n        const keys = []\n        /** @type {Properties} */\n        const result = {}\n        let index = -1\n        /** @type {string} */\n        let property\n\n        for (property in node.properties) {\n          if (Object.hasOwn(node.properties, property)) {\n            keys.push(property)\n          }\n        }\n\n        keys.sort(function (a, b) {\n          return cache.indexOf(a) - cache.indexOf(b)\n        })\n\n        while (++index < keys.length) {\n          result[keys[index]] = node.properties[keys[index]]\n        }\n\n        node.properties = result\n      }\n    })\n\n    /**\n     * @returns\n     *   Optimized caches.\n     */\n    function optimize() {\n      // Map of tag names to sorted property names.\n      /** @type {Map<string, Array<string>>} */\n      const caches = new Map()\n\n      for (const [name, properties] of counts.entries()) {\n        caches.set(\n          name,\n          [...properties.entries()]\n            .sort(function (a, b) {\n              return b[1] - a[1] || compare(String(a[0]), String(b[0]), 0)\n            })\n            .map(function (d) {\n              return d[0]\n            })\n        )\n      }\n\n      return caches\n    }\n  }\n}\n\n/**\n * This would create an infinite loop if `a` and `b` could be equal, but the\n * list we operate on only has unique values.\n *\n * @param {string} a\n *   Left value.\n * @param {string} b\n *   Right value.\n * @param {number} index\n *   Current index in values.\n * @returns {number}\n *   Order.\n */\nfunction compare(a, b, index) {\n  return (\n    (a.charCodeAt(index) || 0) - (b.charCodeAt(index) || 0) ||\n    compare(a, b, index + 1)\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","// Generated using scripts/write-decode-map.ts\nexport const htmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 65535) {\n        codePoint -= 65536;\n        output += String.fromCharCode(((codePoint >>> 10) & 1023) | 55296);\n        codePoint = 56320 | (codePoint & 1023);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 55296 && codePoint <= 57343) ||\n        codePoint > 1114111) {\n        return 65533;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode-codepoint.js.map","import { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nimport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nimport { replaceCodePoint, fromCodePoint } from \"./decode-codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 32;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(input, offset) {\n        if (offset >= input.length) {\n            return -1;\n        }\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n    addToNumericResult(input, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(input, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(decodeTree, (data) => (returnValue += fromCodePoint(data)));\n    return function decodeWithTrie(input, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const length = decoder.write(input, \n            // Skip the \"&\"\n            offset + 1);\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = returnValue + input.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIndex, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n        if (midValue < char) {\n            lo = mid + 1;\n        }\n        else if (midValue > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = /* #__PURE__ */ getDecoder(htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(htmlString, mode = DecodingMode.Legacy) {\n    return htmlDecoder(htmlString, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(htmlAttribute) {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(htmlString) {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(xmlString) {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nexport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nexport { decodeCodePoint, replaceCodePoint, fromCodePoint, } from \"./decode-codepoint.js\";\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","export default function emphasis(state, node) {\n  const result = {\n    type: \"element\",\n    tagName: \"em\",\n    properties: node.attributes || {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","const search = /[\\t\\n\\r]/g\n\n/***\n * Replace tabs with spaces, being smart about which column the tab is at and\n * which size should be used.\n *\n * @param {string} value\n *   Value with tabs.\n * @param {number} [tabSize=4]\n *   Tab size.\n * @returns {string}\n *   Value with spaces.\n */\nexport function detab(value, tabSize = 4) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let index = 0\n  let column = -1\n\n  if (typeof value !== 'string') {\n    throw new TypeError('detab expected string')\n  }\n\n  while (index < value.length) {\n    search.lastIndex = index\n    const match = search.exec(value)\n    const end = match ? match.index : value.length\n\n    if (value.codePointAt(end) === 9) {\n      const add = tabSize - ((column + end - index + 1) % tabSize)\n      result.push(value.slice(start, end), ' '.repeat(add))\n      column += end - index + add\n      start = end + 1\n    } else {\n      column = -1\n    }\n\n    index = end + 1\n  }\n\n  result.push(value.slice(start))\n\n  return result.join('')\n}\n","export function parseThematicBlock(lang) {\n  if (!lang?.trim()) {\n    return {\n      language: void 0,\n      highlights: void 0,\n      filename: void 0,\n      meta: void 0\n    };\n  }\n  const languageMatches = lang.replace(/[{|[](.+)/, \"\").match(/^[^ \\t]+(?=[ \\t]|$)/);\n  const highlightTokensMatches = lang.match(/\\{([^}]*)\\}/);\n  const filenameMatches = lang.match(/\\[(.*)\\]/);\n  const meta = lang.replace(languageMatches?.[0] ?? \"\", \"\").replace(highlightTokensMatches?.[0] ?? \"\", \"\").replace(filenameMatches?.[0] ?? \"\", \"\").trim();\n  let filename = void 0;\n  if (filenameMatches?.[1]) {\n    filename = filenameMatches[1].replace(/\\\\([[\\]{}().*+?^$|])/g, \"$1\");\n  }\n  return {\n    language: languageMatches?.[0] || void 0,\n    highlights: parseHighlightedLines(highlightTokensMatches?.[1] || void 0),\n    // https://github.com/nuxt/content/pull/2169\n    filename,\n    meta\n  };\n}\nfunction parseHighlightedLines(lines) {\n  const lineArray = String(lines || \"\").split(\",\").filter(Boolean).flatMap((line) => {\n    const [start, end] = line.trim().split(\"-\").map((a) => Number(a.trim()));\n    return Array.from({ length: (end || start || 0) - (start || 0) + 1 }).map((_, i) => (start || 0) + i);\n  });\n  return lineArray.length ? lineArray : void 0;\n}\nconst TAG_NAME_REGEXP = /^<\\/?([\\w-]+)(\\s[^>]*?)?\\/?>/;\nexport function getTagName(value) {\n  const result = String(value).match(TAG_NAME_REGEXP);\n  return result && result[1];\n}\n","import { detab } from \"detab\";\nimport { parseThematicBlock } from \"./utils.js\";\nexport default (state, node) => {\n  const lang = (node.lang || \"\") + \" \" + (node.meta || \"\");\n  const { language = \"text\", highlights, filename, meta } = parseThematicBlock(lang);\n  const value = node.value ? detab(node.value + \"\\n\") : \"\";\n  let result = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: { __ignoreMap: \"\" },\n    children: [{ type: \"text\", value }]\n  };\n  if (meta) {\n    result.data = {\n      meta\n    };\n  }\n  state.patch(node, result);\n  result = state.applyData(node, result);\n  const properties = {\n    language: language || \"text\",\n    filename,\n    highlights,\n    meta,\n    code: value\n  };\n  if (language) {\n    properties.className = [\"language-\" + language];\n  }\n  result = { type: \"element\", tagName: \"pre\", properties, children: [result] };\n  state.patch(node, result);\n  return result;\n};\n","import { kebabCase } from \"scule\";\nimport { getTagName } from \"./utils.js\";\nexport default function html(state, node) {\n  const tagName = getTagName(node.value);\n  if (tagName && /[A-Z]/.test(tagName)) {\n    node.value = node.value.replace(tagName, kebabCase(tagName));\n  }\n  if (state.dangerous || state.options?.allowDangerousHtml) {\n    const result = { type: \"raw\", value: node.value };\n    state.patch(node, result);\n    return state.applyData(node, result);\n  }\n  return void 0;\n}\n","import { normalizeUri } from \"micromark-util-sanitize-uri\";\nexport default function link(state, node) {\n  const properties = {\n    ...node.attributes || {},\n    href: normalizeUri(node.url)\n  };\n  if (node.title !== null && node.title !== void 0) {\n    properties.title = node.title;\n  }\n  const result = {\n    type: \"element\",\n    tagName: \"a\",\n    properties,\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","export default function list(state, node) {\n  const properties = {};\n  const results = state.all(node);\n  let index = -1;\n  if (typeof node.start === \"number\" && node.start !== 1) {\n    properties.start = node.start;\n  }\n  while (++index < results.length) {\n    const child = results[index];\n    if (child && child.type === \"element\" && child.tagName === \"li\" && child.properties && Array.isArray(child.properties.className) && child.properties.className.includes(\"task-list-item\")) {\n      properties.className = [\"contains-task-list\"];\n      break;\n    }\n  }\n  if ((node.children || []).some((child) => typeof child.checked === \"boolean\")) {\n    properties.className = [\"contains-task-list\"];\n  }\n  const result = {\n    type: \"element\",\n    tagName: node.ordered ? \"ol\" : \"ul\",\n    properties,\n    children: state.wrap(results, true)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","import { kebabCase } from \"scule\";\nimport htmlTags from \"../utils/html-tags-list.js\";\nimport { getTagName } from \"./utils.js\";\nexport default function paragraph(state, node) {\n  if (node.children && node.children[0] && node.children[0].type === \"html\") {\n    const tagName = kebabCase(getTagName(node.children[0].value) || \"div\");\n    if (!htmlTags.includes(tagName)) {\n      return state.all(node);\n    }\n  }\n  const result = {\n    type: \"element\",\n    tagName: \"p\",\n    properties: {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","import { normalizeUri } from \"micromark-util-sanitize-uri\";\nexport default function image(state, node) {\n  const properties = { ...node.attributes, src: normalizeUri(node.url) };\n  if (node.alt !== null && node.alt !== void 0) {\n    properties.alt = node.alt;\n  }\n  if (node.title !== null && node.title !== void 0) {\n    properties.title = node.title;\n  }\n  const result = { type: \"element\", tagName: \"img\", properties, children: [] };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","export default function strong(state, node) {\n  const result = {\n    type: \"element\",\n    tagName: \"strong\",\n    properties: node.attributes || {},\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","export default function inlineCode(state, node) {\n  const language = node.attributes?.language || node.attributes?.lang;\n  const text = { type: \"text\", value: node.value.replace(/\\r?\\n|\\r/g, \" \") };\n  state.patch(node, text);\n  const result = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: node.attributes || {},\n    children: [text]\n  };\n  const classes = (result.properties.class || \"\").split(\" \");\n  delete result.properties.class;\n  if (language) {\n    result.properties.language = language;\n    delete result.properties.lang;\n    classes.push(\"language-\" + language);\n  }\n  result.properties.className = classes.join(\" \");\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n","export default function containerComponent(state, node) {\n  const result = {\n    type: \"element\",\n    tagName: node.name,\n    properties: {\n      ...node.attributes,\n      ...node.data?.hProperties\n    },\n    children: state.all(node)\n  };\n  state.patch(node, result);\n  result.attributes = node.attributes;\n  result.fmAttributes = node.fmAttributes;\n  return result;\n}\n","import emphasis from \"./emphasis.js\";\nimport code from \"./code.js\";\nimport html from \"./html.js\";\nimport link from \"./link.js\";\nimport list from \"./list.js\";\nimport paragraph from \"./paragraph.js\";\nimport image from \"./image.js\";\nimport strong from \"./strong.js\";\nimport inlineCode from \"./inlineCode.js\";\nimport containerComponent from \"./containerComponent.js\";\nexport default {\n  emphasis,\n  code,\n  link,\n  paragraph,\n  html,\n  list,\n  image,\n  strong,\n  inlineCode,\n  containerComponent\n};\n","import remarkGFM from \"remark-gfm\";\nimport remarkMDC from \"remark-mdc\";\nimport rehypeExternalLinks from \"rehype-external-links\";\nimport rehypeSortAttributeValues from \"rehype-sort-attribute-values\";\nimport rehypeSortAttributes from \"rehype-sort-attributes\";\nimport rehypeRaw from \"rehype-raw\";\nimport handlers from \"./handlers/index.js\";\nexport const defaults = {\n  remark: {\n    plugins: {\n      \"remark-mdc\": {\n        instance: remarkMDC\n      },\n      \"remark-gfm\": {\n        instance: remarkGFM\n      }\n    }\n  },\n  rehype: {\n    options: {\n      handlers,\n      allowDangerousHtml: true\n    },\n    plugins: {\n      \"rehype-external-links\": {\n        instance: rehypeExternalLinks\n      },\n      \"rehype-sort-attribute-values\": {\n        instance: rehypeSortAttributeValues\n      },\n      \"rehype-sort-attributes\": {\n        instance: rehypeSortAttributes\n      },\n      \"rehype-raw\": {\n        instance: rehypeRaw,\n        options: {\n          passThrough: [\"element\"]\n        }\n      }\n    }\n  },\n  highlight: false,\n  toc: {\n    searchDepth: 2,\n    depth: 2\n  }\n};\n","export function flattenNodeText(node) {\n  if (node.type === \"comment\") {\n    return \"\";\n  }\n  if (node.type === \"text\") {\n    return node.value || \"\";\n  } else {\n    return (node.children || []).reduce((text, child) => {\n      return text.concat(flattenNodeText(child));\n    }, \"\");\n  }\n}\nexport function flattenNode(node, maxDepth = 2, _depth = 0) {\n  if (!Array.isArray(node.children) || _depth === maxDepth) {\n    return [node];\n  }\n  return [\n    node,\n    ...node.children.reduce((acc, child) => acc.concat(flattenNode(child, maxDepth, _depth + 1)), [])\n  ];\n}\nexport function setNodeData(node, name, value, pageData) {\n  if (!name.startsWith(\":\")) {\n    name = \":\" + name;\n  }\n  const dataKey = `content_d_${randomHash()}`;\n  pageData[dataKey] = value;\n  node.data.hProperties[name] = dataKey;\n}\nfunction randomHash() {\n  return Math.random().toString(36).substr(2, 16);\n}\n","import { flattenNode, flattenNodeText } from \"../utils/ast.js\";\nconst TOC_TAGS = [\"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\nconst TOC_TAGS_DEPTH = TOC_TAGS.reduce((tags, tag) => {\n  tags[tag] = Number(tag.charAt(tag.length - 1));\n  return tags;\n}, {});\nconst getHeaderDepth = (node) => TOC_TAGS_DEPTH[node.tag];\nconst getTocTags = (depth) => {\n  if (depth < 1 || depth > 5) {\n    console.log(`\\`toc.depth\\` is set to ${depth}. It should be a number between 1 and 5. `);\n    depth = 1;\n  }\n  return TOC_TAGS.slice(0, depth);\n};\nfunction nestHeaders(headers) {\n  if (headers.length <= 1) {\n    return headers;\n  }\n  const toc = [];\n  let parent;\n  headers.forEach((header) => {\n    if (!parent || header.depth <= parent.depth) {\n      header.children = [];\n      parent = header;\n      toc.push(header);\n    } else {\n      parent.children.push(header);\n    }\n  });\n  toc.forEach((header) => {\n    if (header.children?.length) {\n      header.children = nestHeaders(header.children);\n    } else {\n      delete header.children;\n    }\n  });\n  return toc;\n}\nexport function generateFlatToc(body, options) {\n  const { searchDepth, depth, title = \"\" } = options;\n  const tags = getTocTags(depth);\n  const headers = flattenNode(body, searchDepth).filter((node) => tags.includes(node.tag || \"\"));\n  const links = headers.map((node) => ({\n    id: node.props?.id,\n    depth: getHeaderDepth(node),\n    text: flattenNodeText(node)\n  }));\n  return {\n    title,\n    searchDepth,\n    depth,\n    links\n  };\n}\nexport function generateToc(body, options) {\n  const toc = generateFlatToc(body, options);\n  toc.links = nestHeaders(toc.links);\n  return toc;\n}\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","export const unsafeTags = [\n  \"object\"\n];\nexport const unsafeAttributes = [\n  \"srcdoc\",\n  \"formaction\"\n];\nexport const unsafeLinkPrefix = [\n  \"javascript:\",\n  \"data:text/html\",\n  \"vbscript:\",\n  \"data:text/javascript\",\n  \"data:text/vbscript\",\n  \"data:text/css\",\n  \"data:text/plain\",\n  \"data:text/xml\"\n];\nfunction isAnchorLinkAllowed(value) {\n  const decodedUrl = decodeURIComponent(value);\n  const urlSanitized = decodedUrl.replace(/&#x([0-9a-f]+);?/gi, \"\").replace(/&#(\\d+);?/g, \"\").replace(/&[a-z]+;?/gi, \"\");\n  try {\n    const url = new URL(urlSanitized, \"http://example.com\");\n    if (url.origin === \"http://example.com\") {\n      return true;\n    }\n    if (unsafeLinkPrefix.some((prefix) => url.protocol.toLowerCase().startsWith(prefix))) {\n      return false;\n    }\n  } catch {\n    return false;\n  }\n  return true;\n}\nexport const validateProp = (attribute, value) => {\n  attribute = attribute.toLowerCase();\n  if (attribute.startsWith(\"on\") || unsafeAttributes.includes(attribute)) {\n    return false;\n  }\n  if (attribute === \"href\" || attribute === \"src\") {\n    return isAnchorLinkAllowed(value);\n  }\n  return true;\n};\nexport const validateProps = (type, props) => {\n  if (unsafeTags.includes(type)) {\n    return {};\n  }\n  if (!props) {\n    return {};\n  }\n  props = Object.fromEntries(\n    Object.entries(props).filter(([name, value]) => {\n      const isValid = validateProp(name, value);\n      if (!isValid) {\n        console.warn(`[@nuxtjs/mdc] removing unsafe attribute: ${name}=\"${value}\"`);\n      }\n      return isValid;\n    })\n  );\n  if (type === \"pre\") {\n    if (typeof props.highlights === \"string\") {\n      props.highlights = props.highlights.split(\" \").map((i) => Number.parseInt(i));\n    }\n  }\n  return props;\n};\n","import { toString } from \"hast-util-to-string\";\nimport Slugger from \"github-slugger\";\nimport { validateProps } from \"./utils/props.js\";\nexport function compileHast(options = {}) {\n  const slugs = new Slugger();\n  function compileToJSON(node, parent) {\n    if (node.type === \"root\") {\n      return {\n        type: \"root\",\n        children: node.children.map((child) => compileToJSON(child, node)).filter(Boolean)\n      };\n    }\n    const position = node.position?.start?.offset && node.position?.end?.offset ? {\n      start: node.position.start.offset,\n      end: node.position.end.offset\n    } : void 0;\n    if (node.type === \"element\") {\n      if (node.tagName === \"p\" && node.children.every((child) => child.type === \"text\" && /^\\s*$/.test(child.value))) {\n        return null;\n      }\n      if (node.tagName === \"li\") {\n        let hasPreviousParagraph = false;\n        node.children = node.children?.flatMap((child) => {\n          if (child.type === \"element\" && child.tagName === \"p\") {\n            if (hasPreviousParagraph) {\n              child.children.unshift({\n                type: \"element\",\n                tagName: \"br\",\n                properties: {},\n                children: []\n              });\n            }\n            hasPreviousParagraph = true;\n            return child.children;\n          }\n          return child;\n        });\n      }\n      if (node.tagName?.match(/^h\\d$/)) {\n        node.properties = node.properties || {};\n        node.properties.id = String(node.properties?.id || slugs.slug(toString(node))).replace(/-+/g, \"-\").replace(/^-|-$/g, \"\").replace(/^(\\d)/, \"_$1\");\n      }\n      if (node.tagName === \"component-slot\") {\n        node.tagName = \"template\";\n      }\n      const children = (node.tagName === \"template\" && node.content?.children.length ? node.content.children : node.children).map((child) => compileToJSON(child, node)).filter(Boolean);\n      const result = {\n        type: \"element\",\n        tag: node.tagName,\n        props: validateProps(node.tagName, node.properties),\n        children\n      };\n      if (options.keepPosition) {\n        result.position = position;\n      }\n      return result;\n    }\n    if (node.type === \"text\") {\n      if (!/^\\n+$/.test(node.value || \"\") || parent?.properties?.emptyLinePlaceholder) {\n        return options.keepPosition ? { type: \"text\", value: node.value, position } : { type: \"text\", value: node.value };\n      }\n    }\n    if (options.keepComments && node.type === \"comment\") {\n      return options.keepPosition ? { type: \"comment\", value: node.value, position } : { type: \"comment\", value: node.value };\n    }\n    return null;\n  }\n  this.Compiler = (tree) => {\n    const body = compileToJSON(tree);\n    let excerpt = void 0;\n    const excerptIndex = tree.children.findIndex((node) => node.type === \"comment\" && node.value?.trim() === \"more\");\n    if (excerptIndex !== -1) {\n      excerpt = compileToJSON({\n        type: \"root\",\n        children: tree.children.slice(0, excerptIndex)\n      });\n      if (excerpt.children.find((node) => node.type === \"element\" && node.tag === \"pre\")) {\n        const lastChild = body.children[body.children.length - 1];\n        if (lastChild && lastChild.type === \"element\" && lastChild.tag === \"style\") {\n          excerpt.children.push(lastChild);\n        }\n      }\n    }\n    body.children = (body.children || []).filter((child) => child.type !== \"text\");\n    return {\n      body,\n      excerpt\n    };\n  };\n}\n","import { unified } from \"unified\";\nimport remarkParse from \"remark-parse\";\nimport remark2rehype from \"remark-rehype\";\nimport { parseFrontMatter } from \"remark-mdc\";\nimport { defu } from \"defu\";\nimport { nodeTextContent } from \"../utils/node.js\";\nimport { useProcessorPlugins } from \"./utils/plugins.js\";\nimport { defaults } from \"./options.js\";\nimport { generateToc } from \"./toc.js\";\nimport { compileHast } from \"./compiler.js\";\nlet moduleOptions;\nlet generatedMdcConfigs;\nexport const createParseProcessor = async (inlineOptions = {}) => {\n  if (!moduleOptions) {\n    moduleOptions = await import(\n      \"#mdc-imports\"\n      /* @vite-ignore */\n    ).catch(() => ({}));\n  }\n  if (!generatedMdcConfigs) {\n    generatedMdcConfigs = await import(\n      \"#mdc-configs\"\n      /* @vite-ignore */\n    ).then((r) => r.getMdcConfigs()).catch(() => []);\n  }\n  const mdcConfigs = [\n    ...generatedMdcConfigs || [],\n    ...inlineOptions.configs || []\n  ];\n  if (inlineOptions.highlight != null && inlineOptions.highlight != false && inlineOptions.highlight.highlighter !== void 0 && typeof inlineOptions.highlight.highlighter !== \"function\") {\n    if (process.dev)\n      console.warn(\"[@nuxtjs/mdc] `highlighter` passed to `parseMarkdown` is should be a function, but got \" + JSON.stringify(inlineOptions.highlight.highlighter) + \", ignored.\");\n    inlineOptions = {\n      ...inlineOptions,\n      highlight: {\n        ...inlineOptions.highlight\n      }\n    };\n    delete inlineOptions.highlight.highlighter;\n  }\n  const options = defu(inlineOptions, {\n    remark: { plugins: moduleOptions?.remarkPlugins },\n    rehype: { plugins: moduleOptions?.rehypePlugins },\n    highlight: moduleOptions?.highlight\n  }, defaults);\n  if (options.rehype?.plugins?.highlight) {\n    if (inlineOptions.highlight === false) {\n      delete options.rehype.plugins.highlight;\n    } else {\n      options.rehype.plugins.highlight.options = defu({}, options.rehype.plugins.highlight.options, options.highlight || {});\n    }\n  }\n  let processor = unified();\n  for (const config of mdcConfigs) {\n    processor = await config.unified?.pre?.(processor) || processor;\n  }\n  processor.use(remarkParse);\n  for (const config of mdcConfigs) {\n    processor = await config.unified?.remark?.(processor) || processor;\n  }\n  await useProcessorPlugins(processor, options.remark?.plugins);\n  processor.use(remark2rehype, options.rehype?.options);\n  for (const config of mdcConfigs) {\n    processor = await config.unified?.rehype?.(processor) || processor;\n  }\n  await useProcessorPlugins(processor, options.rehype?.plugins);\n  processor.use(compileHast, options);\n  for (const config of mdcConfigs) {\n    processor = await config.unified?.post?.(processor) || processor;\n  }\n  return processor;\n};\nexport const createMarkdownParser = async (inlineOptions = {}) => {\n  const processor = await createParseProcessor(inlineOptions);\n  return async function parse(md, { fileOptions } = {}) {\n    const { content, data: frontmatter } = await parseFrontMatter(md);\n    const cwd = typeof process !== \"undefined\" && typeof process.cwd === \"function\" ? process.cwd() : \"/tmp\";\n    const processedFile = await new Promise((resolve, reject) => {\n      processor.process({ cwd, ...fileOptions, value: content, data: frontmatter }, (err, file) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(file);\n        }\n      });\n    });\n    const parsedContent = processedFile?.result;\n    const data = Object.assign(\n      inlineOptions.contentHeading !== false ? contentHeading(parsedContent.body) : {},\n      frontmatter,\n      processedFile?.data || {}\n    );\n    const parsedResult = { data, body: parsedContent.body };\n    const userTocOption = data.toc ?? inlineOptions.toc;\n    if (userTocOption !== false) {\n      const tocOption = defu({}, userTocOption, defaults.toc);\n      parsedResult.toc = generateToc(parsedContent.body, tocOption);\n    }\n    if (parsedContent.excerpt) {\n      parsedResult.excerpt = parsedContent.excerpt;\n    }\n    return parsedResult;\n  };\n};\nexport const parseMarkdown = async (md, markdownParserOptions = {}, parseOptions = {}) => {\n  const parser = await createMarkdownParser(markdownParserOptions);\n  return parser(md.replace(/\\r\\n/g, \"\\n\"), parseOptions);\n};\nexport function contentHeading(body) {\n  let title = \"\";\n  let description = \"\";\n  const children = body.children.filter((node) => node.type === \"element\" && node.tag !== \"hr\");\n  if (children.length && children[0].tag === \"h1\") {\n    const node = children.shift();\n    title = nodeTextContent(node);\n  }\n  if (children.length && children[0].tag === \"p\") {\n    const node = children.shift();\n    description = nodeTextContent(node);\n  }\n  return {\n    title,\n    description\n  };\n}\n"],"file":"_nuxt/kYsnaxgG.js"}