{"version":3,"file":"CyVbGfjv.js","names":[],"sources":["../../node_modules/libs/nuip/dist/runtime/components/ChatPromptSubmit.vue"],"sourcesContent":["<script>\nimport theme from \"#build/ui-pro/chat-prompt-submit\";\n</script>\n\n<script setup>\nimport { computed } from \"vue\";\nimport UButton from \"@nuxt/ui/components/Button.vue\";\nimport { useAppConfig } from \"#imports\";\nimport { useLocalePro } from \"../composables/useLocalePro\";\nimport { transformUI } from \"../utils\";\nimport { tv } from \"../utils/tv\";\nconst props = defineProps({\n  status: { type: null, required: false, default: \"ready\" },\n  icon: { type: String, required: false },\n  color: { type: null, required: false },\n  variant: { type: null, required: false },\n  streamingIcon: { type: String, required: false },\n  streamingColor: { type: null, required: false, default: \"neutral\" },\n  streamingVariant: { type: null, required: false, default: \"subtle\" },\n  submittedIcon: { type: String, required: false },\n  submittedColor: { type: null, required: false, default: \"neutral\" },\n  submittedVariant: { type: null, required: false, default: \"subtle\" },\n  errorIcon: { type: String, required: false },\n  errorColor: { type: null, required: false, default: \"error\" },\n  errorVariant: { type: null, required: false, default: \"soft\" },\n  ui: { type: void 0, required: false },\n  class: { type: null, required: false }\n});\nconst emits = defineEmits([\"stop\", \"reload\"]);\nconst slots = defineSlots();\nconst { t } = useLocalePro();\nconst appConfig = useAppConfig();\nconst buttonProps = computed(() => ({\n  ready: {\n    icon: props.icon || appConfig.ui.icons.arrowUp,\n    color: props.color,\n    variant: props.variant,\n    type: \"submit\"\n  },\n  submitted: {\n    icon: props.submittedIcon || appConfig.ui.icons.stop,\n    color: props.submittedColor,\n    variant: props.submittedVariant,\n    onClick() {\n      emits(\"stop\");\n    }\n  },\n  streaming: {\n    icon: props.streamingIcon || appConfig.ui.icons.stop,\n    color: props.streamingColor,\n    variant: props.streamingVariant,\n    onClick() {\n      emits(\"stop\");\n    }\n  },\n  error: {\n    icon: props.errorIcon || appConfig.ui.icons.reload,\n    color: props.errorColor,\n    variant: props.errorVariant,\n    onClick() {\n      emits(\"reload\");\n    }\n  }\n})[props.status]);\nconst ui = computed(() => tv({ extend: tv(theme), ...appConfig.uiPro?.chatPromptSubmit || {} })());\n</script>\n\n<template>\n  <UButton\n    :aria-label=\"t('chatPromptSubmit.label')\"\n    v-bind=\"buttonProps\"\n    :class=\"ui.base({ class: [props.ui?.base, props.class] })\"\n    :ui=\"transformUI(ui, props.ui)\"\n  >\n    <template v-for=\"(_, name) in slots\" #[name]=\"slotData\">\n      <slot :name=\"name\" v-bind=\"slotData\" />\n    </template>\n  </UButton>\n</template>\n"],"mappings":"w5BAWA,IAAM,EAAQ,EAiBR,EAAQ,EACR,EAAQ,GAAa,CACrB,CAAE,KAAM,GAAc,CACtB,EAAY,GAAc,CAC1B,EAAc,OAAgB,CAClC,MAAO,CACL,KAAM,EAAM,MAAQ,EAAU,GAAG,MAAM,QACvC,MAAO,EAAM,MACb,QAAS,EAAM,QACf,KAAM,SACP,CACD,UAAW,CACT,KAAM,EAAM,eAAiB,EAAU,GAAG,MAAM,KAChD,MAAO,EAAM,eACb,QAAS,EAAM,iBACf,SAAU,CACR,EAAM,OAAO,EAEhB,CACD,UAAW,CACT,KAAM,EAAM,eAAiB,EAAU,GAAG,MAAM,KAChD,MAAO,EAAM,eACb,QAAS,EAAM,iBACf,SAAU,CACR,EAAM,OAAO,EAEhB,CACD,MAAO,CACL,KAAM,EAAM,WAAa,EAAU,GAAG,MAAM,OAC5C,MAAO,EAAM,WACb,QAAS,EAAM,aACf,SAAU,CACR,EAAM,SAAS,GAGpB,EAAE,EAAM,QAAQ,CACX,EAAK,MAAe,EAAG,CAAE,OAAQ,EAAG,EAAM,CAAE,GAAG,EAAU,OAAO,kBAAoB,EAAA,CAAI,CAAC,EAAE,CAAC,mBAIhG,EASU,EATV,EASU,CARP,aAAY,EAAA,EAAC,CAAA,yBAAA,CAAA,CACN,EAAA,MAAW,CAClB,MAAO,EAAA,MAAG,KAAI,CAAA,MAAA,CAAW,EAAM,IAAI,KAAM,EAAM,MAAK,CAAA,CAAA,CACpD,GAAI,EAAA,EAAW,CAAC,EAAA,MAAI,EAAM,GAAA,cAEG,GAAZ,EAAG,MAAiB,YAAQ,GAAQ,CACpD,EAAuC,EAAA,OAA1B,EAAI,EAAA,EAAU,EAAQ,CAAA,CAAA,CAAA,CAAA"}