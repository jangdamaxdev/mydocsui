{"version":3,"file":"CS5AsYet.js","names":[],"sources":["../../node_modules/app/components/content/ComponentTheme.vue","../../node_modules/app/components/content/ComponentTheme.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport json5 from 'json5'\r\nimport { camelCase } from 'scule'\r\nimport { hash } from 'ohash'\r\nimport * as theme from '#build/ui'\r\nimport * as themePro from '#build/ui-pro'\r\n\r\nconst props = defineProps<{\r\n  pro?: boolean\r\n  prose?: boolean\r\n  slug?: string\r\n  extra?: string[]\r\n}>()\r\n\r\nconst route = useRoute()\r\nconst { framework } = useSharedData()\r\n\r\nconst name = props.slug ?? route.path.split('/').pop() ?? ''\r\nconst camelName = camelCase(name)\r\n\r\nconst strippedCompoundVariants = ref(false)\r\n\r\nconst computedTheme = computed(() => props.pro ? props.prose ? themePro.prose : themePro : theme)\r\n\r\nconst strippedTheme = computed(() => {\r\n  const strippedTheme = {\r\n    ...(computedTheme.value as any)[camelName]\r\n  }\r\n\r\n  if (strippedTheme?.compoundVariants) {\r\n    strippedTheme.compoundVariants = strippedTheme.compoundVariants.filter((compoundVariant: any) => {\r\n      if (compoundVariant.color) {\r\n        if (!['primary', 'neutral'].includes(compoundVariant.color)) {\r\n          strippedCompoundVariants.value = true\r\n\r\n          return false\r\n        }\r\n      }\r\n\r\n      if (compoundVariant.highlightColor) {\r\n        if (!['primary', 'neutral'].includes(compoundVariant.highlightColor)) {\r\n          strippedCompoundVariants.value = true\r\n\r\n          return false\r\n        }\r\n      }\r\n\r\n      if (compoundVariant.loadingColor) {\r\n        if (!['primary', 'neutral'].includes(compoundVariant.loadingColor)) {\r\n          strippedCompoundVariants.value = true\r\n\r\n          return false\r\n        }\r\n      }\r\n\r\n      return true\r\n    })\r\n  }\r\n\r\n  return strippedTheme\r\n})\r\n\r\nconst component = computed(() => {\r\n  const baseKey = props.pro ? 'uiPro' : 'ui'\r\n\r\n  const content = props.prose\r\n    ? { prose: { [camelName]: strippedTheme.value } }\r\n    : { [camelName]: strippedTheme.value }\r\n\r\n  if (props.extra?.length) {\r\n    props.extra.forEach((extra) => {\r\n      const target = props.prose ? content.prose! : content\r\n      target[extra as keyof typeof target] = computedTheme.value[extra as keyof typeof computedTheme.value]\r\n    })\r\n  }\r\n\r\n  return {\r\n    [baseKey]: content\r\n  }\r\n})\r\n\r\nconst themeLink = computed(() => {\r\n  const repo = props.pro ? 'ui-pro' : 'ui'\r\n  const slug = name.startsWith('content') ? `content/${name}` : name\r\n\r\n  return `https://github.com/nuxt/${repo}/blob/v3/src/theme/${slug}.ts`\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`component-theme-${camelName}-${hash({ props })}`, async () => {\r\n  const md = `\r\n::code-collapse{class=\"nuxt-only\"}\r\n\r\n\\`\\`\\`ts [app.config.ts]\r\nexport default defineAppConfig(${json5.stringify(component.value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1')})\r\n\\`\\`\\`\\\r\n\r\n::\r\n\r\n::code-collapse{class=\"vue-only ui-only\"}\r\n\r\n\\`\\`\\`ts [vite.config.ts]\r\nimport { defineConfig } from 'vite'\r\nimport vue from '@vitejs/plugin-vue'\r\nimport ui from '@nuxt/ui/vite'\r\n\r\nexport default defineConfig({\r\n  plugins: [\r\n    vue(),\r\n    ui(${json5.stringify(component.value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1')\r\n      .split('\\n')\r\n      .map((line, i) => i === 0 ? line : `    ${line}`)\r\n      .join('\\n')})\r\n  ]\r\n})\r\n\\`\\`\\`\r\n\r\n::\r\n\r\n::code-collapse{class=\"vue-only ui-pro-only\"}\r\n\r\n\\`\\`\\`ts [vite.config.ts]\r\nimport { defineConfig } from 'vite'\r\nimport vue from '@vitejs/plugin-vue'\r\nimport uiPro from '@nuxt/ui-pro/vite'\r\n\r\nexport default defineConfig({\r\n  plugins: [\r\n    vue(),\r\n    uiPro(${json5.stringify(component.value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1')\r\n      .split('\\n')\r\n      .map((line, i) => i === 0 ? line : `    ${line}`)\r\n      .join('\\n')})\r\n  ]\r\n})\r\n\\`\\`\\`\r\n\r\n::\r\n\r\n${strippedCompoundVariants.value\r\n  ? `\r\n::callout{icon=\"i-simple-icons-github\" to=\"${themeLink.value}\" title=\"Compound variants\"}\r\nSome colors in \\`compoundVariants\\` are omitted for readability. Check out the source code on GitHub.\r\n::`\r\n  : ''}\r\n`\r\n\r\n  return parseMarkdown(md)\r\n}, { watch: [framework] })\r\n</script>\r\n\r\n<template>\r\n  <MDCRenderer v-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" />\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport json5 from 'json5'\r\nimport { camelCase } from 'scule'\r\nimport { hash } from 'ohash'\r\nimport * as theme from '#build/ui'\r\nimport * as themePro from '#build/ui-pro'\r\n\r\nconst props = defineProps<{\r\n  pro?: boolean\r\n  prose?: boolean\r\n  slug?: string\r\n  extra?: string[]\r\n}>()\r\n\r\nconst route = useRoute()\r\nconst { framework } = useSharedData()\r\n\r\nconst name = props.slug ?? route.path.split('/').pop() ?? ''\r\nconst camelName = camelCase(name)\r\n\r\nconst strippedCompoundVariants = ref(false)\r\n\r\nconst computedTheme = computed(() => props.pro ? props.prose ? themePro.prose : themePro : theme)\r\n\r\nconst strippedTheme = computed(() => {\r\n  const strippedTheme = {\r\n    ...(computedTheme.value as any)[camelName]\r\n  }\r\n\r\n  if (strippedTheme?.compoundVariants) {\r\n    strippedTheme.compoundVariants = strippedTheme.compoundVariants.filter((compoundVariant: any) => {\r\n      if (compoundVariant.color) {\r\n        if (!['primary', 'neutral'].includes(compoundVariant.color)) {\r\n          strippedCompoundVariants.value = true\r\n\r\n          return false\r\n        }\r\n      }\r\n\r\n      if (compoundVariant.highlightColor) {\r\n        if (!['primary', 'neutral'].includes(compoundVariant.highlightColor)) {\r\n          strippedCompoundVariants.value = true\r\n\r\n          return false\r\n        }\r\n      }\r\n\r\n      if (compoundVariant.loadingColor) {\r\n        if (!['primary', 'neutral'].includes(compoundVariant.loadingColor)) {\r\n          strippedCompoundVariants.value = true\r\n\r\n          return false\r\n        }\r\n      }\r\n\r\n      return true\r\n    })\r\n  }\r\n\r\n  return strippedTheme\r\n})\r\n\r\nconst component = computed(() => {\r\n  const baseKey = props.pro ? 'uiPro' : 'ui'\r\n\r\n  const content = props.prose\r\n    ? { prose: { [camelName]: strippedTheme.value } }\r\n    : { [camelName]: strippedTheme.value }\r\n\r\n  if (props.extra?.length) {\r\n    props.extra.forEach((extra) => {\r\n      const target = props.prose ? content.prose! : content\r\n      target[extra as keyof typeof target] = computedTheme.value[extra as keyof typeof computedTheme.value]\r\n    })\r\n  }\r\n\r\n  return {\r\n    [baseKey]: content\r\n  }\r\n})\r\n\r\nconst themeLink = computed(() => {\r\n  const repo = props.pro ? 'ui-pro' : 'ui'\r\n  const slug = name.startsWith('content') ? `content/${name}` : name\r\n\r\n  return `https://github.com/nuxt/${repo}/blob/v3/src/theme/${slug}.ts`\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`component-theme-${camelName}-${hash({ props })}`, async () => {\r\n  const md = `\r\n::code-collapse{class=\"nuxt-only\"}\r\n\r\n\\`\\`\\`ts [app.config.ts]\r\nexport default defineAppConfig(${json5.stringify(component.value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1')})\r\n\\`\\`\\`\\\r\n\r\n::\r\n\r\n::code-collapse{class=\"vue-only ui-only\"}\r\n\r\n\\`\\`\\`ts [vite.config.ts]\r\nimport { defineConfig } from 'vite'\r\nimport vue from '@vitejs/plugin-vue'\r\nimport ui from '@nuxt/ui/vite'\r\n\r\nexport default defineConfig({\r\n  plugins: [\r\n    vue(),\r\n    ui(${json5.stringify(component.value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1')\r\n      .split('\\n')\r\n      .map((line, i) => i === 0 ? line : `    ${line}`)\r\n      .join('\\n')})\r\n  ]\r\n})\r\n\\`\\`\\`\r\n\r\n::\r\n\r\n::code-collapse{class=\"vue-only ui-pro-only\"}\r\n\r\n\\`\\`\\`ts [vite.config.ts]\r\nimport { defineConfig } from 'vite'\r\nimport vue from '@vitejs/plugin-vue'\r\nimport uiPro from '@nuxt/ui-pro/vite'\r\n\r\nexport default defineConfig({\r\n  plugins: [\r\n    vue(),\r\n    uiPro(${json5.stringify(component.value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1')\r\n      .split('\\n')\r\n      .map((line, i) => i === 0 ? line : `    ${line}`)\r\n      .join('\\n')})\r\n  ]\r\n})\r\n\\`\\`\\`\r\n\r\n::\r\n\r\n${strippedCompoundVariants.value\r\n  ? `\r\n::callout{icon=\"i-simple-icons-github\" to=\"${themeLink.value}\" title=\"Compound variants\"}\r\nSome colors in \\`compoundVariants\\` are omitted for readability. Check out the source code on GitHub.\r\n::`\r\n  : ''}\r\n`\r\n\r\n  return parseMarkdown(md)\r\n}, { watch: [framework] })\r\n</script>\r\n\r\n<template>\r\n  <MDCRenderer v-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" />\r\n</template>\r\n"],"mappings":"soGAOM,EAAQ,EAOR,EAAQ,GAAU,CAClB,CAAE,aAAc,GAAe,CAE/B,EAAO,EAAM,MAAQ,EAAM,KAAK,MAAM,IAAI,CAAC,KAAK,EAAI,GACpD,EAAY,EAAU,EAAK,CAE3B,EAA2B,EAAI,GAAM,CAErC,EAAgB,MAAe,EAAM,IAAM,EAAM,MAAQ,EAAiB,EAAW,EAAM,CAE3F,EAAgB,MAAe,CACnC,IAAM,EAAgB,CACpB,GAAI,EAAc,MAAc,GACjC,CAgCD,OA9BI,GAAe,mBACjB,EAAc,iBAAmB,EAAc,iBAAiB,OAAQ,GAClE,EAAgB,OACd,CAAC,CAAC,UAAW,UAAU,CAAC,SAAS,EAAgB,MAAM,EAOzD,EAAgB,gBACd,CAAC,CAAC,UAAW,UAAU,CAAC,SAAS,EAAgB,eAAe,EAOlE,EAAgB,cACd,CAAC,CAAC,UAAW,UAAU,CAAC,SAAS,EAAgB,aAAa,EAChE,EAAyB,MAAQ,GAE1B,IAIJ,GACP,EAGG,GACP,CAEI,EAAY,MAAe,CAC/B,IAAM,EAAU,EAAM,IAAM,QAAU,KAEhC,EAAU,EAAM,MAClB,CAAE,MAAO,EAAG,GAAY,EAAc,MAAO,CAAE,CAC/C,EAAG,GAAY,EAAc,MAAO,CASxC,OAPI,EAAM,OAAO,QACf,EAAM,MAAM,QAAS,GAAU,CAC7B,IAAM,EAAS,EAAM,MAAQ,EAAQ,MAAS,EAC9C,EAAO,GAAgC,EAAc,MAAM,IAC3D,CAGG,EACJ,GAAU,EACZ,EACD,CAEI,EAAY,MAAe,CAC/B,IAAM,EAAO,EAAM,IAAM,SAAW,KAC9B,EAAO,EAAK,WAAW,UAAU,CAAG,WAAW,IAAS,EAE9D,MAAO,2BAA2B,EAAK,qBAAqB,EAAK,MACjE,CAEI,CAAE,KAAM,IAAQ,CAAA,EAAA,GAAA,MAAM,EAAa,mBAAmB,EAAU,GAAG,EAAK,CAAE,QAAO,CAAC,GAAI,SAAY,CACtG,IAAM,EAAK;;;;iCAIoB,EAAA,QAAM,UAAU,EAAU,MAAO,KAAM,EAAE,CAAC,QAAQ,uBAAwB,KAAK,CAAC;;;;;;;;;;;;;;;SAexG,EAAA,QAAM,UAAU,EAAU,MAAO,KAAM,EAAE,CAAC,QAAQ,uBAAwB,KAAK,CACjF,MAAM;EAAK,CACX,KAAK,EAAM,IAAM,IAAM,EAAI,EAAO,OAAO,IAAO,CAChD,KAAK;EAAK,CAAC;;;;;;;;;;;;;;;;;YAiBN,EAAA,QAAM,UAAU,EAAU,MAAO,KAAM,EAAE,CAAC,QAAQ,uBAAwB,KAAK,CACpF,MAAM;EAAK,CACX,KAAK,EAAM,IAAM,IAAM,EAAI,EAAO,OAAO,IAAO,CAChD,KAAK;EAAK,CAAC;;;;;;;EAOhB,EAAyB,MACvB;6CACyC,EAAU,MAAM;;IAGzD,GAAA;EAGF,OAAO,EAAc,EAAG,EACvB,CAAE,MAAO,CAAC,EAAU,CAAE,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,GAAA,CAAA,gCAIJ,EAAA,EAAG,EAAA,GAAA,CAAtB,EAA4D,EAAA,OAAnC,KAAM,EAAA,EAAG,CAAC,KAAO,KAAM,EAAA,EAAG,CAAC"}