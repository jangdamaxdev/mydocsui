{"version":3,"file":"nWnrTqzG.js","names":["sqlite3Worker1Promiser","sqlite3InitModule"],"sources":["../../node_modules/.cache/.pnpm/@sqlite.org+sqlite-wasm@3.50.4-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","../../node_modules/.cache/.pnpm/@sqlite.org+sqlite-wasm@3.50.4-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs","../../node_modules/.cache/.pnpm/@sqlite.org+sqlite-wasm@3.50.4-build1/node_modules/@sqlite.org/sqlite-wasm/index.mjs"],"sourcesContent":["/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.50.4\"\n ** SQLITE_VERSION_NUMBER 3050004\n ** SQLITE_SOURCE_ID \"2025-07-30 19:33:53 4d8adfb30e03f9cf27f800a2c1ba3c48fb4ca1b08b0f5ed59a4d5ecbf45e20a3\"\n **\n ** Using the Emscripten SDK version 3.1.70.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptName = import.meta.url;\n\n  return function (moduleArg = {}) {\n    var moduleRtn;\n\n    var Module = moduleArg;\n\n    var readyPromiseResolve, readyPromiseReject;\n    var readyPromise = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string' &&\n      process.type != 'renderer';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var readAsync, readBinary;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptName) {\n        scriptDirectory = _scriptName;\n      }\n\n      if (scriptDirectory.startsWith('blob:')) {\n        scriptDirectory = '';\n      } else {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      }\n\n      {\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url) => {\n          return fetch(url, { credentials: 'same-origin' }).then((response) => {\n            if (response.ok) {\n              return response.arrayBuffer();\n            }\n            return Promise.reject(\n              new Error(response.status + ' : ' + response.url),\n            );\n          });\n        };\n      }\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.error.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    var wasmBinary = Module['wasmBinary'];\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 32768,\n      });\n    }\n\n    updateMemoryViews();\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function preRun() {\n      var preRuns = Module['preRun'];\n      if (preRuns) {\n        if (typeof preRuns == 'function') preRuns = [preRuns];\n        preRuns.forEach(addOnPreRun);\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      var postRuns = Module['postRun'];\n      if (postRuns) {\n        if (typeof postRuns == 'function') postRuns = [postRuns];\n        postRuns.forEach(addOnPostRun);\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      Module['onAbort']?.(what);\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    var isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n    var isFileURI = (filename) => filename.startsWith('file://');\n\n    function findWasmBinary() {\n      if (Module['locateFile']) {\n        var f = 'sqlite3.wasm';\n        if (!isDataURI(f)) {\n          return locateFile(f);\n        }\n        return f;\n      }\n\n      return new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    var wasmBinaryFile;\n\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n    }\n\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary) {\n        return readAsync(binaryFile).then(\n          (response) => new Uint8Array(response),\n\n          () => getBinarySync(binaryFile),\n        );\n      }\n\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile)\n        .then((binary) => {\n          return WebAssembly.instantiate(binary, imports);\n        })\n        .then(receiver, (reason) => {\n          err(`failed to asynchronously prepare wasm: ${reason}`);\n\n          abort(reason);\n        });\n    }\n\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(binaryFile) &&\n        typeof fetch == 'function'\n      ) {\n        return fetch(binaryFile, { credentials: 'same-origin' }).then(\n          (response) => {\n            var result = WebAssembly.instantiateStreaming(response, imports);\n\n            return result.then(callback, function (reason) {\n              err(`wasm streaming compile failed: ${reason}`);\n              err('falling back to ArrayBuffer instantiation');\n              return instantiateArrayBuffer(binaryFile, imports, callback);\n            });\n          },\n        );\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n\n    function getWasmImports() {\n      return {\n        env: wasmImports,\n        wasi_snapshot_preview1: wasmImports,\n      };\n    }\n\n    function createWasm() {\n      var info = getWasmImports();\n\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n\n        addOnInit(wasmExports['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n        return wasmExports;\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          return Module['instantiateWasm'](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      wasmBinaryFile ??= findWasmBinary();\n\n      instantiateAsync(\n        wasmBinary,\n        wasmBinaryFile,\n        info,\n        receiveInstantiationResult,\n      ).catch(readyPromiseReject);\n      return {};\n    }\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n    var callRuntimeCallbacks = (callbacks) => {\n      callbacks.forEach((f) => f(Module));\n    };\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr];\n        case 'i8':\n          return HEAP8[ptr];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort(`invalid type for getValue: ${type}`);\n      }\n    }\n\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          HEAP64[ptr >> 3] = BigInt(value);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort(`invalid type for setValue: ${type}`);\n      }\n    }\n\n    var stackRestore = (val) => __emscripten_stack_restore(val);\n\n    var stackSave = () => _emscripten_stack_get_current();\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: (...paths) => PATH.normalize(paths.join('/')),\n      join2: (l, r) => PATH.normalize(l + '/' + r),\n    };\n\n    var initRandomFill = () => {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        return (view) => crypto.getRandomValues(view);\n      } else abort('initRandomDevice');\n    };\n    var randomFill = (view) => {\n      return (randomFill = initRandomFill())(view);\n    };\n\n    var PATH_FS = {\n      resolve: (...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? args[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    };\n\n    var FS_stdin_getChar_buffer = [];\n\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (\n          typeof window != 'undefined' &&\n          typeof window.prompt == 'function'\n        ) {\n          result = window.prompt('Input: ');\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else {\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a,\n              0x00, 0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ],\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n    };\n\n    var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n    var mmapAlloc = (size) => {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (ptr) zeroMemory(ptr, size);\n      return ptr;\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n            },\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync,\n            },\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink,\n            },\n            stream: {},\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: FS.chrdev_stream_ops,\n          },\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(\n                    contents,\n                    position,\n                    position + length,\n                  );\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url).then(\n        (arrayBuffer) => {\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (err) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw `Loading data file \"${url}\" failed.`;\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    };\n\n    var FS_createDataFile = (\n      parent,\n      name,\n      fileData,\n      canRead,\n      canWrite,\n      canOwn,\n    ) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n\n    var preloadPlugins = Module['preloadPlugins'] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != 'undefined') Browser.init();\n\n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (\n      parent,\n      name,\n      url,\n      canRead,\n      canWrite,\n      onload,\n      onerror,\n      dontCreateFile,\n      canOwn,\n      preFinish,\n    ) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(\n              parent,\n              name,\n              byteArray,\n              canRead,\n              canWrite,\n              canOwn,\n            );\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (\n          FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n            onerror?.();\n            removeRunDependency(dep);\n          })\n        ) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n\n    var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        r: 0,\n        'r+': 2,\n        w: 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        a: 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: class {\n        constructor(errno) {\n          this.name = 'ErrnoError';\n          this.errno = errno;\n        }\n      },\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      readFiles: {},\n      FSStream: class {\n        constructor() {\n          this.shared = {};\n        }\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return this.flags & 1024;\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n      FSNode: class {\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n          this.readMode = 292 | 73;\n          this.writeMode = 146;\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? `${mount}/${path}`\n              : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          stream.stream_ops.open?.(stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push(...m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open(path, flags, mode) {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if (flags & 64) {\n          mode = typeof mode == 'undefined' ? 438 : mode;\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices() {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories() {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount() {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup(parent, name) {\n                  var fd = +name;\n                  var stream = FS.getStreamChecked(fd);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams(input, output, error) {\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      staticInit() {\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init(input, output, error) {\n        FS.initialized = true;\n\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n\n        FS.createStandardStreams(input, output, error);\n      },\n      quit() {\n        FS.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else {\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        class LazyUint8Array {\n          constructor() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize) | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n    };\n\n    var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        var stat = func(path);\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = stat.mode;\n        HEAPU32[(buf + 8) >> 2] = stat.nlink;\n        HEAP32[(buf + 12) >> 2] = stat.uid;\n        HEAP32[(buf + 16) >> 2] = stat.gid;\n        HEAP32[(buf + 20) >> 2] = stat.rdev;\n        HEAP64[(buf + 24) >> 3] = BigInt(stat.size);\n        HEAP32[(buf + 32) >> 2] = 4096;\n        HEAP32[(buf + 36) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(buf + 40) >> 3] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(buf + 48) >> 2] = (atime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 56) >> 3] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(buf + 64) >> 2] = (mtime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 72) >> 3] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(buf + 80) >> 2] = (ctime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 88) >> 3] = BigInt(stat.ino);\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n      varargs: undefined,\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function syscallGetVarargI() {\n      var ret = HEAP32[+SYSCALLS.varargs >> 2];\n      SYSCALLS.varargs += 4;\n      return ret;\n    }\n    var syscallGetVarargP = syscallGetVarargI;\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = syscallGetVarargI();\n            if (arg < 0) {\n              return -28;\n            }\n            while (FS.streams[arg]) {\n              arg++;\n            }\n            var newStream;\n            newStream = FS.dupStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = syscallGetVarargI();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 12: {\n            var arg = syscallGetVarargP();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 13:\n          case 14:\n            return 0;\n        }\n        return -28;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var INT53_MAX = 9007199254740992;\n\n    var INT53_MIN = -9007199254740992;\n    var bigintToI53Checked = (num) =>\n      num < INT53_MIN || num > INT53_MAX ? NaN : Number(num);\n    function ___syscall_ftruncate64(fd, length) {\n      length = bigintToI53Checked(length);\n\n      try {\n        if (isNaN(length)) return 61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21505: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcgets) {\n              var termios = stream.tty.ops.ioctl_tcgets(stream);\n              var argp = syscallGetVarargP();\n              HEAP32[argp >> 2] = termios.c_iflag || 0;\n              HEAP32[(argp + 4) >> 2] = termios.c_oflag || 0;\n              HEAP32[(argp + 8) >> 2] = termios.c_cflag || 0;\n              HEAP32[(argp + 12) >> 2] = termios.c_lflag || 0;\n              for (var i = 0; i < 32; i++) {\n                HEAP8[argp + i + 17] = termios.c_cc[i] || 0;\n              }\n              return 0;\n            }\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcsets) {\n              var argp = syscallGetVarargP();\n              var c_iflag = HEAP32[argp >> 2];\n              var c_oflag = HEAP32[(argp + 4) >> 2];\n              var c_cflag = HEAP32[(argp + 8) >> 2];\n              var c_lflag = HEAP32[(argp + 12) >> 2];\n              var c_cc = [];\n              for (var i = 0; i < 32; i++) {\n                c_cc.push(HEAP8[argp + i + 17]);\n              }\n              return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\n                c_iflag,\n                c_oflag,\n                c_cflag,\n                c_lflag,\n                c_cc,\n              });\n            }\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = syscallGetVarargP();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = syscallGetVarargP();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tiocgwinsz) {\n              var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n              var argp = syscallGetVarargP();\n              HEAP16[argp >> 1] = winsize[0];\n              HEAP16[(argp + 2) >> 1] = winsize[1];\n            }\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21515: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? syscallGetVarargI() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var readI53FromI64 = (ptr) => {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    };\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        var now = Date.now(),\n          atime,\n          mtime;\n        if (!times) {\n          atime = now;\n          mtime = now;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            atime = now;\n          } else if (nanoseconds == 1073741822) {\n            atime = -1;\n          } else {\n            atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            mtime = now;\n          } else if (nanoseconds == 1073741822) {\n            mtime = -1;\n          } else {\n            mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n        }\n\n        if (mtime != -1 || atime != -1) {\n          FS.utime(path, atime, mtime);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = 1;\n    var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n    var isLeapYear = (year) =>\n      year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\n    var MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = leap\n        ? MONTH_DAYS_LEAP_CUMULATIVE\n        : MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    };\n\n    function __localtime_js(time, tmPtr) {\n      time = bigintToI53Checked(time);\n\n      var date = new Date(time * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = ydayFromDate(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, offset, allocated, addr) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, offset, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      var extractZone = (timezoneOffset) => {\n        var sign = timezoneOffset >= 0 ? '-' : '+';\n\n        var absOffset = Math.abs(timezoneOffset);\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, '0');\n        var minutes = String(absOffset % 60).padStart(2, '0');\n\n        return `UTC${sign}${hours}${minutes}`;\n      };\n\n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n\n    var _emscripten_date_now = () => Date.now();\n\n    var _emscripten_get_now = () => performance.now();\n\n    var getHeapMax = () => 2147483648;\n\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n\n      requestedSize >>>= 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    var ENV = {};\n\n    var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++] = str.charCodeAt(i);\n      }\n\n      HEAP8[buffer] = 0;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => (bufSize += string.length + 1));\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var rightsBase = 0;\n        var rightsInheriting = 0;\n        var flags = 0;\n        {\n          var stream = SYSCALLS.getStreamFromFD(fd);\n\n          var type = stream.tty\n            ? 2\n            : FS.isDir(stream.mode)\n              ? 3\n              : FS.isLink(stream.mode)\n                ? 7\n                : 4;\n        }\n        HEAP8[pbuf] = type;\n        HEAP16[(pbuf + 2) >> 1] = flags;\n        HEAP64[(pbuf + 8) >> 3] = BigInt(rightsBase);\n        HEAP64[(pbuf + 16) >> 3] = BigInt(rightsInheriting);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        HEAP64[newOffset >> 3] = BigInt(stream.position);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops?.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n\n    var wasmImports = {\n      __syscall_chmod: ___syscall_chmod,\n\n      __syscall_faccessat: ___syscall_faccessat,\n\n      __syscall_fchmod: ___syscall_fchmod,\n\n      __syscall_fchown32: ___syscall_fchown32,\n\n      __syscall_fcntl64: ___syscall_fcntl64,\n\n      __syscall_fstat64: ___syscall_fstat64,\n\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n\n      __syscall_getcwd: ___syscall_getcwd,\n\n      __syscall_ioctl: ___syscall_ioctl,\n\n      __syscall_lstat64: ___syscall_lstat64,\n\n      __syscall_mkdirat: ___syscall_mkdirat,\n\n      __syscall_newfstatat: ___syscall_newfstatat,\n\n      __syscall_openat: ___syscall_openat,\n\n      __syscall_readlinkat: ___syscall_readlinkat,\n\n      __syscall_rmdir: ___syscall_rmdir,\n\n      __syscall_stat64: ___syscall_stat64,\n\n      __syscall_unlinkat: ___syscall_unlinkat,\n\n      __syscall_utimensat: ___syscall_utimensat,\n\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n\n      _localtime_js: __localtime_js,\n\n      _mmap_js: __mmap_js,\n\n      _munmap_js: __munmap_js,\n\n      _tzset_js: __tzset_js,\n\n      emscripten_date_now: _emscripten_date_now,\n\n      emscripten_get_now: _emscripten_get_now,\n\n      emscripten_resize_heap: _emscripten_resize_heap,\n\n      environ_get: _environ_get,\n\n      environ_sizes_get: _environ_sizes_get,\n\n      fd_close: _fd_close,\n\n      fd_fdstat_get: _fd_fdstat_get,\n\n      fd_read: _fd_read,\n\n      fd_seek: _fd_seek,\n\n      fd_sync: _fd_sync,\n\n      fd_write: _fd_write,\n\n      memory: wasmMemory,\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = () =>\n      (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        wasmExports['sqlite3_status64'])(a0, a1, a2, a3));\n    var _sqlite3_status = (Module['_sqlite3_status'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status = Module['_sqlite3_status'] =\n        wasmExports['sqlite3_status'])(a0, a1, a2, a3));\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        wasmExports['sqlite3_db_status'])(a0, a1, a2, a3, a4));\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = (a0) =>\n      (_sqlite3_msize = Module['_sqlite3_msize'] =\n        wasmExports['sqlite3_msize'])(a0));\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = (a0) =>\n      (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        wasmExports['sqlite3_vfs_find'])(a0));\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = () =>\n      (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        wasmExports['sqlite3_initialize'])());\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = (a0) =>\n      (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        wasmExports['sqlite3_malloc'])(a0));\n    var _sqlite3_free = (Module['_sqlite3_free'] = (a0) =>\n      (_sqlite3_free = Module['_sqlite3_free'] = wasmExports['sqlite3_free'])(\n        a0,\n      ));\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = (a0, a1) =>\n      (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        wasmExports['sqlite3_vfs_register'])(a0, a1));\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] = (a0) =>\n      (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n        wasmExports['sqlite3_vfs_unregister'])(a0));\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = (a0) =>\n      (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        wasmExports['sqlite3_malloc64'])(a0));\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = (a0, a1) =>\n      (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        wasmExports['sqlite3_realloc'])(a0, a1));\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = (a0, a1) =>\n      (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        wasmExports['sqlite3_realloc64'])(a0, a1));\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = (a0) =>\n      (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        wasmExports['sqlite3_value_text'])(a0));\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = (a0, a1) =>\n      (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        wasmExports['sqlite3_randomness'])(a0, a1));\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = (a0, a1) =>\n      (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        wasmExports['sqlite3_stricmp'])(a0, a1));\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = (a0, a1, a2) =>\n      (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        wasmExports['sqlite3_strnicmp'])(a0, a1, a2));\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] = (a0, a1) =>\n      (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n        wasmExports['sqlite3_uri_parameter'])(a0, a1));\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = (a0, a1, a2) =>\n      (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        wasmExports['sqlite3_uri_boolean'])(a0, a1, a2));\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = (a0, a1, a2, a3) =>\n      (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        wasmExports['sqlite3_serialize'])(a0, a1, a2, a3));\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        wasmExports['sqlite3_prepare_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_step = (Module['_sqlite3_step'] = (a0) =>\n      (_sqlite3_step = Module['_sqlite3_step'] = wasmExports['sqlite3_step'])(\n        a0,\n      ));\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = (a0, a1) =>\n      (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        wasmExports['sqlite3_column_int64'])(a0, a1));\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = (a0) =>\n      (_sqlite3_reset = Module['_sqlite3_reset'] =\n        wasmExports['sqlite3_reset'])(a0));\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = (a0, a1, a2, a3, a4) =>\n      (_sqlite3_exec = Module['_sqlite3_exec'] = wasmExports['sqlite3_exec'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n      ));\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = (a0, a1) =>\n      (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        wasmExports['sqlite3_column_int'])(a0, a1));\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = (a0) =>\n      (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        wasmExports['sqlite3_finalize'])(a0));\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        wasmExports['sqlite3_file_control'])(a0, a1, a2, a3));\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = (a0, a1) =>\n      (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        wasmExports['sqlite3_column_name'])(a0, a1));\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = (a0, a1) =>\n      (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        wasmExports['sqlite3_column_text'])(a0, a1));\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = (a0, a1) =>\n      (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        wasmExports['sqlite3_column_type'])(a0, a1));\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = (a0) =>\n      (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        wasmExports['sqlite3_errmsg'])(a0));\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        wasmExports['sqlite3_deserialize'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] = (a0) =>\n      (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n        wasmExports['sqlite3_clear_bindings'])(a0));\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = (a0) =>\n      (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        wasmExports['sqlite3_value_blob'])(a0));\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = (a0) =>\n      (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        wasmExports['sqlite3_value_bytes'])(a0));\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = (a0) =>\n      (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        wasmExports['sqlite3_value_double'])(a0));\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = (a0) =>\n      (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        wasmExports['sqlite3_value_int'])(a0));\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = (a0) =>\n      (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        wasmExports['sqlite3_value_int64'])(a0));\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] = (a0) =>\n      (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n        wasmExports['sqlite3_value_subtype'])(a0));\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] = (a0, a1) =>\n      (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n        wasmExports['sqlite3_value_pointer'])(a0, a1));\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = (a0) =>\n      (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        wasmExports['sqlite3_value_type'])(a0));\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] = (a0) =>\n      (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n        wasmExports['sqlite3_value_nochange'])(a0));\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] = (a0) =>\n      (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n        wasmExports['sqlite3_value_frombind'])(a0));\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = (a0) =>\n      (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        wasmExports['sqlite3_value_dup'])(a0));\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = (a0) =>\n      (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        wasmExports['sqlite3_value_free'])(a0));\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        wasmExports['sqlite3_result_blob'])(a0, a1, a2, a3));\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      (a0) =>\n        (_sqlite3_result_error_toobig = Module['_sqlite3_result_error_toobig'] =\n          wasmExports['sqlite3_result_error_toobig'])(a0));\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] = (\n      a0,\n    ) =>\n      (_sqlite3_result_error_nomem = Module['_sqlite3_result_error_nomem'] =\n        wasmExports['sqlite3_result_error_nomem'])(a0));\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] = (a0, a1) =>\n      (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n        wasmExports['sqlite3_result_double'])(a0, a1));\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        wasmExports['sqlite3_result_error'])(a0, a1, a2));\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = (a0, a1) =>\n      (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        wasmExports['sqlite3_result_int'])(a0, a1));\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = (a0, a1) =>\n      (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        wasmExports['sqlite3_result_int64'])(a0, a1));\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = (a0) =>\n      (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        wasmExports['sqlite3_result_null'])(a0));\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n        wasmExports['sqlite3_result_pointer'])(a0, a1, a2, a3));\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n        wasmExports['sqlite3_result_subtype'])(a0, a1));\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        wasmExports['sqlite3_result_text'])(a0, a1, a2, a3));\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n        wasmExports['sqlite3_result_zeroblob'])(a0, a1));\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob64 = Module['_sqlite3_result_zeroblob64'] =\n        wasmExports['sqlite3_result_zeroblob64'])(a0, a1));\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_error_code = Module['_sqlite3_result_error_code'] =\n        wasmExports['sqlite3_result_error_code'])(a0, a1));\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = (a0) =>\n      (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        wasmExports['sqlite3_user_data'])(a0));\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] = (\n      a0,\n    ) =>\n      (_sqlite3_context_db_handle = Module['_sqlite3_context_db_handle'] =\n        wasmExports['sqlite3_context_db_handle'])(a0));\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] = (a0) =>\n      (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n        wasmExports['sqlite3_vtab_nochange'])(a0));\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] = (a0, a1) =>\n      (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n        wasmExports['sqlite3_vtab_in_first'])(a0, a1));\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = (a0, a1) =>\n      (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        wasmExports['sqlite3_vtab_in_next'])(a0, a1));\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_aggregate_context = Module['_sqlite3_aggregate_context'] =\n        wasmExports['sqlite3_aggregate_context'])(a0, a1));\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = (a0, a1) =>\n      (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        wasmExports['sqlite3_get_auxdata'])(a0, a1));\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        wasmExports['sqlite3_set_auxdata'])(a0, a1, a2, a3));\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = (a0) =>\n      (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        wasmExports['sqlite3_column_count'])(a0));\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = (a0) =>\n      (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        wasmExports['sqlite3_data_count'])(a0));\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = (a0, a1) =>\n      (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        wasmExports['sqlite3_column_blob'])(a0, a1));\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = (a0, a1) =>\n      (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        wasmExports['sqlite3_column_bytes'])(a0, a1));\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] = (a0, a1) =>\n      (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n        wasmExports['sqlite3_column_double'])(a0, a1));\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = (a0, a1) =>\n      (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        wasmExports['sqlite3_column_value'])(a0, a1));\n    var _sqlite3_column_decltype = (Module['_sqlite3_column_decltype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_column_decltype = Module['_sqlite3_column_decltype'] =\n        wasmExports['sqlite3_column_decltype'])(a0, a1));\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        wasmExports['sqlite3_bind_blob'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = (a0, a1, a2) =>\n      (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        wasmExports['sqlite3_bind_double'])(a0, a1, a2));\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        wasmExports['sqlite3_bind_int'])(a0, a1, a2));\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        wasmExports['sqlite3_bind_int64'])(a0, a1, a2));\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = (a0, a1) =>\n      (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        wasmExports['sqlite3_bind_null'])(a0, a1));\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        wasmExports['sqlite3_bind_pointer'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        wasmExports['sqlite3_bind_text'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = (a0) =>\n      (_sqlite3_bind_parameter_count = Module['_sqlite3_bind_parameter_count'] =\n        wasmExports['sqlite3_bind_parameter_count'])(a0));\n    var _sqlite3_bind_parameter_name = (Module['_sqlite3_bind_parameter_name'] =\n      (a0, a1) =>\n        (_sqlite3_bind_parameter_name = Module['_sqlite3_bind_parameter_name'] =\n          wasmExports['sqlite3_bind_parameter_name'])(a0, a1));\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = (a0, a1) =>\n      (_sqlite3_bind_parameter_index = Module['_sqlite3_bind_parameter_index'] =\n        wasmExports['sqlite3_bind_parameter_index'])(a0, a1));\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = (a0) =>\n      (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        wasmExports['sqlite3_db_handle'])(a0));\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] = (a0) =>\n      (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n        wasmExports['sqlite3_stmt_readonly'])(a0));\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] = (a0) =>\n      (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n        wasmExports['sqlite3_stmt_isexplain'])(a0));\n    var _sqlite3_stmt_explain = (Module['_sqlite3_stmt_explain'] = (a0, a1) =>\n      (_sqlite3_stmt_explain = Module['_sqlite3_stmt_explain'] =\n        wasmExports['sqlite3_stmt_explain'])(a0, a1));\n    var _sqlite3_stmt_busy = (Module['_sqlite3_stmt_busy'] = (a0) =>\n      (_sqlite3_stmt_busy = Module['_sqlite3_stmt_busy'] =\n        wasmExports['sqlite3_stmt_busy'])(a0));\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = (a0, a1, a2) =>\n      (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        wasmExports['sqlite3_stmt_status'])(a0, a1, a2));\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = (a0) =>\n      (_sqlite3_sql = Module['_sqlite3_sql'] = wasmExports['sqlite3_sql'])(a0));\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = (a0) =>\n      (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        wasmExports['sqlite3_expanded_sql'])(a0));\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n        wasmExports['sqlite3_preupdate_old'])(a0, a1, a2));\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] = (a0) =>\n      (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n        wasmExports['sqlite3_preupdate_count'])(a0));\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] = (a0) =>\n      (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n        wasmExports['sqlite3_preupdate_depth'])(a0));\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      (a0) =>\n        (_sqlite3_preupdate_blobwrite = Module['_sqlite3_preupdate_blobwrite'] =\n          wasmExports['sqlite3_preupdate_blobwrite'])(a0));\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n        wasmExports['sqlite3_preupdate_new'])(a0, a1, a2));\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] = (\n      a0,\n    ) =>\n      (_sqlite3_value_numeric_type = Module['_sqlite3_value_numeric_type'] =\n        wasmExports['sqlite3_value_numeric_type'])(a0));\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n        wasmExports['sqlite3_set_authorizer'])(a0, a1, a2));\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = (a0, a1) =>\n      (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        wasmExports['sqlite3_strglob'])(a0, a1));\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = (a0, a1, a2) =>\n      (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        wasmExports['sqlite3_strlike'])(a0, a1, a2));\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] = (a0) =>\n      (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n        wasmExports['sqlite3_auto_extension'])(a0));\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = (a0) =>\n      (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        wasmExports['sqlite3_cancel_auto_extension'])(a0));\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = () =>\n      (_sqlite3_reset_auto_extension = Module['_sqlite3_reset_auto_extension'] =\n        wasmExports['sqlite3_reset_auto_extension'])());\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        wasmExports['sqlite3_prepare_v3'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n        wasmExports['sqlite3_create_module'])(a0, a1, a2, a3));\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_module_v2 = Module['_sqlite3_create_module_v2'] =\n        wasmExports['sqlite3_create_module_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = (a0, a1) =>\n      (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        wasmExports['sqlite3_drop_modules'])(a0, a1));\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = (a0, a1) =>\n      (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        wasmExports['sqlite3_declare_vtab'])(a0, a1));\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] = (\n      a0,\n    ) =>\n      (_sqlite3_vtab_on_conflict = Module['_sqlite3_vtab_on_conflict'] =\n        wasmExports['sqlite3_vtab_on_conflict'])(a0));\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n        wasmExports['sqlite3_vtab_collation'])(a0, a1));\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = (a0, a1, a2) =>\n      (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        wasmExports['sqlite3_vtab_in'])(a0, a1, a2));\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n        wasmExports['sqlite3_vtab_rhs_value'])(a0, a1, a2));\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] = (a0) =>\n      (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n        wasmExports['sqlite3_vtab_distinct'])(a0));\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        wasmExports['sqlite3_keyword_name'])(a0, a1, a2));\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] = () =>\n      (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n        wasmExports['sqlite3_keyword_count'])());\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] = (a0, a1) =>\n      (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n        wasmExports['sqlite3_keyword_check'])(a0, a1));\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = (a0) =>\n      (_sqlite3_complete = Module['_sqlite3_complete'] =\n        wasmExports['sqlite3_complete'])(a0));\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = () =>\n      (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        wasmExports['sqlite3_libversion'])());\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      () =>\n        (_sqlite3_libversion_number = Module['_sqlite3_libversion_number'] =\n          wasmExports['sqlite3_libversion_number'])());\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = () =>\n      (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        wasmExports['sqlite3_shutdown'])());\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] = (\n      a0,\n    ) =>\n      (_sqlite3_last_insert_rowid = Module['_sqlite3_last_insert_rowid'] =\n        wasmExports['sqlite3_last_insert_rowid'])(a0));\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = (a0, a1) =>\n      (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        wasmExports['sqlite3_set_last_insert_rowid'])(a0, a1));\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = (a0) =>\n      (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        wasmExports['sqlite3_changes64'])(a0));\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = (a0) =>\n      (_sqlite3_changes = Module['_sqlite3_changes'] =\n        wasmExports['sqlite3_changes'])(a0));\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] = (a0) =>\n      (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n        wasmExports['sqlite3_total_changes64'])(a0));\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] = (a0) =>\n      (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n        wasmExports['sqlite3_total_changes'])(a0));\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = (a0, a1) =>\n      (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        wasmExports['sqlite3_txn_state'])(a0, a1));\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = (a0) =>\n      (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        wasmExports['sqlite3_close_v2'])(a0));\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        wasmExports['sqlite3_busy_handler'])(a0, a1, a2));\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_progress_handler = Module['_sqlite3_progress_handler'] =\n        wasmExports['sqlite3_progress_handler'])(a0, a1, a2, a3));\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = (a0, a1) =>\n      (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        wasmExports['sqlite3_busy_timeout'])(a0, a1));\n    var _sqlite3_interrupt = (Module['_sqlite3_interrupt'] = (a0) =>\n      (_sqlite3_interrupt = Module['_sqlite3_interrupt'] =\n        wasmExports['sqlite3_interrupt'])(a0));\n    var _sqlite3_is_interrupted = (Module['_sqlite3_is_interrupted'] = (a0) =>\n      (_sqlite3_is_interrupted = Module['_sqlite3_is_interrupted'] =\n        wasmExports['sqlite3_is_interrupted'])(a0));\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n    ) =>\n      (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n        wasmExports['sqlite3_create_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n      ));\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3_create_function_v2 = Module['_sqlite3_create_function_v2'] =\n        wasmExports['sqlite3_create_function_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) =>\n      (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        wasmExports['sqlite3_create_window_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n        a9,\n      ));\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_overload_function = Module['_sqlite3_overload_function'] =\n        wasmExports['sqlite3_overload_function'])(a0, a1, a2));\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        wasmExports['sqlite3_trace_v2'])(a0, a1, a2, a3));\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = (a0, a1, a2) =>\n      (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        wasmExports['sqlite3_commit_hook'])(a0, a1, a2));\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = (a0, a1, a2) =>\n      (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        wasmExports['sqlite3_update_hook'])(a0, a1, a2));\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n        wasmExports['sqlite3_rollback_hook'])(a0, a1, a2));\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n        wasmExports['sqlite3_preupdate_hook'])(a0, a1, a2));\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = (a0) =>\n      (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        wasmExports['sqlite3_error_offset'])(a0));\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = (a0) =>\n      (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        wasmExports['sqlite3_errcode'])(a0));\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] = (\n      a0,\n    ) =>\n      (_sqlite3_extended_errcode = Module['_sqlite3_extended_errcode'] =\n        wasmExports['sqlite3_extended_errcode'])(a0));\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = (a0) =>\n      (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        wasmExports['sqlite3_errstr'])(a0));\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = (a0, a1, a2) =>\n      (_sqlite3_limit = Module['_sqlite3_limit'] =\n        wasmExports['sqlite3_limit'])(a0, a1, a2));\n    var _sqlite3_open = (Module['_sqlite3_open'] = (a0, a1) =>\n      (_sqlite3_open = Module['_sqlite3_open'] = wasmExports['sqlite3_open'])(\n        a0,\n        a1,\n      ));\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        wasmExports['sqlite3_open_v2'])(a0, a1, a2, a3));\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_collation = Module['_sqlite3_create_collation'] =\n        wasmExports['sqlite3_create_collation'])(a0, a1, a2, a3, a4));\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3_create_collation_v2 = Module['_sqlite3_create_collation_v2'] =\n          wasmExports['sqlite3_create_collation_v2'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_collation_needed = Module['_sqlite3_collation_needed'] =\n        wasmExports['sqlite3_collation_needed'])(a0, a1, a2));\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] = (a0) =>\n      (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n        wasmExports['sqlite3_get_autocommit'])(a0));\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        wasmExports['sqlite3_table_column_metadata'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = (a0, a1) =>\n      (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        wasmExports['sqlite3_extended_result_codes'])(a0, a1));\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = (a0, a1) =>\n      (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        wasmExports['sqlite3_uri_key'])(a0, a1));\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = (a0, a1, a2) =>\n      (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        wasmExports['sqlite3_uri_int64'])(a0, a1, a2));\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = (a0, a1) =>\n      (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        wasmExports['sqlite3_db_name'])(a0, a1));\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = (a0, a1) =>\n      (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        wasmExports['sqlite3_db_filename'])(a0, a1));\n    var _sqlite3_db_readonly = (Module['_sqlite3_db_readonly'] = (a0, a1) =>\n      (_sqlite3_db_readonly = Module['_sqlite3_db_readonly'] =\n        wasmExports['sqlite3_db_readonly'])(a0, a1));\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_used = Module['_sqlite3_compileoption_used'] =\n        wasmExports['sqlite3_compileoption_used'])(a0));\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_get = Module['_sqlite3_compileoption_get'] =\n        wasmExports['sqlite3_compileoption_get'])(a0));\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        wasmExports['sqlite3session_diff'])(a0, a1, a2, a3));\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] = (a0, a1) =>\n      (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n        wasmExports['sqlite3session_attach'])(a0, a1));\n    var _sqlite3session_create = (Module['_sqlite3session_create'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_create = Module['_sqlite3session_create'] =\n        wasmExports['sqlite3session_create'])(a0, a1, a2));\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] = (a0) =>\n      (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n        wasmExports['sqlite3session_delete'])(a0));\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      (a0, a1, a2) =>\n        (_sqlite3session_table_filter = Module['_sqlite3session_table_filter'] =\n          wasmExports['sqlite3session_table_filter'])(a0, a1, a2));\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_changeset = Module['_sqlite3session_changeset'] =\n        wasmExports['sqlite3session_changeset'])(a0, a1, a2));\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        wasmExports['sqlite3session_changeset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_patchset_strm = Module['_sqlite3session_patchset_strm'] =\n        wasmExports['sqlite3session_patchset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n        wasmExports['sqlite3session_patchset'])(a0, a1, a2));\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] = (a0, a1) =>\n      (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n        wasmExports['sqlite3session_enable'])(a0, a1));\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n        wasmExports['sqlite3session_indirect'])(a0, a1));\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] = (a0) =>\n      (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n        wasmExports['sqlite3session_isempty'])(a0));\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] = (\n      a0,\n    ) =>\n      (_sqlite3session_memory_used = Module['_sqlite3session_memory_used'] =\n        wasmExports['sqlite3session_memory_used'])(a0));\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_object_config = Module['_sqlite3session_object_config'] =\n        wasmExports['sqlite3session_object_config'])(a0, a1, a2));\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = (a0) =>\n      (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        wasmExports['sqlite3session_changeset_size'])(a0));\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n        wasmExports['sqlite3changeset_start'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_start_v2 = Module['_sqlite3changeset_start_v2'] =\n        wasmExports['sqlite3changeset_start_v2'])(a0, a1, a2, a3));\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changeset_start_strm = Module['_sqlite3changeset_start_strm'] =\n          wasmExports['sqlite3changeset_start_strm'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_start_v2_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] = (a0) =>\n      (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n        wasmExports['sqlite3changeset_next'])(a0));\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        wasmExports['sqlite3changeset_op'])(a0, a1, a2, a3, a4));\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = (a0, a1, a2) =>\n      (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        wasmExports['sqlite3changeset_pk'])(a0, a1, a2));\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        wasmExports['sqlite3changeset_old'])(a0, a1, a2));\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        wasmExports['sqlite3changeset_new'])(a0, a1, a2));\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_conflict = Module['_sqlite3changeset_conflict'] =\n        wasmExports['sqlite3changeset_conflict'])(a0, a1, a2));\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = (a0, a1) =>\n      (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        wasmExports['sqlite3changeset_fk_conflicts'])(a0, a1));\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] = (\n      a0,\n    ) =>\n      (_sqlite3changeset_finalize = Module['_sqlite3changeset_finalize'] =\n        wasmExports['sqlite3changeset_finalize'])(a0));\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n        wasmExports['sqlite3changeset_invert'])(a0, a1, a2, a3));\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_invert_strm = Module['_sqlite3changeset_invert_strm'] =\n        wasmExports['sqlite3changeset_invert_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3changeset_apply_v2 = Module['_sqlite3changeset_apply_v2'] =\n        wasmExports['sqlite3changeset_apply_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n        wasmExports['sqlite3changeset_apply'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_apply_v2_strm'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3changeset_apply_strm = Module['_sqlite3changeset_apply_strm'] =\n          wasmExports['sqlite3changeset_apply_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] = (a0) =>\n      (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n        wasmExports['sqlite3changegroup_new'])(a0));\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n        wasmExports['sqlite3changegroup_add'])(a0, a1, a2));\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_output = Module['_sqlite3changegroup_output'] =\n        wasmExports['sqlite3changegroup_output'])(a0, a1, a2));\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changegroup_add_strm = Module['_sqlite3changegroup_add_strm'] =\n          wasmExports['sqlite3changegroup_add_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        wasmExports['sqlite3changegroup_output_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] = (\n      a0,\n    ) =>\n      (_sqlite3changegroup_delete = Module['_sqlite3changegroup_delete'] =\n        wasmExports['sqlite3changegroup_delete'])(a0));\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n        wasmExports['sqlite3changeset_concat'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = (a0, a1, a2, a3, a4, a5) =>\n      (_sqlite3changeset_concat_strm = Module['_sqlite3changeset_concat_strm'] =\n        wasmExports['sqlite3changeset_concat_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3session_config = (Module['_sqlite3session_config'] = (a0, a1) =>\n      (_sqlite3session_config = Module['_sqlite3session_config'] =\n        wasmExports['sqlite3session_config'])(a0, a1));\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = () =>\n      (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        wasmExports['sqlite3_sourceid'])());\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] = () =>\n      (_sqlite3__wasm_pstack_ptr = Module['_sqlite3__wasm_pstack_ptr'] =\n        wasmExports['sqlite3__wasm_pstack_ptr'])());\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = (a0) =>\n      (_sqlite3__wasm_pstack_restore = Module['_sqlite3__wasm_pstack_restore'] =\n        wasmExports['sqlite3__wasm_pstack_restore'])(a0));\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_pstack_alloc = Module['_sqlite3__wasm_pstack_alloc'] =\n        wasmExports['sqlite3__wasm_pstack_alloc'])(a0));\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = () =>\n      (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        wasmExports['sqlite3__wasm_pstack_remaining'])());\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      () =>\n        (_sqlite3__wasm_pstack_quota = Module['_sqlite3__wasm_pstack_quota'] =\n          wasmExports['sqlite3__wasm_pstack_quota'])());\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n        wasmExports['sqlite3__wasm_db_error'])(a0, a1, a2));\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_struct = Module['_sqlite3__wasm_test_struct'] =\n        wasmExports['sqlite3__wasm_test_struct'])(a0));\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] = () =>\n      (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n        wasmExports['sqlite3__wasm_enum_json'])());\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_vfs_unlink = Module['_sqlite3__wasm_vfs_unlink'] =\n        wasmExports['sqlite3__wasm_vfs_unlink'])(a0, a1));\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = (a0, a1) =>\n      (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        wasmExports['sqlite3__wasm_db_vfs'])(a0, a1));\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] = (a0) =>\n      (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n        wasmExports['sqlite3__wasm_db_reset'])(a0));\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        wasmExports['sqlite3__wasm_db_export_chunked'])(a0, a1));\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3__wasm_db_serialize = Module['_sqlite3__wasm_db_serialize'] =\n        wasmExports['sqlite3__wasm_db_serialize'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_vfs_create_file'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = (a0, a1, a2) =>\n      (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_posix_create_file'])(a0, a1, a2));\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        wasmExports['sqlite3__wasm_kvvfsMakeKeyOnPstack'])(a0, a1));\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      () =>\n        (_sqlite3__wasm_kvvfs_methods = Module['_sqlite3__wasm_kvvfs_methods'] =\n          wasmExports['sqlite3__wasm_kvvfs_methods'])());\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_vtab_config = Module['_sqlite3__wasm_vtab_config'] =\n        wasmExports['sqlite3__wasm_vtab_config'])(a0, a1, a2));\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3__wasm_db_config_ip = Module['_sqlite3__wasm_db_config_ip'] =\n        wasmExports['sqlite3__wasm_db_config_ip'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      (a0, a1, a2, a3, a4) =>\n        (_sqlite3__wasm_db_config_pii = Module['_sqlite3__wasm_db_config_pii'] =\n          wasmExports['sqlite3__wasm_db_config_pii'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_config_s = Module['_sqlite3__wasm_db_config_s'] =\n        wasmExports['sqlite3__wasm_db_config_s'])(a0, a1, a2));\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n        wasmExports['sqlite3__wasm_config_i'])(a0, a1));\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n        wasmExports['sqlite3__wasm_config_ii'])(a0, a1, a2));\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n        wasmExports['sqlite3__wasm_config_j'])(a0, a1));\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_qfmt_token = Module['_sqlite3__wasm_qfmt_token'] =\n        wasmExports['sqlite3__wasm_qfmt_token'])(a0, a1));\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_init_wasmfs = Module['_sqlite3__wasm_init_wasmfs'] =\n        wasmExports['sqlite3__wasm_init_wasmfs'])(a0));\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_intptr = Module['_sqlite3__wasm_test_intptr'] =\n        wasmExports['sqlite3__wasm_test_intptr'])(a0));\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_voidptr = Module['_sqlite3__wasm_test_voidptr'] =\n        wasmExports['sqlite3__wasm_test_voidptr'])(a0));\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_max = Module['_sqlite3__wasm_test_int64_max'] =\n        wasmExports['sqlite3__wasm_test_int64_max'])());\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_min = Module['_sqlite3__wasm_test_int64_min'] =\n        wasmExports['sqlite3__wasm_test_int64_min'])());\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_times2'])(a0));\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_minmax'])(a0, a1));\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      (a0) =>\n        (_sqlite3__wasm_test_int64ptr = Module['_sqlite3__wasm_test_int64ptr'] =\n          wasmExports['sqlite3__wasm_test_int64ptr'])(a0));\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        wasmExports['sqlite3__wasm_test_stack_overflow'])(a0));\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_str_hello = Module['_sqlite3__wasm_test_str_hello'] =\n        wasmExports['sqlite3__wasm_test_str_hello'])(a0));\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        wasmExports['sqlite3__wasm_SQLTester_strglob'])(a0, a1));\n    var _malloc = (Module['_malloc'] = (a0) =>\n      (_malloc = Module['_malloc'] = wasmExports['malloc'])(a0));\n    var _free = (Module['_free'] = (a0) =>\n      (_free = Module['_free'] = wasmExports['free'])(a0));\n    var _realloc = (Module['_realloc'] = (a0, a1) =>\n      (_realloc = Module['_realloc'] = wasmExports['realloc'])(a0, a1));\n    var _emscripten_builtin_memalign = (a0, a1) =>\n      (_emscripten_builtin_memalign =\n        wasmExports['emscripten_builtin_memalign'])(a0, a1);\n    var __emscripten_stack_restore = (a0) =>\n      (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(\n        a0,\n      );\n    var __emscripten_stack_alloc = (a0) =>\n      (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\n    var _emscripten_stack_get_current = () =>\n      (_emscripten_stack_get_current =\n        wasmExports['emscripten_stack_get_current'])();\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n    var calledPrerun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n\n      if (!calledPrerun) {\n        calledPrerun = 1;\n        preRun();\n\n        if (runDependencies > 0) {\n          return;\n        }\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = 1;\n        Module['calledRun'] = 1;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        Module['onRuntimeInitialized']?.();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(() => {\n          setTimeout(() => Module['setStatus'](''), 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    Module.runSQLite3PostLoadInit = function (EmscriptenModule) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE:\n            case capi.SQLITE_DBCONFIG_ENABLE_COMMENTS:\n              if (!this.ip) {\n                this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'int',\n                  '*',\n                ]);\n              }\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              if (!this.pii) {\n                this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n                  'sqlite3*',\n                  'int',\n                  '*',\n                  'int',\n                  'int',\n                ]);\n              }\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              if (!this.s) {\n                this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'string:static',\n                ]);\n              }\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                xcvPart.delete(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          ['sqlite3_bind_parameter_name', 'string', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_decltype', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_readonly', 'int', 'sqlite3*', 'string'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n          ['sqlite3_interrupt', undefined, 'sqlite3*'],\n          ['sqlite3_is_interrupted', 'int', 'sqlite3*'],\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              true\n                ? '*'\n                : new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xDestroyAuxData',\n                    signature: 'v(p)',\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_busy', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_readonly', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (!!wasm.exports.sqlite3_progress_handler) {\n          wasm.bindingSignatures.push([\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (!!wasm.exports.sqlite3_stmt_explain) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_stmt_explain', 'int', 'sqlite3_stmt*', 'int'],\n            ['sqlite3_stmt_isexplain', 'int', 'sqlite3_stmt*'],\n          );\n        }\n\n        if (!!wasm.exports.sqlite3_set_authorizer) {\n          wasm.bindingSignatures.push([\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_declare_vtab) {\n          wasm.bindingSignatures.int64.push(\n            [\n              'sqlite3_create_module',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n            ],\n            [\n              'sqlite3_create_module_v2',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n            ],\n            ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n            ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n            ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n            ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n            ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n            ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n            ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n            ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n            ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n            [\n              'sqlite3_vtab_rhs_value',\n              'int',\n              'sqlite3_index_info*',\n              'int',\n              '**',\n            ],\n          );\n        }\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_preupdate_hook) {\n          wasm.bindingSignatures.int64.push(\n            ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n            [\n              'sqlite3_preupdate_hook',\n              '*',\n              [\n                'sqlite3*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'sqlite3_preupdate_hook',\n                  signature: 'v(ppippjj)',\n                  contextKey: (argv) => argv[0],\n                  callProxy: (callback) => {\n                    return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                      callback(\n                        p,\n                        db,\n                        op,\n                        wasm.cstrToJs(zDb),\n                        wasm.cstrToJs(zTbl),\n                        iKey1,\n                        iKey2,\n                      );\n                    };\n                  },\n                }),\n                '*',\n              ],\n            ],\n            ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n            ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          );\n        }\n\n        if (\n          wasm.bigIntEnabled &&\n          !!wasm.exports.sqlite3changegroup_add &&\n          !!wasm.exports.sqlite3session_create &&\n          !!wasm.exports.sqlite3_preupdate_hook\n        ) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n          if (wasm.exports.sqlite3_declare_vtab) {\n            wasm.xWrap.argAdapter('sqlite3_index_info*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_index_info || nilType)\n                  ? v.pointer\n                  : v,\n              ),\n            )('sqlite3_module*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n              ),\n            );\n          }\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        if (wasm.exports.sqlite3_create_window_function) {\n          __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n            const m = __dbCleanupMap(pDb, 1);\n            if (!m.wudf) m.wudf = new Map();\n            this._addUDF(pDb, name, arity, m.wudf);\n          };\n        }\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            if (!x) {\n              continue;\n            }\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              sqlite3.config.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_create) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.exports\n            .sqlite3_create_window_function\n            ? wasm.xWrap('sqlite3_create_window_function', 'int', [\n                'sqlite3*',\n                'string',\n                'int',\n                'int',\n                '*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xStep',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xFinal',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xValue',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xInverse',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xDestroy',\n                  ...__cfProxy.xDestroy,\n                }),\n              ])\n            : undefined;\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          if (__sqlite3CreateWindowFunction) {\n            capi.sqlite3_create_window_function = function f(\n              pDb,\n              funcName,\n              nArg,\n              eTextRep,\n              pApp,\n              xStep,\n              xFinal,\n              xValue,\n              xInverse,\n              xDestroy,\n            ) {\n              if (f.length !== arguments.length) {\n                return __dbArgcMismatch(\n                  pDb,\n                  'sqlite3_create_window_function',\n                  f.length,\n                );\n              } else if (0 === (eTextRep & 0xf)) {\n                eTextRep |= capi.SQLITE_UTF8;\n              } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n                return __errEncoding(pDb);\n              }\n              try {\n                const rc = __sqlite3CreateWindowFunction(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xStep,\n                  xFinal,\n                  xValue,\n                  xInverse,\n                  xDestroy,\n                );\n                if (\n                  0 === rc &&\n                  (xStep instanceof Function ||\n                    xFinal instanceof Function ||\n                    xValue instanceof Function ||\n                    xInverse instanceof Function ||\n                    xDestroy instanceof Function)\n                ) {\n                  __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n                }\n                return rc;\n              } catch (e) {\n                console.error(\n                  'sqlite3_create_window_function() setup threw:',\n                  e,\n                );\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  e,\n                  'Creation of UDF threw: ' + e,\n                );\n              }\n            };\n          } else {\n            delete capi.sqlite3_create_window_function;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult = capi.sqlite3_result_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          }\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage error: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.50.4',\n          libVersionNumber: 3050004,\n          sourceId:\n            '2025-07-30 19:33:53 4d8adfb30e03f9cf27f800a2c1ba3c48fb4ca1b08b0f5ed59a4d5ecbf45e20a3',\n          downloadVersion: 3500400,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenCallback = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenCallback[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenCallback = function (pVfs, callback) {\n          if (!(callback instanceof Function)) {\n            toss3(\n              'dbCtorHelper.setVfsPostOpenCallback() should not be used with ' +\n                'a non-function argument.',\n              arguments,\n            );\n          }\n          __vfsPostOpenCallback[pVfs] = callback;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n\n          getParamName: function (ndx) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_name(this.pointer, ndx)\n              : undefined;\n          },\n\n          isBusy: function () {\n            return 0 !== capi.sqlite3_stmt_busy(affirmStmtOpen(this));\n          },\n\n          isReadOnly: function () {\n            return 0 !== capi.sqlite3_stmt_readonly(affirmStmtOpen(this));\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                const lastInsertRowId = !!rc.lastInsertRowId\n                  ? sqlite3.capi.sqlite3_last_insert_rowid(db)\n                  : undefined;\n                if (undefined !== lastInsertRowId) {\n                  rc.lastInsertRowId = lastInsertRowId;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        if (!sqlite3.wasm.exports.sqlite3_declare_vtab) {\n          return;\n        }\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_CANTOPEN',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              while (\n                'not-equal' !==\n                Atomics.wait(state.sabOPView, state.opIds.rc, -1)\n              ) {}\n\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                wasm.poke(pOut, 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                fh.readOnly =\n                  !(sqlite3.SQLITE_OPEN_CREATE & flags) &&\n                  !!(flags & capi.SQLITE_OPEN_READONLY);\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenCallback(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n        const FLAG_COMPUTE_DIGEST_V2 = capi.SQLITE_OPEN_MEMORY;\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n          forceReinitIfPreviouslyFailed: false,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              flags &= ~FLAG_COMPUTE_DIGEST_V2;\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            for (const n of this.#mapFilenameToSAH.keys()) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles = false) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody, flags);\n\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            if (path && flags) {\n              flags |= FLAG_COMPUTE_DIGEST_V2;\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n            const digest = this.computeDigest(this.#apBody, flags);\n\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray, fileFlags) {\n            if (fileFlags & FLAG_COMPUTE_DIGEST_V2) {\n              let h1 = 0xdeadbeef;\n              let h2 = 0x41c6ce57;\n              for (const v of byteArray) {\n                h1 = Math.imul(h1 ^ v, 2654435761);\n                h2 = Math.imul(h2 ^ v, 104729);\n              }\n              return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n            } else {\n              return new Uint32Array([0, 0]);\n            }\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            delete initPromises[this.vfsName];\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(\n                this.vfsName,\n                'removeVfs() failed with no recovery strategy:',\n                e,\n              );\n            }\n            return true;\n          }\n\n          pauseVfs() {\n            if (this.#mapS3FileToOFile_.size > 0) {\n              sqlite3.SQLite3Error.toss(\n                capi.SQLITE_MISUSE,\n                'Cannot pause VFS',\n                this.vfsName,\n                'because it has opened files.',\n              );\n            }\n            if (this.#mapSAHToName.size > 0) {\n              capi.sqlite3_vfs_unregister(this.vfsName);\n              this.releaseAccessHandles();\n            }\n            return this;\n          }\n\n          isPaused() {\n            return 0 === this.#mapSAHToName.size;\n          }\n\n          async unpauseVfs() {\n            if (0 === this.#mapSAHToName.size) {\n              return this.acquireAccessHandles(false).then(\n                () => capi.sqlite3_vfs_register(this.#cVfs, 0),\n                this,\n              );\n            }\n            return this;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n\n          pauseVfs() {\n            this.#p.pauseVfs();\n            return this;\n          }\n          async unpauseVfs() {\n            return this.#p.unpauseVfs().then(() => this);\n          }\n          isPaused() {\n            return this.#p.isPaused();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          options = Object.assign(\n            Object.create(null),\n            optionDefaults,\n            options || {},\n          );\n          const vfsName = options.name;\n          if (options.$testThrowPhase1) {\n            throw options.$testThrowPhase1;\n          }\n          if (initPromises[vfsName]) {\n            try {\n              const p = await initPromises[vfsName];\n\n              return p;\n            } catch (e) {\n              if (options.forceReinitIfPreviouslyFailed) {\n                delete initPromises[vfsName];\n              } else {\n                throw e;\n              }\n            }\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowPhase2) {\n                throw options.$testThrowPhase2;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    };\n\n    moduleRtn = readyPromise;\n\n    return moduleRtn;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        EmscriptenModule.runSQLite3PostLoadInit(EmscriptenModule);\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        const rv = f();\n        return rv;\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  let promiserFunc;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready(promiserFunc);\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return (promiserFunc = function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  });\n};\n\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\nsqlite3Worker1Promiser.v2 = function (config) {\n  let oldFunc;\n  if ('function' == typeof config) {\n    oldFunc = config;\n    config = {};\n  } else if ('function' === typeof config?.onready) {\n    oldFunc = config.onready;\n    delete config.onready;\n  }\n  const promiseProxy = Object.create(null);\n  config = Object.assign(config || Object.create(null), {\n    onready: async function (func) {\n      try {\n        if (oldFunc) await oldFunc(func);\n        promiseProxy.resolve(func);\n      } catch (e) {\n        promiseProxy.reject(e);\n      }\n    },\n  });\n  const p = new Promise(function (resolve, reject) {\n    promiseProxy.resolve = resolve;\n    promiseProxy.reject = reject;\n  });\n  try {\n    this.original(config);\n  } catch (e) {\n    promiseProxy.reject(e);\n  }\n  return p;\n}.bind({\n  original: sqlite3Worker1Promiser,\n});\n\nexport default sqlite3Worker1Promiser.v2;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs';\n\nconst sqlite3Worker1Promiser = globalThis.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n"],"x_google_ignoreList":[0,1,2],"mappings":"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"}