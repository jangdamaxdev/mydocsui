{"version":3,"file":"BIV8dUua.js","names":["preview","iframe","name","iframeMobile"],"sources":["../../node_modules/app/composables/fetchComponentExample.ts","../../node_modules/app/components/content/ComponentExample.vue","../../node_modules/app/components/content/ComponentExample.vue"],"sourcesContent":["const useComponentExampleState = () => useState<Record<string, any>>('component-example-state', () => ({}))\r\n\r\nexport async function fetchComponentExample(name: string) {\r\n  const state = useComponentExampleState()\r\n\r\n  if (state.value[name]?.then) {\r\n    await state.value[name]\r\n    return state.value[name]\r\n  }\r\n  if (state.value[name]) {\r\n    return state.value[name]\r\n  }\r\n\r\n  // Add to nitro prerender\r\n  if (import.meta.server) {\r\n    const event = useRequestEvent()\r\n    event?.node.res.setHeader(\r\n      'x-nitro-prerender',\r\n      [event?.node.res.getHeader('x-nitro-prerender'), `/api/component-example/${name}.json`].filter(Boolean).join(',')\r\n    )\r\n  }\r\n\r\n  // Store promise to avoid multiple calls\r\n  state.value[name] = $fetch(`/api/component-example/${name}.json`).then((data) => {\r\n    state.value[name] = data\r\n  }).catch(() => {\r\n    state.value[name] = {}\r\n  })\r\n\r\n  await state.value[name]\r\n  return state.value[name]\r\n}","<script setup lang=\"ts\">\r\nimport type { ChipProps } from '@nuxt/ui'\r\nimport { camelCase } from 'scule'\r\nimport { useElementSize } from '@vueuse/core'\r\nimport { get, set } from '#ui/utils'\r\n\r\nconst props = withDefaults(defineProps<{\r\n  name: string\r\n  class?: any\r\n  /**\r\n   * Whether to render the component in an iframe\r\n   * @defaultValue false\r\n   */\r\n  iframe?: boolean | { [key: string]: any }\r\n  /**\r\n   * Whether to display the component in a mobile-sized iframe viewport\r\n   * @defaultValue false\r\n   */\r\n  iframeMobile?: boolean\r\n  props?: { [key: string]: any }\r\n  /**\r\n   * Whether to format the code with Prettier\r\n   * @defaultValue false\r\n   */\r\n  prettier?: boolean\r\n  /**\r\n   * Whether to collapse the code block\r\n   * @defaultValue false\r\n   */\r\n  collapse?: boolean\r\n  /**\r\n   * Whether to show the preview\r\n   * When `false`, the filename will be shown instead\r\n   * @defaultValue true\r\n   */\r\n  preview?: boolean\r\n  /**\r\n   * Whether to show the source code\r\n   * @defaultValue true\r\n   */\r\n  source?: boolean\r\n  /**\r\n   * A list of variable props to link to the component.\r\n   */\r\n  options?: Array<{\r\n    alias?: string\r\n    name: string\r\n    label: string\r\n    items?: any[]\r\n    default: any\r\n    multiple?: boolean\r\n  }>\r\n  /**\r\n   * A list of line numbers to highlight in the code block\r\n   */\r\n  highlights?: number[]\r\n  /**\r\n   * Whether to add overflow-hidden to wrapper\r\n   */\r\n  overflowHidden?: boolean\r\n}>(), {\r\n  preview: true,\r\n  source: true\r\n})\r\n\r\nconst slots = defineSlots<{\r\n  options(props?: {}): any\r\n  code(props?: {}): any\r\n}>()\r\n\r\nconst el = ref<HTMLElement | null>(null)\r\n\r\nconst { $prettier } = useNuxtApp()\r\nconst { width } = useElementSize(el)\r\n\r\nconst camelName = camelCase(props.name)\r\n\r\nconst data = await fetchComponentExample(camelName)\r\n\r\nconst componentProps = reactive({ ...(props.props || {}) })\r\n\r\nconst code = computed(() => {\r\n  let code = ''\r\n\r\n  if (props.collapse) {\r\n    code += `::code-collapse\r\n`\r\n  }\r\n\r\n  code += `\\`\\`\\`vue ${props.preview ? '' : ` [${data.pascalName}.vue]`}${props.highlights?.length ? `{${props.highlights.join('-')}}` : ''}\r\n${data?.code ?? ''}\r\n\\`\\`\\``\r\n\r\n  if (props.collapse) {\r\n    code += `\r\n::`\r\n  }\r\n\r\n  return code\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`component-example-${camelName}`, async () => {\r\n  if (!props.prettier) {\r\n    return parseMarkdown(code.value)\r\n  }\r\n\r\n  let formatted = ''\r\n  try {\r\n    formatted = await $prettier.format(code.value, {\r\n      trailingComma: 'none',\r\n      semi: false,\r\n      singleQuote: true,\r\n      printWidth: 100\r\n    })\r\n  } catch {\r\n    formatted = code.value\r\n  }\r\n\r\n  return parseMarkdown(formatted)\r\n}, { watch: [code] })\r\n\r\nconst optionsValues = ref(props.options?.reduce((acc, option) => {\r\n  if (option.name) {\r\n    acc[option.alias || option.name] = option.default\r\n  }\r\n  if (option.name.toLowerCase().endsWith('color') && option.items?.length) {\r\n    option.items = option.items.map((item: any) => ({\r\n      label: item,\r\n      value: item,\r\n      chip: { color: item }\r\n    }))\r\n  }\r\n  return acc\r\n}, {} as Record<string, any>) || {})\r\n\r\nconst urlSearchParams = computed(() => {\r\n  const params = {\r\n    ...optionsValues.value,\r\n    ...componentProps\r\n  }\r\n\r\n  if (!props.iframeMobile) {\r\n    params.width = Math.round(width.value).toString()\r\n  }\r\n\r\n  return new URLSearchParams(params).toString()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div ref=\"el\" class=\"my-5\">\r\n    <template v-if=\"preview\">\r\n      <div class=\"border border-muted relative z-[1]\" :class=\"[{ 'border-b-0 rounded-t-md': props.source, 'rounded-md': !props.source, 'overflow-hidden': props.overflowHidden }]\">\r\n        <div v-if=\"props.options?.length || !!slots.options\" class=\"flex gap-4 p-4 border-b border-muted\">\r\n          <slot name=\"options\" />\r\n\r\n          <UFormField\r\n            v-for=\"option in props.options\"\r\n            :key=\"option.name\"\r\n            :label=\"option.label\"\r\n            :name=\"option.name\"\r\n            size=\"sm\"\r\n            class=\"inline-flex ring ring-accented rounded-sm\"\r\n            :ui=\"{\r\n              wrapper: 'bg-elevated/50 rounded-l-sm flex border-r border-accented',\r\n              label: 'text-muted px-2 py-1.5',\r\n              container: 'mt-0'\r\n            }\"\r\n          >\r\n            <USelectMenu\r\n              v-if=\"option.items?.length\"\r\n              :model-value=\"get(optionsValues, option.name)\"\r\n              :items=\"option.items\"\r\n              :search-input=\"false\"\r\n              :value-key=\"option.name.toLowerCase().endsWith('color') ? 'value' : undefined\"\r\n              color=\"neutral\"\r\n              variant=\"soft\"\r\n              class=\"rounded-sm rounded-l-none min-w-12\"\r\n              :multiple=\"option.multiple\"\r\n              :class=\"[option.name.toLowerCase().endsWith('color') && 'pl-6']\"\r\n              :ui=\"{ itemLeadingChip: 'size-2' }\"\r\n              @update:model-value=\"set(optionsValues, option.name, $event)\"\r\n            >\r\n              <template v-if=\"option.name.toLowerCase().endsWith('color')\" #leading=\"{ modelValue, ui }\">\r\n                <UChip\r\n                  inset\r\n                  standalone\r\n                  :color=\"(modelValue as any)\"\r\n                  :size=\"(ui.itemLeadingChipSize() as ChipProps['size'])\"\r\n                  class=\"size-2\"\r\n                />\r\n              </template>\r\n            </USelectMenu>\r\n            <UInput\r\n              v-else\r\n              :model-value=\"get(optionsValues, option.name)\"\r\n              color=\"neutral\"\r\n              variant=\"soft\"\r\n              :ui=\"{ base: 'rounded-sm rounded-l-none min-w-12' }\"\r\n              @update:model-value=\"set(optionsValues, option.name, $event)\"\r\n            />\r\n          </UFormField>\r\n        </div>\r\n\r\n        <iframe\r\n          v-if=\"iframe\"\r\n          v-bind=\"typeof iframe === 'object' ? iframe : {}\"\r\n          :src=\"`/examples/${name}?${urlSearchParams}`\"\r\n          class=\"relative w-full\"\r\n          :class=\"[props.class, !iframeMobile && 'lg:left-1/2 lg:-translate-x-1/2 lg:w-[1024px]']\"\r\n        />\r\n        <div v-else class=\"flex justify-center p-4\" :class=\"props.class\">\r\n          <component :is=\"camelName\" v-bind=\"{ ...componentProps, ...optionsValues }\" />\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <template v-if=\"props.source\">\r\n      <div v-if=\"!!slots.code\" class=\"[&_pre]:!rounded-t-none [&_div.my-5]:!mt-0\">\r\n        <slot name=\"code\" />\r\n      </div>\r\n      <MDCRenderer v-else-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" class=\"[&_pre]:!rounded-t-none [&_div.my-5]:!mt-0\" />\r\n    </template>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport type { ChipProps } from '@nuxt/ui'\r\nimport { camelCase } from 'scule'\r\nimport { useElementSize } from '@vueuse/core'\r\nimport { get, set } from '#ui/utils'\r\n\r\nconst props = withDefaults(defineProps<{\r\n  name: string\r\n  class?: any\r\n  /**\r\n   * Whether to render the component in an iframe\r\n   * @defaultValue false\r\n   */\r\n  iframe?: boolean | { [key: string]: any }\r\n  /**\r\n   * Whether to display the component in a mobile-sized iframe viewport\r\n   * @defaultValue false\r\n   */\r\n  iframeMobile?: boolean\r\n  props?: { [key: string]: any }\r\n  /**\r\n   * Whether to format the code with Prettier\r\n   * @defaultValue false\r\n   */\r\n  prettier?: boolean\r\n  /**\r\n   * Whether to collapse the code block\r\n   * @defaultValue false\r\n   */\r\n  collapse?: boolean\r\n  /**\r\n   * Whether to show the preview\r\n   * When `false`, the filename will be shown instead\r\n   * @defaultValue true\r\n   */\r\n  preview?: boolean\r\n  /**\r\n   * Whether to show the source code\r\n   * @defaultValue true\r\n   */\r\n  source?: boolean\r\n  /**\r\n   * A list of variable props to link to the component.\r\n   */\r\n  options?: Array<{\r\n    alias?: string\r\n    name: string\r\n    label: string\r\n    items?: any[]\r\n    default: any\r\n    multiple?: boolean\r\n  }>\r\n  /**\r\n   * A list of line numbers to highlight in the code block\r\n   */\r\n  highlights?: number[]\r\n  /**\r\n   * Whether to add overflow-hidden to wrapper\r\n   */\r\n  overflowHidden?: boolean\r\n}>(), {\r\n  preview: true,\r\n  source: true\r\n})\r\n\r\nconst slots = defineSlots<{\r\n  options(props?: {}): any\r\n  code(props?: {}): any\r\n}>()\r\n\r\nconst el = ref<HTMLElement | null>(null)\r\n\r\nconst { $prettier } = useNuxtApp()\r\nconst { width } = useElementSize(el)\r\n\r\nconst camelName = camelCase(props.name)\r\n\r\nconst data = await fetchComponentExample(camelName)\r\n\r\nconst componentProps = reactive({ ...(props.props || {}) })\r\n\r\nconst code = computed(() => {\r\n  let code = ''\r\n\r\n  if (props.collapse) {\r\n    code += `::code-collapse\r\n`\r\n  }\r\n\r\n  code += `\\`\\`\\`vue ${props.preview ? '' : ` [${data.pascalName}.vue]`}${props.highlights?.length ? `{${props.highlights.join('-')}}` : ''}\r\n${data?.code ?? ''}\r\n\\`\\`\\``\r\n\r\n  if (props.collapse) {\r\n    code += `\r\n::`\r\n  }\r\n\r\n  return code\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`component-example-${camelName}`, async () => {\r\n  if (!props.prettier) {\r\n    return parseMarkdown(code.value)\r\n  }\r\n\r\n  let formatted = ''\r\n  try {\r\n    formatted = await $prettier.format(code.value, {\r\n      trailingComma: 'none',\r\n      semi: false,\r\n      singleQuote: true,\r\n      printWidth: 100\r\n    })\r\n  } catch {\r\n    formatted = code.value\r\n  }\r\n\r\n  return parseMarkdown(formatted)\r\n}, { watch: [code] })\r\n\r\nconst optionsValues = ref(props.options?.reduce((acc, option) => {\r\n  if (option.name) {\r\n    acc[option.alias || option.name] = option.default\r\n  }\r\n  if (option.name.toLowerCase().endsWith('color') && option.items?.length) {\r\n    option.items = option.items.map((item: any) => ({\r\n      label: item,\r\n      value: item,\r\n      chip: { color: item }\r\n    }))\r\n  }\r\n  return acc\r\n}, {} as Record<string, any>) || {})\r\n\r\nconst urlSearchParams = computed(() => {\r\n  const params = {\r\n    ...optionsValues.value,\r\n    ...componentProps\r\n  }\r\n\r\n  if (!props.iframeMobile) {\r\n    params.width = Math.round(width.value).toString()\r\n  }\r\n\r\n  return new URLSearchParams(params).toString()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div ref=\"el\" class=\"my-5\">\r\n    <template v-if=\"preview\">\r\n      <div class=\"border border-muted relative z-[1]\" :class=\"[{ 'border-b-0 rounded-t-md': props.source, 'rounded-md': !props.source, 'overflow-hidden': props.overflowHidden }]\">\r\n        <div v-if=\"props.options?.length || !!slots.options\" class=\"flex gap-4 p-4 border-b border-muted\">\r\n          <slot name=\"options\" />\r\n\r\n          <UFormField\r\n            v-for=\"option in props.options\"\r\n            :key=\"option.name\"\r\n            :label=\"option.label\"\r\n            :name=\"option.name\"\r\n            size=\"sm\"\r\n            class=\"inline-flex ring ring-accented rounded-sm\"\r\n            :ui=\"{\r\n              wrapper: 'bg-elevated/50 rounded-l-sm flex border-r border-accented',\r\n              label: 'text-muted px-2 py-1.5',\r\n              container: 'mt-0'\r\n            }\"\r\n          >\r\n            <USelectMenu\r\n              v-if=\"option.items?.length\"\r\n              :model-value=\"get(optionsValues, option.name)\"\r\n              :items=\"option.items\"\r\n              :search-input=\"false\"\r\n              :value-key=\"option.name.toLowerCase().endsWith('color') ? 'value' : undefined\"\r\n              color=\"neutral\"\r\n              variant=\"soft\"\r\n              class=\"rounded-sm rounded-l-none min-w-12\"\r\n              :multiple=\"option.multiple\"\r\n              :class=\"[option.name.toLowerCase().endsWith('color') && 'pl-6']\"\r\n              :ui=\"{ itemLeadingChip: 'size-2' }\"\r\n              @update:model-value=\"set(optionsValues, option.name, $event)\"\r\n            >\r\n              <template v-if=\"option.name.toLowerCase().endsWith('color')\" #leading=\"{ modelValue, ui }\">\r\n                <UChip\r\n                  inset\r\n                  standalone\r\n                  :color=\"(modelValue as any)\"\r\n                  :size=\"(ui.itemLeadingChipSize() as ChipProps['size'])\"\r\n                  class=\"size-2\"\r\n                />\r\n              </template>\r\n            </USelectMenu>\r\n            <UInput\r\n              v-else\r\n              :model-value=\"get(optionsValues, option.name)\"\r\n              color=\"neutral\"\r\n              variant=\"soft\"\r\n              :ui=\"{ base: 'rounded-sm rounded-l-none min-w-12' }\"\r\n              @update:model-value=\"set(optionsValues, option.name, $event)\"\r\n            />\r\n          </UFormField>\r\n        </div>\r\n\r\n        <iframe\r\n          v-if=\"iframe\"\r\n          v-bind=\"typeof iframe === 'object' ? iframe : {}\"\r\n          :src=\"`/examples/${name}?${urlSearchParams}`\"\r\n          class=\"relative w-full\"\r\n          :class=\"[props.class, !iframeMobile && 'lg:left-1/2 lg:-translate-x-1/2 lg:w-[1024px]']\"\r\n        />\r\n        <div v-else class=\"flex justify-center p-4\" :class=\"props.class\">\r\n          <component :is=\"camelName\" v-bind=\"{ ...componentProps, ...optionsValues }\" />\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <template v-if=\"props.source\">\r\n      <div v-if=\"!!slots.code\" class=\"[&_pre]:!rounded-t-none [&_div.my-5]:!mt-0\">\r\n        <slot name=\"code\" />\r\n      </div>\r\n      <MDCRenderer v-else-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" class=\"[&_pre]:!rounded-t-none [&_div.my-5]:!mt-0\" />\r\n    </template>\r\n  </div>\r\n</template>\r\n"],"mappings":"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"}