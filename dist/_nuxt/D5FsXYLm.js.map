{"version":3,"file":"D5FsXYLm.js","names":[],"sources":["../../node_modules/.cache/.pnpm/embla-carousel-auto-scroll@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-auto-scroll/esm/embla-carousel-auto-scroll.esm.js"],"sourcesContent":["const defaultOptions = {\n  direction: 'forward',\n  speed: 2,\n  startDelay: 1000,\n  active: true,\n  breakpoints: {},\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  rootNode: null\n};\n\nfunction getAutoScrollRootNode(emblaApi, rootNode) {\n  const emblaRootNode = emblaApi.rootNode();\n  return rootNode && rootNode(emblaRootNode) || emblaRootNode;\n}\n\nfunction AutoScroll(userOptions = {}) {\n  let options;\n  let emblaApi;\n  let destroyed;\n  let startDelay;\n  let timerId = 0;\n  let autoScrollActive = false;\n  let mouseIsOver = false;\n  let defaultScrollBehaviour;\n  function init(emblaApiInstance, optionsHandler) {\n    emblaApi = emblaApiInstance;\n    const {\n      mergeOptions,\n      optionsAtMedia\n    } = optionsHandler;\n    const optionsBase = mergeOptions(defaultOptions, AutoScroll.globalOptions);\n    const allOptions = mergeOptions(optionsBase, userOptions);\n    options = optionsAtMedia(allOptions);\n    if (emblaApi.scrollSnapList().length <= 1) return;\n    startDelay = options.startDelay;\n    destroyed = false;\n    defaultScrollBehaviour = emblaApi.internalEngine().scrollBody;\n    const {\n      eventStore\n    } = emblaApi.internalEngine();\n    const isDraggable = !!emblaApi.internalEngine().options.watchDrag;\n    const root = getAutoScrollRootNode(emblaApi, options.rootNode);\n    if (isDraggable) {\n      emblaApi.on('pointerDown', pointerDown);\n    }\n    if (isDraggable && !options.stopOnInteraction) {\n      emblaApi.on('pointerUp', pointerUp);\n    }\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', mouseEnter);\n    }\n    if (options.stopOnMouseEnter && !options.stopOnInteraction) {\n      eventStore.add(root, 'mouseleave', mouseLeave);\n    }\n    if (options.stopOnFocusIn) {\n      emblaApi.on('slideFocusStart', stopAutoScroll);\n    }\n    if (options.stopOnFocusIn && !options.stopOnInteraction) {\n      eventStore.add(emblaApi.containerNode(), 'focusout', startAutoScroll);\n    }\n    if (options.playOnInit) startAutoScroll();\n  }\n  function destroy() {\n    emblaApi.off('pointerDown', pointerDown).off('pointerUp', pointerUp).off('slideFocusStart', stopAutoScroll).off('settle', settle);\n    stopAutoScroll();\n    destroyed = true;\n    autoScrollActive = false;\n  }\n  function startAutoScroll() {\n    if (destroyed) return;\n    if (autoScrollActive) return;\n    emblaApi.emit('autoScroll:play');\n    const engine = emblaApi.internalEngine();\n    const {\n      ownerWindow\n    } = engine;\n    timerId = ownerWindow.setTimeout(() => {\n      engine.scrollBody = createAutoScrollBehaviour(engine);\n      engine.animation.start();\n    }, startDelay);\n    autoScrollActive = true;\n  }\n  function stopAutoScroll() {\n    if (destroyed) return;\n    if (!autoScrollActive) return;\n    emblaApi.emit('autoScroll:stop');\n    const engine = emblaApi.internalEngine();\n    const {\n      ownerWindow\n    } = engine;\n    engine.scrollBody = defaultScrollBehaviour;\n    ownerWindow.clearTimeout(timerId);\n    timerId = 0;\n    autoScrollActive = false;\n  }\n  function createAutoScrollBehaviour(engine) {\n    const {\n      location,\n      previousLocation,\n      offsetLocation,\n      target,\n      scrollTarget,\n      index,\n      indexPrevious,\n      limit: {\n        reachedMin,\n        reachedMax,\n        constrain\n      },\n      options: {\n        loop\n      }\n    } = engine;\n    const directionSign = options.direction === 'forward' ? -1 : 1;\n    const noop = () => self;\n    let bodyVelocity = 0;\n    let scrollDirection = 0;\n    let rawLocation = location.get();\n    let rawLocationPrevious = 0;\n    let hasSettled = false;\n    function seek() {\n      let directionDiff = 0;\n      previousLocation.set(location);\n      bodyVelocity = directionSign * options.speed;\n      rawLocation += bodyVelocity;\n      location.add(bodyVelocity);\n      target.set(location);\n      directionDiff = rawLocation - rawLocationPrevious;\n      scrollDirection = Math.sign(directionDiff);\n      rawLocationPrevious = rawLocation;\n      const currentIndex = scrollTarget.byDistance(0, false).index;\n      if (index.get() !== currentIndex) {\n        indexPrevious.set(index.get());\n        index.set(currentIndex);\n        emblaApi.emit('select');\n      }\n      const reachedEnd = options.direction === 'forward' ? reachedMin(offsetLocation.get()) : reachedMax(offsetLocation.get());\n      if (!loop && reachedEnd) {\n        hasSettled = true;\n        const constrainedLocation = constrain(location.get());\n        location.set(constrainedLocation);\n        target.set(location);\n        stopAutoScroll();\n      }\n      return self;\n    }\n    const self = {\n      direction: () => scrollDirection,\n      duration: () => -1,\n      velocity: () => bodyVelocity,\n      settled: () => hasSettled,\n      seek,\n      useBaseFriction: noop,\n      useBaseDuration: noop,\n      useFriction: noop,\n      useDuration: noop\n    };\n    return self;\n  }\n  function pointerDown() {\n    if (!mouseIsOver) stopAutoScroll();\n  }\n  function pointerUp() {\n    if (!mouseIsOver) startAutoScrollOnSettle();\n  }\n  function mouseEnter() {\n    mouseIsOver = true;\n    stopAutoScroll();\n  }\n  function mouseLeave() {\n    mouseIsOver = false;\n    startAutoScroll();\n  }\n  function settle() {\n    emblaApi.off('settle', settle);\n    startAutoScroll();\n  }\n  function startAutoScrollOnSettle() {\n    emblaApi.on('settle', settle);\n  }\n  function play(startDelayOverride) {\n    if (typeof startDelayOverride !== 'undefined') {\n      startDelay = startDelayOverride;\n    }\n    startAutoScroll();\n  }\n  function stop() {\n    if (autoScrollActive) stopAutoScroll();\n  }\n  function reset() {\n    if (autoScrollActive) {\n      stopAutoScroll();\n      startAutoScrollOnSettle();\n    }\n  }\n  function isPlaying() {\n    return autoScrollActive;\n  }\n  const self = {\n    name: 'autoScroll',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  };\n  return self;\n}\nAutoScroll.globalOptions = undefined;\n\nexport { AutoScroll as default };\n//# sourceMappingURL=embla-carousel-auto-scroll.esm.js.map\n"],"x_google_ignoreList":[0],"mappings":"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"}