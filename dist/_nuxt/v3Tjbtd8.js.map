{"version":3,"file":"v3Tjbtd8.js","names":["changelog: CommitInfo[]"],"sources":["../../node_modules/.cache/.pnpm/nuxt@4.1.1_@parcel+watcher@_067f3227bdfdca1921fd2db987667528/node_modules/nuxt/dist/app/components/nuxt-time.vue","../../node_modules/virtual:nuxt:E%3A%2FPROJECT%2Fmydocsui%2Fnode_modules%2F.cache%2Fnuxt%2F.nuxt%2Fchangelog.ts","../../node_modules/app/components/content/ComponentChangelog.vue","../../node_modules/app/components/content/ComponentChangelog.vue"],"sourcesContent":["<script setup>\nimport { computed, getCurrentInstance, onBeforeUnmount, ref } from \"vue\";\nimport { onPrehydrate } from \"../composables/ssr\";\nimport { useNuxtApp } from \"../nuxt\";\nconst props = defineProps({\n  locale: { type: String, required: false },\n  datetime: { type: [String, Number, Date], required: true },\n  localeMatcher: { type: String, required: false },\n  weekday: { type: String, required: false },\n  era: { type: String, required: false },\n  year: { type: String, required: false },\n  month: { type: String, required: false },\n  day: { type: String, required: false },\n  hour: { type: String, required: false },\n  minute: { type: String, required: false },\n  second: { type: String, required: false },\n  timeZoneName: { type: String, required: false },\n  formatMatcher: { type: String, required: false },\n  hour12: { type: Boolean, required: false, default: void 0 },\n  timeZone: { type: String, required: false },\n  calendar: { type: String, required: false },\n  dayPeriod: { type: String, required: false },\n  numberingSystem: { type: String, required: false },\n  dateStyle: { type: String, required: false },\n  timeStyle: { type: String, required: false },\n  hourCycle: { type: String, required: false },\n  relative: { type: Boolean, required: false },\n  title: { type: [Boolean, String], required: false }\n});\nconst el = getCurrentInstance()?.vnode.el;\nconst renderedDate = el?.getAttribute(\"datetime\");\nconst _locale = el?.getAttribute(\"data-locale\");\nconst nuxtApp = useNuxtApp();\nconst date = computed(() => {\n  const date2 = props.datetime;\n  if (renderedDate && nuxtApp.isHydrating) {\n    return new Date(renderedDate);\n  }\n  if (!props.datetime) {\n    return /* @__PURE__ */ new Date();\n  }\n  return new Date(date2);\n});\nconst now = ref(import.meta.client && nuxtApp.isHydrating && window._nuxtTimeNow ? new Date(window._nuxtTimeNow) : /* @__PURE__ */ new Date());\nif (import.meta.client && props.relative) {\n  const handler = () => {\n    now.value = /* @__PURE__ */ new Date();\n  };\n  const interval = setInterval(handler, 1e3);\n  onBeforeUnmount(() => clearInterval(interval));\n}\nconst formatter = computed(() => {\n  const { locale: propsLocale, relative, ...rest } = props;\n  if (relative) {\n    return new Intl.RelativeTimeFormat(_locale ?? propsLocale, rest);\n  }\n  return new Intl.DateTimeFormat(_locale ?? propsLocale, rest);\n});\nconst formattedDate = computed(() => {\n  if (!props.relative) {\n    return formatter.value.format(date.value);\n  }\n  const diffInSeconds = (date.value.getTime() - now.value.getTime()) / 1e3;\n  const units = [\n    { unit: \"second\", seconds: 1, threshold: 60 },\n    // 60 seconds → minute\n    { unit: \"minute\", seconds: 60, threshold: 60 },\n    // 60 minutes → hour\n    { unit: \"hour\", seconds: 3600, threshold: 24 },\n    // 24 hours → day\n    { unit: \"day\", seconds: 86400, threshold: 30 },\n    // ~30 days → month\n    { unit: \"month\", seconds: 2592e3, threshold: 12 },\n    // 12 months → year\n    { unit: \"year\", seconds: 31536e3, threshold: Infinity }\n  ];\n  const { unit, seconds } = units.find(({ seconds: seconds2, threshold }) => Math.abs(diffInSeconds / seconds2) < threshold) || units[units.length - 1];\n  const value = diffInSeconds / seconds;\n  return formatter.value.format(Math.round(value), unit);\n});\nconst isoDate = computed(() => date.value.toISOString());\nconst title = computed(() => props.title === true ? isoDate.value : typeof props.title === \"string\" ? props.title : void 0);\nconst dataset = {};\nif (import.meta.server) {\n  for (const prop in props) {\n    if (prop !== \"datetime\") {\n      const value = props?.[prop];\n      if (value) {\n        const propInKebabCase = prop.split(/(?=[A-Z])/).join(\"-\");\n        dataset[`data-${propInKebabCase}`] = props?.[prop];\n      }\n    }\n  }\n  onPrehydrate((el2) => {\n    const now2 = window._nuxtTimeNow ||= Date.now();\n    const toCamelCase = (name, index) => {\n      if (index > 0) {\n        return name[0].toUpperCase() + name.slice(1);\n      }\n      return name;\n    };\n    const date2 = new Date(el2.getAttribute(\"datetime\"));\n    const options = {};\n    for (const name of el2.getAttributeNames()) {\n      if (name.startsWith(\"data-\")) {\n        const optionName = name.slice(5).split(\"-\").map(toCamelCase).join(\"\");\n        options[optionName] = el2.getAttribute(name);\n      }\n    }\n    if (options.relative) {\n      const diffInSeconds = (date2.getTime() - now2) / 1e3;\n      const units = [\n        { unit: \"second\", seconds: 1, threshold: 60 },\n        // 60 seconds → minute\n        { unit: \"minute\", seconds: 60, threshold: 60 },\n        // 60 minutes → hour\n        { unit: \"hour\", seconds: 3600, threshold: 24 },\n        // 24 hours → day\n        { unit: \"day\", seconds: 86400, threshold: 30 },\n        // ~30 days → month\n        { unit: \"month\", seconds: 2592e3, threshold: 12 },\n        // 12 months → year\n        { unit: \"year\", seconds: 31536e3, threshold: Infinity }\n      ];\n      const { unit, seconds } = units.find(({ seconds: seconds2, threshold }) => Math.abs(diffInSeconds / seconds2) < threshold) || units[units.length - 1];\n      const value = diffInSeconds / seconds;\n      const formatter2 = new Intl.RelativeTimeFormat(options.locale, options);\n      el2.textContent = formatter2.format(Math.round(value), unit);\n    } else {\n      const formatter2 = new Intl.DateTimeFormat(options.locale, options);\n      el2.textContent = formatter2.format(date2);\n    }\n  });\n}\n</script>\n\n<template>\n  <time\n    v-bind=\"dataset\"\n    :datetime=\"isoDate\"\n    :title=\"title\"\n  >{{ formattedDate }}</time>\n</template>\n","export interface CommitInfo {\n  components?: string[]\n  version?: string\n  hash: string\n  date: string\n  message: string\n  refs?: string\n  body?: string\n  author_name: string\n  author_email: string\n}\n\nexport const changelog: CommitInfo[] = []","<script setup lang=\"ts\">\r\nimport type { CommitInfo } from '#build/changelog'\r\nimport { changelog } from '#build/changelog'\r\n\r\nconst route = useRoute()\r\nconst name = route.path.split('/').pop()\r\n\r\nconst commits = computed(() => {\r\n  const related = changelog.filter(c => c.version || c.components?.some(i => i === name))\r\n  return related.filter((i, idx) => !(i.version && (!related[idx + 1] || related[idx + 1]?.version)))\r\n})\r\n\r\nfunction normalizeCommitMessage(commit: CommitInfo) {\r\n  const prefix = `[\\`${commit.hash.slice(0, 5)}\\`](https://github.com/nuxt/ui/commit/${commit.hash})`\r\n  const content = commit.message.replace(/\\(.*?\\)/, '')\r\n    .replace(/#(\\d+)/g, '<a href=\\'https://github.com/nuxt/ui/issues/$1\\'>#$1</a>')\r\n    .replace(/`(.*?)`/g, '<code class=\"text-xs\">$1</code>')\r\n\r\n  return `${prefix} — ${content}`\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"!commits.length\">\r\n    No recent changes\r\n  </div>\r\n\r\n  <div class=\"flex flex-col gap-1.5 relative\">\r\n    <div class=\"bg-accented w-px h-full absolute left-[11px] z-[-1]\" />\r\n\r\n    <template v-for=\"(commit, idx) of commits\" :key=\"commit.hash\">\r\n      <div v-if=\"idx === 0 && !commit.version\" class=\"flex gap-1.5 items-center\">\r\n        <UAvatar icon=\"i-lucide-git-pull-request-draft\" size=\"xs\" class=\"shrink-0 ring-2 ring-bg\" />\r\n        <div class=\"text-muted text-sm/5\">\r\n          Pending for release...\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"commit.version\" class=\"flex gap-1.5 items-center\">\r\n        <UAvatar icon=\"i-lucide-rocket\" size=\"xs\" class=\"shrink-0 ring-2 ring-bg\" />\r\n        <div class=\"text-sm\">\r\n          <ProseA :href=\"`https://github.com/nuxt/ui/releases/tag/${commit.version}`\" target=\"_blank\">\r\n            {{ commit.version }}\r\n          </ProseA>\r\n          <span class=\"text-muted text-xs/5\"> on <NuxtTime :datetime=\"commit.date\" /></span>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"flex gap-1.5 items-center\">\r\n        <div class=\"bg-accented ring-2 ring-bg size-1.5 mx-[8.5px] rounded-full\" />\r\n        <MDC :value=\"normalizeCommitMessage(commit)\" class=\"text-sm [&>*]:py-0 [&>*]:my-0 [&_code]:text-xs\" tag=\"div\" />\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport type { CommitInfo } from '#build/changelog'\r\nimport { changelog } from '#build/changelog'\r\n\r\nconst route = useRoute()\r\nconst name = route.path.split('/').pop()\r\n\r\nconst commits = computed(() => {\r\n  const related = changelog.filter(c => c.version || c.components?.some(i => i === name))\r\n  return related.filter((i, idx) => !(i.version && (!related[idx + 1] || related[idx + 1]?.version)))\r\n})\r\n\r\nfunction normalizeCommitMessage(commit: CommitInfo) {\r\n  const prefix = `[\\`${commit.hash.slice(0, 5)}\\`](https://github.com/nuxt/ui/commit/${commit.hash})`\r\n  const content = commit.message.replace(/\\(.*?\\)/, '')\r\n    .replace(/#(\\d+)/g, '<a href=\\'https://github.com/nuxt/ui/issues/$1\\'>#$1</a>')\r\n    .replace(/`(.*?)`/g, '<code class=\"text-xs\">$1</code>')\r\n\r\n  return `${prefix} — ${content}`\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"!commits.length\">\r\n    No recent changes\r\n  </div>\r\n\r\n  <div class=\"flex flex-col gap-1.5 relative\">\r\n    <div class=\"bg-accented w-px h-full absolute left-[11px] z-[-1]\" />\r\n\r\n    <template v-for=\"(commit, idx) of commits\" :key=\"commit.hash\">\r\n      <div v-if=\"idx === 0 && !commit.version\" class=\"flex gap-1.5 items-center\">\r\n        <UAvatar icon=\"i-lucide-git-pull-request-draft\" size=\"xs\" class=\"shrink-0 ring-2 ring-bg\" />\r\n        <div class=\"text-muted text-sm/5\">\r\n          Pending for release...\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"commit.version\" class=\"flex gap-1.5 items-center\">\r\n        <UAvatar icon=\"i-lucide-rocket\" size=\"xs\" class=\"shrink-0 ring-2 ring-bg\" />\r\n        <div class=\"text-sm\">\r\n          <ProseA :href=\"`https://github.com/nuxt/ui/releases/tag/${commit.version}`\" target=\"_blank\">\r\n            {{ commit.version }}\r\n          </ProseA>\r\n          <span class=\"text-muted text-xs/5\"> on <NuxtTime :datetime=\"commit.date\" /></span>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"flex gap-1.5 items-center\">\r\n        <div class=\"bg-accented ring-2 ring-bg size-1.5 mx-[8.5px] rounded-full\" />\r\n        <MDC :value=\"normalizeCommitMessage(commit)\" class=\"text-sm [&>*]:py-0 [&>*]:my-0 [&_code]:text-xs\" tag=\"div\" />\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n"],"x_google_ignoreList":[0,1],"mappings":"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"}