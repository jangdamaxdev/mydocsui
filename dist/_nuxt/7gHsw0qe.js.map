{"version":3,"mappings":"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","names":["slots"],"ignoreList":[],"sources":["../../node_modules/app/components/content/ComponentCode.vue"],"sourcesContent":["<!-- eslint-disable no-useless-escape -->\r\n<script setup lang=\"ts\">\r\nimport type { ChipProps } from '@nuxt/ui'\r\nimport json5 from 'json5'\r\nimport { upperFirst, camelCase, kebabCase } from 'scule'\r\nimport { hash } from 'ohash'\r\nimport { CalendarDate } from '@internationalized/date'\r\nimport * as theme from '#build/ui'\r\nimport * as themePro from '#build/ui-pro'\r\nimport { get, set } from '#ui/utils'\r\n\r\ninterface Cast {\r\n  get: (args: any) => any\r\n  template: (args: any) => string\r\n}\r\n\r\ntype CastDateValue = [number, number, number]\r\n\r\nconst castMap: Record<string, Cast> = {\r\n  'DateValue': {\r\n    get: (args: CastDateValue) => new CalendarDate(...args),\r\n    template: (value: CalendarDate) => {\r\n      return value ? `new CalendarDate(${value.year}, ${value.month}, ${value.day})` : 'null'\r\n    }\r\n  },\r\n  'DateValue[]': {\r\n    get: (args: CastDateValue[]) => args.map(date => new CalendarDate(...date)),\r\n    template: (value: CalendarDate[]) => {\r\n      return value ? `[${value.map(date => `new CalendarDate(${date.year}, ${date.month}, ${date.day})`).join(', ')}]` : '[]'\r\n    }\r\n  },\r\n  'DateRange': {\r\n    get: (args: { start: CastDateValue, end: CastDateValue }) => ({ start: new CalendarDate(...args.start), end: new CalendarDate(...args.end) }),\r\n    template: (value: { start: CalendarDate, end: CalendarDate }) => {\r\n      if (!value.start || !value.end) {\r\n        return `{ start: null, end: null }`\r\n      }\r\n\r\n      return `{ start: new CalendarDate(${value.start.year}, ${value.start.month}, ${value.start.day}), end: new CalendarDate(${value.end.year}, ${value.end.month}, ${value.end.day}) }`\r\n    }\r\n  }\r\n}\r\n\r\nconst props = defineProps<{\r\n  pro?: boolean\r\n  prose?: boolean\r\n  prefix?: string\r\n  /** Override the slug taken from the route */\r\n  slug?: string\r\n  class?: any\r\n  /** List of props to ignore in selection */\r\n  ignore?: string[]\r\n  /** List of props to hide from code and selection */\r\n  hide?: string[]\r\n  /** List of props to externalize in script setup */\r\n  external?: string[]\r\n  /** The types of the externalized props */\r\n  externalTypes?: string[]\r\n  /** List of props to use with `v-model` */\r\n  model?: string[]\r\n  /** List of props to cast from code and selection */\r\n  cast?: { [key: string]: string }\r\n  /** List of items for each prop */\r\n  items?: { [key: string]: string[] }\r\n  props?: { [key: string]: any }\r\n  slots?: { [key: string]: any }\r\n  /**\r\n   * Whether to format the code with Prettier\r\n   * @defaultValue false\r\n   */\r\n  prettier?: boolean\r\n  /**\r\n   * Whether to collapse the code block\r\n   * @defaultValue false\r\n   */\r\n  collapse?: boolean\r\n  /**\r\n   * A list of line numbers to highlight in the code block\r\n   */\r\n  highlights?: number[]\r\n  /**\r\n   * Whether to add overflow-hidden to wrapper\r\n   */\r\n  overflowHidden?: boolean\r\n}>()\r\n\r\nconst route = useRoute()\r\nconst { $prettier } = useNuxtApp()\r\n\r\nconst camelName = camelCase(props.slug ?? route.path.split('/').pop() ?? '')\r\nconst name = `${props.prose ? 'Prose' : 'U'}${upperFirst(camelName)}`\r\nconst component = defineAsyncComponent(() => {\r\n  if (props.pro) {\r\n    if (props.prefix) {\r\n      return import(`#ui-pro/components/${props.prefix}/${upperFirst(camelName)}.vue`)\r\n    }\r\n\r\n    if (props.prose) {\r\n      return import(`#ui-pro/components/prose/${upperFirst(camelName)}.vue`)\r\n    }\r\n\r\n    return import(`#ui-pro/components/${upperFirst(camelName)}.vue`)\r\n  }\r\n\r\n  return import(`#ui/components/${upperFirst(camelName)}.vue`)\r\n})\r\n\r\nconst componentProps = reactive({\r\n  ...Object.fromEntries(Object.entries(props.props || {}).map(([key, value]) => {\r\n    const cast = props.cast?.[key]\r\n\r\n    if (cast && !castMap[cast]) {\r\n      throw new Error(`Unknown cast: ${cast}`)\r\n    }\r\n\r\n    return [key, cast ? castMap[cast]!.get(value) : value]\r\n  }))\r\n})\r\nconst componentEvents = reactive({\r\n  ...Object.fromEntries((props.model || []).map(key => [`onUpdate:${key}`, (e: any) => setComponentProp(key, e)])),\r\n  ...(componentProps.modelValue ? { [`onUpdate:modelValue`]: (e: any) => setComponentProp('modelValue', e) } : {})\r\n})\r\n\r\nfunction getComponentProp(name: string) {\r\n  return get(componentProps, name) ?? undefined\r\n}\r\n\r\nfunction setComponentProp(name: string, value: any) {\r\n  set(componentProps, name, value)\r\n}\r\n\r\nconst componentTheme = ((props.pro ? props.prose ? themePro.prose : themePro : theme) as any)[camelName]\r\nconst meta = await fetchComponentMeta(name as any)\r\n\r\nfunction mapKeys(obj: object, parentKey = ''): any {\r\n  return Object.entries(obj || {}).flatMap(([key, value]: [string, any]) => {\r\n    if (typeof value === 'object' && !Array.isArray(value)) {\r\n      return mapKeys(value, key)\r\n    }\r\n\r\n    const fullKey = parentKey ? `${parentKey}.${key}` : key\r\n\r\n    return !props.ignore?.includes(fullKey) && !props.hide?.includes(fullKey) ? fullKey : undefined\r\n  }).filter(Boolean)\r\n}\r\n\r\nconst options = computed(() => {\r\n  const keys = mapKeys(props.props || {})\r\n\r\n  return keys.map((key: string) => {\r\n    const prop = meta?.meta?.props?.find((prop: any) => prop.name === key)\r\n    const propItems = get(props.items, key, [])\r\n    const items = propItems.length\r\n      ? propItems.map((item: any) => ({\r\n          value: item,\r\n          label: String(item),\r\n          chip: key.toLowerCase().endsWith('color') ? { color: item } : undefined\r\n        }))\r\n      : prop?.type === 'boolean' || prop?.type === 'boolean | undefined'\r\n        ? [{ value: true, label: 'true' }, { value: false, label: 'false' }]\r\n        : Object.keys(componentTheme?.variants?.[key] || {}).filter((variant) => {\r\n            return variant !== 'true' && variant !== 'false'\r\n          }).map(variant => ({\r\n            value: variant,\r\n            label: variant,\r\n            chip: key.toLowerCase().endsWith('color') ? { color: variant } : undefined\r\n          }))\r\n\r\n    return {\r\n      name: key,\r\n      label: key,\r\n      type: props?.cast?.[key] ?? prop?.type,\r\n      items\r\n    }\r\n  })\r\n})\r\n\r\nconst code = computed(() => {\r\n  let code = ''\r\n\r\n  if (props.prose) {\r\n    code += `\\`\\`\\`mdc\r\n::${camelName}`\r\n\r\n    const proseProps = Object.entries(componentProps).map(([key, value]) => {\r\n      if (value === undefined || value === null || value === '' || props.hide?.includes(key)) {\r\n        return\r\n      }\r\n\r\n      return `${key}=\"${value}\"`\r\n    }).filter(Boolean).join(' ')\r\n\r\n    if (proseProps.length) {\r\n      code += `{${proseProps}}`\r\n    }\r\n\r\n    code += `\r\n${props.slots?.default}\r\n::\r\n\\`\\`\\``\r\n\r\n    return code\r\n  }\r\n\r\n  if (props.collapse) {\r\n    code += `::code-collapse\r\n`\r\n  }\r\n\r\n  code += `\\`\\`\\`vue${props.highlights?.length ? ` {${props.highlights.join('-')}}` : ''}`\r\n\r\n  if (props.external?.length) {\r\n    code += `\r\n<script setup lang=\"ts\">\r\n`\r\n    if (props.externalTypes?.length) {\r\n      const removeArrayBrackets = (type: string): string => type.endsWith('[]') ? removeArrayBrackets(type.slice(0, -2)) : type\r\n\r\n      const types = props.externalTypes.map(type => removeArrayBrackets(type))\r\n      code += `import type { ${types.join(', ')} } from '@nuxt/ui${props.pro ? '-pro' : ''}'\r\n\r\n`\r\n    }\r\n\r\n    for (const [i, key] of props.external.entries()) {\r\n      const cast = props.cast?.[key]\r\n      const value = cast ? castMap[cast]!.template(componentProps[key]) : json5.stringify(componentProps[key], null, 2)?.replace(/,([ |\\t\\n]+[}|\\]])/g, '$1')\r\n      const type = props.externalTypes?.[i] ? `<${props.externalTypes[i]}>` : ''\r\n\r\n      code += `const ${key === 'modelValue' ? 'value' : key} = ref${type}(${value})\r\n`\r\n    }\r\n    code += `<\\/script>\r\n`\r\n  }\r\n\r\n  code += `\r\n<template>\r\n  <${name}`\r\n  for (const [key, value] of Object.entries(componentProps)) {\r\n    if (key === 'modelValue') {\r\n      code += ` v-model=\"value\"`\r\n      continue\r\n    }\r\n\r\n    if (props.model?.includes(key)) {\r\n      code += ` v-model:${key}=\"${key}\"`\r\n      continue\r\n    }\r\n\r\n    if (value === undefined || value === null || value === '' || props.hide?.includes(key)) {\r\n      continue\r\n    }\r\n\r\n    const prop = meta?.meta?.props?.find((prop: any) => prop.name === key)\r\n    const propDefault = prop && (prop.default ?? prop.tags?.find(tag => tag.name === 'defaultValue')?.text ?? componentTheme?.defaultVariants?.[prop.name])\r\n    const name = kebabCase(key)\r\n\r\n    if (typeof value === 'boolean') {\r\n      if (value && (propDefault === 'true' || propDefault === '`true`' || propDefault === true)) {\r\n        continue\r\n      }\r\n      if (!value && (!propDefault || propDefault === 'false' || propDefault === '`false`' || propDefault === false)) {\r\n        continue\r\n      }\r\n\r\n      code += value ? ` ${name}` : ` :${name}=\"false\"`\r\n    } else if (typeof value === 'object') {\r\n      const parsedValue = !props.external?.includes(key) ? json5.stringify(value, null, 2).replace(/,([ |\\t\\n]+[}|\\])])/g, '$1') : key\r\n\r\n      code += ` :${name}=\"${parsedValue}\"`\r\n    } else {\r\n      if (propDefault === value) {\r\n        continue\r\n      }\r\n\r\n      code += ` ${typeof value === 'number' ? ':' : ''}${name}=\"${value}\"`\r\n    }\r\n  }\r\n\r\n  if (props.slots) {\r\n    code += `>`\r\n    for (const [key, value] of Object.entries(props.slots)) {\r\n      if (key === 'default') {\r\n        code += props.slots.default\r\n      } else {\r\n        code += `\r\n  <template #${key}>\r\n    ${value}\r\n  </template>\\n`\r\n      }\r\n    }\r\n    code += (Object.keys(props.slots).length > 1 ? '\\n' : '') + `</${name}>`\r\n  } else {\r\n    code += ' />'\r\n  }\r\n  code += `\\n</template>\r\n\\`\\`\\`\r\n`\r\n\r\n  if (props.collapse) {\r\n    code += `\r\n::`\r\n  }\r\n\r\n  return code\r\n})\r\n\r\nconst { data: ast } = await useAsyncData(`component-code-${name}-${hash({ props: componentProps, slots: props.slots })}`, async () => {\r\n  if (!props.prettier) {\r\n    return parseMarkdown(code.value)\r\n  }\r\n\r\n  let formatted = ''\r\n  try {\r\n    formatted = await $prettier.format(code.value, {\r\n      trailingComma: 'none',\r\n      semi: false,\r\n      singleQuote: true,\r\n      printWidth: 100\r\n    })\r\n  } catch {\r\n    formatted = code.value\r\n  }\r\n\r\n  return parseMarkdown(formatted)\r\n}, { watch: [code] })\r\n</script>\r\n\r\n<template>\r\n  <div class=\"my-5\">\r\n    <div class=\"relative\">\r\n      <div v-if=\"options.length\" class=\"flex flex-wrap items-center gap-2.5 border border-muted border-b-0 relative rounded-t-md px-4 py-2.5 overflow-x-auto\">\r\n        <template v-for=\"option in options\" :key=\"option.name\">\r\n          <UFormField\r\n            :label=\"option.label\"\r\n            size=\"sm\"\r\n            class=\"inline-flex ring ring-accented rounded-sm\"\r\n            :ui=\"{\r\n              wrapper: 'bg-elevated/50 rounded-l-sm flex border-r border-accented',\r\n              label: 'text-muted px-2 py-1.5',\r\n              container: 'mt-0'\r\n            }\"\r\n          >\r\n            <USelect\r\n              v-if=\"option.items?.length\"\r\n              :model-value=\"getComponentProp(option.name)\"\r\n              :items=\"option.items\"\r\n              value-key=\"value\"\r\n              color=\"neutral\"\r\n              variant=\"soft\"\r\n              class=\"rounded-sm rounded-l-none min-w-12\"\r\n              :class=\"[option.name.toLowerCase().endsWith('color') && 'pl-6']\"\r\n              :ui=\"{ itemLeadingChip: 'size-2' }\"\r\n              @update:model-value=\"setComponentProp(option.name, $event)\"\r\n            >\r\n              <template v-if=\"option.name.toLowerCase().endsWith('color')\" #leading=\"{ modelValue, ui }\">\r\n                <UChip\r\n                  v-if=\"modelValue\"\r\n                  inset\r\n                  standalone\r\n                  :color=\"(modelValue as any)\"\r\n                  :size=\"(ui.itemLeadingChipSize() as ChipProps['size'])\"\r\n                  class=\"size-2\"\r\n                />\r\n              </template>\r\n            </USelect>\r\n            <UInput\r\n              v-else\r\n              :type=\"option.type?.includes('number') && typeof getComponentProp(option.name) === 'number' ? 'number' : 'text'\"\r\n              :model-value=\"getComponentProp(option.name)\"\r\n              color=\"neutral\"\r\n              variant=\"soft\"\r\n              :ui=\"{ base: 'rounded-sm rounded-l-none min-w-12' }\"\r\n              @update:model-value=\"setComponentProp(option.name, $event)\"\r\n            />\r\n          </UFormField>\r\n        </template>\r\n      </div>\r\n\r\n      <div v-if=\"component\" class=\"flex justify-center border border-b-0 border-muted relative p-4 z-[1]\" :class=\"[!options.length && 'rounded-t-md', props.class, { 'overflow-hidden': props.overflowHidden }]\">\r\n        <component :is=\"component\" v-bind=\"{ ...componentProps, ...componentEvents }\">\r\n          <template v-for=\"slot in Object.keys(slots || {})\" :key=\"slot\" #[slot]>\r\n            <slot :name=\"slot\" mdc-unwrap=\"p\">\r\n              {{ slots?.[slot] }}\r\n            </slot>\r\n          </template>\r\n        </component>\r\n      </div>\r\n    </div>\r\n\r\n    <MDCRenderer v-if=\"ast\" :body=\"ast.body\" :data=\"ast.data\" class=\"[&_pre]:!rounded-t-none [&_div.my-5]:!mt-0\" />\r\n  </div>\r\n</template>\r\n"],"file":"_nuxt/7gHsw0qe.js"}